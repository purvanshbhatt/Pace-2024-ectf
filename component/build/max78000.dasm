
/Pace-2024-ectf/component/build/max78000.elf:     file format elf32-littlearm


Disassembly of section .text:

1000e000 <__isr_vector>:
1000e000:	20020000 	.word	0x20020000
1000e004:	10010ed1 	.word	0x10010ed1
1000e008:	10010d05 	.word	0x10010d05
1000e00c:	10010f0f 	.word	0x10010f0f
1000e010:	10010f11 	.word	0x10010f11
1000e014:	10010f13 	.word	0x10010f13
1000e018:	10010f15 	.word	0x10010f15
	...
1000e02c:	10010f17 	.word	0x10010f17
1000e030:	10010f19 	.word	0x10010f19
1000e034:	00000000 	.word	0x00000000
1000e038:	10010f1b 	.word	0x10010f1b
1000e03c:	10010f1d 	.word	0x10010f1d
1000e040:	10010f21 	.word	0x10010f21
1000e044:	10010f23 	.word	0x10010f23
1000e048:	10010f25 	.word	0x10010f25
1000e04c:	10010f27 	.word	0x10010f27
1000e050:	1000e2b1 	.word	0x1000e2b1
1000e054:	10010f2b 	.word	0x10010f2b
1000e058:	10010f2d 	.word	0x10010f2d
1000e05c:	10010f2f 	.word	0x10010f2f
1000e060:	10010f31 	.word	0x10010f31
1000e064:	10010f33 	.word	0x10010f33
1000e068:	10010f35 	.word	0x10010f35
1000e06c:	10010f37 	.word	0x10010f37
1000e070:	10010f39 	.word	0x10010f39
1000e074:	10010f3b 	.word	0x10010f3b
1000e078:	10010f3d 	.word	0x10010f3d
1000e07c:	10010f3f 	.word	0x10010f3f
1000e080:	10010f41 	.word	0x10010f41
1000e084:	10010f43 	.word	0x10010f43
1000e088:	10010f45 	.word	0x10010f45
1000e08c:	10010f47 	.word	0x10010f47
1000e090:	10010f49 	.word	0x10010f49
1000e094:	10010f4b 	.word	0x10010f4b
1000e098:	10010f4d 	.word	0x10010f4d
1000e09c:	10010f4f 	.word	0x10010f4f
1000e0a0:	10010c89 	.word	0x10010c89
1000e0a4:	10010c91 	.word	0x10010c91
1000e0a8:	10010f55 	.word	0x10010f55
1000e0ac:	10010f57 	.word	0x10010f57
1000e0b0:	10010f59 	.word	0x10010f59
1000e0b4:	10010f5b 	.word	0x10010f5b
1000e0b8:	10010f5d 	.word	0x10010f5d
1000e0bc:	10010f5f 	.word	0x10010f5f
1000e0c0:	10010f61 	.word	0x10010f61
1000e0c4:	10010f63 	.word	0x10010f63
1000e0c8:	10010f65 	.word	0x10010f65
1000e0cc:	10010f67 	.word	0x10010f67
1000e0d0:	10010f69 	.word	0x10010f69
1000e0d4:	10010f6b 	.word	0x10010f6b
1000e0d8:	10010f6d 	.word	0x10010f6d
1000e0dc:	10010f6f 	.word	0x10010f6f
1000e0e0:	10010f71 	.word	0x10010f71
1000e0e4:	10010f73 	.word	0x10010f73
1000e0e8:	10010f75 	.word	0x10010f75
1000e0ec:	10010f77 	.word	0x10010f77
1000e0f0:	10010f79 	.word	0x10010f79
1000e0f4:	10010f7b 	.word	0x10010f7b
1000e0f8:	10010f7d 	.word	0x10010f7d
1000e0fc:	10010f7f 	.word	0x10010f7f
1000e100:	10010f81 	.word	0x10010f81
1000e104:	10010f83 	.word	0x10010f83
1000e108:	10010f85 	.word	0x10010f85
1000e10c:	10010f87 	.word	0x10010f87
1000e110:	10010f89 	.word	0x10010f89
1000e114:	10010f8b 	.word	0x10010f8b
1000e118:	10010f8d 	.word	0x10010f8d
1000e11c:	10010f8f 	.word	0x10010f8f
1000e120:	10010f91 	.word	0x10010f91
1000e124:	10010f93 	.word	0x10010f93
1000e128:	10010f95 	.word	0x10010f95
1000e12c:	10010f97 	.word	0x10010f97
1000e130:	10010f99 	.word	0x10010f99
1000e134:	10010f9b 	.word	0x10010f9b
1000e138:	10010f9d 	.word	0x10010f9d
1000e13c:	10010f9f 	.word	0x10010f9f
1000e140:	10010fa1 	.word	0x10010fa1
1000e144:	10010fa3 	.word	0x10010fa3
1000e148:	10010fa5 	.word	0x10010fa5
1000e14c:	10010fa7 	.word	0x10010fa7
1000e150:	10010fa9 	.word	0x10010fa9
1000e154:	10010fab 	.word	0x10010fab
1000e158:	10010fad 	.word	0x10010fad
1000e15c:	10010faf 	.word	0x10010faf
1000e160:	10010fb1 	.word	0x10010fb1
1000e164:	10010fb3 	.word	0x10010fb3
1000e168:	10010fb5 	.word	0x10010fb5
1000e16c:	10010fb7 	.word	0x10010fb7
1000e170:	10010fb9 	.word	0x10010fb9
1000e174:	10010fbb 	.word	0x10010fbb
1000e178:	10010fbd 	.word	0x10010fbd
1000e17c:	10010fbf 	.word	0x10010fbf
1000e180:	10010fc1 	.word	0x10010fc1
1000e184:	10010fc3 	.word	0x10010fc3
1000e188:	10010fc5 	.word	0x10010fc5
1000e18c:	10010fc7 	.word	0x10010fc7
1000e190:	10010fc9 	.word	0x10010fc9
1000e194:	10010fcb 	.word	0x10010fcb
1000e198:	10010fcd 	.word	0x10010fcd
1000e19c:	10010fcf 	.word	0x10010fcf
1000e1a0:	10010fd1 	.word	0x10010fd1
1000e1a4:	10010fd3 	.word	0x10010fd3
1000e1a8:	10010fd5 	.word	0x10010fd5
1000e1ac:	10010fd7 	.word	0x10010fd7
1000e1b0:	10010fd9 	.word	0x10010fd9
1000e1b4:	10010fdb 	.word	0x10010fdb
1000e1b8:	10010fdd 	.word	0x10010fdd
1000e1bc:	10010fdf 	.word	0x10010fdf
1000e1c0:	10010fe1 	.word	0x10010fe1
1000e1c4:	10010fe3 	.word	0x10010fe3
1000e1c8:	10010fe5 	.word	0x10010fe5
1000e1cc:	10010fe7 	.word	0x10010fe7
1000e1d0:	10010fe9 	.word	0x10010fe9
1000e1d4:	10010feb 	.word	0x10010feb
1000e1d8:	10010fed 	.word	0x10010fed
1000e1dc:	10010fef 	.word	0x10010fef
	...

1000e200 <firmware_startup>:
1000e200:	4800      	ldr	r0, [pc, #0]	@ (1000e204 <firmware_startup+0x4>)
1000e202:	4780      	blx	r0
1000e204:	10010ed1 	.word	0x10010ed1

1000e208 <deregister_tm_clones>:
1000e208:	4803      	ldr	r0, [pc, #12]	@ (1000e218 <deregister_tm_clones+0x10>)
1000e20a:	4b04      	ldr	r3, [pc, #16]	@ (1000e21c <deregister_tm_clones+0x14>)
1000e20c:	4283      	cmp	r3, r0
1000e20e:	d002      	beq.n	1000e216 <deregister_tm_clones+0xe>
1000e210:	4b03      	ldr	r3, [pc, #12]	@ (1000e220 <deregister_tm_clones+0x18>)
1000e212:	b103      	cbz	r3, 1000e216 <deregister_tm_clones+0xe>
1000e214:	4718      	bx	r3
1000e216:	4770      	bx	lr
1000e218:	20000708 	.word	0x20000708
1000e21c:	20000708 	.word	0x20000708
1000e220:	00000000 	.word	0x00000000

1000e224 <register_tm_clones>:
1000e224:	4805      	ldr	r0, [pc, #20]	@ (1000e23c <register_tm_clones+0x18>)
1000e226:	4b06      	ldr	r3, [pc, #24]	@ (1000e240 <register_tm_clones+0x1c>)
1000e228:	1a1b      	subs	r3, r3, r0
1000e22a:	0fd9      	lsrs	r1, r3, #31
1000e22c:	eb01 01a3 	add.w	r1, r1, r3, asr #2
1000e230:	1049      	asrs	r1, r1, #1
1000e232:	d002      	beq.n	1000e23a <register_tm_clones+0x16>
1000e234:	4b03      	ldr	r3, [pc, #12]	@ (1000e244 <register_tm_clones+0x20>)
1000e236:	b103      	cbz	r3, 1000e23a <register_tm_clones+0x16>
1000e238:	4718      	bx	r3
1000e23a:	4770      	bx	lr
1000e23c:	20000708 	.word	0x20000708
1000e240:	20000708 	.word	0x20000708
1000e244:	00000000 	.word	0x00000000

1000e248 <__do_global_dtors_aux>:
1000e248:	b510      	push	{r4, lr}
1000e24a:	4c06      	ldr	r4, [pc, #24]	@ (1000e264 <__do_global_dtors_aux+0x1c>)
1000e24c:	7823      	ldrb	r3, [r4, #0]
1000e24e:	b943      	cbnz	r3, 1000e262 <__do_global_dtors_aux+0x1a>
1000e250:	f7ff ffda 	bl	1000e208 <deregister_tm_clones>
1000e254:	4b04      	ldr	r3, [pc, #16]	@ (1000e268 <__do_global_dtors_aux+0x20>)
1000e256:	b113      	cbz	r3, 1000e25e <__do_global_dtors_aux+0x16>
1000e258:	4804      	ldr	r0, [pc, #16]	@ (1000e26c <__do_global_dtors_aux+0x24>)
1000e25a:	f3af 8000 	nop.w
1000e25e:	2301      	movs	r3, #1
1000e260:	7023      	strb	r3, [r4, #0]
1000e262:	bd10      	pop	{r4, pc}
1000e264:	20000800 	.word	0x20000800
1000e268:	00000000 	.word	0x00000000
1000e26c:	1001dd90 	.word	0x1001dd90

1000e270 <frame_dummy>:
1000e270:	b508      	push	{r3, lr}
1000e272:	4b05      	ldr	r3, [pc, #20]	@ (1000e288 <frame_dummy+0x18>)
1000e274:	b11b      	cbz	r3, 1000e27e <frame_dummy+0xe>
1000e276:	4905      	ldr	r1, [pc, #20]	@ (1000e28c <frame_dummy+0x1c>)
1000e278:	4805      	ldr	r0, [pc, #20]	@ (1000e290 <frame_dummy+0x20>)
1000e27a:	f3af 8000 	nop.w
1000e27e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
1000e282:	f7ff bfcf 	b.w	1000e224 <register_tm_clones>
1000e286:	bf00      	nop
1000e288:	00000000 	.word	0x00000000
1000e28c:	20000804 	.word	0x20000804
1000e290:	1001dd90 	.word	0x1001dd90

1000e294 <Rand_NASYC>:
    int ret = MXC_TRNG_RandomInt();
    MXC_TRNG_Shutdown();
    return ret;
}

void Rand_NASYC(uint8_t *buf, uint32_t len){
1000e294:	b538      	push	{r3, r4, r5, lr}
1000e296:	4604      	mov	r4, r0
1000e298:	460d      	mov	r5, r1
    MXC_TRNG_Init();
1000e29a:	f003 fd73 	bl	10011d84 <MXC_TRNG_Init>
    MXC_TRNG_Random(buf, len);
1000e29e:	4629      	mov	r1, r5
1000e2a0:	4620      	mov	r0, r4
1000e2a2:	f003 fd8d 	bl	10011dc0 <MXC_TRNG_Random>
    MXC_TRNG_Shutdown();
}
1000e2a6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    MXC_TRNG_Shutdown();
1000e2aa:	f003 bd73 	b.w	10011d94 <MXC_TRNG_Shutdown>
1000e2ae:	bf00      	nop

1000e2b0 <TRNG_IRQHandler>:
}


void TRNG_IRQHandler(void)
{
    MXC_TRNG_Handler();
1000e2b0:	f003 bd7a 	b.w	10011da8 <MXC_TRNG_Handler>

1000e2b4 <board_link_init>:
 * @return int: negative if error, zero if successful
 *
 * Initialized the underlying i2c_simple interface
*/
int board_link_init(i2c_addr_t addr) {
    return i2c_simple_peripheral_init(addr);
1000e2b4:	f000 bc20 	b.w	1000eaf8 <i2c_simple_peripheral_init>

1000e2b8 <component_id_to_i2c_addr>:
 * 
 * @return i2c_addr_t, i2c address
*/
i2c_addr_t component_id_to_i2c_addr(uint32_t component_id) {
    return (uint8_t) component_id & COMPONENT_ADDR_MASK;
}
1000e2b8:	b2c0      	uxtb	r0, r0
1000e2ba:	4770      	bx	lr

1000e2bc <send_packet_and_ack>:
 * @param len: uint8_t, length of the packet
 * @param packet: uint8_t*, message to be sent
 * This function utilizes the simple_i2c_peripheral library to
 * send a packet to the AP and wait for the message to be received
*/
void send_packet_and_ack(uint8_t len, uint8_t* packet) {
1000e2bc:	b510      	push	{r4, lr}
    I2C_REGS[TRANSMIT_LEN][0] = len;
1000e2be:	4c09      	ldr	r4, [pc, #36]	@ (1000e2e4 <send_packet_and_ack+0x28>)
1000e2c0:	6963      	ldr	r3, [r4, #20]
1000e2c2:	7018      	strb	r0, [r3, #0]
void send_packet_and_ack(uint8_t len, uint8_t* packet) {
1000e2c4:	4602      	mov	r2, r0
    memcpy((void*)I2C_REGS[TRANSMIT], (void*)packet, len);
1000e2c6:	68e0      	ldr	r0, [r4, #12]
1000e2c8:	f007 fe8a 	bl	10015fe0 <memcpy>
    I2C_REGS[TRANSMIT_DONE][0] = false;
1000e2cc:	6923      	ldr	r3, [r4, #16]
1000e2ce:	2200      	movs	r2, #0
1000e2d0:	701a      	strb	r2, [r3, #0]

    // Wait for ack from AP
    while(!I2C_REGS[TRANSMIT_DONE][0]);
1000e2d2:	6922      	ldr	r2, [r4, #16]
1000e2d4:	7813      	ldrb	r3, [r2, #0]
1000e2d6:	2b00      	cmp	r3, #0
1000e2d8:	d0fc      	beq.n	1000e2d4 <send_packet_and_ack+0x18>
    I2C_REGS[RECEIVE_DONE][0] = false;
1000e2da:	6863      	ldr	r3, [r4, #4]
1000e2dc:	2200      	movs	r2, #0
1000e2de:	701a      	strb	r2, [r3, #0]
}
1000e2e0:	bd10      	pop	{r4, pc}
1000e2e2:	bf00      	nop
1000e2e4:	20000028 	.word	0x20000028

1000e2e8 <wait_and_receive_packet>:
 * @param packet: uint8_t*, message received
 * 
 * This function waits for a new message to be available from the AP,
 * once the message is available it is returned in the buffer pointer to by packet 
*/
uint8_t wait_and_receive_packet(uint8_t* packet) {
1000e2e8:	b538      	push	{r3, r4, r5, lr}
    while(!I2C_REGS[RECEIVE_DONE][0]);
1000e2ea:	4d08      	ldr	r5, [pc, #32]	@ (1000e30c <wait_and_receive_packet+0x24>)
1000e2ec:	686a      	ldr	r2, [r5, #4]
1000e2ee:	7813      	ldrb	r3, [r2, #0]
1000e2f0:	2b00      	cmp	r3, #0
1000e2f2:	d0fc      	beq.n	1000e2ee <wait_and_receive_packet+0x6>

    uint8_t len = I2C_REGS[RECEIVE_LEN][0];
1000e2f4:	68ab      	ldr	r3, [r5, #8]
    memcpy(packet, (void*)I2C_REGS[RECEIVE], len);
1000e2f6:	6829      	ldr	r1, [r5, #0]
    uint8_t len = I2C_REGS[RECEIVE_LEN][0];
1000e2f8:	781c      	ldrb	r4, [r3, #0]
1000e2fa:	b2e4      	uxtb	r4, r4
    memcpy(packet, (void*)I2C_REGS[RECEIVE], len);
1000e2fc:	4622      	mov	r2, r4
1000e2fe:	f007 fe6f 	bl	10015fe0 <memcpy>

    I2C_REGS[RECEIVE_DONE][0] = false;
1000e302:	686b      	ldr	r3, [r5, #4]
1000e304:	2200      	movs	r2, #0
1000e306:	701a      	strb	r2, [r3, #0]
    return len;
}
1000e308:	4620      	mov	r0, r4
1000e30a:	bd38      	pop	{r3, r4, r5, pc}
1000e30c:	20000028 	.word	0x20000028

1000e310 <secure_send_packet_and_ack>:
 * @param packet: uint8_t*, message to be sent
 * @param GLOBAL_KEY: 16 byte globel key
 * This function utilizes the simple_i2c_peripheral library to
 * send a packet to the AP and wait for the message to be received
*/
void secure_send_packet_and_ack(uint8_t* packet, uint8_t* GLOBAL_KEY) {
1000e310:	b510      	push	{r4, lr}
    I2C_REGS[TRANSMIT_LEN][0] = len;
1000e312:	4c0d      	ldr	r4, [pc, #52]	@ (1000e348 <secure_send_packet_and_ack+0x38>)
void secure_send_packet_and_ack(uint8_t* packet, uint8_t* GLOBAL_KEY) {
1000e314:	b0c0      	sub	sp, #256	@ 0x100
1000e316:	460a      	mov	r2, r1
    uint8_t ciphertext[MAX_I2C_MESSAGE_LEN];
    encrypt_sym(packet, MAX_I2C_MESSAGE_LEN, GLOBAL_KEY, ciphertext);
1000e318:	466b      	mov	r3, sp
1000e31a:	f44f 7180 	mov.w	r1, #256	@ 0x100
1000e31e:	f000 fa65 	bl	1000e7ec <encrypt_sym>
    I2C_REGS[TRANSMIT_LEN][0] = len;
1000e322:	6963      	ldr	r3, [r4, #20]
1000e324:	22ff      	movs	r2, #255	@ 0xff
1000e326:	701a      	strb	r2, [r3, #0]
    memcpy((void*)I2C_REGS[TRANSMIT], (void*)packet, len);
1000e328:	68e0      	ldr	r0, [r4, #12]
1000e32a:	4669      	mov	r1, sp
1000e32c:	f007 fe58 	bl	10015fe0 <memcpy>
    I2C_REGS[TRANSMIT_DONE][0] = false;
1000e330:	6923      	ldr	r3, [r4, #16]
1000e332:	2200      	movs	r2, #0
1000e334:	701a      	strb	r2, [r3, #0]
    while(!I2C_REGS[TRANSMIT_DONE][0]);
1000e336:	6922      	ldr	r2, [r4, #16]
1000e338:	7813      	ldrb	r3, [r2, #0]
1000e33a:	2b00      	cmp	r3, #0
1000e33c:	d0fc      	beq.n	1000e338 <secure_send_packet_and_ack+0x28>
    I2C_REGS[RECEIVE_DONE][0] = false;
1000e33e:	6863      	ldr	r3, [r4, #4]
1000e340:	2200      	movs	r2, #0
1000e342:	701a      	strb	r2, [r3, #0]
    send_packet_and_ack(MAX_I2C_MESSAGE_LEN-1, ciphertext);
}
1000e344:	b040      	add	sp, #256	@ 0x100
1000e346:	bd10      	pop	{r4, pc}
1000e348:	20000028 	.word	0x20000028

1000e34c <secure_wait_and_receive_packet>:
 * @param packet: uint8_t*, message received
 * @param GLOBAL_KEY: 16 byte globel key
 * This function waits for a new message to be available from the AP,
 * once the message is available it is returned in the buffer pointer to by packet 
*/
uint8_t secure_wait_and_receive_packet(uint8_t* packet, uint8_t* GLOBAL_KEY) {
1000e34c:	b5f0      	push	{r4, r5, r6, r7, lr}
    while(!I2C_REGS[RECEIVE_DONE][0]);
1000e34e:	4f31      	ldr	r7, [pc, #196]	@ (1000e414 <secure_wait_and_receive_packet+0xc8>)
1000e350:	687a      	ldr	r2, [r7, #4]
uint8_t secure_wait_and_receive_packet(uint8_t* packet, uint8_t* GLOBAL_KEY) {
1000e352:	b0c3      	sub	sp, #268	@ 0x10c
1000e354:	4604      	mov	r4, r0
1000e356:	460d      	mov	r5, r1
    while(!I2C_REGS[RECEIVE_DONE][0]);
1000e358:	7813      	ldrb	r3, [r2, #0]
1000e35a:	2b00      	cmp	r3, #0
1000e35c:	d0fc      	beq.n	1000e358 <secure_wait_and_receive_packet+0xc>
    uint8_t len = I2C_REGS[RECEIVE_LEN][0];
1000e35e:	68bb      	ldr	r3, [r7, #8]
    memcpy(packet, (void*)I2C_REGS[RECEIVE], len);
1000e360:	6839      	ldr	r1, [r7, #0]
    uint8_t len = I2C_REGS[RECEIVE_LEN][0];
1000e362:	781e      	ldrb	r6, [r3, #0]
1000e364:	b2f6      	uxtb	r6, r6
    memcpy(packet, (void*)I2C_REGS[RECEIVE], len);
1000e366:	4632      	mov	r2, r6
1000e368:	4620      	mov	r0, r4
1000e36a:	f007 fe39 	bl	10015fe0 <memcpy>
    I2C_REGS[RECEIVE_DONE][0] = false;
1000e36e:	687a      	ldr	r2, [r7, #4]
1000e370:	2300      	movs	r3, #0
1000e372:	7013      	strb	r3, [r2, #0]
    uint8_t plaintext[MAX_I2C_MESSAGE_LEN];
    uint8_t len = wait_and_receive_packet(packet);
    volatile int lst_cnt = 0;
1000e374:	f104 0e40 	add.w	lr, r4, #64	@ 0x40
1000e378:	9300      	str	r3, [sp, #0]
    volatile int sync_cnt = 0;
1000e37a:	9301      	str	r3, [sp, #4]
    for(int i = 0; i < 16; ++i){
1000e37c:	4623      	mov	r3, r4
1000e37e:	e00a      	b.n	1000e396 <secure_wait_and_receive_packet+0x4a>
        if(packet[i*4] == 'B' && packet[i*4+1] == 'E' && packet[i*4+2] == 'E' && packet[i*4+3] == 'F'){
            lst_cnt++;
        }
        if(packet[i*4] == 'D' && packet[i*4+1] == 'E' && packet[i*4+2] == 'A' && packet[i*4+3] == 'D'){
1000e380:	f1bc 0f44 	cmp.w	ip, #68	@ 0x44
1000e384:	d104      	bne.n	1000e390 <secure_wait_and_receive_packet+0x44>
1000e386:	f893 c001 	ldrb.w	ip, [r3, #1]
1000e38a:	f1bc 0f45 	cmp.w	ip, #69	@ 0x45
1000e38e:	d02e      	beq.n	1000e3ee <secure_wait_and_receive_packet+0xa2>
    for(int i = 0; i < 16; ++i){
1000e390:	3304      	adds	r3, #4
1000e392:	459e      	cmp	lr, r3
1000e394:	d015      	beq.n	1000e3c2 <secure_wait_and_receive_packet+0x76>
        if(packet[i*4] == 'B' && packet[i*4+1] == 'E' && packet[i*4+2] == 'E' && packet[i*4+3] == 'F'){
1000e396:	f893 c000 	ldrb.w	ip, [r3]
1000e39a:	f1bc 0f42 	cmp.w	ip, #66	@ 0x42
1000e39e:	d1ef      	bne.n	1000e380 <secure_wait_and_receive_packet+0x34>
1000e3a0:	f893 c001 	ldrb.w	ip, [r3, #1]
1000e3a4:	f1bc 0f45 	cmp.w	ip, #69	@ 0x45
1000e3a8:	d1f2      	bne.n	1000e390 <secure_wait_and_receive_packet+0x44>
1000e3aa:	789a      	ldrb	r2, [r3, #2]
1000e3ac:	2a45      	cmp	r2, #69	@ 0x45
1000e3ae:	d1ef      	bne.n	1000e390 <secure_wait_and_receive_packet+0x44>
1000e3b0:	78da      	ldrb	r2, [r3, #3]
1000e3b2:	2a46      	cmp	r2, #70	@ 0x46
1000e3b4:	d1ec      	bne.n	1000e390 <secure_wait_and_receive_packet+0x44>
            lst_cnt++;
1000e3b6:	9a00      	ldr	r2, [sp, #0]
    for(int i = 0; i < 16; ++i){
1000e3b8:	3304      	adds	r3, #4
            lst_cnt++;
1000e3ba:	3201      	adds	r2, #1
    for(int i = 0; i < 16; ++i){
1000e3bc:	459e      	cmp	lr, r3
            lst_cnt++;
1000e3be:	9200      	str	r2, [sp, #0]
    for(int i = 0; i < 16; ++i){
1000e3c0:	d1e9      	bne.n	1000e396 <secure_wait_and_receive_packet+0x4a>
            sync_cnt++;
        }
    }
    if (lst_cnt == 16){
1000e3c2:	9b00      	ldr	r3, [sp, #0]
1000e3c4:	2b10      	cmp	r3, #16
1000e3c6:	d01c      	beq.n	1000e402 <secure_wait_and_receive_packet+0xb6>
        // process_scan();
        return 1;
    }
    else if(sync_cnt == 16){
1000e3c8:	9b01      	ldr	r3, [sp, #4]
1000e3ca:	2b10      	cmp	r3, #16
1000e3cc:	d01d      	beq.n	1000e40a <secure_wait_and_receive_packet+0xbe>
        // process_sync();
        return 2;
    }
    decrypt_sym(packet, MAX_I2C_MESSAGE_LEN, GLOBAL_KEY, plaintext);
1000e3ce:	462a      	mov	r2, r5
1000e3d0:	ab02      	add	r3, sp, #8
1000e3d2:	f44f 7180 	mov.w	r1, #256	@ 0x100
1000e3d6:	4620      	mov	r0, r4
1000e3d8:	f000 fa32 	bl	1000e840 <decrypt_sym>
    memmove(packet, plaintext, MAX_I2C_MESSAGE_LEN);
1000e3dc:	f44f 7280 	mov.w	r2, #256	@ 0x100
1000e3e0:	a902      	add	r1, sp, #8
1000e3e2:	4620      	mov	r0, r4
1000e3e4:	f007 fdfc 	bl	10015fe0 <memcpy>
    return len;
}
1000e3e8:	4630      	mov	r0, r6
1000e3ea:	b043      	add	sp, #268	@ 0x10c
1000e3ec:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if(packet[i*4] == 'D' && packet[i*4+1] == 'E' && packet[i*4+2] == 'A' && packet[i*4+3] == 'D'){
1000e3ee:	789a      	ldrb	r2, [r3, #2]
1000e3f0:	2a41      	cmp	r2, #65	@ 0x41
1000e3f2:	d1cd      	bne.n	1000e390 <secure_wait_and_receive_packet+0x44>
1000e3f4:	78da      	ldrb	r2, [r3, #3]
1000e3f6:	2a44      	cmp	r2, #68	@ 0x44
1000e3f8:	d1ca      	bne.n	1000e390 <secure_wait_and_receive_packet+0x44>
            sync_cnt++;
1000e3fa:	9a01      	ldr	r2, [sp, #4]
1000e3fc:	3201      	adds	r2, #1
1000e3fe:	9201      	str	r2, [sp, #4]
1000e400:	e7c6      	b.n	1000e390 <secure_wait_and_receive_packet+0x44>
        return 1;
1000e402:	2601      	movs	r6, #1
}
1000e404:	4630      	mov	r0, r6
1000e406:	b043      	add	sp, #268	@ 0x10c
1000e408:	bdf0      	pop	{r4, r5, r6, r7, pc}
        return 2;
1000e40a:	2602      	movs	r6, #2
}
1000e40c:	4630      	mov	r0, r6
1000e40e:	b043      	add	sp, #268	@ 0x10c
1000e410:	bdf0      	pop	{r4, r5, r6, r7, pc}
1000e412:	bf00      	nop
1000e414:	20000028 	.word	0x20000028

1000e418 <boot>:
1000e418:	b508      	push	{r3, lr}
1000e41a:	2000      	movs	r0, #0
1000e41c:	f002 fd1c 	bl	10010e58 <LED_Off>
1000e420:	2001      	movs	r0, #1
1000e422:	f002 fd19 	bl	10010e58 <LED_Off>
1000e426:	2002      	movs	r0, #2
1000e428:	f002 fd16 	bl	10010e58 <LED_Off>
1000e42c:	4c12      	ldr	r4, [pc, #72]	@ (1000e478 <boot+0x60>)
1000e42e:	2000      	movs	r0, #0
1000e430:	f002 fcf2 	bl	10010e18 <LED_On>
1000e434:	4620      	mov	r0, r4
1000e436:	f002 ff0d 	bl	10011254 <MXC_Delay>
1000e43a:	2001      	movs	r0, #1
1000e43c:	f002 fcec 	bl	10010e18 <LED_On>
1000e440:	4620      	mov	r0, r4
1000e442:	f002 ff07 	bl	10011254 <MXC_Delay>
1000e446:	2002      	movs	r0, #2
1000e448:	f002 fce6 	bl	10010e18 <LED_On>
1000e44c:	4620      	mov	r0, r4
1000e44e:	f002 ff01 	bl	10011254 <MXC_Delay>
1000e452:	2000      	movs	r0, #0
1000e454:	f002 fd00 	bl	10010e58 <LED_Off>
1000e458:	4620      	mov	r0, r4
1000e45a:	f002 fefb 	bl	10011254 <MXC_Delay>
1000e45e:	2001      	movs	r0, #1
1000e460:	f002 fcfa 	bl	10010e58 <LED_Off>
1000e464:	4620      	mov	r0, r4
1000e466:	f002 fef5 	bl	10011254 <MXC_Delay>
1000e46a:	2002      	movs	r0, #2
1000e46c:	f002 fcf4 	bl	10010e58 <LED_Off>
1000e470:	4620      	mov	r0, r4
1000e472:	f002 feef 	bl	10011254 <MXC_Delay>
1000e476:	e7da      	b.n	1000e42e <boot+0x16>
1000e478:	0007a120 	.word	0x0007a120

1000e47c <process_boot>:
1000e47c:	b570      	push	{r4, r5, r6, lr}
1000e47e:	4c23      	ldr	r4, [pc, #140]	@ (1000e50c <process_boot+0x90>)
1000e480:	7863      	ldrb	r3, [r4, #1]
1000e482:	78a2      	ldrb	r2, [r4, #2]
1000e484:	f1a3 0399 	sub.w	r3, r3, #153	@ 0x99
1000e488:	fab3 f383 	clz	r3, r3
1000e48c:	2a88      	cmp	r2, #136	@ 0x88
1000e48e:	ea4f 1353 	mov.w	r3, r3, lsr #5
1000e492:	d004      	beq.n	1000e49e <process_boot+0x22>
1000e494:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
1000e498:	481d      	ldr	r0, [pc, #116]	@ (1000e510 <process_boot+0x94>)
1000e49a:	f006 bb69 	b.w	10014b70 <printf>
1000e49e:	78e2      	ldrb	r2, [r4, #3]
1000e4a0:	2a77      	cmp	r2, #119	@ 0x77
1000e4a2:	d1f7      	bne.n	1000e494 <process_boot+0x18>
1000e4a4:	7922      	ldrb	r2, [r4, #4]
1000e4a6:	2a20      	cmp	r2, #32
1000e4a8:	d1f4      	bne.n	1000e494 <process_boot+0x18>
1000e4aa:	2b00      	cmp	r3, #0
1000e4ac:	d0f2      	beq.n	1000e494 <process_boot+0x18>
1000e4ae:	4d19      	ldr	r5, [pc, #100]	@ (1000e514 <process_boot+0x98>)
1000e4b0:	4e19      	ldr	r6, [pc, #100]	@ (1000e518 <process_boot+0x9c>)
1000e4b2:	22f4      	movs	r2, #244	@ 0xf4
1000e4b4:	2100      	movs	r1, #0
1000e4b6:	4628      	mov	r0, r5
1000e4b8:	f006 fa26 	bl	10014908 <memset>
1000e4bc:	2303      	movs	r3, #3
1000e4be:	f8d4 1005 	ldr.w	r1, [r4, #5]
1000e4c2:	f8d4 2009 	ldr.w	r2, [r4, #9]
1000e4c6:	f805 3c0c 	strb.w	r3, [r5, #-12]
1000e4ca:	4b14      	ldr	r3, [pc, #80]	@ (1000e51c <process_boot+0xa0>)
1000e4cc:	f845 1c07 	str.w	r1, [r5, #-7]
1000e4d0:	f845 2c03 	str.w	r2, [r5, #-3]
1000e4d4:	f845 3c0b 	str.w	r3, [r5, #-11]
1000e4d8:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
1000e4da:	f8c5 0009 	str.w	r0, [r5, #9]
1000e4de:	f8c5 100d 	str.w	r1, [r5, #13]
1000e4e2:	f8c5 2011 	str.w	r2, [r5, #17]
1000e4e6:	ce07      	ldmia	r6!, {r0, r1, r2}
1000e4e8:	f8c5 3015 	str.w	r3, [r5, #21]
1000e4ec:	f8c5 0019 	str.w	r0, [r5, #25]
1000e4f0:	7833      	ldrb	r3, [r6, #0]
1000e4f2:	f8c5 101d 	str.w	r1, [r5, #29]
1000e4f6:	f1a5 000c 	sub.w	r0, r5, #12
1000e4fa:	4909      	ldr	r1, [pc, #36]	@ (1000e520 <process_boot+0xa4>)
1000e4fc:	f8c5 2021 	str.w	r2, [r5, #33]	@ 0x21
1000e500:	f885 3025 	strb.w	r3, [r5, #37]	@ 0x25
1000e504:	f7ff ff04 	bl	1000e310 <secure_send_packet_and_ack>
1000e508:	f7ff ff86 	bl	1000e418 <boot>
1000e50c:	20000a08 	.word	0x20000a08
1000e510:	1001b550 	.word	0x1001b550
1000e514:	20000914 	.word	0x20000914
1000e518:	1001b588 	.word	0x1001b588
1000e51c:	20778899 	.word	0x20778899
1000e520:	20000b0c 	.word	0x20000b0c

1000e524 <process_scan>:
1000e524:	4b0e      	ldr	r3, [pc, #56]	@ (1000e560 <process_scan+0x3c>)
1000e526:	b510      	push	{r4, lr}
1000e528:	2100      	movs	r1, #0
1000e52a:	22f4      	movs	r2, #244	@ 0xf4
1000e52c:	4618      	mov	r0, r3
1000e52e:	f006 f9eb 	bl	10014908 <memset>
1000e532:	4a0c      	ldr	r2, [pc, #48]	@ (1000e564 <process_scan+0x40>)
1000e534:	4c0c      	ldr	r4, [pc, #48]	@ (1000e568 <process_scan+0x44>)
1000e536:	f8d2 1005 	ldr.w	r1, [r2, #5]
1000e53a:	f8d2 2009 	ldr.w	r2, [r2, #9]
1000e53e:	4603      	mov	r3, r0
1000e540:	2001      	movs	r0, #1
1000e542:	f803 0c0c 	strb.w	r0, [r3, #-12]
1000e546:	f843 1c07 	str.w	r1, [r3, #-7]
1000e54a:	f843 2c03 	str.w	r2, [r3, #-3]
1000e54e:	f843 4c0b 	str.w	r4, [r3, #-11]
1000e552:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
1000e556:	f1a3 010c 	sub.w	r1, r3, #12
1000e55a:	20ff      	movs	r0, #255	@ 0xff
1000e55c:	f7ff beae 	b.w	1000e2bc <send_packet_and_ack>
1000e560:	20000914 	.word	0x20000914
1000e564:	20000a08 	.word	0x20000a08
1000e568:	20778899 	.word	0x20778899

1000e56c <process_attest>:
1000e56c:	b530      	push	{r4, r5, lr}
1000e56e:	4c25      	ldr	r4, [pc, #148]	@ (1000e604 <process_attest+0x98>)
1000e570:	7863      	ldrb	r3, [r4, #1]
1000e572:	78a2      	ldrb	r2, [r4, #2]
1000e574:	f1a3 0399 	sub.w	r3, r3, #153	@ 0x99
1000e578:	fab3 f383 	clz	r3, r3
1000e57c:	2a88      	cmp	r2, #136	@ 0x88
1000e57e:	b083      	sub	sp, #12
1000e580:	ea4f 1353 	mov.w	r3, r3, lsr #5
1000e584:	d005      	beq.n	1000e592 <process_attest+0x26>
1000e586:	4820      	ldr	r0, [pc, #128]	@ (1000e608 <process_attest+0x9c>)
1000e588:	b003      	add	sp, #12
1000e58a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
1000e58e:	f006 baef 	b.w	10014b70 <printf>
1000e592:	78e2      	ldrb	r2, [r4, #3]
1000e594:	2a77      	cmp	r2, #119	@ 0x77
1000e596:	d1f6      	bne.n	1000e586 <process_attest+0x1a>
1000e598:	7922      	ldrb	r2, [r4, #4]
1000e59a:	2a20      	cmp	r2, #32
1000e59c:	f103 0302 	add.w	r3, r3, #2
1000e5a0:	d1f1      	bne.n	1000e586 <process_attest+0x1a>
1000e5a2:	2b02      	cmp	r3, #2
1000e5a4:	d0ef      	beq.n	1000e586 <process_attest+0x1a>
1000e5a6:	22eb      	movs	r2, #235	@ 0xeb
1000e5a8:	2100      	movs	r1, #0
1000e5aa:	4818      	ldr	r0, [pc, #96]	@ (1000e60c <process_attest+0xa0>)
1000e5ac:	f006 f9ac 	bl	10014908 <memset>
1000e5b0:	4817      	ldr	r0, [pc, #92]	@ (1000e610 <process_attest+0xa4>)
1000e5b2:	9000      	str	r0, [sp, #0]
1000e5b4:	4b17      	ldr	r3, [pc, #92]	@ (1000e614 <process_attest+0xa8>)
1000e5b6:	4a18      	ldr	r2, [pc, #96]	@ (1000e618 <process_attest+0xac>)
1000e5b8:	4918      	ldr	r1, [pc, #96]	@ (1000e61c <process_attest+0xb0>)
1000e5ba:	4814      	ldr	r0, [pc, #80]	@ (1000e60c <process_attest+0xa0>)
1000e5bc:	f004 f80a 	bl	100125d4 <sprintf>
1000e5c0:	4817      	ldr	r0, [pc, #92]	@ (1000e620 <process_attest+0xb4>)
1000e5c2:	4912      	ldr	r1, [pc, #72]	@ (1000e60c <process_attest+0xa0>)
1000e5c4:	2300      	movs	r3, #0
1000e5c6:	e9c0 3300 	strd	r3, r3, [r0]
1000e5ca:	7203      	strb	r3, [r0, #8]
1000e5cc:	2204      	movs	r2, #4
1000e5ce:	f8d4 3005 	ldr.w	r3, [r4, #5]
1000e5d2:	f800 2c0c 	strb.w	r2, [r0, #-12]
1000e5d6:	f840 3c07 	str.w	r3, [r0, #-7]
1000e5da:	f8d4 2009 	ldr.w	r2, [r4, #9]
1000e5de:	4b11      	ldr	r3, [pc, #68]	@ (1000e624 <process_attest+0xb8>)
1000e5e0:	f840 2c03 	str.w	r2, [r0, #-3]
1000e5e4:	f1a0 050c 	sub.w	r5, r0, #12
1000e5e8:	f840 3c0b 	str.w	r3, [r0, #-11]
1000e5ec:	22eb      	movs	r2, #235	@ 0xeb
1000e5ee:	3009      	adds	r0, #9
1000e5f0:	f007 fcf6 	bl	10015fe0 <memcpy>
1000e5f4:	490c      	ldr	r1, [pc, #48]	@ (1000e628 <process_attest+0xbc>)
1000e5f6:	4628      	mov	r0, r5
1000e5f8:	b003      	add	sp, #12
1000e5fa:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
1000e5fe:	f7ff be87 	b.w	1000e310 <secure_send_packet_and_ack>
1000e602:	bf00      	nop
1000e604:	20000a08 	.word	0x20000a08
1000e608:	1001b550 	.word	0x1001b550
1000e60c:	2000081c 	.word	0x2000081c
1000e610:	1001b5d4 	.word	0x1001b5d4
1000e614:	1001b5a8 	.word	0x1001b5a8
1000e618:	1001b5b0 	.word	0x1001b5b0
1000e61c:	1001b5bc 	.word	0x1001b5bc
1000e620:	20000914 	.word	0x20000914
1000e624:	20778899 	.word	0x20778899
1000e628:	20000b0c 	.word	0x20000b0c

1000e62c <component_process_cmd>:
1000e62c:	b510      	push	{r4, lr}
1000e62e:	f44f 7280 	mov.w	r2, #256	@ 0x100
1000e632:	2100      	movs	r1, #0
1000e634:	4818      	ldr	r0, [pc, #96]	@ (1000e698 <component_process_cmd+0x6c>)
1000e636:	f006 f967 	bl	10014908 <memset>
1000e63a:	4918      	ldr	r1, [pc, #96]	@ (1000e69c <component_process_cmd+0x70>)
1000e63c:	4816      	ldr	r0, [pc, #88]	@ (1000e698 <component_process_cmd+0x6c>)
1000e63e:	f7ff fe85 	bl	1000e34c <secure_wait_and_receive_packet>
1000e642:	2801      	cmp	r0, #1
1000e644:	d024      	beq.n	1000e690 <component_process_cmd+0x64>
1000e646:	4c16      	ldr	r4, [pc, #88]	@ (1000e6a0 <component_process_cmd+0x74>)
1000e648:	2802      	cmp	r0, #2
1000e64a:	7823      	ldrb	r3, [r4, #0]
1000e64c:	d013      	beq.n	1000e676 <component_process_cmd+0x4a>
1000e64e:	b1d3      	cbz	r3, 1000e686 <component_process_cmd+0x5a>
1000e650:	4b11      	ldr	r3, [pc, #68]	@ (1000e698 <component_process_cmd+0x6c>)
1000e652:	7819      	ldrb	r1, [r3, #0]
1000e654:	2902      	cmp	r1, #2
1000e656:	d00a      	beq.n	1000e66e <component_process_cmd+0x42>
1000e658:	2904      	cmp	r1, #4
1000e65a:	d004      	beq.n	1000e666 <component_process_cmd+0x3a>
1000e65c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
1000e660:	4810      	ldr	r0, [pc, #64]	@ (1000e6a4 <component_process_cmd+0x78>)
1000e662:	f006 ba85 	b.w	10014b70 <printf>
1000e666:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
1000e66a:	f7ff bf7f 	b.w	1000e56c <process_attest>
1000e66e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
1000e672:	f7ff bf03 	b.w	1000e47c <process_boot>
1000e676:	2b00      	cmp	r3, #0
1000e678:	d1ea      	bne.n	1000e650 <component_process_cmd+0x24>
1000e67a:	4808      	ldr	r0, [pc, #32]	@ (1000e69c <component_process_cmd+0x70>)
1000e67c:	f000 f896 	bl	1000e7ac <key_sync>
1000e680:	2301      	movs	r3, #1
1000e682:	7023      	strb	r3, [r4, #0]
1000e684:	bd10      	pop	{r4, pc}
1000e686:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
1000e68a:	4807      	ldr	r0, [pc, #28]	@ (1000e6a8 <component_process_cmd+0x7c>)
1000e68c:	f006 ba70 	b.w	10014b70 <printf>
1000e690:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
1000e694:	f7ff bf46 	b.w	1000e524 <process_scan>
1000e698:	20000a08 	.word	0x20000a08
1000e69c:	20000b0c 	.word	0x20000b0c
1000e6a0:	20000b08 	.word	0x20000b08
1000e6a4:	1001b5f8 	.word	0x1001b5f8
1000e6a8:	1001b5e0 	.word	0x1001b5e0

1000e6ac <main>:
1000e6ac:	b508      	push	{r3, lr}
1000e6ae:	480e      	ldr	r0, [pc, #56]	@ (1000e6e8 <main+0x3c>)
1000e6b0:	f006 fabe 	bl	10014c30 <puts>
1000e6b4:	480d      	ldr	r0, [pc, #52]	@ (1000e6ec <main+0x40>)
1000e6b6:	f003 fb43 	bl	10011d40 <MXC_ICC_Disable>
1000e6ba:	b662      	cpsie	i
1000e6bc:	480c      	ldr	r0, [pc, #48]	@ (1000e6f0 <main+0x44>)
1000e6be:	f7ff fdfb 	bl	1000e2b8 <component_id_to_i2c_addr>
1000e6c2:	f7ff fdf7 	bl	1000e2b4 <board_link_init>
1000e6c6:	480b      	ldr	r0, [pc, #44]	@ (1000e6f4 <main+0x48>)
1000e6c8:	2110      	movs	r1, #16
1000e6ca:	f7ff fde3 	bl	1000e294 <Rand_NASYC>
1000e6ce:	480a      	ldr	r0, [pc, #40]	@ (1000e6f8 <main+0x4c>)
1000e6d0:	2110      	movs	r1, #16
1000e6d2:	f7ff fddf 	bl	1000e294 <Rand_NASYC>
1000e6d6:	4b09      	ldr	r3, [pc, #36]	@ (1000e6fc <main+0x50>)
1000e6d8:	2200      	movs	r2, #0
1000e6da:	2001      	movs	r0, #1
1000e6dc:	701a      	strb	r2, [r3, #0]
1000e6de:	f002 fb9b 	bl	10010e18 <LED_On>
1000e6e2:	f7ff ffa3 	bl	1000e62c <component_process_cmd>
1000e6e6:	e7fc      	b.n	1000e6e2 <main+0x36>
1000e6e8:	1001b624 	.word	0x1001b624
1000e6ec:	4002a000 	.word	0x4002a000
1000e6f0:	99887720 	.word	0x99887720
1000e6f4:	20000b0c 	.word	0x20000b0c
1000e6f8:	20000000 	.word	0x20000000
1000e6fc:	20000b08 	.word	0x20000b08

1000e700 <sync2>:
1000e700:	b570      	push	{r4, r5, r6, lr}
1000e702:	460c      	mov	r4, r1
1000e704:	b086      	sub	sp, #24
1000e706:	4915      	ldr	r1, [pc, #84]	@ (1000e75c <sync2+0x5c>)
1000e708:	2210      	movs	r2, #16
1000e70a:	ab01      	add	r3, sp, #4
1000e70c:	4606      	mov	r6, r0
1000e70e:	4620      	mov	r0, r4
1000e710:	f000 fa38 	bl	1000eb84 <XOR_secure>
1000e714:	4623      	mov	r3, r4
1000e716:	2210      	movs	r2, #16
1000e718:	4810      	ldr	r0, [pc, #64]	@ (1000e75c <sync2+0x5c>)
1000e71a:	4911      	ldr	r1, [pc, #68]	@ (1000e760 <sync2+0x60>)
1000e71c:	f000 fa32 	bl	1000eb84 <XOR_secure>
1000e720:	4621      	mov	r1, r4
1000e722:	2010      	movs	r0, #16
1000e724:	f7ff fdca 	bl	1000e2bc <send_packet_and_ack>
1000e728:	4620      	mov	r0, r4
1000e72a:	f7ff fddd 	bl	1000e2e8 <wait_and_receive_packet>
1000e72e:	2810      	cmp	r0, #16
1000e730:	d003      	beq.n	1000e73a <sync2+0x3a>
1000e732:	25ff      	movs	r5, #255	@ 0xff
1000e734:	4628      	mov	r0, r5
1000e736:	b006      	add	sp, #24
1000e738:	bd70      	pop	{r4, r5, r6, pc}
1000e73a:	4605      	mov	r5, r0
1000e73c:	4621      	mov	r1, r4
1000e73e:	a801      	add	r0, sp, #4
1000e740:	4633      	mov	r3, r6
1000e742:	462a      	mov	r2, r5
1000e744:	f000 fa1e 	bl	1000eb84 <XOR_secure>
1000e748:	4630      	mov	r0, r6
1000e74a:	4906      	ldr	r1, [pc, #24]	@ (1000e764 <sync2+0x64>)
1000e74c:	4633      	mov	r3, r6
1000e74e:	462a      	mov	r2, r5
1000e750:	f000 fa18 	bl	1000eb84 <XOR_secure>
1000e754:	4628      	mov	r0, r5
1000e756:	b006      	add	sp, #24
1000e758:	bd70      	pop	{r4, r5, r6, pc}
1000e75a:	bf00      	nop
1000e75c:	20000000 	.word	0x20000000
1000e760:	1001b648 	.word	0x1001b648
1000e764:	1001b638 	.word	0x1001b638

1000e768 <sync1>:
1000e768:	b570      	push	{r4, r5, r6, lr}
1000e76a:	4e0d      	ldr	r6, [pc, #52]	@ (1000e7a0 <sync1+0x38>)
1000e76c:	460c      	mov	r4, r1
1000e76e:	4605      	mov	r5, r0
1000e770:	4631      	mov	r1, r6
1000e772:	4603      	mov	r3, r0
1000e774:	2210      	movs	r2, #16
1000e776:	4620      	mov	r0, r4
1000e778:	f000 fa04 	bl	1000eb84 <XOR_secure>
1000e77c:	462b      	mov	r3, r5
1000e77e:	4628      	mov	r0, r5
1000e780:	4908      	ldr	r1, [pc, #32]	@ (1000e7a4 <sync1+0x3c>)
1000e782:	2210      	movs	r2, #16
1000e784:	f000 f9fe 	bl	1000eb84 <XOR_secure>
1000e788:	4630      	mov	r0, r6
1000e78a:	4907      	ldr	r1, [pc, #28]	@ (1000e7a8 <sync1+0x40>)
1000e78c:	4623      	mov	r3, r4
1000e78e:	2210      	movs	r2, #16
1000e790:	f000 f9f8 	bl	1000eb84 <XOR_secure>
1000e794:	4621      	mov	r1, r4
1000e796:	2010      	movs	r0, #16
1000e798:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
1000e79c:	f7ff bd8e 	b.w	1000e2bc <send_packet_and_ack>
1000e7a0:	20000000 	.word	0x20000000
1000e7a4:	1001b648 	.word	0x1001b648
1000e7a8:	1001b638 	.word	0x1001b638

1000e7ac <key_sync>:
1000e7ac:	b570      	push	{r4, r5, r6, lr}
1000e7ae:	4e0e      	ldr	r6, [pc, #56]	@ (1000e7e8 <key_sync+0x3c>)
1000e7b0:	4605      	mov	r5, r0
1000e7b2:	4630      	mov	r0, r6
1000e7b4:	f7ff fd98 	bl	1000e2e8 <wait_and_receive_packet>
1000e7b8:	2812      	cmp	r0, #18
1000e7ba:	d104      	bne.n	1000e7c6 <key_sync+0x1a>
1000e7bc:	7c73      	ldrb	r3, [r6, #17]
1000e7be:	2b31      	cmp	r3, #49	@ 0x31
1000e7c0:	d00a      	beq.n	1000e7d8 <key_sync+0x2c>
1000e7c2:	2b32      	cmp	r3, #50	@ 0x32
1000e7c4:	d002      	beq.n	1000e7cc <key_sync+0x20>
1000e7c6:	24ff      	movs	r4, #255	@ 0xff
1000e7c8:	4620      	mov	r0, r4
1000e7ca:	bd70      	pop	{r4, r5, r6, pc}
1000e7cc:	4631      	mov	r1, r6
1000e7ce:	4628      	mov	r0, r5
1000e7d0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
1000e7d4:	f7ff bf94 	b.w	1000e700 <sync2>
1000e7d8:	4604      	mov	r4, r0
1000e7da:	4631      	mov	r1, r6
1000e7dc:	4628      	mov	r0, r5
1000e7de:	f7ff ffc3 	bl	1000e768 <sync1>
1000e7e2:	4620      	mov	r0, r4
1000e7e4:	bd70      	pop	{r4, r5, r6, pc}
1000e7e6:	bf00      	nop
1000e7e8:	20000b1c 	.word	0x20000b1c

1000e7ec <encrypt_sym>:
 * @param ciphertext A pointer to a buffer of length len where the resulting
 *          ciphertext will be written to
 *
 * @return 0 on success, -1 on bad length, other non-zero for other error
 */
int encrypt_sym(uint8_t *plaintext, size_t len, uint8_t *key, uint8_t *ciphertext) {
1000e7ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
1000e7f0:	460c      	mov	r4, r1
1000e7f2:	b0dc      	sub	sp, #368	@ 0x170
    Aes ctx; // Context for encryption
    int result; // Library result

    // Ensure valid length
    if (len <= 0 || len % BLOCK_SIZE)
1000e7f4:	b309      	cbz	r1, 1000e83a <encrypt_sym+0x4e>
1000e7f6:	461e      	mov	r6, r3
1000e7f8:	f011 030f 	ands.w	r3, r1, #15
1000e7fc:	d11d      	bne.n	1000e83a <encrypt_sym+0x4e>
        return -1;

    // Set the key for encryption
    result = wc_AesSetKey(&ctx, key, 16, NULL, AES_ENCRYPTION);
1000e7fe:	4611      	mov	r1, r2
1000e800:	4605      	mov	r5, r0
1000e802:	9300      	str	r3, [sp, #0]
1000e804:	2210      	movs	r2, #16
1000e806:	a803      	add	r0, sp, #12
1000e808:	f002 f9f6 	bl	10010bf8 <wc_AesSetKey>
    if (result != 0)
1000e80c:	4680      	mov	r8, r0
1000e80e:	b980      	cbnz	r0, 1000e832 <encrypt_sym+0x46>
        return result; // Report error


    // Encrypt each block
    for (int i = 0; i < len - 1; i += BLOCK_SIZE) {
1000e810:	2c01      	cmp	r4, #1
1000e812:	f104 37ff 	add.w	r7, r4, #4294967295	@ 0xffffffff
1000e816:	d00c      	beq.n	1000e832 <encrypt_sym+0x46>
1000e818:	4604      	mov	r4, r0
1000e81a:	e001      	b.n	1000e820 <encrypt_sym+0x34>
1000e81c:	42a7      	cmp	r7, r4
1000e81e:	d908      	bls.n	1000e832 <encrypt_sym+0x46>
        result = wc_AesEncryptDirect(&ctx, ciphertext + i, plaintext + i);
1000e820:	192a      	adds	r2, r5, r4
1000e822:	1931      	adds	r1, r6, r4
1000e824:	a803      	add	r0, sp, #12
    for (int i = 0; i < len - 1; i += BLOCK_SIZE) {
1000e826:	3410      	adds	r4, #16
        result = wc_AesEncryptDirect(&ctx, ciphertext + i, plaintext + i);
1000e828:	f002 f9f6 	bl	10010c18 <wc_AesEncryptDirect>
        if (result != 0)
1000e82c:	2800      	cmp	r0, #0
1000e82e:	d0f5      	beq.n	1000e81c <encrypt_sym+0x30>
        result = wc_AesEncryptDirect(&ctx, ciphertext + i, plaintext + i);
1000e830:	4680      	mov	r8, r0
            return result; // Report error
    }
    return 0;
}
1000e832:	4640      	mov	r0, r8
1000e834:	b05c      	add	sp, #368	@ 0x170
1000e836:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        return -1;
1000e83a:	f04f 38ff 	mov.w	r8, #4294967295	@ 0xffffffff
1000e83e:	e7f8      	b.n	1000e832 <encrypt_sym+0x46>

1000e840 <decrypt_sym>:
 * @param plaintext A pointer to a buffer of length len where the resulting
 *          plaintext will be written to
 *
 * @return 0 on success, -1 on bad length, other non-zero for other error
 */
int decrypt_sym(uint8_t *ciphertext, size_t len, uint8_t *key, uint8_t *plaintext) {
1000e840:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
1000e844:	b0dc      	sub	sp, #368	@ 0x170
    Aes ctx; // Context for decryption
    int result; // Library result

    // Ensure valid length
    if (len <= 0 || len % BLOCK_SIZE)
1000e846:	b319      	cbz	r1, 1000e890 <decrypt_sym+0x50>
1000e848:	461e      	mov	r6, r3
1000e84a:	f011 030f 	ands.w	r3, r1, #15
1000e84e:	460c      	mov	r4, r1
1000e850:	d11e      	bne.n	1000e890 <decrypt_sym+0x50>
        return -1;

    // Set the key for decryption
    result = wc_AesSetKey(&ctx, key, 16, NULL, AES_DECRYPTION);
1000e852:	4611      	mov	r1, r2
1000e854:	2201      	movs	r2, #1
1000e856:	9200      	str	r2, [sp, #0]
1000e858:	4605      	mov	r5, r0
1000e85a:	2210      	movs	r2, #16
1000e85c:	a803      	add	r0, sp, #12
1000e85e:	f002 f9cb 	bl	10010bf8 <wc_AesSetKey>
    if (result != 0)
1000e862:	4680      	mov	r8, r0
1000e864:	b980      	cbnz	r0, 1000e888 <decrypt_sym+0x48>
        return result; // Report error

    // Decrypt each block
    for (int i = 0; i < len - 1; i += BLOCK_SIZE) {
1000e866:	2c01      	cmp	r4, #1
1000e868:	f104 37ff 	add.w	r7, r4, #4294967295	@ 0xffffffff
1000e86c:	d00c      	beq.n	1000e888 <decrypt_sym+0x48>
1000e86e:	4604      	mov	r4, r0
1000e870:	e001      	b.n	1000e876 <decrypt_sym+0x36>
1000e872:	42a7      	cmp	r7, r4
1000e874:	d908      	bls.n	1000e888 <decrypt_sym+0x48>
        result = wc_AesDecryptDirect(&ctx, plaintext + i, ciphertext + i);
1000e876:	192a      	adds	r2, r5, r4
1000e878:	1931      	adds	r1, r6, r4
1000e87a:	a803      	add	r0, sp, #12
    for (int i = 0; i < len - 1; i += BLOCK_SIZE) {
1000e87c:	3410      	adds	r4, #16
        result = wc_AesDecryptDirect(&ctx, plaintext + i, ciphertext + i);
1000e87e:	f002 f9e3 	bl	10010c48 <wc_AesDecryptDirect>
        if (result != 0)
1000e882:	2800      	cmp	r0, #0
1000e884:	d0f5      	beq.n	1000e872 <decrypt_sym+0x32>
        result = wc_AesDecryptDirect(&ctx, plaintext + i, ciphertext + i);
1000e886:	4680      	mov	r8, r0
            return result; // Report error
    }
    return 0;
}
1000e888:	4640      	mov	r0, r8
1000e88a:	b05c      	add	sp, #368	@ 0x170
1000e88c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        return -1;
1000e890:	f04f 38ff 	mov.w	r8, #4294967295	@ 0xffffffff
1000e894:	e7f8      	b.n	1000e888 <decrypt_sym+0x48>
1000e896:	bf00      	nop

1000e898 <i2c_simple_isr>:
    static int READ_INDEX = 0;
    static int WRITE_INDEX = 0;
    static ECTF_I2C_REGS ACTIVE_REG = RECEIVE;

    // Read interrupt flags
    uint32_t Flags = I2C_INTERFACE->intfl0;
1000e898:	4890      	ldr	r0, [pc, #576]	@ (1000eadc <i2c_simple_isr+0x244>)
void i2c_simple_isr (void) {
1000e89a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    uint32_t Flags = I2C_INTERFACE->intfl0;
1000e89c:	6884      	ldr	r4, [r0, #8]
    
    // Transaction over interrupt
    if (Flags & MXC_F_I2C_INTFL0_STOP) {
1000e89e:	0663      	lsls	r3, r4, #25
1000e8a0:	d549      	bpl.n	1000e936 <i2c_simple_isr+0x9e>
        
        // Ready any remaining data
        if (WRITE_START == true) {
1000e8a2:	4e8f      	ldr	r6, [pc, #572]	@ (1000eae0 <i2c_simple_isr+0x248>)
1000e8a4:	7833      	ldrb	r3, [r6, #0]
1000e8a6:	2b00      	cmp	r3, #0
1000e8a8:	f040 80cb 	bne.w	1000ea42 <i2c_simple_isr+0x1aa>
            MXC_I2C_ReadRXFIFO(I2C_INTERFACE, (volatile unsigned char*) &ACTIVE_REG, 1);
            WRITE_START = false;
        }
        if (ACTIVE_REG <= MAX_REG) {
1000e8ac:	4d8d      	ldr	r5, [pc, #564]	@ (1000eae4 <i2c_simple_isr+0x24c>)
            int available = MXC_I2C_GetRXFIFOAvailable(I2C_INTERFACE);
1000e8ae:	488b      	ldr	r0, [pc, #556]	@ (1000eadc <i2c_simple_isr+0x244>)
        if (ACTIVE_REG <= MAX_REG) {
1000e8b0:	782b      	ldrb	r3, [r5, #0]
1000e8b2:	2b05      	cmp	r3, #5
1000e8b4:	d81b      	bhi.n	1000e8ee <i2c_simple_isr+0x56>
            int available = MXC_I2C_GetRXFIFOAvailable(I2C_INTERFACE);
1000e8b6:	f003 f84d 	bl	10011954 <MXC_I2C_GetRXFIFOAvailable>
            if (available < (I2C_REGS_LEN[ACTIVE_REG]-WRITE_INDEX)) {
1000e8ba:	7829      	ldrb	r1, [r5, #0]
1000e8bc:	4b8a      	ldr	r3, [pc, #552]	@ (1000eae8 <i2c_simple_isr+0x250>)
1000e8be:	4d8b      	ldr	r5, [pc, #556]	@ (1000eaec <i2c_simple_isr+0x254>)
1000e8c0:	f853 2021 	ldr.w	r2, [r3, r1, lsl #2]
1000e8c4:	682b      	ldr	r3, [r5, #0]
1000e8c6:	1ad2      	subs	r2, r2, r3
1000e8c8:	4282      	cmp	r2, r0
1000e8ca:	f340 80da 	ble.w	1000ea82 <i2c_simple_isr+0x1ea>
                WRITE_INDEX += MXC_I2C_ReadRXFIFO(I2C_INTERFACE,
                    &I2C_REGS[ACTIVE_REG][WRITE_INDEX],
1000e8ce:	4a88      	ldr	r2, [pc, #544]	@ (1000eaf0 <i2c_simple_isr+0x258>)
                    MXC_I2C_GetRXFIFOAvailable(I2C_INTERFACE));
1000e8d0:	4882      	ldr	r0, [pc, #520]	@ (1000eadc <i2c_simple_isr+0x244>)
                    &I2C_REGS[ACTIVE_REG][WRITE_INDEX],
1000e8d2:	f852 7021 	ldr.w	r7, [r2, r1, lsl #2]
1000e8d6:	441f      	add	r7, r3
                    MXC_I2C_GetRXFIFOAvailable(I2C_INTERFACE));
1000e8d8:	f003 f83c 	bl	10011954 <MXC_I2C_GetRXFIFOAvailable>
                WRITE_INDEX += MXC_I2C_ReadRXFIFO(I2C_INTERFACE,
1000e8dc:	4639      	mov	r1, r7
                    MXC_I2C_GetRXFIFOAvailable(I2C_INTERFACE));
1000e8de:	4602      	mov	r2, r0
            }
            else {
                WRITE_INDEX += MXC_I2C_ReadRXFIFO(I2C_INTERFACE,
1000e8e0:	487e      	ldr	r0, [pc, #504]	@ (1000eadc <i2c_simple_isr+0x244>)
1000e8e2:	f003 f835 	bl	10011950 <MXC_I2C_ReadRXFIFO>
1000e8e6:	682b      	ldr	r3, [r5, #0]
1000e8e8:	4403      	add	r3, r0
1000e8ea:	602b      	str	r3, [r5, #0]
1000e8ec:	e002      	b.n	1000e8f4 <i2c_simple_isr+0x5c>
                    &I2C_REGS[ACTIVE_REG][WRITE_INDEX],
                    I2C_REGS_LEN[ACTIVE_REG]-WRITE_INDEX);
            }
        } else {
            MXC_I2C_ClearRXFIFO(I2C_INTERFACE);
1000e8ee:	f003 f837 	bl	10011960 <MXC_I2C_ClearRXFIFO>
1000e8f2:	4d7e      	ldr	r5, [pc, #504]	@ (1000eaec <i2c_simple_isr+0x254>)
        }

        // Disable bulk send/receive interrupts
        MXC_I2C_DisableInt(I2C_INTERFACE, MXC_F_I2C_INTEN0_RX_THD, 0);
1000e8f4:	4879      	ldr	r0, [pc, #484]	@ (1000eadc <i2c_simple_isr+0x244>)
1000e8f6:	2200      	movs	r2, #0
1000e8f8:	2110      	movs	r1, #16
1000e8fa:	f003 f839 	bl	10011970 <MXC_I2C_DisableInt>
        MXC_I2C_DisableInt(I2C_INTERFACE, MXC_F_I2C_INTEN0_TX_THD, 0);
1000e8fe:	4877      	ldr	r0, [pc, #476]	@ (1000eadc <i2c_simple_isr+0x244>)
1000e900:	2200      	movs	r2, #0
1000e902:	2120      	movs	r1, #32
1000e904:	f003 f834 	bl	10011970 <MXC_I2C_DisableInt>

        // Clear FIFOs if full
        if (MXC_I2C_GetRXFIFOAvailable(I2C_INTERFACE) != 0) {
1000e908:	4874      	ldr	r0, [pc, #464]	@ (1000eadc <i2c_simple_isr+0x244>)
1000e90a:	f003 f823 	bl	10011954 <MXC_I2C_GetRXFIFOAvailable>
1000e90e:	2800      	cmp	r0, #0
1000e910:	f040 80df 	bne.w	1000ead2 <i2c_simple_isr+0x23a>
            MXC_I2C_ClearRXFIFO(I2C_INTERFACE);
        }
        if (MXC_I2C_GetTXFIFOAvailable(I2C_INTERFACE) != 8) {
1000e914:	4871      	ldr	r0, [pc, #452]	@ (1000eadc <i2c_simple_isr+0x244>)
1000e916:	f003 f821 	bl	1001195c <MXC_I2C_GetTXFIFOAvailable>
1000e91a:	2808      	cmp	r0, #8
1000e91c:	d002      	beq.n	1000e924 <i2c_simple_isr+0x8c>
            MXC_I2C_ClearTXFIFO(I2C_INTERFACE);
1000e91e:	486f      	ldr	r0, [pc, #444]	@ (1000eadc <i2c_simple_isr+0x244>)
1000e920:	f003 f820 	bl	10011964 <MXC_I2C_ClearTXFIFO>
        }

        // Reset state
        READ_INDEX = 0;
1000e924:	4b73      	ldr	r3, [pc, #460]	@ (1000eaf4 <i2c_simple_isr+0x25c>)
        WRITE_INDEX = 0;
        WRITE_START = false;

        // Clear ISR flag
        MXC_I2C_ClearFlags(I2C_INTERFACE, MXC_F_I2C_INTFL0_STOP, 0);
1000e926:	486d      	ldr	r0, [pc, #436]	@ (1000eadc <i2c_simple_isr+0x244>)
        READ_INDEX = 0;
1000e928:	2200      	movs	r2, #0
        MXC_I2C_ClearFlags(I2C_INTERFACE, MXC_F_I2C_INTFL0_STOP, 0);
1000e92a:	2140      	movs	r1, #64	@ 0x40
        WRITE_INDEX = 0;
1000e92c:	602a      	str	r2, [r5, #0]
        READ_INDEX = 0;
1000e92e:	601a      	str	r2, [r3, #0]
        WRITE_START = false;
1000e930:	7032      	strb	r2, [r6, #0]
        MXC_I2C_ClearFlags(I2C_INTERFACE, MXC_F_I2C_INTFL0_STOP, 0);
1000e932:	f003 f819 	bl	10011968 <MXC_I2C_ClearFlags>
    }

    // TX Fifo Threshold Met on Read
    if (Flags & MXC_F_I2C_INTEN0_TX_THD && (I2C_INTERFACE->inten0 & MXC_F_I2C_INTEN0_TX_THD)) {
1000e936:	06a7      	lsls	r7, r4, #26
1000e938:	d503      	bpl.n	1000e942 <i2c_simple_isr+0xaa>
1000e93a:	4868      	ldr	r0, [pc, #416]	@ (1000eadc <i2c_simple_isr+0x244>)
1000e93c:	68c3      	ldr	r3, [r0, #12]
1000e93e:	069e      	lsls	r6, r3, #26
1000e940:	d433      	bmi.n	1000e9aa <i2c_simple_isr+0x112>
        // Clear ISR flag
        MXC_I2C_ClearFlags(I2C_INTERFACE, MXC_F_I2C_INTFL0_TX_THD, 0);
    }

    // Read from Peripheral from Controller Match
    if (Flags & MXC_F_I2C_INTFL0_WR_ADDR_MATCH) {
1000e942:	0220      	lsls	r0, r4, #8
1000e944:	d43f      	bmi.n	1000e9c6 <i2c_simple_isr+0x12e>
            }
        }
    }

    // Write to Peripheral from Controller Match
    if (Flags & MXC_F_I2C_INTFL0_RD_ADDR_MATCH) {
1000e946:	0262      	lsls	r2, r4, #9
1000e948:	d46c      	bmi.n	1000ea24 <i2c_simple_isr+0x18c>
        // Clear flag
        MXC_I2C_ClearFlags(I2C_INTERFACE, MXC_F_I2C_INTFL0_RD_ADDR_MATCH, 0);
    }

    // RX Fifo Threshold Met on Write
    if (Flags & MXC_F_I2C_INTEN0_RX_THD) {
1000e94a:	06e3      	lsls	r3, r4, #27
1000e94c:	d511      	bpl.n	1000e972 <i2c_simple_isr+0xda>
        // We always write a register before writing data so select register
        if (WRITE_START == true) {
1000e94e:	4c64      	ldr	r4, [pc, #400]	@ (1000eae0 <i2c_simple_isr+0x248>)
1000e950:	7823      	ldrb	r3, [r4, #0]
1000e952:	2b00      	cmp	r3, #0
1000e954:	d17c      	bne.n	1000ea50 <i2c_simple_isr+0x1b8>
            MXC_I2C_ReadRXFIFO(I2C_INTERFACE, (volatile unsigned char*) &ACTIVE_REG, 1);
            WRITE_START = false;
        }
        // Read remaining data
        if (ACTIVE_REG <= MAX_REG) {
1000e956:	4c63      	ldr	r4, [pc, #396]	@ (1000eae4 <i2c_simple_isr+0x24c>)
            int available = MXC_I2C_GetRXFIFOAvailable(I2C_INTERFACE);
1000e958:	4860      	ldr	r0, [pc, #384]	@ (1000eadc <i2c_simple_isr+0x244>)
        if (ACTIVE_REG <= MAX_REG) {
1000e95a:	7823      	ldrb	r3, [r4, #0]
1000e95c:	2b05      	cmp	r3, #5
1000e95e:	d909      	bls.n	1000e974 <i2c_simple_isr+0xdc>
                    &I2C_REGS[ACTIVE_REG][WRITE_INDEX],
                    I2C_REGS_LEN[ACTIVE_REG]-WRITE_INDEX);
            }
        // Clear out FIFO if invalid register specified
        } else {
            MXC_I2C_ClearRXFIFO(I2C_INTERFACE);
1000e960:	f002 fffe 	bl	10011960 <MXC_I2C_ClearRXFIFO>
        }

        // Clear ISR flag
        MXC_I2C_ClearFlags(I2C_INTERFACE, MXC_F_I2C_INTFL0_RX_THD, 0);
    }
}
1000e964:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
        MXC_I2C_ClearFlags(I2C_INTERFACE, MXC_F_I2C_INTFL0_RX_THD, 0);
1000e968:	485c      	ldr	r0, [pc, #368]	@ (1000eadc <i2c_simple_isr+0x244>)
1000e96a:	2200      	movs	r2, #0
1000e96c:	2110      	movs	r1, #16
1000e96e:	f002 bffb 	b.w	10011968 <MXC_I2C_ClearFlags>
}
1000e972:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
            int available = MXC_I2C_GetRXFIFOAvailable(I2C_INTERFACE);
1000e974:	f002 ffee 	bl	10011954 <MXC_I2C_GetRXFIFOAvailable>
            if (available < (I2C_REGS_LEN[ACTIVE_REG]-WRITE_INDEX)) {
1000e978:	7821      	ldrb	r1, [r4, #0]
1000e97a:	4a5b      	ldr	r2, [pc, #364]	@ (1000eae8 <i2c_simple_isr+0x250>)
1000e97c:	4c5b      	ldr	r4, [pc, #364]	@ (1000eaec <i2c_simple_isr+0x254>)
1000e97e:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
1000e982:	6823      	ldr	r3, [r4, #0]
1000e984:	1ad2      	subs	r2, r2, r3
1000e986:	4282      	cmp	r2, r0
1000e988:	dd70      	ble.n	1000ea6c <i2c_simple_isr+0x1d4>
                    &I2C_REGS[ACTIVE_REG][WRITE_INDEX],
1000e98a:	4a59      	ldr	r2, [pc, #356]	@ (1000eaf0 <i2c_simple_isr+0x258>)
                    MXC_I2C_GetRXFIFOAvailable(I2C_INTERFACE));
1000e98c:	4853      	ldr	r0, [pc, #332]	@ (1000eadc <i2c_simple_isr+0x244>)
                    &I2C_REGS[ACTIVE_REG][WRITE_INDEX],
1000e98e:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
1000e992:	441d      	add	r5, r3
                    MXC_I2C_GetRXFIFOAvailable(I2C_INTERFACE));
1000e994:	f002 ffde 	bl	10011954 <MXC_I2C_GetRXFIFOAvailable>
                WRITE_INDEX += MXC_I2C_ReadRXFIFO(I2C_INTERFACE,
1000e998:	4629      	mov	r1, r5
                    MXC_I2C_GetRXFIFOAvailable(I2C_INTERFACE));
1000e99a:	4602      	mov	r2, r0
                WRITE_INDEX += MXC_I2C_ReadRXFIFO(I2C_INTERFACE,
1000e99c:	484f      	ldr	r0, [pc, #316]	@ (1000eadc <i2c_simple_isr+0x244>)
1000e99e:	f002 ffd7 	bl	10011950 <MXC_I2C_ReadRXFIFO>
1000e9a2:	6823      	ldr	r3, [r4, #0]
1000e9a4:	4403      	add	r3, r0
1000e9a6:	6023      	str	r3, [r4, #0]
1000e9a8:	e7dc      	b.n	1000e964 <i2c_simple_isr+0xcc>
        if (Flags & MXC_F_I2C_INTFL0_TX_LOCKOUT) {
1000e9aa:	0425      	lsls	r5, r4, #16
1000e9ac:	f100 808b 	bmi.w	1000eac6 <i2c_simple_isr+0x22e>
        if (ACTIVE_REG <= MAX_REG) {
1000e9b0:	4d4c      	ldr	r5, [pc, #304]	@ (1000eae4 <i2c_simple_isr+0x24c>)
1000e9b2:	782b      	ldrb	r3, [r5, #0]
1000e9b4:	2b05      	cmp	r3, #5
1000e9b6:	d969      	bls.n	1000ea8c <i2c_simple_isr+0x1f4>
        MXC_I2C_ClearFlags(I2C_INTERFACE, MXC_F_I2C_INTFL0_TX_THD, 0);
1000e9b8:	4848      	ldr	r0, [pc, #288]	@ (1000eadc <i2c_simple_isr+0x244>)
1000e9ba:	2200      	movs	r2, #0
1000e9bc:	2120      	movs	r1, #32
1000e9be:	f002 ffd3 	bl	10011968 <MXC_I2C_ClearFlags>
    if (Flags & MXC_F_I2C_INTFL0_WR_ADDR_MATCH) {
1000e9c2:	0220      	lsls	r0, r4, #8
1000e9c4:	d5bf      	bpl.n	1000e946 <i2c_simple_isr+0xae>
        MXC_I2C_ClearFlags(I2C_INTERFACE, MXC_F_I2C_INTFL0_WR_ADDR_MATCH, 0);
1000e9c6:	f44f 0100 	mov.w	r1, #8388608	@ 0x800000
1000e9ca:	4844      	ldr	r0, [pc, #272]	@ (1000eadc <i2c_simple_isr+0x244>)
1000e9cc:	2200      	movs	r2, #0
1000e9ce:	f002 ffcb 	bl	10011968 <MXC_I2C_ClearFlags>
        if (Flags & MXC_F_I2C_INTFL0_TX_LOCKOUT) {
1000e9d2:	0421      	lsls	r1, r4, #16
1000e9d4:	d5b7      	bpl.n	1000e946 <i2c_simple_isr+0xae>
            MXC_I2C_ReadRXFIFO(I2C_INTERFACE, (volatile unsigned char*) &ACTIVE_REG, 1);
1000e9d6:	4d43      	ldr	r5, [pc, #268]	@ (1000eae4 <i2c_simple_isr+0x24c>)
            MXC_I2C_ClearFlags(I2C_INTERFACE, MXC_F_I2C_INTFL0_TX_LOCKOUT, 0);
1000e9d8:	4840      	ldr	r0, [pc, #256]	@ (1000eadc <i2c_simple_isr+0x244>)
1000e9da:	2200      	movs	r2, #0
1000e9dc:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
1000e9e0:	f002 ffc2 	bl	10011968 <MXC_I2C_ClearFlags>
            MXC_I2C_ReadRXFIFO(I2C_INTERFACE, (volatile unsigned char*) &ACTIVE_REG, 1);
1000e9e4:	483d      	ldr	r0, [pc, #244]	@ (1000eadc <i2c_simple_isr+0x244>)
1000e9e6:	2201      	movs	r2, #1
1000e9e8:	4629      	mov	r1, r5
1000e9ea:	f002 ffb1 	bl	10011950 <MXC_I2C_ReadRXFIFO>
            if (ACTIVE_REG <= MAX_REG) {
1000e9ee:	782b      	ldrb	r3, [r5, #0]
1000e9f0:	2b05      	cmp	r3, #5
1000e9f2:	d8a8      	bhi.n	1000e946 <i2c_simple_isr+0xae>
                READ_INDEX += MXC_I2C_WriteTXFIFO(I2C_INTERFACE, (volatile unsigned char*)I2C_REGS[ACTIVE_REG], I2C_REGS_LEN[ACTIVE_REG]);
1000e9f4:	4e3c      	ldr	r6, [pc, #240]	@ (1000eae8 <i2c_simple_isr+0x250>)
1000e9f6:	4a3e      	ldr	r2, [pc, #248]	@ (1000eaf0 <i2c_simple_isr+0x258>)
1000e9f8:	4838      	ldr	r0, [pc, #224]	@ (1000eadc <i2c_simple_isr+0x244>)
1000e9fa:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
1000e9fe:	f856 2023 	ldr.w	r2, [r6, r3, lsl #2]
1000ea02:	f002 ffa9 	bl	10011958 <MXC_I2C_WriteTXFIFO>
1000ea06:	4b3b      	ldr	r3, [pc, #236]	@ (1000eaf4 <i2c_simple_isr+0x25c>)
                if (READ_INDEX < I2C_REGS_LEN[ACTIVE_REG]) {
1000ea08:	782a      	ldrb	r2, [r5, #0]
                READ_INDEX += MXC_I2C_WriteTXFIFO(I2C_INTERFACE, (volatile unsigned char*)I2C_REGS[ACTIVE_REG], I2C_REGS_LEN[ACTIVE_REG]);
1000ea0a:	6819      	ldr	r1, [r3, #0]
                if (READ_INDEX < I2C_REGS_LEN[ACTIVE_REG]) {
1000ea0c:	f856 2022 	ldr.w	r2, [r6, r2, lsl #2]
                READ_INDEX += MXC_I2C_WriteTXFIFO(I2C_INTERFACE, (volatile unsigned char*)I2C_REGS[ACTIVE_REG], I2C_REGS_LEN[ACTIVE_REG]);
1000ea10:	4408      	add	r0, r1
                if (READ_INDEX < I2C_REGS_LEN[ACTIVE_REG]) {
1000ea12:	4290      	cmp	r0, r2
                READ_INDEX += MXC_I2C_WriteTXFIFO(I2C_INTERFACE, (volatile unsigned char*)I2C_REGS[ACTIVE_REG], I2C_REGS_LEN[ACTIVE_REG]);
1000ea14:	6018      	str	r0, [r3, #0]
                if (READ_INDEX < I2C_REGS_LEN[ACTIVE_REG]) {
1000ea16:	da96      	bge.n	1000e946 <i2c_simple_isr+0xae>
                    MXC_I2C_EnableInt(I2C_INTERFACE, MXC_F_I2C_INTEN0_TX_THD, 0);
1000ea18:	4830      	ldr	r0, [pc, #192]	@ (1000eadc <i2c_simple_isr+0x244>)
1000ea1a:	2200      	movs	r2, #0
1000ea1c:	2120      	movs	r1, #32
1000ea1e:	f002 ffa5 	bl	1001196c <MXC_I2C_EnableInt>
1000ea22:	e790      	b.n	1000e946 <i2c_simple_isr+0xae>
        WRITE_START = true;
1000ea24:	4b2e      	ldr	r3, [pc, #184]	@ (1000eae0 <i2c_simple_isr+0x248>)
        MXC_I2C_EnableInt(I2C_INTERFACE, MXC_F_I2C_INTEN0_RX_THD, 0);
1000ea26:	482d      	ldr	r0, [pc, #180]	@ (1000eadc <i2c_simple_isr+0x244>)
1000ea28:	2200      	movs	r2, #0
1000ea2a:	2110      	movs	r1, #16
        WRITE_START = true;
1000ea2c:	2501      	movs	r5, #1
1000ea2e:	701d      	strb	r5, [r3, #0]
        MXC_I2C_EnableInt(I2C_INTERFACE, MXC_F_I2C_INTEN0_RX_THD, 0);
1000ea30:	f002 ff9c 	bl	1001196c <MXC_I2C_EnableInt>
        MXC_I2C_ClearFlags(I2C_INTERFACE, MXC_F_I2C_INTFL0_RD_ADDR_MATCH, 0);
1000ea34:	4829      	ldr	r0, [pc, #164]	@ (1000eadc <i2c_simple_isr+0x244>)
1000ea36:	2200      	movs	r2, #0
1000ea38:	f44f 0180 	mov.w	r1, #4194304	@ 0x400000
1000ea3c:	f002 ff94 	bl	10011968 <MXC_I2C_ClearFlags>
1000ea40:	e783      	b.n	1000e94a <i2c_simple_isr+0xb2>
            MXC_I2C_ReadRXFIFO(I2C_INTERFACE, (volatile unsigned char*) &ACTIVE_REG, 1);
1000ea42:	4928      	ldr	r1, [pc, #160]	@ (1000eae4 <i2c_simple_isr+0x24c>)
1000ea44:	2201      	movs	r2, #1
1000ea46:	f002 ff83 	bl	10011950 <MXC_I2C_ReadRXFIFO>
            WRITE_START = false;
1000ea4a:	2300      	movs	r3, #0
1000ea4c:	7033      	strb	r3, [r6, #0]
1000ea4e:	e72d      	b.n	1000e8ac <i2c_simple_isr+0x14>
            MXC_I2C_ReadRXFIFO(I2C_INTERFACE, (volatile unsigned char*) &ACTIVE_REG, 1);
1000ea50:	4924      	ldr	r1, [pc, #144]	@ (1000eae4 <i2c_simple_isr+0x24c>)
1000ea52:	4822      	ldr	r0, [pc, #136]	@ (1000eadc <i2c_simple_isr+0x244>)
1000ea54:	2201      	movs	r2, #1
1000ea56:	f002 ff7b 	bl	10011950 <MXC_I2C_ReadRXFIFO>
            WRITE_START = false;
1000ea5a:	2300      	movs	r3, #0
1000ea5c:	7023      	strb	r3, [r4, #0]
        if (ACTIVE_REG <= MAX_REG) {
1000ea5e:	4c21      	ldr	r4, [pc, #132]	@ (1000eae4 <i2c_simple_isr+0x24c>)
            int available = MXC_I2C_GetRXFIFOAvailable(I2C_INTERFACE);
1000ea60:	481e      	ldr	r0, [pc, #120]	@ (1000eadc <i2c_simple_isr+0x244>)
        if (ACTIVE_REG <= MAX_REG) {
1000ea62:	7823      	ldrb	r3, [r4, #0]
1000ea64:	2b05      	cmp	r3, #5
1000ea66:	f63f af7b 	bhi.w	1000e960 <i2c_simple_isr+0xc8>
1000ea6a:	e783      	b.n	1000e974 <i2c_simple_isr+0xdc>
                    &I2C_REGS[ACTIVE_REG][WRITE_INDEX],
1000ea6c:	4820      	ldr	r0, [pc, #128]	@ (1000eaf0 <i2c_simple_isr+0x258>)
1000ea6e:	f850 1021 	ldr.w	r1, [r0, r1, lsl #2]
                WRITE_INDEX += MXC_I2C_ReadRXFIFO(I2C_INTERFACE,
1000ea72:	481a      	ldr	r0, [pc, #104]	@ (1000eadc <i2c_simple_isr+0x244>)
1000ea74:	4419      	add	r1, r3
1000ea76:	f002 ff6b 	bl	10011950 <MXC_I2C_ReadRXFIFO>
1000ea7a:	6823      	ldr	r3, [r4, #0]
1000ea7c:	4403      	add	r3, r0
1000ea7e:	6023      	str	r3, [r4, #0]
1000ea80:	e770      	b.n	1000e964 <i2c_simple_isr+0xcc>
                    &I2C_REGS[ACTIVE_REG][WRITE_INDEX],
1000ea82:	481b      	ldr	r0, [pc, #108]	@ (1000eaf0 <i2c_simple_isr+0x258>)
1000ea84:	f850 1021 	ldr.w	r1, [r0, r1, lsl #2]
                WRITE_INDEX += MXC_I2C_ReadRXFIFO(I2C_INTERFACE,
1000ea88:	4419      	add	r1, r3
1000ea8a:	e729      	b.n	1000e8e0 <i2c_simple_isr+0x48>
            READ_INDEX += MXC_I2C_WriteTXFIFO(I2C_INTERFACE,
1000ea8c:	4e19      	ldr	r6, [pc, #100]	@ (1000eaf4 <i2c_simple_isr+0x25c>)
                I2C_REGS_LEN[ACTIVE_REG]-READ_INDEX);
1000ea8e:	4f16      	ldr	r7, [pc, #88]	@ (1000eae8 <i2c_simple_isr+0x250>)
                (volatile unsigned char*)&I2C_REGS[ACTIVE_REG][READ_INDEX],
1000ea90:	4917      	ldr	r1, [pc, #92]	@ (1000eaf0 <i2c_simple_isr+0x258>)
            READ_INDEX += MXC_I2C_WriteTXFIFO(I2C_INTERFACE,
1000ea92:	6832      	ldr	r2, [r6, #0]
                (volatile unsigned char*)&I2C_REGS[ACTIVE_REG][READ_INDEX],
1000ea94:	f851 1023 	ldr.w	r1, [r1, r3, lsl #2]
                I2C_REGS_LEN[ACTIVE_REG]-READ_INDEX);
1000ea98:	f857 3023 	ldr.w	r3, [r7, r3, lsl #2]
            READ_INDEX += MXC_I2C_WriteTXFIFO(I2C_INTERFACE,
1000ea9c:	480f      	ldr	r0, [pc, #60]	@ (1000eadc <i2c_simple_isr+0x244>)
1000ea9e:	4411      	add	r1, r2
1000eaa0:	1a9a      	subs	r2, r3, r2
1000eaa2:	f002 ff59 	bl	10011958 <MXC_I2C_WriteTXFIFO>
            if (I2C_REGS_LEN[ACTIVE_REG]-1 == READ_INDEX) {
1000eaa6:	782b      	ldrb	r3, [r5, #0]
            READ_INDEX += MXC_I2C_WriteTXFIFO(I2C_INTERFACE,
1000eaa8:	6832      	ldr	r2, [r6, #0]
            if (I2C_REGS_LEN[ACTIVE_REG]-1 == READ_INDEX) {
1000eaaa:	f857 3023 	ldr.w	r3, [r7, r3, lsl #2]
            READ_INDEX += MXC_I2C_WriteTXFIFO(I2C_INTERFACE,
1000eaae:	4410      	add	r0, r2
            if (I2C_REGS_LEN[ACTIVE_REG]-1 == READ_INDEX) {
1000eab0:	3b01      	subs	r3, #1
1000eab2:	4298      	cmp	r0, r3
            READ_INDEX += MXC_I2C_WriteTXFIFO(I2C_INTERFACE,
1000eab4:	6030      	str	r0, [r6, #0]
            if (I2C_REGS_LEN[ACTIVE_REG]-1 == READ_INDEX) {
1000eab6:	f47f af7f 	bne.w	1000e9b8 <i2c_simple_isr+0x120>
                MXC_I2C_DisableInt(I2C_INTERFACE, MXC_F_I2C_INTEN0_TX_THD, 0);
1000eaba:	4808      	ldr	r0, [pc, #32]	@ (1000eadc <i2c_simple_isr+0x244>)
1000eabc:	2200      	movs	r2, #0
1000eabe:	2120      	movs	r1, #32
1000eac0:	f002 ff56 	bl	10011970 <MXC_I2C_DisableInt>
1000eac4:	e778      	b.n	1000e9b8 <i2c_simple_isr+0x120>
            MXC_I2C_ClearFlags(I2C_INTERFACE, MXC_F_I2C_INTFL0_TX_LOCKOUT, 0);
1000eac6:	2200      	movs	r2, #0
1000eac8:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
1000eacc:	f002 ff4c 	bl	10011968 <MXC_I2C_ClearFlags>
1000ead0:	e76e      	b.n	1000e9b0 <i2c_simple_isr+0x118>
            MXC_I2C_ClearRXFIFO(I2C_INTERFACE);
1000ead2:	4802      	ldr	r0, [pc, #8]	@ (1000eadc <i2c_simple_isr+0x244>)
1000ead4:	f002 ff44 	bl	10011960 <MXC_I2C_ClearRXFIFO>
1000ead8:	e71c      	b.n	1000e914 <i2c_simple_isr+0x7c>
1000eada:	bf00      	nop
1000eadc:	4001e000 	.word	0x4001e000
1000eae0:	20000c25 	.word	0x20000c25
1000eae4:	20000c24 	.word	0x20000c24
1000eae8:	20000010 	.word	0x20000010
1000eaec:	20000c20 	.word	0x20000c20
1000eaf0:	20000028 	.word	0x20000028
1000eaf4:	20000c1c 	.word	0x20000c1c

1000eaf8 <i2c_simple_peripheral_init>:
int i2c_simple_peripheral_init(uint8_t addr) {
1000eaf8:	b510      	push	{r4, lr}
1000eafa:	4602      	mov	r2, r0
    error = MXC_I2C_Init(I2C_INTERFACE, false, addr);
1000eafc:	2100      	movs	r1, #0
1000eafe:	481b      	ldr	r0, [pc, #108]	@ (1000eb6c <i2c_simple_peripheral_init+0x74>)
1000eb00:	f002 fed8 	bl	100118b4 <MXC_I2C_Init>
    if (error != E_NO_ERROR) {
1000eb04:	4604      	mov	r4, r0
1000eb06:	bb60      	cbnz	r0, 1000eb62 <i2c_simple_peripheral_init+0x6a>
    MXC_I2C_SetFrequency(I2C_INTERFACE, I2C_FREQ);
1000eb08:	4919      	ldr	r1, [pc, #100]	@ (1000eb70 <i2c_simple_peripheral_init+0x78>)
1000eb0a:	4818      	ldr	r0, [pc, #96]	@ (1000eb6c <i2c_simple_peripheral_init+0x74>)
1000eb0c:	f002 ff1c 	bl	10011948 <MXC_I2C_SetFrequency>
    MXC_I2C_ClearRXFIFO(I2C_INTERFACE);
1000eb10:	4816      	ldr	r0, [pc, #88]	@ (1000eb6c <i2c_simple_peripheral_init+0x74>)
1000eb12:	f002 ff25 	bl	10011960 <MXC_I2C_ClearRXFIFO>
    MXC_I2C_EnableInt(I2C_INTERFACE, MXC_F_I2C_INTFL0_RD_ADDR_MATCH, 0);
1000eb16:	4622      	mov	r2, r4
1000eb18:	4814      	ldr	r0, [pc, #80]	@ (1000eb6c <i2c_simple_peripheral_init+0x74>)
1000eb1a:	f44f 0180 	mov.w	r1, #4194304	@ 0x400000
1000eb1e:	f002 ff25 	bl	1001196c <MXC_I2C_EnableInt>
    MXC_I2C_EnableInt(I2C_INTERFACE, MXC_F_I2C_INTFL0_WR_ADDR_MATCH, 0);
1000eb22:	4622      	mov	r2, r4
1000eb24:	4811      	ldr	r0, [pc, #68]	@ (1000eb6c <i2c_simple_peripheral_init+0x74>)
1000eb26:	f44f 0100 	mov.w	r1, #8388608	@ 0x800000
1000eb2a:	f002 ff1f 	bl	1001196c <MXC_I2C_EnableInt>
    MXC_I2C_EnableInt(I2C_INTERFACE, MXC_F_I2C_INTFL0_STOP, 0);
1000eb2e:	4622      	mov	r2, r4
1000eb30:	480e      	ldr	r0, [pc, #56]	@ (1000eb6c <i2c_simple_peripheral_init+0x74>)
1000eb32:	2140      	movs	r1, #64	@ 0x40
1000eb34:	f002 ff1a 	bl	1001196c <MXC_I2C_EnableInt>
    MXC_NVIC_SetVector(MXC_I2C_GET_IRQ(MXC_I2C_GET_IDX(I2C_INTERFACE)), i2c_simple_isr);
1000eb38:	490e      	ldr	r1, [pc, #56]	@ (1000eb74 <i2c_simple_peripheral_init+0x7c>)
1000eb3a:	2024      	movs	r0, #36	@ 0x24
1000eb3c:	f002 fbc4 	bl	100112c8 <MXC_NVIC_SetVector>
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    __COMPILER_BARRIER();
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1000eb40:	4b0d      	ldr	r3, [pc, #52]	@ (1000eb78 <i2c_simple_peripheral_init+0x80>)
1000eb42:	2210      	movs	r2, #16
1000eb44:	605a      	str	r2, [r3, #4]
    MXC_I2C_ClearFlags(I2C_INTERFACE, 0xFFFFFFFF, 0xFFFFFFFF);
1000eb46:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
1000eb4a:	4611      	mov	r1, r2
1000eb4c:	4807      	ldr	r0, [pc, #28]	@ (1000eb6c <i2c_simple_peripheral_init+0x74>)
1000eb4e:	f002 ff0b 	bl	10011968 <MXC_I2C_ClearFlags>
    I2C_REGS[RECEIVE_DONE][0] = false;
1000eb52:	4b0a      	ldr	r3, [pc, #40]	@ (1000eb7c <i2c_simple_peripheral_init+0x84>)
1000eb54:	6859      	ldr	r1, [r3, #4]
1000eb56:	700c      	strb	r4, [r1, #0]
    I2C_REGS[TRANSMIT_DONE][0] = true;
1000eb58:	691b      	ldr	r3, [r3, #16]
1000eb5a:	2201      	movs	r2, #1
1000eb5c:	701a      	strb	r2, [r3, #0]
}
1000eb5e:	4620      	mov	r0, r4
1000eb60:	bd10      	pop	{r4, pc}
        printf("Failed to initialize I2C.\n");
1000eb62:	4807      	ldr	r0, [pc, #28]	@ (1000eb80 <i2c_simple_peripheral_init+0x88>)
1000eb64:	f006 f864 	bl	10014c30 <puts>
}
1000eb68:	4620      	mov	r0, r4
1000eb6a:	bd10      	pop	{r4, pc}
1000eb6c:	4001e000 	.word	0x4001e000
1000eb70:	000186a0 	.word	0x000186a0
1000eb74:	1000e899 	.word	0x1000e899
1000eb78:	e000e100 	.word	0xe000e100
1000eb7c:	20000028 	.word	0x20000028
1000eb80:	1001b658 	.word	0x1001b658

1000eb84 <XOR_secure>:
        Dest: result array
    
    Outputs: None
    */

    for (int i = 0; i < size; i++) {
1000eb84:	2a00      	cmp	r2, #0
1000eb86:	dd10      	ble.n	1000ebaa <XOR_secure+0x26>
void XOR_secure(unsigned char* arr1, unsigned char* arr2, int size, unsigned char* dest){
1000eb88:	b500      	push	{lr}
1000eb8a:	3801      	subs	r0, #1
1000eb8c:	3901      	subs	r1, #1
1000eb8e:	3b01      	subs	r3, #1
1000eb90:	4402      	add	r2, r0
        dest[i] = arr1[i] ^ arr2[i];
1000eb92:	f810 cf01 	ldrb.w	ip, [r0, #1]!
1000eb96:	f811 ef01 	ldrb.w	lr, [r1, #1]!
    for (int i = 0; i < size; i++) {
1000eb9a:	4290      	cmp	r0, r2
        dest[i] = arr1[i] ^ arr2[i];
1000eb9c:	ea8c 0c0e 	eor.w	ip, ip, lr
1000eba0:	f803 cf01 	strb.w	ip, [r3, #1]!
    for (int i = 0; i < size; i++) {
1000eba4:	d1f5      	bne.n	1000eb92 <XOR_secure+0xe>
    }
    return;
1000eba6:	f85d fb04 	ldr.w	pc, [sp], #4
1000ebaa:	4770      	bx	lr

1000ebac <AesEncrypt_C>:
 * @param [out] outBlock  Encrypted block.
 * @param [in]  r         Rounds divided by 2.
 */
static void AesEncrypt_C(Aes* aes, const byte* inBlock, byte* outBlock,
        word32 r)
{
1000ebac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1000ebb0:	b087      	sub	sp, #28
1000ebb2:	680d      	ldr	r5, [r1, #0]
1000ebb4:	684f      	ldr	r7, [r1, #4]
1000ebb6:	688e      	ldr	r6, [r1, #8]
1000ebb8:	68cc      	ldr	r4, [r1, #12]
1000ebba:	e9cd 3200 	strd	r3, r2, [sp]
    s2 = ByteReverseWord32(s2);
    s3 = ByteReverseWord32(s3);
#endif

    /* AddRoundKey */
    s0 ^= rk[0];
1000ebbe:	6803      	ldr	r3, [r0, #0]
1000ebc0:	ba2d      	rev	r5, r5
1000ebc2:	405d      	eors	r5, r3
    s1 ^= rk[1];
1000ebc4:	6843      	ldr	r3, [r0, #4]
1000ebc6:	ba3f      	rev	r7, r7
1000ebc8:	405f      	eors	r7, r3
    s2 ^= rk[2];
1000ebca:	6883      	ldr	r3, [r0, #8]
1000ebcc:	ba36      	rev	r6, r6
1000ebce:	405e      	eors	r6, r3
    s3 ^= rk[3];
1000ebd0:	68c3      	ldr	r3, [r0, #12]
    s0 ^= rk[(o)+0]; s1 ^= rk[(o)+1]; s2 ^= rk[(o)+2]; s3 ^= rk[(o)+3];
#endif

#ifndef WOLFSSL_AES_NO_UNROLL
/* Unroll the loop. */
                       ENC_ROUND_T_S( 0);
1000ebd2:	b2f9      	uxtb	r1, r7
1000ebd4:	b2f2      	uxtb	r2, r6
1000ebd6:	ba24      	rev	r4, r4
    s3 ^= rk[3];
1000ebd8:	405c      	eors	r4, r3
                       ENC_ROUND_T_S( 0);
1000ebda:	f501 7140 	add.w	r1, r1, #768	@ 0x300
1000ebde:	4bea      	ldr	r3, [pc, #936]	@ (1000ef88 <AesEncrypt_C+0x3dc>)
1000ebe0:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000ebe4:	fa5f fe84 	uxtb.w	lr, r4
1000ebe8:	f853 8021 	ldr.w	r8, [r3, r1, lsl #2]
1000ebec:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
1000ebf0:	f50e 7e40 	add.w	lr, lr, #768	@ 0x300
1000ebf4:	0e2a      	lsrs	r2, r5, #24
1000ebf6:	f853 e02e 	ldr.w	lr, [r3, lr, lsl #2]
1000ebfa:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000ebfe:	fa5f fc85 	uxtb.w	ip, r5
1000ec02:	ea82 020e 	eor.w	r2, r2, lr
1000ec06:	f50c 7c40 	add.w	ip, ip, #768	@ 0x300
1000ec0a:	ea4f 6e17 	mov.w	lr, r7, lsr #24
1000ec0e:	f853 c02c 	ldr.w	ip, [r3, ip, lsl #2]
1000ec12:	f853 e02e 	ldr.w	lr, [r3, lr, lsl #2]
1000ec16:	ea8e 0e0c 	eor.w	lr, lr, ip
1000ec1a:	ea4f 6c16 	mov.w	ip, r6, lsr #24
1000ec1e:	f853 c02c 	ldr.w	ip, [r3, ip, lsl #2]
1000ec22:	ea8c 0c08 	eor.w	ip, ip, r8
1000ec26:	ea4f 6814 	mov.w	r8, r4, lsr #24
1000ec2a:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1000ec2e:	ea88 0101 	eor.w	r1, r8, r1
1000ec32:	f3c7 4807 	ubfx	r8, r7, #16, #8
1000ec36:	f3c7 2707 	ubfx	r7, r7, #8, #8
1000ec3a:	f507 7700 	add.w	r7, r7, #512	@ 0x200
1000ec3e:	9102      	str	r1, [sp, #8]
1000ec40:	f853 b027 	ldr.w	fp, [r3, r7, lsl #2]
1000ec44:	6901      	ldr	r1, [r0, #16]
1000ec46:	f3c6 4707 	ubfx	r7, r6, #16, #8
1000ec4a:	f3c6 2607 	ubfx	r6, r6, #8, #8
1000ec4e:	f506 7600 	add.w	r6, r6, #512	@ 0x200
1000ec52:	f508 7880 	add.w	r8, r8, #256	@ 0x100
1000ec56:	f853 9026 	ldr.w	r9, [r3, r6, lsl #2]
1000ec5a:	f853 a028 	ldr.w	sl, [r3, r8, lsl #2]
1000ec5e:	f3c4 4607 	ubfx	r6, r4, #16, #8
1000ec62:	f3c4 2407 	ubfx	r4, r4, #8, #8
1000ec66:	f507 7780 	add.w	r7, r7, #256	@ 0x100
1000ec6a:	f504 7400 	add.w	r4, r4, #512	@ 0x200
1000ec6e:	404a      	eors	r2, r1
1000ec70:	6941      	ldr	r1, [r0, #20]
1000ec72:	f853 8027 	ldr.w	r8, [r3, r7, lsl #2]
1000ec76:	f853 7024 	ldr.w	r7, [r3, r4, lsl #2]
1000ec7a:	f506 7680 	add.w	r6, r6, #256	@ 0x100
1000ec7e:	f3c5 4407 	ubfx	r4, r5, #16, #8
1000ec82:	f3c5 2507 	ubfx	r5, r5, #8, #8
1000ec86:	ea8e 0e01 	eor.w	lr, lr, r1
1000ec8a:	f505 7500 	add.w	r5, r5, #512	@ 0x200
1000ec8e:	6981      	ldr	r1, [r0, #24]
1000ec90:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000ec94:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
1000ec98:	ea8c 0c01 	eor.w	ip, ip, r1
1000ec9c:	f504 7480 	add.w	r4, r4, #256	@ 0x100
1000eca0:	ea8c 0c06 	eor.w	ip, ip, r6
1000eca4:	ea8c 0c05 	eor.w	ip, ip, r5
1000eca8:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
1000ecac:	69c5      	ldr	r5, [r0, #28]
1000ecae:	9902      	ldr	r1, [sp, #8]
1000ecb0:	4069      	eors	r1, r5
1000ecb2:	4061      	eors	r1, r4
1000ecb4:	ea81 010b 	eor.w	r1, r1, fp
    ENC_ROUND_S_T( 8); ENC_ROUND_T_S( 8);
1000ecb8:	b2cc      	uxtb	r4, r1
                       ENC_ROUND_T_S( 0);
1000ecba:	ea8e 0e08 	eor.w	lr, lr, r8
    ENC_ROUND_S_T( 8); ENC_ROUND_T_S( 8);
1000ecbe:	f504 7440 	add.w	r4, r4, #768	@ 0x300
                       ENC_ROUND_T_S( 0);
1000ecc2:	ea8e 0e07 	eor.w	lr, lr, r7
    ENC_ROUND_S_T( 8); ENC_ROUND_T_S( 8);
1000ecc6:	f853 5024 	ldr.w	r5, [r3, r4, lsl #2]
1000ecca:	f3ce 4407 	ubfx	r4, lr, #16, #8
1000ecce:	f504 7480 	add.w	r4, r4, #256	@ 0x100
                       ENC_ROUND_T_S( 0);
1000ecd2:	ea82 020a 	eor.w	r2, r2, sl
    ENC_ROUND_S_T( 8); ENC_ROUND_T_S( 8);
1000ecd6:	f853 7024 	ldr.w	r7, [r3, r4, lsl #2]
1000ecda:	fa5f f48e 	uxtb.w	r4, lr
1000ecde:	f504 7440 	add.w	r4, r4, #768	@ 0x300
                       ENC_ROUND_T_S( 0);
1000ece2:	ea82 0209 	eor.w	r2, r2, r9
    ENC_ROUND_S_T( 8); ENC_ROUND_T_S( 8);
1000ece6:	9403      	str	r4, [sp, #12]
1000ece8:	fa5f f48c 	uxtb.w	r4, ip
1000ecec:	f504 7940 	add.w	r9, r4, #768	@ 0x300
1000ecf0:	0e14      	lsrs	r4, r2, #24
1000ecf2:	b2d6      	uxtb	r6, r2
1000ecf4:	f3c2 4b07 	ubfx	fp, r2, #16, #8
1000ecf8:	f3c2 2207 	ubfx	r2, r2, #8, #8
1000ecfc:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
1000ed00:	f8cd 9014 	str.w	r9, [sp, #20]
1000ed04:	f502 7200 	add.w	r2, r2, #512	@ 0x200
1000ed08:	9204      	str	r2, [sp, #16]
1000ed0a:	f3cc 2807 	ubfx	r8, ip, #8, #8
1000ed0e:	6a02      	ldr	r2, [r0, #32]
1000ed10:	f508 7800 	add.w	r8, r8, #512	@ 0x200
1000ed14:	406c      	eors	r4, r5
1000ed16:	4054      	eors	r4, r2
1000ed18:	ea4f 691e 	mov.w	r9, lr, lsr #24
1000ed1c:	407c      	eors	r4, r7
1000ed1e:	f506 7640 	add.w	r6, r6, #768	@ 0x300
1000ed22:	f853 7028 	ldr.w	r7, [r3, r8, lsl #2]
1000ed26:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000ed2a:	4067      	eors	r7, r4
1000ed2c:	f853 4029 	ldr.w	r4, [r3, r9, lsl #2]
1000ed30:	f3ce 2e07 	ubfx	lr, lr, #8, #8
1000ed34:	ea84 0206 	eor.w	r2, r4, r6
1000ed38:	f50e 7a00 	add.w	sl, lr, #512	@ 0x200
1000ed3c:	9c03      	ldr	r4, [sp, #12]
1000ed3e:	f853 a02a 	ldr.w	sl, [r3, sl, lsl #2]
1000ed42:	ea4f 6e1c 	mov.w	lr, ip, lsr #24
1000ed46:	f3cc 4c07 	ubfx	ip, ip, #16, #8
1000ed4a:	f853 602e 	ldr.w	r6, [r3, lr, lsl #2]
1000ed4e:	f853 e024 	ldr.w	lr, [r3, r4, lsl #2]
1000ed52:	9c05      	ldr	r4, [sp, #20]
1000ed54:	f50c 7580 	add.w	r5, ip, #256	@ 0x100
1000ed58:	ea4f 6c11 	mov.w	ip, r1, lsr #24
1000ed5c:	9502      	str	r5, [sp, #8]
1000ed5e:	f853 c02c 	ldr.w	ip, [r3, ip, lsl #2]
1000ed62:	ea86 060e 	eor.w	r6, r6, lr
1000ed66:	f853 e024 	ldr.w	lr, [r3, r4, lsl #2]
1000ed6a:	9c02      	ldr	r4, [sp, #8]
1000ed6c:	f3c1 4507 	ubfx	r5, r1, #16, #8
1000ed70:	f3c1 2107 	ubfx	r1, r1, #8, #8
1000ed74:	f501 7100 	add.w	r1, r1, #512	@ 0x200
1000ed78:	ea8c 0c0e 	eor.w	ip, ip, lr
1000ed7c:	f853 e024 	ldr.w	lr, [r3, r4, lsl #2]
1000ed80:	6a44      	ldr	r4, [r0, #36]	@ 0x24
1000ed82:	f853 9021 	ldr.w	r9, [r3, r1, lsl #2]
1000ed86:	9904      	ldr	r1, [sp, #16]
1000ed88:	f505 7580 	add.w	r5, r5, #256	@ 0x100
1000ed8c:	4054      	eors	r4, r2
1000ed8e:	6a82      	ldr	r2, [r0, #40]	@ 0x28
1000ed90:	f853 8025 	ldr.w	r8, [r3, r5, lsl #2]
1000ed94:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
1000ed98:	4056      	eors	r6, r2
1000ed9a:	f50b 7b80 	add.w	fp, fp, #256	@ 0x100
1000ed9e:	ea86 0608 	eor.w	r6, r6, r8
1000eda2:	404e      	eors	r6, r1
1000eda4:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
1000eda6:	f853 502b 	ldr.w	r5, [r3, fp, lsl #2]
1000edaa:	ea8c 0c01 	eor.w	ip, ip, r1
1000edae:	ea8c 0c05 	eor.w	ip, ip, r5
1000edb2:	ea8c 0c0a 	eor.w	ip, ip, sl
1000edb6:	fa5f f28c 	uxtb.w	r2, ip
1000edba:	ea84 040e 	eor.w	r4, r4, lr
1000edbe:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000edc2:	ea84 0409 	eor.w	r4, r4, r9
1000edc6:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
1000edca:	f3c4 4207 	ubfx	r2, r4, #16, #8
1000edce:	f502 7280 	add.w	r2, r2, #256	@ 0x100
1000edd2:	fa5f fe86 	uxtb.w	lr, r6
1000edd6:	f853 a022 	ldr.w	sl, [r3, r2, lsl #2]
1000edda:	f3c6 2207 	ubfx	r2, r6, #8, #8
1000edde:	f502 7200 	add.w	r2, r2, #512	@ 0x200
1000ede2:	f50e 7e40 	add.w	lr, lr, #768	@ 0x300
1000ede6:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000edea:	9202      	str	r2, [sp, #8]
1000edec:	b2fa      	uxtb	r2, r7
1000edee:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000edf2:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
1000edf6:	f3c6 4207 	ubfx	r2, r6, #16, #8
1000edfa:	f502 7280 	add.w	r2, r2, #256	@ 0x100
1000edfe:	0e36      	lsrs	r6, r6, #24
1000ee00:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000ee04:	9203      	str	r2, [sp, #12]
1000ee06:	f3cc 2207 	ubfx	r2, ip, #8, #8
1000ee0a:	f502 7200 	add.w	r2, r2, #512	@ 0x200
1000ee0e:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000ee12:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000ee16:	9204      	str	r2, [sp, #16]
1000ee18:	b2e2      	uxtb	r2, r4
1000ee1a:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000ee1e:	f853 b022 	ldr.w	fp, [r3, r2, lsl #2]
1000ee22:	f3cc 4207 	ubfx	r2, ip, #16, #8
1000ee26:	f502 7280 	add.w	r2, r2, #256	@ 0x100
1000ee2a:	ea4f 6c1c 	mov.w	ip, ip, lsr #24
1000ee2e:	f853 9022 	ldr.w	r9, [r3, r2, lsl #2]
1000ee32:	f853 202c 	ldr.w	r2, [r3, ip, lsl #2]
1000ee36:	f3c7 2c07 	ubfx	ip, r7, #8, #8
1000ee3a:	f50c 7c00 	add.w	ip, ip, #512	@ 0x200
1000ee3e:	ea86 060b 	eor.w	r6, r6, fp
1000ee42:	f853 802c 	ldr.w	r8, [r3, ip, lsl #2]
1000ee46:	ea4f 6c17 	mov.w	ip, r7, lsr #24
1000ee4a:	f3c7 4707 	ubfx	r7, r7, #16, #8
1000ee4e:	f853 b02c 	ldr.w	fp, [r3, ip, lsl #2]
1000ee52:	ea8b 0b01 	eor.w	fp, fp, r1
1000ee56:	f507 7180 	add.w	r1, r7, #256	@ 0x100
1000ee5a:	0e27      	lsrs	r7, r4, #24
1000ee5c:	f3c4 2407 	ubfx	r4, r4, #8, #8
1000ee60:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
1000ee64:	ea87 0c05 	eor.w	ip, r7, r5
1000ee68:	6b05      	ldr	r5, [r0, #48]	@ 0x30
1000ee6a:	ea8b 0b05 	eor.w	fp, fp, r5
1000ee6e:	9d02      	ldr	r5, [sp, #8]
1000ee70:	ea8b 070a 	eor.w	r7, fp, sl
1000ee74:	406f      	eors	r7, r5
1000ee76:	6b45      	ldr	r5, [r0, #52]	@ 0x34
1000ee78:	ea8c 0c05 	eor.w	ip, ip, r5
1000ee7c:	9d03      	ldr	r5, [sp, #12]
1000ee7e:	ea8c 0c05 	eor.w	ip, ip, r5
1000ee82:	9d04      	ldr	r5, [sp, #16]
1000ee84:	ea8c 0c05 	eor.w	ip, ip, r5
1000ee88:	6b85      	ldr	r5, [r0, #56]	@ 0x38
1000ee8a:	406e      	eors	r6, r5
1000ee8c:	f853 502e 	ldr.w	r5, [r3, lr, lsl #2]
1000ee90:	f504 7400 	add.w	r4, r4, #512	@ 0x200
1000ee94:	ea82 0e05 	eor.w	lr, r2, r5
1000ee98:	f853 5021 	ldr.w	r5, [r3, r1, lsl #2]
1000ee9c:	6bc1      	ldr	r1, [r0, #60]	@ 0x3c
1000ee9e:	f853 2024 	ldr.w	r2, [r3, r4, lsl #2]
1000eea2:	ea8e 0e01 	eor.w	lr, lr, r1
1000eea6:	ea8e 0e05 	eor.w	lr, lr, r5
1000eeaa:	ea8e 0e02 	eor.w	lr, lr, r2
    ENC_ROUND_S_T(16); ENC_ROUND_T_S(16);
1000eeae:	fa5f f28e 	uxtb.w	r2, lr
1000eeb2:	f502 7240 	add.w	r2, r2, #768	@ 0x300
    ENC_ROUND_S_T( 8); ENC_ROUND_T_S( 8);
1000eeb6:	ea86 0609 	eor.w	r6, r6, r9
    ENC_ROUND_S_T(16); ENC_ROUND_T_S(16);
1000eeba:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
1000eebe:	b2fa      	uxtb	r2, r7
1000eec0:	f502 7240 	add.w	r2, r2, #768	@ 0x300
    ENC_ROUND_S_T( 8); ENC_ROUND_T_S( 8);
1000eec4:	ea86 0608 	eor.w	r6, r6, r8
    ENC_ROUND_S_T(16); ENC_ROUND_T_S(16);
1000eec8:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
1000eecc:	fa5f f28c 	uxtb.w	r2, ip
1000eed0:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000eed4:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
1000eed8:	b2f2      	uxtb	r2, r6
1000eeda:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000eede:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
1000eee2:	0e3a      	lsrs	r2, r7, #24
1000eee4:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000eee8:	4051      	eors	r1, r2
1000eeea:	ea4f 621c 	mov.w	r2, ip, lsr #24
1000eeee:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000eef2:	ea82 0208 	eor.w	r2, r2, r8
1000eef6:	ea4f 6816 	mov.w	r8, r6, lsr #24
1000eefa:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1000eefe:	ea88 0505 	eor.w	r5, r8, r5
1000ef02:	ea4f 681e 	mov.w	r8, lr, lsr #24
1000ef06:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1000ef0a:	ea88 0404 	eor.w	r4, r8, r4
1000ef0e:	f3cc 4807 	ubfx	r8, ip, #16, #8
1000ef12:	f3cc 2c07 	ubfx	ip, ip, #8, #8
1000ef16:	f508 7880 	add.w	r8, r8, #256	@ 0x100
1000ef1a:	f50c 7c00 	add.w	ip, ip, #512	@ 0x200
1000ef1e:	f853 b028 	ldr.w	fp, [r3, r8, lsl #2]
1000ef22:	9402      	str	r4, [sp, #8]
1000ef24:	f853 402c 	ldr.w	r4, [r3, ip, lsl #2]
1000ef28:	9403      	str	r4, [sp, #12]
1000ef2a:	f3c6 4c07 	ubfx	ip, r6, #16, #8
1000ef2e:	f50c 7c80 	add.w	ip, ip, #256	@ 0x100
1000ef32:	f3c6 2607 	ubfx	r6, r6, #8, #8
1000ef36:	f506 7600 	add.w	r6, r6, #512	@ 0x200
1000ef3a:	f853 902c 	ldr.w	r9, [r3, ip, lsl #2]
1000ef3e:	6c04      	ldr	r4, [r0, #64]	@ 0x40
1000ef40:	f853 a026 	ldr.w	sl, [r3, r6, lsl #2]
1000ef44:	f3ce 4c07 	ubfx	ip, lr, #16, #8
1000ef48:	f3ce 2e07 	ubfx	lr, lr, #8, #8
1000ef4c:	f50e 7600 	add.w	r6, lr, #512	@ 0x200
1000ef50:	4061      	eors	r1, r4
1000ef52:	6c44      	ldr	r4, [r0, #68]	@ 0x44
1000ef54:	f853 8026 	ldr.w	r8, [r3, r6, lsl #2]
1000ef58:	f50c 7c80 	add.w	ip, ip, #256	@ 0x100
1000ef5c:	f3c7 4607 	ubfx	r6, r7, #16, #8
1000ef60:	f3c7 2707 	ubfx	r7, r7, #8, #8
1000ef64:	4062      	eors	r2, r4
1000ef66:	f507 7700 	add.w	r7, r7, #512	@ 0x200
1000ef6a:	6c84      	ldr	r4, [r0, #72]	@ 0x48
1000ef6c:	f853 e02c 	ldr.w	lr, [r3, ip, lsl #2]
1000ef70:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
1000ef74:	4065      	eors	r5, r4
1000ef76:	ea85 050e 	eor.w	r5, r5, lr
1000ef7a:	f506 7680 	add.w	r6, r6, #256	@ 0x100
1000ef7e:	407d      	eors	r5, r7
1000ef80:	9c02      	ldr	r4, [sp, #8]
1000ef82:	6cc7      	ldr	r7, [r0, #76]	@ 0x4c
1000ef84:	e002      	b.n	1000ef8c <AesEncrypt_C+0x3e0>
1000ef86:	bf00      	nop
1000ef88:	1001c774 	.word	0x1001c774
1000ef8c:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000ef90:	407c      	eors	r4, r7
1000ef92:	9f03      	ldr	r7, [sp, #12]
1000ef94:	4074      	eors	r4, r6
1000ef96:	407c      	eors	r4, r7
1000ef98:	b2e6      	uxtb	r6, r4
1000ef9a:	ea82 0209 	eor.w	r2, r2, r9
1000ef9e:	f506 7640 	add.w	r6, r6, #768	@ 0x300
1000efa2:	ea82 0208 	eor.w	r2, r2, r8
1000efa6:	f853 7026 	ldr.w	r7, [r3, r6, lsl #2]
1000efaa:	f3c2 4607 	ubfx	r6, r2, #16, #8
1000efae:	f506 7680 	add.w	r6, r6, #256	@ 0x100
1000efb2:	f3c5 4c07 	ubfx	ip, r5, #16, #8
1000efb6:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000efba:	9602      	str	r6, [sp, #8]
1000efbc:	ea81 010b 	eor.w	r1, r1, fp
1000efc0:	f50c 7b80 	add.w	fp, ip, #256	@ 0x100
1000efc4:	fa5f fc82 	uxtb.w	ip, r2
1000efc8:	ea81 010a 	eor.w	r1, r1, sl
1000efcc:	f3c5 2607 	ubfx	r6, r5, #8, #8
1000efd0:	f50c 7940 	add.w	r9, ip, #768	@ 0x300
1000efd4:	fa5f fc85 	uxtb.w	ip, r5
1000efd8:	0e2d      	lsrs	r5, r5, #24
1000efda:	9504      	str	r5, [sp, #16]
1000efdc:	f506 7600 	add.w	r6, r6, #512	@ 0x200
1000efe0:	0e0d      	lsrs	r5, r1, #24
1000efe2:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000efe6:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
1000efea:	9603      	str	r6, [sp, #12]
1000efec:	b2ce      	uxtb	r6, r1
1000efee:	406f      	eors	r7, r5
1000eff0:	f506 7640 	add.w	r6, r6, #768	@ 0x300
1000eff4:	0e15      	lsrs	r5, r2, #24
1000eff6:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000effa:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
1000effe:	f853 9029 	ldr.w	r9, [r3, r9, lsl #2]
1000f002:	4075      	eors	r5, r6
1000f004:	6d06      	ldr	r6, [r0, #80]	@ 0x50
1000f006:	4077      	eors	r7, r6
1000f008:	9e02      	ldr	r6, [sp, #8]
1000f00a:	4077      	eors	r7, r6
1000f00c:	9e03      	ldr	r6, [sp, #12]
1000f00e:	4077      	eors	r7, r6
1000f010:	6d46      	ldr	r6, [r0, #84]	@ 0x54
1000f012:	4075      	eors	r5, r6
1000f014:	f853 602b 	ldr.w	r6, [r3, fp, lsl #2]
1000f018:	4075      	eors	r5, r6
1000f01a:	9e04      	ldr	r6, [sp, #16]
1000f01c:	ea4f 6814 	mov.w	r8, r4, lsr #24
1000f020:	f3c4 4e07 	ubfx	lr, r4, #16, #8
1000f024:	f3c4 2407 	ubfx	r4, r4, #8, #8
1000f028:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000f02c:	f50c 7a40 	add.w	sl, ip, #768	@ 0x300
1000f030:	f504 7400 	add.w	r4, r4, #512	@ 0x200
1000f034:	f3c1 4c07 	ubfx	ip, r1, #16, #8
1000f038:	f3c2 2207 	ubfx	r2, r2, #8, #8
1000f03c:	f3c1 2107 	ubfx	r1, r1, #8, #8
1000f040:	ea86 0909 	eor.w	r9, r6, r9
1000f044:	f502 7200 	add.w	r2, r2, #512	@ 0x200
1000f048:	f853 6028 	ldr.w	r6, [r3, r8, lsl #2]
1000f04c:	f853 802a 	ldr.w	r8, [r3, sl, lsl #2]
1000f050:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
1000f054:	f50e 7e80 	add.w	lr, lr, #256	@ 0x100
1000f058:	f501 7100 	add.w	r1, r1, #512	@ 0x200
1000f05c:	f853 a02e 	ldr.w	sl, [r3, lr, lsl #2]
1000f060:	f50c 7c80 	add.w	ip, ip, #256	@ 0x100
1000f064:	ea85 0e04 	eor.w	lr, r5, r4
1000f068:	f853 4021 	ldr.w	r4, [r3, r1, lsl #2]
1000f06c:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
1000f070:	6d82      	ldr	r2, [r0, #88]	@ 0x58
1000f072:	ea86 0608 	eor.w	r6, r6, r8
1000f076:	f853 802c 	ldr.w	r8, [r3, ip, lsl #2]
1000f07a:	ea89 0c02 	eor.w	ip, r9, r2
1000f07e:	6dc2      	ldr	r2, [r0, #92]	@ 0x5c
1000f080:	4056      	eors	r6, r2
1000f082:	ea86 0608 	eor.w	r6, r6, r8
1000f086:	404e      	eors	r6, r1
    ENC_ROUND_S_T(24); ENC_ROUND_T_S(24);
1000f088:	b2f2      	uxtb	r2, r6
1000f08a:	f502 7240 	add.w	r2, r2, #768	@ 0x300
    ENC_ROUND_S_T(16); ENC_ROUND_T_S(16);
1000f08e:	ea8c 0c0a 	eor.w	ip, ip, sl
    ENC_ROUND_S_T(24); ENC_ROUND_T_S(24);
1000f092:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
1000f096:	b2fa      	uxtb	r2, r7
1000f098:	f502 7240 	add.w	r2, r2, #768	@ 0x300
    ENC_ROUND_S_T(16); ENC_ROUND_T_S(16);
1000f09c:	ea8c 0c04 	eor.w	ip, ip, r4
    ENC_ROUND_S_T(24); ENC_ROUND_T_S(24);
1000f0a0:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
1000f0a4:	fa5f f28e 	uxtb.w	r2, lr
1000f0a8:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000f0ac:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
1000f0b0:	fa5f f28c 	uxtb.w	r2, ip
1000f0b4:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000f0b8:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
1000f0bc:	0e3a      	lsrs	r2, r7, #24
1000f0be:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000f0c2:	ea82 0208 	eor.w	r2, r2, r8
1000f0c6:	ea4f 681e 	mov.w	r8, lr, lsr #24
1000f0ca:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1000f0ce:	ea88 0505 	eor.w	r5, r8, r5
1000f0d2:	ea4f 681c 	mov.w	r8, ip, lsr #24
1000f0d6:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1000f0da:	ea88 0404 	eor.w	r4, r8, r4
1000f0de:	ea4f 6816 	mov.w	r8, r6, lsr #24
1000f0e2:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1000f0e6:	ea88 0101 	eor.w	r1, r8, r1
1000f0ea:	f3ce 4807 	ubfx	r8, lr, #16, #8
1000f0ee:	f3ce 2e07 	ubfx	lr, lr, #8, #8
1000f0f2:	f50e 7e00 	add.w	lr, lr, #512	@ 0x200
1000f0f6:	9102      	str	r1, [sp, #8]
1000f0f8:	f853 102e 	ldr.w	r1, [r3, lr, lsl #2]
1000f0fc:	9103      	str	r1, [sp, #12]
1000f0fe:	f3cc 4e07 	ubfx	lr, ip, #16, #8
1000f102:	f3cc 2c07 	ubfx	ip, ip, #8, #8
1000f106:	f50c 7c00 	add.w	ip, ip, #512	@ 0x200
1000f10a:	6e01      	ldr	r1, [r0, #96]	@ 0x60
1000f10c:	f853 a02c 	ldr.w	sl, [r3, ip, lsl #2]
1000f110:	f3c6 4c07 	ubfx	ip, r6, #16, #8
1000f114:	f3c6 2607 	ubfx	r6, r6, #8, #8
1000f118:	f508 7880 	add.w	r8, r8, #256	@ 0x100
1000f11c:	f506 7600 	add.w	r6, r6, #512	@ 0x200
1000f120:	404a      	eors	r2, r1
1000f122:	6e41      	ldr	r1, [r0, #100]	@ 0x64
1000f124:	f853 b028 	ldr.w	fp, [r3, r8, lsl #2]
1000f128:	f853 8026 	ldr.w	r8, [r3, r6, lsl #2]
1000f12c:	f50e 7e80 	add.w	lr, lr, #256	@ 0x100
1000f130:	f50c 7c80 	add.w	ip, ip, #256	@ 0x100
1000f134:	f3c7 4607 	ubfx	r6, r7, #16, #8
1000f138:	f3c7 2707 	ubfx	r7, r7, #8, #8
1000f13c:	404d      	eors	r5, r1
1000f13e:	f507 7700 	add.w	r7, r7, #512	@ 0x200
1000f142:	6e81      	ldr	r1, [r0, #104]	@ 0x68
1000f144:	f853 902e 	ldr.w	r9, [r3, lr, lsl #2]
1000f148:	f853 e02c 	ldr.w	lr, [r3, ip, lsl #2]
1000f14c:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
1000f150:	404c      	eors	r4, r1
1000f152:	ea84 040e 	eor.w	r4, r4, lr
1000f156:	f506 7680 	add.w	r6, r6, #256	@ 0x100
1000f15a:	407c      	eors	r4, r7
1000f15c:	9902      	ldr	r1, [sp, #8]
1000f15e:	6ec7      	ldr	r7, [r0, #108]	@ 0x6c
1000f160:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000f164:	4079      	eors	r1, r7
1000f166:	9f03      	ldr	r7, [sp, #12]
1000f168:	4071      	eors	r1, r6
1000f16a:	4079      	eors	r1, r7
1000f16c:	ea82 020b 	eor.w	r2, r2, fp
1000f170:	ea85 0509 	eor.w	r5, r5, r9
1000f174:	ea82 020a 	eor.w	r2, r2, sl
1000f178:	ea85 0508 	eor.w	r5, r5, r8
1000f17c:	fa5f f881 	uxtb.w	r8, r1
1000f180:	0e17      	lsrs	r7, r2, #24
1000f182:	f508 7840 	add.w	r8, r8, #768	@ 0x300
1000f186:	fa5f fe82 	uxtb.w	lr, r2
1000f18a:	b2e6      	uxtb	r6, r4
1000f18c:	f853 9027 	ldr.w	r9, [r3, r7, lsl #2]
1000f190:	f853 7028 	ldr.w	r7, [r3, r8, lsl #2]
1000f194:	f50e 7e40 	add.w	lr, lr, #768	@ 0x300
1000f198:	f506 7640 	add.w	r6, r6, #768	@ 0x300
1000f19c:	fa5f fc85 	uxtb.w	ip, r5
1000f1a0:	f853 b026 	ldr.w	fp, [r3, r6, lsl #2]
1000f1a4:	f50c 7c40 	add.w	ip, ip, #768	@ 0x300
1000f1a8:	ea89 0707 	eor.w	r7, r9, r7
1000f1ac:	0e2e      	lsrs	r6, r5, #24
1000f1ae:	f853 902e 	ldr.w	r9, [r3, lr, lsl #2]
1000f1b2:	f853 802c 	ldr.w	r8, [r3, ip, lsl #2]
1000f1b6:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000f1ba:	f3c5 4e07 	ubfx	lr, r5, #16, #8
1000f1be:	f3c5 2507 	ubfx	r5, r5, #8, #8
1000f1c2:	f505 7500 	add.w	r5, r5, #512	@ 0x200
1000f1c6:	ea4f 6c14 	mov.w	ip, r4, lsr #24
1000f1ca:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
1000f1ce:	9502      	str	r5, [sp, #8]
1000f1d0:	f853 c02c 	ldr.w	ip, [r3, ip, lsl #2]
1000f1d4:	f3c4 4507 	ubfx	r5, r4, #16, #8
1000f1d8:	f3c4 2407 	ubfx	r4, r4, #8, #8
1000f1dc:	f504 7400 	add.w	r4, r4, #512	@ 0x200
1000f1e0:	ea8c 0c08 	eor.w	ip, ip, r8
1000f1e4:	ea4f 6811 	mov.w	r8, r1, lsr #24
1000f1e8:	ea86 0609 	eor.w	r6, r6, r9
1000f1ec:	f853 9024 	ldr.w	r9, [r3, r4, lsl #2]
1000f1f0:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1000f1f4:	f3c1 4407 	ubfx	r4, r1, #16, #8
1000f1f8:	f3c1 2107 	ubfx	r1, r1, #8, #8
1000f1fc:	f505 7580 	add.w	r5, r5, #256	@ 0x100
1000f200:	f504 7480 	add.w	r4, r4, #256	@ 0x100
1000f204:	f501 7100 	add.w	r1, r1, #512	@ 0x200
1000f208:	ea88 0b0b 	eor.w	fp, r8, fp
1000f20c:	f853 8025 	ldr.w	r8, [r3, r5, lsl #2]
1000f210:	f853 5024 	ldr.w	r5, [r3, r4, lsl #2]
1000f214:	f853 4021 	ldr.w	r4, [r3, r1, lsl #2]
1000f218:	f3c2 4107 	ubfx	r1, r2, #16, #8
1000f21c:	f3c2 2207 	ubfx	r2, r2, #8, #8
1000f220:	f50e 7e80 	add.w	lr, lr, #256	@ 0x100
1000f224:	f502 7200 	add.w	r2, r2, #512	@ 0x200
1000f228:	f853 a02e 	ldr.w	sl, [r3, lr, lsl #2]
1000f22c:	f853 e022 	ldr.w	lr, [r3, r2, lsl #2]
1000f230:	6f02      	ldr	r2, [r0, #112]	@ 0x70
1000f232:	4057      	eors	r7, r2
1000f234:	6f42      	ldr	r2, [r0, #116]	@ 0x74
1000f236:	4056      	eors	r6, r2
1000f238:	ea86 0608 	eor.w	r6, r6, r8
1000f23c:	4066      	eors	r6, r4
1000f23e:	6f84      	ldr	r4, [r0, #120]	@ 0x78
1000f240:	f501 7180 	add.w	r1, r1, #256	@ 0x100
1000f244:	ea8c 0c04 	eor.w	ip, ip, r4
1000f248:	6fc4      	ldr	r4, [r0, #124]	@ 0x7c
1000f24a:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
1000f24e:	ea8c 0c05 	eor.w	ip, ip, r5
1000f252:	ea8b 0404 	eor.w	r4, fp, r4
1000f256:	9d02      	ldr	r5, [sp, #8]
1000f258:	404c      	eors	r4, r1
1000f25a:	406c      	eors	r4, r5
    ENC_ROUND_S_T(32); ENC_ROUND_T_S(32);
1000f25c:	b2e2      	uxtb	r2, r4
1000f25e:	f502 7240 	add.w	r2, r2, #768	@ 0x300
    ENC_ROUND_S_T(24); ENC_ROUND_T_S(24);
1000f262:	ea8c 0c0e 	eor.w	ip, ip, lr
    ENC_ROUND_S_T(32); ENC_ROUND_T_S(32);
1000f266:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
1000f26a:	f3c6 4207 	ubfx	r2, r6, #16, #8
1000f26e:	f502 7280 	add.w	r2, r2, #256	@ 0x100
    ENC_ROUND_S_T(24); ENC_ROUND_T_S(24);
1000f272:	ea87 070a 	eor.w	r7, r7, sl
    ENC_ROUND_S_T(32); ENC_ROUND_T_S(32);
1000f276:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000f27a:	9202      	str	r2, [sp, #8]
1000f27c:	f3cc 2207 	ubfx	r2, ip, #8, #8
1000f280:	f502 7200 	add.w	r2, r2, #512	@ 0x200
    ENC_ROUND_S_T(24); ENC_ROUND_T_S(24);
1000f284:	ea87 0709 	eor.w	r7, r7, r9
    ENC_ROUND_S_T(32); ENC_ROUND_T_S(32);
1000f288:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
1000f28c:	9103      	str	r1, [sp, #12]
1000f28e:	b2fa      	uxtb	r2, r7
1000f290:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000f294:	fa5f fe8c 	uxtb.w	lr, ip
1000f298:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
1000f29c:	f3cc 4207 	ubfx	r2, ip, #16, #8
1000f2a0:	f502 7280 	add.w	r2, r2, #256	@ 0x100
1000f2a4:	ea4f 6c1c 	mov.w	ip, ip, lsr #24
1000f2a8:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000f2ac:	9204      	str	r2, [sp, #16]
1000f2ae:	f3c4 2207 	ubfx	r2, r4, #8, #8
1000f2b2:	f502 7200 	add.w	r2, r2, #512	@ 0x200
1000f2b6:	f3c7 4907 	ubfx	r9, r7, #16, #8
1000f2ba:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000f2be:	9205      	str	r2, [sp, #20]
1000f2c0:	b2f2      	uxtb	r2, r6
1000f2c2:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000f2c6:	ea4f 6814 	mov.w	r8, r4, lsr #24
1000f2ca:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000f2ce:	f853 c02c 	ldr.w	ip, [r3, ip, lsl #2]
1000f2d2:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1000f2d6:	ea8c 0202 	eor.w	r2, ip, r2
1000f2da:	ea4f 6c17 	mov.w	ip, r7, lsr #24
1000f2de:	f3c7 2707 	ubfx	r7, r7, #8, #8
1000f2e2:	f853 b02c 	ldr.w	fp, [r3, ip, lsl #2]
1000f2e6:	ea8b 0b05 	eor.w	fp, fp, r5
1000f2ea:	0e35      	lsrs	r5, r6, #24
1000f2ec:	f507 7c00 	add.w	ip, r7, #512	@ 0x200
1000f2f0:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
1000f2f4:	ea85 0a01 	eor.w	sl, r5, r1
1000f2f8:	f8d0 5080 	ldr.w	r5, [r0, #128]	@ 0x80
1000f2fc:	ea8b 0b05 	eor.w	fp, fp, r5
1000f300:	9d02      	ldr	r5, [sp, #8]
1000f302:	ea8b 0705 	eor.w	r7, fp, r5
1000f306:	9d03      	ldr	r5, [sp, #12]
1000f308:	406f      	eors	r7, r5
1000f30a:	f8d0 5084 	ldr.w	r5, [r0, #132]	@ 0x84
1000f30e:	ea8a 0a05 	eor.w	sl, sl, r5
1000f312:	9d04      	ldr	r5, [sp, #16]
1000f314:	f3c4 4407 	ubfx	r4, r4, #16, #8
1000f318:	ea8a 0a05 	eor.w	sl, sl, r5
1000f31c:	9d05      	ldr	r5, [sp, #20]
1000f31e:	f3c6 2607 	ubfx	r6, r6, #8, #8
1000f322:	f504 7480 	add.w	r4, r4, #256	@ 0x100
1000f326:	f506 7100 	add.w	r1, r6, #512	@ 0x200
1000f32a:	ea8a 0605 	eor.w	r6, sl, r5
1000f32e:	f8d0 5088 	ldr.w	r5, [r0, #136]	@ 0x88
1000f332:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
1000f336:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
1000f33a:	f50e 7e40 	add.w	lr, lr, #768	@ 0x300
1000f33e:	406a      	eors	r2, r5
1000f340:	f853 502e 	ldr.w	r5, [r3, lr, lsl #2]
1000f344:	ea82 0e04 	eor.w	lr, r2, r4
1000f348:	f853 202c 	ldr.w	r2, [r3, ip, lsl #2]
1000f34c:	f509 7980 	add.w	r9, r9, #256	@ 0x100
1000f350:	ea8e 0e02 	eor.w	lr, lr, r2
1000f354:	f8d0 208c 	ldr.w	r2, [r0, #140]	@ 0x8c
1000f358:	f853 4029 	ldr.w	r4, [r3, r9, lsl #2]
1000f35c:	ea88 0505 	eor.w	r5, r8, r5
1000f360:	ea85 0c02 	eor.w	ip, r5, r2
1000f364:	ea8c 0c04 	eor.w	ip, ip, r4
1000f368:	ea8c 0c01 	eor.w	ip, ip, r1
1000f36c:	fa5f f28c 	uxtb.w	r2, ip
1000f370:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000f374:	ea4f 6817 	mov.w	r8, r7, lsr #24
1000f378:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
1000f37c:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1000f380:	b2fa      	uxtb	r2, r7
1000f382:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000f386:	ea88 0101 	eor.w	r1, r8, r1
1000f38a:	ea4f 6816 	mov.w	r8, r6, lsr #24
1000f38e:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
1000f392:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1000f396:	b2f2      	uxtb	r2, r6
1000f398:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000f39c:	ea88 0505 	eor.w	r5, r8, r5
1000f3a0:	ea4f 681e 	mov.w	r8, lr, lsr #24
1000f3a4:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
1000f3a8:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1000f3ac:	fa5f f28e 	uxtb.w	r2, lr
1000f3b0:	ea88 0404 	eor.w	r4, r8, r4
1000f3b4:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000f3b8:	ea4f 681c 	mov.w	r8, ip, lsr #24
1000f3bc:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000f3c0:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1000f3c4:	ea88 0202 	eor.w	r2, r8, r2
1000f3c8:	f3c6 4807 	ubfx	r8, r6, #16, #8
1000f3cc:	f3c6 2607 	ubfx	r6, r6, #8, #8
1000f3d0:	f506 7600 	add.w	r6, r6, #512	@ 0x200
1000f3d4:	f508 7880 	add.w	r8, r8, #256	@ 0x100
1000f3d8:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000f3dc:	9603      	str	r6, [sp, #12]
1000f3de:	f3ce 4607 	ubfx	r6, lr, #16, #8
1000f3e2:	f506 7680 	add.w	r6, r6, #256	@ 0x100
1000f3e6:	f3ce 2e07 	ubfx	lr, lr, #8, #8
1000f3ea:	f853 9026 	ldr.w	r9, [r3, r6, lsl #2]
1000f3ee:	f853 b028 	ldr.w	fp, [r3, r8, lsl #2]
1000f3f2:	9202      	str	r2, [sp, #8]
1000f3f4:	f3cc 4607 	ubfx	r6, ip, #16, #8
1000f3f8:	f50e 7e00 	add.w	lr, lr, #512	@ 0x200
1000f3fc:	f506 7680 	add.w	r6, r6, #256	@ 0x100
1000f400:	f853 a02e 	ldr.w	sl, [r3, lr, lsl #2]
1000f404:	f853 e026 	ldr.w	lr, [r3, r6, lsl #2]
1000f408:	f8d0 2090 	ldr.w	r2, [r0, #144]	@ 0x90
1000f40c:	4051      	eors	r1, r2
1000f40e:	f8d0 2094 	ldr.w	r2, [r0, #148]	@ 0x94
1000f412:	f3c7 4607 	ubfx	r6, r7, #16, #8
1000f416:	f3c7 2707 	ubfx	r7, r7, #8, #8
1000f41a:	4055      	eors	r5, r2
1000f41c:	f507 7700 	add.w	r7, r7, #512	@ 0x200
1000f420:	f8d0 2098 	ldr.w	r2, [r0, #152]	@ 0x98
1000f424:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
1000f428:	4054      	eors	r4, r2
1000f42a:	f506 7680 	add.w	r6, r6, #256	@ 0x100
1000f42e:	ea84 040e 	eor.w	r4, r4, lr
1000f432:	9a02      	ldr	r2, [sp, #8]
1000f434:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000f438:	407c      	eors	r4, r7
1000f43a:	f8d0 709c 	ldr.w	r7, [r0, #156]	@ 0x9c
1000f43e:	f3cc 2c07 	ubfx	ip, ip, #8, #8
1000f442:	407a      	eors	r2, r7
1000f444:	f50c 7c00 	add.w	ip, ip, #512	@ 0x200
1000f448:	4072      	eors	r2, r6
    if (r > 5) {
1000f44a:	9e00      	ldr	r6, [sp, #0]
    ENC_ROUND_S_T(32); ENC_ROUND_T_S(32);
1000f44c:	f853 802c 	ldr.w	r8, [r3, ip, lsl #2]
1000f450:	9f03      	ldr	r7, [sp, #12]
1000f452:	ea81 010b 	eor.w	r1, r1, fp
1000f456:	ea85 0509 	eor.w	r5, r5, r9
    if (r > 5) {
1000f45a:	2e05      	cmp	r6, #5
    ENC_ROUND_S_T(32); ENC_ROUND_T_S(32);
1000f45c:	ea81 010a 	eor.w	r1, r1, sl
1000f460:	ea85 0508 	eor.w	r5, r5, r8
1000f464:	ea82 0207 	eor.w	r2, r2, r7
    if (r > 5) {
1000f468:	f240 81e9 	bls.w	1000f83e <AesEncrypt_C+0xc92>
        ENC_ROUND_S_T(40); ENC_ROUND_T_S(40);
1000f46c:	b2d6      	uxtb	r6, r2
1000f46e:	f506 7640 	add.w	r6, r6, #768	@ 0x300
1000f472:	f3c5 4e07 	ubfx	lr, r5, #16, #8
1000f476:	f853 7026 	ldr.w	r7, [r3, r6, lsl #2]
1000f47a:	b2ce      	uxtb	r6, r1
1000f47c:	f506 7640 	add.w	r6, r6, #768	@ 0x300
1000f480:	f50e 7e80 	add.w	lr, lr, #256	@ 0x100
1000f484:	f853 c026 	ldr.w	ip, [r3, r6, lsl #2]
1000f488:	b2ee      	uxtb	r6, r5
1000f48a:	f506 7640 	add.w	r6, r6, #768	@ 0x300
1000f48e:	f853 8026 	ldr.w	r8, [r3, r6, lsl #2]
1000f492:	b2e6      	uxtb	r6, r4
1000f494:	f506 7640 	add.w	r6, r6, #768	@ 0x300
1000f498:	f853 b026 	ldr.w	fp, [r3, r6, lsl #2]
1000f49c:	0e0e      	lsrs	r6, r1, #24
1000f49e:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000f4a2:	4077      	eors	r7, r6
1000f4a4:	0e2e      	lsrs	r6, r5, #24
1000f4a6:	f3c5 2507 	ubfx	r5, r5, #8, #8
1000f4aa:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000f4ae:	f505 7500 	add.w	r5, r5, #512	@ 0x200
1000f4b2:	ea86 060c 	eor.w	r6, r6, ip
1000f4b6:	ea4f 6c14 	mov.w	ip, r4, lsr #24
1000f4ba:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
1000f4be:	9502      	str	r5, [sp, #8]
1000f4c0:	f853 c02c 	ldr.w	ip, [r3, ip, lsl #2]
1000f4c4:	f3c4 4507 	ubfx	r5, r4, #16, #8
1000f4c8:	f3c4 2407 	ubfx	r4, r4, #8, #8
1000f4cc:	f504 7400 	add.w	r4, r4, #512	@ 0x200
1000f4d0:	ea8c 0c08 	eor.w	ip, ip, r8
1000f4d4:	ea4f 6812 	mov.w	r8, r2, lsr #24
1000f4d8:	f853 9024 	ldr.w	r9, [r3, r4, lsl #2]
1000f4dc:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1000f4e0:	f3c2 4407 	ubfx	r4, r2, #16, #8
1000f4e4:	f3c2 2207 	ubfx	r2, r2, #8, #8
1000f4e8:	f505 7580 	add.w	r5, r5, #256	@ 0x100
1000f4ec:	f502 7200 	add.w	r2, r2, #512	@ 0x200
1000f4f0:	ea88 0b0b 	eor.w	fp, r8, fp
1000f4f4:	f853 802e 	ldr.w	r8, [r3, lr, lsl #2]
1000f4f8:	f853 e025 	ldr.w	lr, [r3, r5, lsl #2]
1000f4fc:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
1000f500:	f3c1 4207 	ubfx	r2, r1, #16, #8
1000f504:	f3c1 2107 	ubfx	r1, r1, #8, #8
1000f508:	f501 7100 	add.w	r1, r1, #512	@ 0x200
1000f50c:	f502 7280 	add.w	r2, r2, #256	@ 0x100
1000f510:	f853 a021 	ldr.w	sl, [r3, r1, lsl #2]
1000f514:	f8d0 10a0 	ldr.w	r1, [r0, #160]	@ 0xa0
1000f518:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000f51c:	404f      	eors	r7, r1
1000f51e:	f8d0 10a4 	ldr.w	r1, [r0, #164]	@ 0xa4
1000f522:	404e      	eors	r6, r1
1000f524:	ea86 060e 	eor.w	r6, r6, lr
1000f528:	4075      	eors	r5, r6
1000f52a:	f8d0 10ac 	ldr.w	r1, [r0, #172]	@ 0xac
1000f52e:	f8d0 60a8 	ldr.w	r6, [r0, #168]	@ 0xa8
1000f532:	f504 7480 	add.w	r4, r4, #256	@ 0x100
1000f536:	ea8c 0c06 	eor.w	ip, ip, r6
1000f53a:	ea8b 0601 	eor.w	r6, fp, r1
1000f53e:	4056      	eors	r6, r2
1000f540:	9a02      	ldr	r2, [sp, #8]
1000f542:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
1000f546:	4056      	eors	r6, r2
1000f548:	ea8c 0c04 	eor.w	ip, ip, r4
1000f54c:	b2f2      	uxtb	r2, r6
1000f54e:	ea8c 0c0a 	eor.w	ip, ip, sl
1000f552:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000f556:	f3cc 4407 	ubfx	r4, ip, #16, #8
1000f55a:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
1000f55e:	f504 7480 	add.w	r4, r4, #256	@ 0x100
1000f562:	f3c5 4207 	ubfx	r2, r5, #16, #8
1000f566:	f502 7280 	add.w	r2, r2, #256	@ 0x100
1000f56a:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
1000f56e:	f853 b022 	ldr.w	fp, [r3, r2, lsl #2]
1000f572:	9403      	str	r4, [sp, #12]
1000f574:	f3cc 2207 	ubfx	r2, ip, #8, #8
1000f578:	f3c6 2407 	ubfx	r4, r6, #8, #8
1000f57c:	f502 7200 	add.w	r2, r2, #512	@ 0x200
1000f580:	f504 7400 	add.w	r4, r4, #512	@ 0x200
1000f584:	ea87 0708 	eor.w	r7, r7, r8
1000f588:	ea87 0709 	eor.w	r7, r7, r9
1000f58c:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000f590:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
1000f594:	9202      	str	r2, [sp, #8]
1000f596:	9404      	str	r4, [sp, #16]
1000f598:	b2fa      	uxtb	r2, r7
1000f59a:	b2ec      	uxtb	r4, r5
1000f59c:	fa5f fe8c 	uxtb.w	lr, ip
1000f5a0:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000f5a4:	f504 7440 	add.w	r4, r4, #768	@ 0x300
1000f5a8:	ea4f 6c1c 	mov.w	ip, ip, lsr #24
1000f5ac:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000f5b0:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
1000f5b4:	f853 c02c 	ldr.w	ip, [r3, ip, lsl #2]
1000f5b8:	ea8c 0404 	eor.w	r4, ip, r4
1000f5bc:	ea4f 6c17 	mov.w	ip, r7, lsr #24
1000f5c0:	ea4f 6816 	mov.w	r8, r6, lsr #24
1000f5c4:	f853 c02c 	ldr.w	ip, [r3, ip, lsl #2]
1000f5c8:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1000f5cc:	ea8c 0101 	eor.w	r1, ip, r1
1000f5d0:	ea4f 6c15 	mov.w	ip, r5, lsr #24
1000f5d4:	f3c6 4607 	ubfx	r6, r6, #16, #8
1000f5d8:	f853 a02c 	ldr.w	sl, [r3, ip, lsl #2]
1000f5dc:	ea8a 0a02 	eor.w	sl, sl, r2
1000f5e0:	f8d0 20b0 	ldr.w	r2, [r0, #176]	@ 0xb0
1000f5e4:	4051      	eors	r1, r2
1000f5e6:	9a02      	ldr	r2, [sp, #8]
1000f5e8:	ea81 010b 	eor.w	r1, r1, fp
1000f5ec:	4051      	eors	r1, r2
1000f5ee:	f8d0 20b4 	ldr.w	r2, [r0, #180]	@ 0xb4
1000f5f2:	ea8a 0a02 	eor.w	sl, sl, r2
1000f5f6:	9a03      	ldr	r2, [sp, #12]
1000f5f8:	ea8a 0a02 	eor.w	sl, sl, r2
1000f5fc:	9a04      	ldr	r2, [sp, #16]
1000f5fe:	f3c5 2507 	ubfx	r5, r5, #8, #8
1000f602:	f506 7680 	add.w	r6, r6, #256	@ 0x100
1000f606:	f505 7c00 	add.w	ip, r5, #512	@ 0x200
1000f60a:	f3c7 4907 	ubfx	r9, r7, #16, #8
1000f60e:	ea8a 0502 	eor.w	r5, sl, r2
1000f612:	f3c7 2707 	ubfx	r7, r7, #8, #8
1000f616:	f8d0 20b8 	ldr.w	r2, [r0, #184]	@ 0xb8
1000f61a:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000f61e:	f507 7700 	add.w	r7, r7, #512	@ 0x200
1000f622:	f50e 7e40 	add.w	lr, lr, #768	@ 0x300
1000f626:	4054      	eors	r4, r2
1000f628:	4074      	eors	r4, r6
1000f62a:	f853 6027 	ldr.w	r6, [r3, r7, lsl #2]
1000f62e:	f853 202e 	ldr.w	r2, [r3, lr, lsl #2]
1000f632:	f853 702c 	ldr.w	r7, [r3, ip, lsl #2]
1000f636:	f509 7980 	add.w	r9, r9, #256	@ 0x100
1000f63a:	4074      	eors	r4, r6
1000f63c:	f8d0 60bc 	ldr.w	r6, [r0, #188]	@ 0xbc
1000f640:	f853 e029 	ldr.w	lr, [r3, r9, lsl #2]
1000f644:	ea88 0202 	eor.w	r2, r8, r2
1000f648:	4072      	eors	r2, r6
        if (r > 6) {
1000f64a:	9e00      	ldr	r6, [sp, #0]
        ENC_ROUND_S_T(40); ENC_ROUND_T_S(40);
1000f64c:	ea82 020e 	eor.w	r2, r2, lr
        if (r > 6) {
1000f650:	2e06      	cmp	r6, #6
        ENC_ROUND_S_T(40); ENC_ROUND_T_S(40);
1000f652:	ea82 0207 	eor.w	r2, r2, r7
        if (r > 6) {
1000f656:	f000 80f2 	beq.w	1000f83e <AesEncrypt_C+0xc92>
            ENC_ROUND_S_T(48); ENC_ROUND_T_S(48);
1000f65a:	b2d6      	uxtb	r6, r2
1000f65c:	f506 7640 	add.w	r6, r6, #768	@ 0x300
1000f660:	f3c5 4e07 	ubfx	lr, r5, #16, #8
1000f664:	f853 7026 	ldr.w	r7, [r3, r6, lsl #2]
1000f668:	b2ce      	uxtb	r6, r1
1000f66a:	f506 7640 	add.w	r6, r6, #768	@ 0x300
1000f66e:	f50e 7e80 	add.w	lr, lr, #256	@ 0x100
1000f672:	f853 c026 	ldr.w	ip, [r3, r6, lsl #2]
1000f676:	b2ee      	uxtb	r6, r5
1000f678:	f506 7640 	add.w	r6, r6, #768	@ 0x300
1000f67c:	f853 8026 	ldr.w	r8, [r3, r6, lsl #2]
1000f680:	b2e6      	uxtb	r6, r4
1000f682:	f506 7640 	add.w	r6, r6, #768	@ 0x300
1000f686:	f853 b026 	ldr.w	fp, [r3, r6, lsl #2]
1000f68a:	0e0e      	lsrs	r6, r1, #24
1000f68c:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000f690:	4077      	eors	r7, r6
1000f692:	0e2e      	lsrs	r6, r5, #24
1000f694:	f3c5 2507 	ubfx	r5, r5, #8, #8
1000f698:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000f69c:	f505 7500 	add.w	r5, r5, #512	@ 0x200
1000f6a0:	ea86 060c 	eor.w	r6, r6, ip
1000f6a4:	ea4f 6c14 	mov.w	ip, r4, lsr #24
1000f6a8:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
1000f6ac:	9502      	str	r5, [sp, #8]
1000f6ae:	f853 c02c 	ldr.w	ip, [r3, ip, lsl #2]
1000f6b2:	f3c4 4507 	ubfx	r5, r4, #16, #8
1000f6b6:	f3c4 2407 	ubfx	r4, r4, #8, #8
1000f6ba:	f504 7400 	add.w	r4, r4, #512	@ 0x200
1000f6be:	ea8c 0c08 	eor.w	ip, ip, r8
1000f6c2:	ea4f 6812 	mov.w	r8, r2, lsr #24
1000f6c6:	f853 9024 	ldr.w	r9, [r3, r4, lsl #2]
1000f6ca:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1000f6ce:	f3c2 4407 	ubfx	r4, r2, #16, #8
1000f6d2:	f3c2 2207 	ubfx	r2, r2, #8, #8
1000f6d6:	f505 7580 	add.w	r5, r5, #256	@ 0x100
1000f6da:	f502 7200 	add.w	r2, r2, #512	@ 0x200
1000f6de:	ea88 0b0b 	eor.w	fp, r8, fp
1000f6e2:	f853 802e 	ldr.w	r8, [r3, lr, lsl #2]
1000f6e6:	f853 e025 	ldr.w	lr, [r3, r5, lsl #2]
1000f6ea:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
1000f6ee:	f3c1 4207 	ubfx	r2, r1, #16, #8
1000f6f2:	f3c1 2107 	ubfx	r1, r1, #8, #8
1000f6f6:	f501 7100 	add.w	r1, r1, #512	@ 0x200
1000f6fa:	f502 7280 	add.w	r2, r2, #256	@ 0x100
1000f6fe:	f853 a021 	ldr.w	sl, [r3, r1, lsl #2]
1000f702:	f8d0 10c0 	ldr.w	r1, [r0, #192]	@ 0xc0
1000f706:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000f70a:	404f      	eors	r7, r1
1000f70c:	f8d0 10c4 	ldr.w	r1, [r0, #196]	@ 0xc4
1000f710:	404e      	eors	r6, r1
1000f712:	ea86 060e 	eor.w	r6, r6, lr
1000f716:	4075      	eors	r5, r6
1000f718:	f8d0 10cc 	ldr.w	r1, [r0, #204]	@ 0xcc
1000f71c:	f8d0 60c8 	ldr.w	r6, [r0, #200]	@ 0xc8
1000f720:	f504 7480 	add.w	r4, r4, #256	@ 0x100
1000f724:	ea8c 0c06 	eor.w	ip, ip, r6
1000f728:	ea8b 0601 	eor.w	r6, fp, r1
1000f72c:	4056      	eors	r6, r2
1000f72e:	9a02      	ldr	r2, [sp, #8]
1000f730:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
1000f734:	4056      	eors	r6, r2
1000f736:	ea8c 0c04 	eor.w	ip, ip, r4
1000f73a:	b2f2      	uxtb	r2, r6
1000f73c:	ea8c 0c0a 	eor.w	ip, ip, sl
1000f740:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000f744:	f3cc 4407 	ubfx	r4, ip, #16, #8
1000f748:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
1000f74c:	f504 7480 	add.w	r4, r4, #256	@ 0x100
1000f750:	f3c5 4207 	ubfx	r2, r5, #16, #8
1000f754:	f502 7280 	add.w	r2, r2, #256	@ 0x100
1000f758:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
1000f75c:	f853 b022 	ldr.w	fp, [r3, r2, lsl #2]
1000f760:	9403      	str	r4, [sp, #12]
1000f762:	f3cc 2207 	ubfx	r2, ip, #8, #8
1000f766:	f3c6 2407 	ubfx	r4, r6, #8, #8
1000f76a:	f502 7200 	add.w	r2, r2, #512	@ 0x200
1000f76e:	f504 7400 	add.w	r4, r4, #512	@ 0x200
1000f772:	ea87 0708 	eor.w	r7, r7, r8
1000f776:	ea87 0709 	eor.w	r7, r7, r9
1000f77a:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000f77e:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
1000f782:	9202      	str	r2, [sp, #8]
1000f784:	9404      	str	r4, [sp, #16]
1000f786:	b2fa      	uxtb	r2, r7
1000f788:	b2ec      	uxtb	r4, r5
1000f78a:	fa5f fe8c 	uxtb.w	lr, ip
1000f78e:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000f792:	f504 7440 	add.w	r4, r4, #768	@ 0x300
1000f796:	ea4f 6c1c 	mov.w	ip, ip, lsr #24
1000f79a:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000f79e:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
1000f7a2:	f853 c02c 	ldr.w	ip, [r3, ip, lsl #2]
1000f7a6:	ea8c 0404 	eor.w	r4, ip, r4
1000f7aa:	ea4f 6c17 	mov.w	ip, r7, lsr #24
1000f7ae:	ea4f 6816 	mov.w	r8, r6, lsr #24
1000f7b2:	f853 c02c 	ldr.w	ip, [r3, ip, lsl #2]
1000f7b6:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1000f7ba:	ea8c 0101 	eor.w	r1, ip, r1
1000f7be:	ea4f 6c15 	mov.w	ip, r5, lsr #24
1000f7c2:	f3c6 4607 	ubfx	r6, r6, #16, #8
1000f7c6:	f853 a02c 	ldr.w	sl, [r3, ip, lsl #2]
1000f7ca:	ea8a 0a02 	eor.w	sl, sl, r2
1000f7ce:	f8d0 20d0 	ldr.w	r2, [r0, #208]	@ 0xd0
1000f7d2:	4051      	eors	r1, r2
1000f7d4:	9a02      	ldr	r2, [sp, #8]
1000f7d6:	ea81 010b 	eor.w	r1, r1, fp
1000f7da:	4051      	eors	r1, r2
1000f7dc:	f8d0 20d4 	ldr.w	r2, [r0, #212]	@ 0xd4
1000f7e0:	ea8a 0a02 	eor.w	sl, sl, r2
1000f7e4:	9a03      	ldr	r2, [sp, #12]
1000f7e6:	ea8a 0a02 	eor.w	sl, sl, r2
1000f7ea:	9a04      	ldr	r2, [sp, #16]
1000f7ec:	f3c5 2507 	ubfx	r5, r5, #8, #8
1000f7f0:	f506 7680 	add.w	r6, r6, #256	@ 0x100
1000f7f4:	f505 7c00 	add.w	ip, r5, #512	@ 0x200
1000f7f8:	f3c7 4907 	ubfx	r9, r7, #16, #8
1000f7fc:	ea8a 0502 	eor.w	r5, sl, r2
1000f800:	f3c7 2707 	ubfx	r7, r7, #8, #8
1000f804:	f8d0 20d8 	ldr.w	r2, [r0, #216]	@ 0xd8
1000f808:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000f80c:	f507 7700 	add.w	r7, r7, #512	@ 0x200
1000f810:	f50e 7e40 	add.w	lr, lr, #768	@ 0x300
1000f814:	4054      	eors	r4, r2
1000f816:	4074      	eors	r4, r6
1000f818:	f853 6027 	ldr.w	r6, [r3, r7, lsl #2]
1000f81c:	f853 202e 	ldr.w	r2, [r3, lr, lsl #2]
1000f820:	f853 702c 	ldr.w	r7, [r3, ip, lsl #2]
1000f824:	f509 7980 	add.w	r9, r9, #256	@ 0x100
1000f828:	4074      	eors	r4, r6
1000f82a:	f8d0 60dc 	ldr.w	r6, [r0, #220]	@ 0xdc
1000f82e:	f853 e029 	ldr.w	lr, [r3, r9, lsl #2]
1000f832:	ea88 0202 	eor.w	r2, r8, r2
1000f836:	4072      	eors	r2, r6
1000f838:	ea82 020e 	eor.w	r2, r2, lr
1000f83c:	407a      	eors	r2, r7
#ifndef WOLFSSL_AES_TOUCH_LINES
    s0 =
        (GetTable(Te[2], GETBYTE(t0, 3)) & 0xff000000) ^
        (GetTable(Te[3], GETBYTE(t1, 2)) & 0x00ff0000) ^
        (GetTable(Te[0], GETBYTE(t2, 1)) & 0x0000ff00) ^
        (GetTable(Te[1], GETBYTE(t3, 0)) & 0x000000ff) ^
1000f83e:	b2d6      	uxtb	r6, r2
1000f840:	f506 7680 	add.w	r6, r6, #256	@ 0x100
        (GetTable(Te[3], GETBYTE(t2, 2)) & 0x00ff0000) ^
        (GetTable(Te[0], GETBYTE(t3, 1)) & 0x0000ff00) ^
        (GetTable(Te[1], GETBYTE(t0, 0)) & 0x000000ff) ^
        rk[1];
    s2 =
        (GetTable(Te[2], GETBYTE(t2, 3)) & 0xff000000) ^
1000f844:	ea4f 6914 	mov.w	r9, r4, lsr #24
        (GetTable(Te[1], GETBYTE(t3, 0)) & 0x000000ff) ^
1000f848:	f813 c026 	ldrb.w	ip, [r3, r6, lsl #2]
        (GetTable(Te[3], GETBYTE(t1, 2)) & 0x00ff0000) ^
1000f84c:	f3c5 4607 	ubfx	r6, r5, #16, #8
1000f850:	f506 7640 	add.w	r6, r6, #768	@ 0x300
        (GetTable(Te[2], GETBYTE(t2, 3)) & 0xff000000) ^
1000f854:	f509 7900 	add.w	r9, r9, #512	@ 0x200
        (GetTable(Te[3], GETBYTE(t1, 2)) & 0x00ff0000) ^
1000f858:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
        (GetTable(Te[2], GETBYTE(t2, 3)) & 0xff000000) ^
1000f85c:	f853 9029 	ldr.w	r9, [r3, r9, lsl #2]
        (GetTable(Te[3], GETBYTE(t1, 2)) & 0x00ff0000) ^
1000f860:	f406 087f 	and.w	r8, r6, #16711680	@ 0xff0000
        (GetTable(Te[2], GETBYTE(t0, 3)) & 0xff000000) ^
1000f864:	0e0e      	lsrs	r6, r1, #24
1000f866:	f506 7600 	add.w	r6, r6, #512	@ 0x200
        rk[2];
    s3 =
        (GetTable(Te[2], GETBYTE(t3, 3)) & 0xff000000) ^
        (GetTable(Te[3], GETBYTE(t0, 2)) & 0x00ff0000) ^
        (GetTable(Te[0], GETBYTE(t1, 1)) & 0x0000ff00) ^
        (GetTable(Te[1], GETBYTE(t2, 0)) & 0x000000ff) ^
1000f86a:	fa5f fa84 	uxtb.w	sl, r4
        (GetTable(Te[2], GETBYTE(t0, 3)) & 0xff000000) ^
1000f86e:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000f872:	f006 467f 	and.w	r6, r6, #4278190080	@ 0xff000000
1000f876:	ea48 0806 	orr.w	r8, r8, r6
        (GetTable(Te[1], GETBYTE(t0, 0)) & 0x000000ff) ^
1000f87a:	b2ce      	uxtb	r6, r1
1000f87c:	f506 7680 	add.w	r6, r6, #256	@ 0x100
        (GetTable(Te[1], GETBYTE(t2, 0)) & 0x000000ff) ^
1000f880:	f50a 7a80 	add.w	sl, sl, #256	@ 0x100
        (GetTable(Te[1], GETBYTE(t0, 0)) & 0x000000ff) ^
1000f884:	f813 7026 	ldrb.w	r7, [r3, r6, lsl #2]
        (GetTable(Te[3], GETBYTE(t2, 2)) & 0x00ff0000) ^
1000f888:	f3c4 4607 	ubfx	r6, r4, #16, #8
1000f88c:	f506 7640 	add.w	r6, r6, #768	@ 0x300
        (GetTable(Te[0], GETBYTE(t2, 1)) & 0x0000ff00) ^
1000f890:	f3c4 2407 	ubfx	r4, r4, #8, #8
        (GetTable(Te[3], GETBYTE(t2, 2)) & 0x00ff0000) ^
1000f894:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000f898:	f406 0e7f 	and.w	lr, r6, #16711680	@ 0xff0000
        (GetTable(Te[2], GETBYTE(t1, 3)) & 0xff000000) ^
1000f89c:	0e2e      	lsrs	r6, r5, #24
1000f89e:	f506 7600 	add.w	r6, r6, #512	@ 0x200
        (GetTable(Te[2], GETBYTE(t2, 3)) & 0xff000000) ^
1000f8a2:	f009 497f 	and.w	r9, r9, #4278190080	@ 0xff000000
        (GetTable(Te[2], GETBYTE(t1, 3)) & 0xff000000) ^
1000f8a6:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000f8aa:	f006 467f 	and.w	r6, r6, #4278190080	@ 0xff000000
1000f8ae:	ea4e 0e06 	orr.w	lr, lr, r6
        (GetTable(Te[1], GETBYTE(t1, 0)) & 0x000000ff) ^
1000f8b2:	b2ee      	uxtb	r6, r5
        (GetTable(Te[0], GETBYTE(t1, 1)) & 0x0000ff00) ^
1000f8b4:	f3c5 2507 	ubfx	r5, r5, #8, #8
        (GetTable(Te[2], GETBYTE(t3, 3)) & 0xff000000) ^
1000f8b8:	ea4f 6b12 	mov.w	fp, r2, lsr #24
        (GetTable(Te[0], GETBYTE(t1, 1)) & 0x0000ff00) ^
1000f8bc:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
1000f8c0:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
1000f8c4:	9502      	str	r5, [sp, #8]
        (GetTable(Te[3], GETBYTE(t3, 2)) & 0x00ff0000) ^
1000f8c6:	f3c2 4507 	ubfx	r5, r2, #16, #8
1000f8ca:	f505 7540 	add.w	r5, r5, #768	@ 0x300
        (GetTable(Te[0], GETBYTE(t3, 1)) & 0x0000ff00) ^
1000f8ce:	f3c2 2207 	ubfx	r2, r2, #8, #8
        (GetTable(Te[3], GETBYTE(t3, 2)) & 0x00ff0000) ^
1000f8d2:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
        (GetTable(Te[0], GETBYTE(t3, 1)) & 0x0000ff00) ^
1000f8d6:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
        (GetTable(Te[3], GETBYTE(t3, 2)) & 0x00ff0000) ^
1000f8da:	f405 057f 	and.w	r5, r5, #16711680	@ 0xff0000
        (GetTable(Te[2], GETBYTE(t2, 3)) & 0xff000000) ^
1000f8de:	ea45 0509 	orr.w	r5, r5, r9
        (GetTable(Te[0], GETBYTE(t2, 1)) & 0x0000ff00) ^
1000f8e2:	f853 9024 	ldr.w	r9, [r3, r4, lsl #2]
        (GetTable(Te[1], GETBYTE(t2, 0)) & 0x000000ff) ^
1000f8e6:	f813 402a 	ldrb.w	r4, [r3, sl, lsl #2]
        (GetTable(Te[3], GETBYTE(t0, 2)) & 0x00ff0000) ^
1000f8ea:	f3c1 4a07 	ubfx	sl, r1, #16, #8
        (GetTable(Te[2], GETBYTE(t3, 3)) & 0xff000000) ^
1000f8ee:	f50b 7b00 	add.w	fp, fp, #512	@ 0x200
        (GetTable(Te[1], GETBYTE(t1, 0)) & 0x000000ff) ^
1000f8f2:	f506 7680 	add.w	r6, r6, #256	@ 0x100
        (GetTable(Te[0], GETBYTE(t0, 1)) & 0x0000ff00) ^
1000f8f6:	f3c1 2107 	ubfx	r1, r1, #8, #8
        (GetTable(Te[3], GETBYTE(t0, 2)) & 0x00ff0000) ^
1000f8fa:	f50a 7a40 	add.w	sl, sl, #768	@ 0x300
        (GetTable(Te[1], GETBYTE(t1, 0)) & 0x000000ff) ^
1000f8fe:	f813 6026 	ldrb.w	r6, [r3, r6, lsl #2]
        (GetTable(Te[0], GETBYTE(t0, 1)) & 0x0000ff00) ^
1000f902:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
        (GetTable(Te[3], GETBYTE(t0, 2)) & 0x00ff0000) ^
1000f906:	f853 a02a 	ldr.w	sl, [r3, sl, lsl #2]
        (GetTable(Te[2], GETBYTE(t3, 3)) & 0xff000000) ^
1000f90a:	f853 302b 	ldr.w	r3, [r3, fp, lsl #2]
        (GetTable(Te[0], GETBYTE(t3, 1)) & 0x0000ff00) ^
1000f90e:	f402 4b7f 	and.w	fp, r2, #65280	@ 0xff00
    rk += r * 8;
1000f912:	9a00      	ldr	r2, [sp, #0]
        (GetTable(Te[3], GETBYTE(t0, 2)) & 0x00ff0000) ^
1000f914:	f40a 0a7f 	and.w	sl, sl, #16711680	@ 0xff0000
        (GetTable(Te[2], GETBYTE(t3, 3)) & 0xff000000) ^
1000f918:	f003 437f 	and.w	r3, r3, #4278190080	@ 0xff000000
1000f91c:	ea4a 0303 	orr.w	r3, sl, r3
    rk += r * 8;
1000f920:	eb00 1a42 	add.w	sl, r0, r2, lsl #5
1000f924:	0152      	lsls	r2, r2, #5
        (GetTable(Te[0], GETBYTE(t0, 1)) & 0x0000ff00) ^
1000f926:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
        (GetTable(Te[1], GETBYTE(t3, 0)) & 0x000000ff) ^
1000f92a:	5882      	ldr	r2, [r0, r2]
1000f92c:	ea8c 0c02 	eor.w	ip, ip, r2
        (GetTable(Te[1], GETBYTE(t0, 0)) & 0x000000ff) ^
1000f930:	f8da 2004 	ldr.w	r2, [sl, #4]
1000f934:	4057      	eors	r7, r2
        (GetTable(Te[1], GETBYTE(t1, 0)) & 0x000000ff) ^
1000f936:	f8da 2008 	ldr.w	r2, [sl, #8]
1000f93a:	4056      	eors	r6, r2
1000f93c:	404e      	eors	r6, r1
        (GetTable(Te[1], GETBYTE(t2, 0)) & 0x000000ff) ^
1000f93e:	f8da 200c 	ldr.w	r2, [sl, #12]
    s1 = ByteReverseWord32(s1);
    s2 = ByteReverseWord32(s2);
    s3 = ByteReverseWord32(s3);
#endif

    XMEMCPY(outBlock,                  &s0, sizeof(s0));
1000f942:	9901      	ldr	r1, [sp, #4]
        (GetTable(Te[1], GETBYTE(t1, 0)) & 0x000000ff) ^
1000f944:	406e      	eors	r6, r5
        (GetTable(Te[1], GETBYTE(t2, 0)) & 0x000000ff) ^
1000f946:	9d02      	ldr	r5, [sp, #8]
        (GetTable(Te[0], GETBYTE(t2, 1)) & 0x0000ff00) ^
1000f948:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
        (GetTable(Te[1], GETBYTE(t2, 0)) & 0x000000ff) ^
1000f94c:	4054      	eors	r4, r2
        (GetTable(Te[1], GETBYTE(t3, 0)) & 0x000000ff) ^
1000f94e:	ea8c 0c09 	eor.w	ip, ip, r9
        (GetTable(Te[1], GETBYTE(t0, 0)) & 0x000000ff) ^
1000f952:	ea87 070b 	eor.w	r7, r7, fp
        (GetTable(Te[1], GETBYTE(t2, 0)) & 0x000000ff) ^
1000f956:	406c      	eors	r4, r5
        (GetTable(Te[1], GETBYTE(t3, 0)) & 0x000000ff) ^
1000f958:	ea8c 0c08 	eor.w	ip, ip, r8
        (GetTable(Te[1], GETBYTE(t0, 0)) & 0x000000ff) ^
1000f95c:	ea87 070e 	eor.w	r7, r7, lr
        (GetTable(Te[1], GETBYTE(t2, 0)) & 0x000000ff) ^
1000f960:	405c      	eors	r4, r3
1000f962:	fa9c fc8c 	rev.w	ip, ip
    s1 = ByteReverseWord32(s1);
1000f966:	ba3f      	rev	r7, r7
    s2 = ByteReverseWord32(s2);
1000f968:	ba36      	rev	r6, r6
    s3 = ByteReverseWord32(s3);
1000f96a:	ba24      	rev	r4, r4
    XMEMCPY(outBlock,                  &s0, sizeof(s0));
1000f96c:	f8c1 c000 	str.w	ip, [r1]
    XMEMCPY(outBlock +     sizeof(s0), &s1, sizeof(s1));
1000f970:	604f      	str	r7, [r1, #4]
    XMEMCPY(outBlock + 2 * sizeof(s0), &s2, sizeof(s2));
1000f972:	608e      	str	r6, [r1, #8]
    XMEMCPY(outBlock + 3 * sizeof(s0), &s3, sizeof(s3));
1000f974:	60cc      	str	r4, [r1, #12]
}
1000f976:	b007      	add	sp, #28
1000f978:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

1000f97c <AesDecrypt_C>:
 * @param [out] outBlock  Encrypted block.
 * @param [in]  r         Rounds divided by 2.
 */
static void AesDecrypt_C(Aes* aes, const byte* inBlock, byte* outBlock,
    word32 r)
{
1000f97c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1000f980:	b087      	sub	sp, #28
1000f982:	680d      	ldr	r5, [r1, #0]
1000f984:	684c      	ldr	r4, [r1, #4]
1000f986:	f8d1 9008 	ldr.w	r9, [r1, #8]
1000f98a:	68ce      	ldr	r6, [r1, #12]
1000f98c:	e9cd 3200 	strd	r3, r2, [sp]
    s1 = ByteReverseWord32(s1);
    s2 = ByteReverseWord32(s2);
    s3 = ByteReverseWord32(s3);
#endif

    s0 ^= rk[0];
1000f990:	6803      	ldr	r3, [r0, #0]
1000f992:	ba2d      	rev	r5, r5
1000f994:	405d      	eors	r5, r3
    s1 ^= rk[1];
1000f996:	6843      	ldr	r3, [r0, #4]
1000f998:	ba24      	rev	r4, r4
1000f99a:	405c      	eors	r4, r3
    s2 ^= rk[2];
1000f99c:	6883      	ldr	r3, [r0, #8]
1000f99e:	fa99 f989 	rev.w	r9, r9
1000f9a2:	ea89 0903 	eor.w	r9, r9, r3
    s3 ^= rk[3];
1000f9a6:	68c3      	ldr	r3, [r0, #12]
                          &s2, GETBYTE(t3, 0), &s3, GETBYTE(t0, 0));           \
    s0 ^= rk[(o)+0]; s1 ^= rk[(o)+1]; s2 ^= rk[(o)+2]; s3 ^= rk[(o)+3];
#endif

#ifndef WOLFSSL_AES_NO_UNROLL
                       DEC_ROUND_T_S( 0);
1000f9a8:	fa5f fc84 	uxtb.w	ip, r4
1000f9ac:	fa5f f789 	uxtb.w	r7, r9
1000f9b0:	b2ea      	uxtb	r2, r5
1000f9b2:	ba36      	rev	r6, r6
    s3 ^= rk[3];
1000f9b4:	405e      	eors	r6, r3
                       DEC_ROUND_T_S( 0);
1000f9b6:	f50c 7c40 	add.w	ip, ip, #768	@ 0x300
1000f9ba:	4be7      	ldr	r3, [pc, #924]	@ (1000fd58 <AesDecrypt_C+0x3dc>)
1000f9bc:	f507 7740 	add.w	r7, r7, #768	@ 0x300
1000f9c0:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000f9c4:	b2f1      	uxtb	r1, r6
1000f9c6:	f853 802c 	ldr.w	r8, [r3, ip, lsl #2]
1000f9ca:	f853 c027 	ldr.w	ip, [r3, r7, lsl #2]
1000f9ce:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
1000f9d2:	f501 7140 	add.w	r1, r1, #768	@ 0x300
1000f9d6:	0e2a      	lsrs	r2, r5, #24
1000f9d8:	f853 e021 	ldr.w	lr, [r3, r1, lsl #2]
1000f9dc:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
1000f9e0:	0e22      	lsrs	r2, r4, #24
1000f9e2:	ea81 0108 	eor.w	r1, r1, r8
1000f9e6:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000f9ea:	ea82 020c 	eor.w	r2, r2, ip
1000f9ee:	ea4f 6c19 	mov.w	ip, r9, lsr #24
1000f9f2:	f853 c02c 	ldr.w	ip, [r3, ip, lsl #2]
1000f9f6:	ea8c 0c0e 	eor.w	ip, ip, lr
1000f9fa:	ea4f 6e16 	mov.w	lr, r6, lsr #24
1000f9fe:	f853 b02e 	ldr.w	fp, [r3, lr, lsl #2]
1000fa02:	ea8b 0b07 	eor.w	fp, fp, r7
1000fa06:	f3c6 4707 	ubfx	r7, r6, #16, #8
1000fa0a:	f3c6 2607 	ubfx	r6, r6, #8, #8
1000fa0e:	f506 7600 	add.w	r6, r6, #512	@ 0x200
1000fa12:	f507 7780 	add.w	r7, r7, #256	@ 0x100
1000fa16:	f853 e026 	ldr.w	lr, [r3, r6, lsl #2]
1000fa1a:	f853 a027 	ldr.w	sl, [r3, r7, lsl #2]
1000fa1e:	f3c5 4607 	ubfx	r6, r5, #16, #8
1000fa22:	f3c5 2507 	ubfx	r5, r5, #8, #8
1000fa26:	f506 7680 	add.w	r6, r6, #256	@ 0x100
1000fa2a:	f505 7500 	add.w	r5, r5, #512	@ 0x200
1000fa2e:	f853 8026 	ldr.w	r8, [r3, r6, lsl #2]
1000fa32:	f853 6025 	ldr.w	r6, [r3, r5, lsl #2]
1000fa36:	f3c4 4507 	ubfx	r5, r4, #16, #8
1000fa3a:	f3c4 2407 	ubfx	r4, r4, #8, #8
1000fa3e:	f504 7400 	add.w	r4, r4, #512	@ 0x200
1000fa42:	f505 7580 	add.w	r5, r5, #256	@ 0x100
1000fa46:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
1000fa4a:	9402      	str	r4, [sp, #8]
1000fa4c:	6904      	ldr	r4, [r0, #16]
1000fa4e:	f853 7025 	ldr.w	r7, [r3, r5, lsl #2]
1000fa52:	4061      	eors	r1, r4
1000fa54:	6944      	ldr	r4, [r0, #20]
1000fa56:	4062      	eors	r2, r4
1000fa58:	6984      	ldr	r4, [r0, #24]
1000fa5a:	f3c9 4507 	ubfx	r5, r9, #16, #8
1000fa5e:	ea8c 0c04 	eor.w	ip, ip, r4
1000fa62:	ea8c 0c07 	eor.w	ip, ip, r7
1000fa66:	f505 7580 	add.w	r5, r5, #256	@ 0x100
1000fa6a:	ea8c 0c06 	eor.w	ip, ip, r6
1000fa6e:	f3c9 2907 	ubfx	r9, r9, #8, #8
1000fa72:	69c6      	ldr	r6, [r0, #28]
1000fa74:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
1000fa78:	ea82 0208 	eor.w	r2, r2, r8
1000fa7c:	f509 7900 	add.w	r9, r9, #512	@ 0x200
1000fa80:	ea82 020e 	eor.w	r2, r2, lr
1000fa84:	ea8b 0b06 	eor.w	fp, fp, r6
1000fa88:	f853 9029 	ldr.w	r9, [r3, r9, lsl #2]
1000fa8c:	9c02      	ldr	r4, [sp, #8]
1000fa8e:	ea8b 0b05 	eor.w	fp, fp, r5
    DEC_ROUND_S_T( 8); DEC_ROUND_T_S( 8);
1000fa92:	b2d5      	uxtb	r5, r2
1000fa94:	f505 7540 	add.w	r5, r5, #768	@ 0x300
                       DEC_ROUND_T_S( 0);
1000fa98:	ea8b 0404 	eor.w	r4, fp, r4
    DEC_ROUND_S_T( 8); DEC_ROUND_T_S( 8);
1000fa9c:	f853 6025 	ldr.w	r6, [r3, r5, lsl #2]
1000faa0:	f3c4 4507 	ubfx	r5, r4, #16, #8
1000faa4:	f505 7580 	add.w	r5, r5, #256	@ 0x100
                       DEC_ROUND_T_S( 0);
1000faa8:	ea81 010a 	eor.w	r1, r1, sl
    DEC_ROUND_S_T( 8); DEC_ROUND_T_S( 8);
1000faac:	f853 7025 	ldr.w	r7, [r3, r5, lsl #2]
1000fab0:	9702      	str	r7, [sp, #8]
1000fab2:	fa5f f58c 	uxtb.w	r5, ip
1000fab6:	f505 7b40 	add.w	fp, r5, #768	@ 0x300
1000faba:	b2e5      	uxtb	r5, r4
                       DEC_ROUND_T_S( 0);
1000fabc:	ea81 0109 	eor.w	r1, r1, r9
    DEC_ROUND_S_T( 8); DEC_ROUND_T_S( 8);
1000fac0:	f505 7540 	add.w	r5, r5, #768	@ 0x300
1000fac4:	9503      	str	r5, [sp, #12]
1000fac6:	b2cd      	uxtb	r5, r1
1000fac8:	f505 7940 	add.w	r9, r5, #768	@ 0x300
1000facc:	0e0d      	lsrs	r5, r1, #24
1000face:	ea4f 6812 	mov.w	r8, r2, lsr #24
1000fad2:	f3c2 4a07 	ubfx	sl, r2, #16, #8
1000fad6:	f3c2 2207 	ubfx	r2, r2, #8, #8
1000fada:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
1000fade:	f502 7200 	add.w	r2, r2, #512	@ 0x200
1000fae2:	9205      	str	r2, [sp, #20]
1000fae4:	f3cc 2707 	ubfx	r7, ip, #8, #8
1000fae8:	6a02      	ldr	r2, [r0, #32]
1000faea:	4075      	eors	r5, r6
1000faec:	f507 7700 	add.w	r7, r7, #512	@ 0x200
1000faf0:	4055      	eors	r5, r2
1000faf2:	9a02      	ldr	r2, [sp, #8]
1000faf4:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
1000faf8:	4055      	eors	r5, r2
1000fafa:	406f      	eors	r7, r5
1000fafc:	9a03      	ldr	r2, [sp, #12]
1000fafe:	f853 5028 	ldr.w	r5, [r3, r8, lsl #2]
1000fb02:	f853 802b 	ldr.w	r8, [r3, fp, lsl #2]
1000fb06:	ea4f 6e1c 	mov.w	lr, ip, lsr #24
1000fb0a:	f3cc 4c07 	ubfx	ip, ip, #16, #8
1000fb0e:	f50c 7680 	add.w	r6, ip, #256	@ 0x100
1000fb12:	f853 e02e 	ldr.w	lr, [r3, lr, lsl #2]
1000fb16:	9604      	str	r6, [sp, #16]
1000fb18:	ea4f 6c14 	mov.w	ip, r4, lsr #24
1000fb1c:	ea85 0508 	eor.w	r5, r5, r8
1000fb20:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
1000fb24:	9a05      	ldr	r2, [sp, #20]
1000fb26:	f853 c02c 	ldr.w	ip, [r3, ip, lsl #2]
1000fb2a:	f3c1 4607 	ubfx	r6, r1, #16, #8
1000fb2e:	f50a 7a80 	add.w	sl, sl, #256	@ 0x100
1000fb32:	f506 7680 	add.w	r6, r6, #256	@ 0x100
1000fb36:	ea8e 0e08 	eor.w	lr, lr, r8
1000fb3a:	f3c4 2407 	ubfx	r4, r4, #8, #8
1000fb3e:	f853 8029 	ldr.w	r8, [r3, r9, lsl #2]
1000fb42:	f853 902a 	ldr.w	r9, [r3, sl, lsl #2]
1000fb46:	f853 a022 	ldr.w	sl, [r3, r2, lsl #2]
1000fb4a:	6a42      	ldr	r2, [r0, #36]	@ 0x24
1000fb4c:	f504 7400 	add.w	r4, r4, #512	@ 0x200
1000fb50:	ea8c 0c08 	eor.w	ip, ip, r8
1000fb54:	f853 8026 	ldr.w	r8, [r3, r6, lsl #2]
1000fb58:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
1000fb5c:	9e04      	ldr	r6, [sp, #16]
1000fb5e:	4055      	eors	r5, r2
1000fb60:	ea85 0508 	eor.w	r5, r5, r8
1000fb64:	f3c1 2107 	ubfx	r1, r1, #8, #8
1000fb68:	4065      	eors	r5, r4
1000fb6a:	f501 7100 	add.w	r1, r1, #512	@ 0x200
1000fb6e:	6a84      	ldr	r4, [r0, #40]	@ 0x28
1000fb70:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
1000fb74:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000fb78:	ea8e 0e04 	eor.w	lr, lr, r4
1000fb7c:	ea8e 0e09 	eor.w	lr, lr, r9
1000fb80:	ea8e 0e01 	eor.w	lr, lr, r1
1000fb84:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
1000fb86:	b2ea      	uxtb	r2, r5
1000fb88:	ea8c 0c01 	eor.w	ip, ip, r1
1000fb8c:	ea8c 0c06 	eor.w	ip, ip, r6
1000fb90:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000fb94:	ea8c 0c0a 	eor.w	ip, ip, sl
1000fb98:	f853 a022 	ldr.w	sl, [r3, r2, lsl #2]
1000fb9c:	f3cc 4207 	ubfx	r2, ip, #16, #8
1000fba0:	f502 7280 	add.w	r2, r2, #256	@ 0x100
1000fba4:	f3c7 4107 	ubfx	r1, r7, #16, #8
1000fba8:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000fbac:	9202      	str	r2, [sp, #8]
1000fbae:	f3ce 2207 	ubfx	r2, lr, #8, #8
1000fbb2:	f502 7200 	add.w	r2, r2, #512	@ 0x200
1000fbb6:	f501 7180 	add.w	r1, r1, #256	@ 0x100
1000fbba:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
1000fbbe:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
1000fbc2:	9103      	str	r1, [sp, #12]
1000fbc4:	f3cc 2107 	ubfx	r1, ip, #8, #8
1000fbc8:	f501 7100 	add.w	r1, r1, #512	@ 0x200
1000fbcc:	fa5f f28e 	uxtb.w	r2, lr
1000fbd0:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
1000fbd4:	9104      	str	r1, [sp, #16]
1000fbd6:	fa5f f18c 	uxtb.w	r1, ip
1000fbda:	f501 7140 	add.w	r1, r1, #768	@ 0x300
1000fbde:	ea4f 6c1c 	mov.w	ip, ip, lsr #24
1000fbe2:	f853 4021 	ldr.w	r4, [r3, r1, lsl #2]
1000fbe6:	f853 b02c 	ldr.w	fp, [r3, ip, lsl #2]
1000fbea:	f3c5 4107 	ubfx	r1, r5, #16, #8
1000fbee:	f501 7180 	add.w	r1, r1, #256	@ 0x100
1000fbf2:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000fbf6:	f853 8021 	ldr.w	r8, [r3, r1, lsl #2]
1000fbfa:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000fbfe:	f3c7 2107 	ubfx	r1, r7, #8, #8
1000fc02:	f501 7100 	add.w	r1, r1, #512	@ 0x200
1000fc06:	f853 c021 	ldr.w	ip, [r3, r1, lsl #2]
1000fc0a:	b2f9      	uxtb	r1, r7
1000fc0c:	0e3f      	lsrs	r7, r7, #24
1000fc0e:	f501 7140 	add.w	r1, r1, #768	@ 0x300
1000fc12:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
1000fc16:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
1000fc1a:	ea87 0a0a 	eor.w	sl, r7, sl
1000fc1e:	0e2f      	lsrs	r7, r5, #24
1000fc20:	f3c5 2507 	ubfx	r5, r5, #8, #8
1000fc24:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
1000fc28:	ea87 0902 	eor.w	r9, r7, r2
1000fc2c:	f505 7200 	add.w	r2, r5, #512	@ 0x200
1000fc30:	ea4f 651e 	mov.w	r5, lr, lsr #24
1000fc34:	ea8b 0b01 	eor.w	fp, fp, r1
1000fc38:	f853 7025 	ldr.w	r7, [r3, r5, lsl #2]
1000fc3c:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
1000fc40:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
1000fc42:	4067      	eors	r7, r4
1000fc44:	6b04      	ldr	r4, [r0, #48]	@ 0x30
1000fc46:	ea8a 0a04 	eor.w	sl, sl, r4
1000fc4a:	9c02      	ldr	r4, [sp, #8]
1000fc4c:	ea8a 0a04 	eor.w	sl, sl, r4
1000fc50:	6b44      	ldr	r4, [r0, #52]	@ 0x34
1000fc52:	ea89 0904 	eor.w	r9, r9, r4
1000fc56:	9c03      	ldr	r4, [sp, #12]
1000fc58:	ea89 0904 	eor.w	r9, r9, r4
1000fc5c:	9c04      	ldr	r4, [sp, #16]
1000fc5e:	f3ce 4e07 	ubfx	lr, lr, #16, #8
1000fc62:	ea89 0504 	eor.w	r5, r9, r4
1000fc66:	6b84      	ldr	r4, [r0, #56]	@ 0x38
1000fc68:	f50e 7e80 	add.w	lr, lr, #256	@ 0x100
1000fc6c:	4067      	eors	r7, r4
1000fc6e:	ea8b 0b02 	eor.w	fp, fp, r2
    DEC_ROUND_S_T(16); DEC_ROUND_T_S(16);
1000fc72:	b2ea      	uxtb	r2, r5
    DEC_ROUND_S_T( 8); DEC_ROUND_T_S( 8);
1000fc74:	f853 402e 	ldr.w	r4, [r3, lr, lsl #2]
1000fc78:	ea87 0708 	eor.w	r7, r7, r8
    DEC_ROUND_S_T(16); DEC_ROUND_T_S(16);
1000fc7c:	f502 7240 	add.w	r2, r2, #768	@ 0x300
    DEC_ROUND_S_T( 8); DEC_ROUND_T_S( 8);
1000fc80:	ea87 070c 	eor.w	r7, r7, ip
1000fc84:	ea8b 0b04 	eor.w	fp, fp, r4
    DEC_ROUND_S_T(16); DEC_ROUND_T_S(16);
1000fc88:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
1000fc8c:	b2fa      	uxtb	r2, r7
1000fc8e:	f502 7240 	add.w	r2, r2, #768	@ 0x300
    DEC_ROUND_S_T( 8); DEC_ROUND_T_S( 8);
1000fc92:	ea8b 0b01 	eor.w	fp, fp, r1
    DEC_ROUND_S_T(16); DEC_ROUND_T_S(16);
1000fc96:	f853 e022 	ldr.w	lr, [r3, r2, lsl #2]
1000fc9a:	fa5f f28b 	uxtb.w	r2, fp
1000fc9e:	f502 7240 	add.w	r2, r2, #768	@ 0x300
    DEC_ROUND_S_T( 8); DEC_ROUND_T_S( 8);
1000fca2:	ea8a 0606 	eor.w	r6, sl, r6
    DEC_ROUND_S_T(16); DEC_ROUND_T_S(16);
1000fca6:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
1000fcaa:	b2f2      	uxtb	r2, r6
1000fcac:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000fcb0:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
1000fcb4:	0e32      	lsrs	r2, r6, #24
1000fcb6:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000fcba:	4054      	eors	r4, r2
1000fcbc:	0e2a      	lsrs	r2, r5, #24
1000fcbe:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000fcc2:	ea82 020e 	eor.w	r2, r2, lr
1000fcc6:	ea4f 6e17 	mov.w	lr, r7, lsr #24
1000fcca:	9202      	str	r2, [sp, #8]
1000fccc:	f853 e02e 	ldr.w	lr, [r3, lr, lsl #2]
1000fcd0:	ea8e 0101 	eor.w	r1, lr, r1
1000fcd4:	ea4f 6e1b 	mov.w	lr, fp, lsr #24
1000fcd8:	f853 e02e 	ldr.w	lr, [r3, lr, lsl #2]
1000fcdc:	ea8e 0808 	eor.w	r8, lr, r8
1000fce0:	f3cb 4e07 	ubfx	lr, fp, #16, #8
1000fce4:	f3cb 2b07 	ubfx	fp, fp, #8, #8
1000fce8:	f50b 7c00 	add.w	ip, fp, #512	@ 0x200
1000fcec:	f50e 7e80 	add.w	lr, lr, #256	@ 0x100
1000fcf0:	f853 b02e 	ldr.w	fp, [r3, lr, lsl #2]
1000fcf4:	f853 202c 	ldr.w	r2, [r3, ip, lsl #2]
1000fcf8:	9203      	str	r2, [sp, #12]
1000fcfa:	f3c6 4c07 	ubfx	ip, r6, #16, #8
1000fcfe:	f3c6 2607 	ubfx	r6, r6, #8, #8
1000fd02:	f50c 7c80 	add.w	ip, ip, #256	@ 0x100
1000fd06:	f506 7600 	add.w	r6, r6, #512	@ 0x200
1000fd0a:	f853 902c 	ldr.w	r9, [r3, ip, lsl #2]
1000fd0e:	f853 c026 	ldr.w	ip, [r3, r6, lsl #2]
1000fd12:	6c02      	ldr	r2, [r0, #64]	@ 0x40
1000fd14:	f3c5 4607 	ubfx	r6, r5, #16, #8
1000fd18:	f506 7680 	add.w	r6, r6, #256	@ 0x100
1000fd1c:	4054      	eors	r4, r2
1000fd1e:	f853 e026 	ldr.w	lr, [r3, r6, lsl #2]
1000fd22:	9a02      	ldr	r2, [sp, #8]
1000fd24:	f3c7 4607 	ubfx	r6, r7, #16, #8
1000fd28:	f3c7 2707 	ubfx	r7, r7, #8, #8
1000fd2c:	f507 7700 	add.w	r7, r7, #512	@ 0x200
1000fd30:	ea84 040b 	eor.w	r4, r4, fp
1000fd34:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
1000fd38:	ea84 0a07 	eor.w	sl, r4, r7
1000fd3c:	6c47      	ldr	r7, [r0, #68]	@ 0x44
1000fd3e:	9c03      	ldr	r4, [sp, #12]
1000fd40:	407a      	eors	r2, r7
1000fd42:	6c87      	ldr	r7, [r0, #72]	@ 0x48
1000fd44:	ea82 0209 	eor.w	r2, r2, r9
1000fd48:	f3c5 2507 	ubfx	r5, r5, #8, #8
1000fd4c:	f506 7680 	add.w	r6, r6, #256	@ 0x100
1000fd50:	4062      	eors	r2, r4
1000fd52:	f505 7500 	add.w	r5, r5, #512	@ 0x200
1000fd56:	e001      	b.n	1000fd5c <AesDecrypt_C+0x3e0>
1000fd58:	1001b774 	.word	0x1001b774
1000fd5c:	ea81 0407 	eor.w	r4, r1, r7
1000fd60:	6cc7      	ldr	r7, [r0, #76]	@ 0x4c
1000fd62:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000fd66:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
1000fd6a:	ea88 0107 	eor.w	r1, r8, r7
1000fd6e:	4071      	eors	r1, r6
1000fd70:	4069      	eors	r1, r5
1000fd72:	b2d5      	uxtb	r5, r2
1000fd74:	ea84 040e 	eor.w	r4, r4, lr
1000fd78:	f505 7540 	add.w	r5, r5, #768	@ 0x300
1000fd7c:	ea84 040c 	eor.w	r4, r4, ip
1000fd80:	f3ca 4c07 	ubfx	ip, sl, #16, #8
1000fd84:	f853 e025 	ldr.w	lr, [r3, r5, lsl #2]
1000fd88:	f50c 7580 	add.w	r5, ip, #256	@ 0x100
1000fd8c:	fa5f fc81 	uxtb.w	ip, r1
1000fd90:	b2e7      	uxtb	r7, r4
1000fd92:	f50c 7c40 	add.w	ip, ip, #768	@ 0x300
1000fd96:	9503      	str	r5, [sp, #12]
1000fd98:	f8cd c010 	str.w	ip, [sp, #16]
1000fd9c:	0e15      	lsrs	r5, r2, #24
1000fd9e:	fa5f fc8a 	uxtb.w	ip, sl
1000fda2:	f507 7740 	add.w	r7, r7, #768	@ 0x300
1000fda6:	f50c 7940 	add.w	r9, ip, #768	@ 0x300
1000fdaa:	f3c1 4607 	ubfx	r6, r1, #16, #8
1000fdae:	ea4f 6c1a 	mov.w	ip, sl, lsr #24
1000fdb2:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
1000fdb6:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
1000fdba:	f853 b02c 	ldr.w	fp, [r3, ip, lsl #2]
1000fdbe:	f506 7680 	add.w	r6, r6, #256	@ 0x100
1000fdc2:	407d      	eors	r5, r7
1000fdc4:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000fdc8:	6d07      	ldr	r7, [r0, #80]	@ 0x50
1000fdca:	9602      	str	r6, [sp, #8]
1000fdcc:	ea8b 0b0e 	eor.w	fp, fp, lr
1000fdd0:	ea8b 0b07 	eor.w	fp, fp, r7
1000fdd4:	9f02      	ldr	r7, [sp, #8]
1000fdd6:	ea8b 0b07 	eor.w	fp, fp, r7
1000fdda:	6d47      	ldr	r7, [r0, #84]	@ 0x54
1000fddc:	f3c2 4c07 	ubfx	ip, r2, #16, #8
1000fde0:	407d      	eors	r5, r7
1000fde2:	f3c2 2207 	ubfx	r2, r2, #8, #8
1000fde6:	9f03      	ldr	r7, [sp, #12]
1000fde8:	f3c4 2607 	ubfx	r6, r4, #8, #8
1000fdec:	ea4f 6e11 	mov.w	lr, r1, lsr #24
1000fdf0:	f502 7200 	add.w	r2, r2, #512	@ 0x200
1000fdf4:	f3c1 2107 	ubfx	r1, r1, #8, #8
1000fdf8:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
1000fdfc:	9205      	str	r2, [sp, #20]
1000fdfe:	ea4f 6814 	mov.w	r8, r4, lsr #24
1000fe02:	9a04      	ldr	r2, [sp, #16]
1000fe04:	f506 7600 	add.w	r6, r6, #512	@ 0x200
1000fe08:	f501 7100 	add.w	r1, r1, #512	@ 0x200
1000fe0c:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000fe10:	407d      	eors	r5, r7
1000fe12:	f853 7028 	ldr.w	r7, [r3, r8, lsl #2]
1000fe16:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
1000fe1a:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
1000fe1e:	9a05      	ldr	r2, [sp, #20]
1000fe20:	f853 e02e 	ldr.w	lr, [r3, lr, lsl #2]
1000fe24:	404d      	eors	r5, r1
1000fe26:	f50c 7c80 	add.w	ip, ip, #256	@ 0x100
1000fe2a:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
1000fe2e:	6d82      	ldr	r2, [r0, #88]	@ 0x58
1000fe30:	f853 c02c 	ldr.w	ip, [r3, ip, lsl #2]
1000fe34:	ea87 0708 	eor.w	r7, r7, r8
1000fe38:	f3ca 2a07 	ubfx	sl, sl, #8, #8
1000fe3c:	f853 8029 	ldr.w	r8, [r3, r9, lsl #2]
1000fe40:	f50a 7a00 	add.w	sl, sl, #512	@ 0x200
1000fe44:	4057      	eors	r7, r2
1000fe46:	f3c4 4407 	ubfx	r4, r4, #16, #8
1000fe4a:	6dc2      	ldr	r2, [r0, #92]	@ 0x5c
1000fe4c:	ea8e 0e08 	eor.w	lr, lr, r8
1000fe50:	f504 7480 	add.w	r4, r4, #256	@ 0x100
1000fe54:	f853 802a 	ldr.w	r8, [r3, sl, lsl #2]
1000fe58:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
1000fe5c:	ea87 070c 	eor.w	r7, r7, ip
1000fe60:	ea8e 0c02 	eor.w	ip, lr, r2
    DEC_ROUND_S_T(24); DEC_ROUND_T_S(24);
1000fe64:	b2ea      	uxtb	r2, r5
1000fe66:	f502 7240 	add.w	r2, r2, #768	@ 0x300
    DEC_ROUND_S_T(16); DEC_ROUND_T_S(16);
1000fe6a:	ea87 0708 	eor.w	r7, r7, r8
1000fe6e:	ea8c 0c04 	eor.w	ip, ip, r4
    DEC_ROUND_S_T(24); DEC_ROUND_T_S(24);
1000fe72:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
1000fe76:	b2fa      	uxtb	r2, r7
1000fe78:	f502 7240 	add.w	r2, r2, #768	@ 0x300
    DEC_ROUND_S_T(16); DEC_ROUND_T_S(16);
1000fe7c:	ea8c 0c01 	eor.w	ip, ip, r1
    DEC_ROUND_S_T(24); DEC_ROUND_T_S(24);
1000fe80:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
1000fe84:	fa5f f28c 	uxtb.w	r2, ip
1000fe88:	f502 7240 	add.w	r2, r2, #768	@ 0x300
    DEC_ROUND_S_T(16); DEC_ROUND_T_S(16);
1000fe8c:	ea8b 0606 	eor.w	r6, fp, r6
    DEC_ROUND_S_T(24); DEC_ROUND_T_S(24);
1000fe90:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
1000fe94:	b2f2      	uxtb	r2, r6
1000fe96:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000fe9a:	f853 e022 	ldr.w	lr, [r3, r2, lsl #2]
1000fe9e:	0e32      	lsrs	r2, r6, #24
1000fea0:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000fea4:	4054      	eors	r4, r2
1000fea6:	0e2a      	lsrs	r2, r5, #24
1000fea8:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000feac:	4051      	eors	r1, r2
1000feae:	0e3a      	lsrs	r2, r7, #24
1000feb0:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000feb4:	ea82 0208 	eor.w	r2, r2, r8
1000feb8:	ea4f 681c 	mov.w	r8, ip, lsr #24
1000febc:	9202      	str	r2, [sp, #8]
1000febe:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1000fec2:	6e02      	ldr	r2, [r0, #96]	@ 0x60
1000fec4:	ea88 0e0e 	eor.w	lr, r8, lr
1000fec8:	f3cc 4807 	ubfx	r8, ip, #16, #8
1000fecc:	f3cc 2c07 	ubfx	ip, ip, #8, #8
1000fed0:	f508 7880 	add.w	r8, r8, #256	@ 0x100
1000fed4:	f50c 7c00 	add.w	ip, ip, #512	@ 0x200
1000fed8:	f853 b028 	ldr.w	fp, [r3, r8, lsl #2]
1000fedc:	f853 802c 	ldr.w	r8, [r3, ip, lsl #2]
1000fee0:	f3c6 4c07 	ubfx	ip, r6, #16, #8
1000fee4:	f3c6 2607 	ubfx	r6, r6, #8, #8
1000fee8:	f50c 7c80 	add.w	ip, ip, #256	@ 0x100
1000feec:	f506 7600 	add.w	r6, r6, #512	@ 0x200
1000fef0:	f853 902c 	ldr.w	r9, [r3, ip, lsl #2]
1000fef4:	f853 c026 	ldr.w	ip, [r3, r6, lsl #2]
1000fef8:	f3c5 4607 	ubfx	r6, r5, #16, #8
1000fefc:	f506 7680 	add.w	r6, r6, #256	@ 0x100
1000ff00:	4054      	eors	r4, r2
1000ff02:	f853 a026 	ldr.w	sl, [r3, r6, lsl #2]
1000ff06:	9a02      	ldr	r2, [sp, #8]
1000ff08:	f3c7 4607 	ubfx	r6, r7, #16, #8
1000ff0c:	f3c7 2707 	ubfx	r7, r7, #8, #8
1000ff10:	f507 7700 	add.w	r7, r7, #512	@ 0x200
1000ff14:	ea84 040b 	eor.w	r4, r4, fp
1000ff18:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
1000ff1c:	407c      	eors	r4, r7
1000ff1e:	6e47      	ldr	r7, [r0, #100]	@ 0x64
1000ff20:	f3c5 2507 	ubfx	r5, r5, #8, #8
1000ff24:	4079      	eors	r1, r7
1000ff26:	f505 7500 	add.w	r5, r5, #512	@ 0x200
1000ff2a:	6e87      	ldr	r7, [r0, #104]	@ 0x68
1000ff2c:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
1000ff30:	f506 7680 	add.w	r6, r6, #256	@ 0x100
1000ff34:	407a      	eors	r2, r7
1000ff36:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000ff3a:	6ec7      	ldr	r7, [r0, #108]	@ 0x6c
1000ff3c:	ea82 020a 	eor.w	r2, r2, sl
1000ff40:	ea82 020c 	eor.w	r2, r2, ip
1000ff44:	ea81 0109 	eor.w	r1, r1, r9
1000ff48:	ea8e 0c07 	eor.w	ip, lr, r7
1000ff4c:	ea81 0108 	eor.w	r1, r1, r8
1000ff50:	ea8c 0c06 	eor.w	ip, ip, r6
1000ff54:	ea8c 0c05 	eor.w	ip, ip, r5
1000ff58:	fa5f f881 	uxtb.w	r8, r1
1000ff5c:	fa5f fe82 	uxtb.w	lr, r2
1000ff60:	b2e5      	uxtb	r5, r4
1000ff62:	0e26      	lsrs	r6, r4, #24
1000ff64:	f508 7840 	add.w	r8, r8, #768	@ 0x300
1000ff68:	f50e 7e40 	add.w	lr, lr, #768	@ 0x300
1000ff6c:	f505 7540 	add.w	r5, r5, #768	@ 0x300
1000ff70:	f853 9026 	ldr.w	r9, [r3, r6, lsl #2]
1000ff74:	f853 6028 	ldr.w	r6, [r3, r8, lsl #2]
1000ff78:	f853 802e 	ldr.w	r8, [r3, lr, lsl #2]
1000ff7c:	f853 e025 	ldr.w	lr, [r3, r5, lsl #2]
1000ff80:	0e0d      	lsrs	r5, r1, #24
1000ff82:	fa5f f78c 	uxtb.w	r7, ip
1000ff86:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
1000ff8a:	f507 7740 	add.w	r7, r7, #768	@ 0x300
1000ff8e:	ea85 0508 	eor.w	r5, r5, r8
1000ff92:	ea4f 6812 	mov.w	r8, r2, lsr #24
1000ff96:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
1000ff9a:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1000ff9e:	ea88 0707 	eor.w	r7, r8, r7
1000ffa2:	ea4f 681c 	mov.w	r8, ip, lsr #24
1000ffa6:	f3c2 4a07 	ubfx	sl, r2, #16, #8
1000ffaa:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1000ffae:	f3c2 2207 	ubfx	r2, r2, #8, #8
1000ffb2:	f502 7200 	add.w	r2, r2, #512	@ 0x200
1000ffb6:	ea88 080e 	eor.w	r8, r8, lr
1000ffba:	f3cc 4e07 	ubfx	lr, ip, #16, #8
1000ffbe:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000ffc2:	9202      	str	r2, [sp, #8]
1000ffc4:	f50e 7e80 	add.w	lr, lr, #256	@ 0x100
1000ffc8:	6f02      	ldr	r2, [r0, #112]	@ 0x70
1000ffca:	f853 b02e 	ldr.w	fp, [r3, lr, lsl #2]
1000ffce:	ea89 0606 	eor.w	r6, r9, r6
1000ffd2:	4056      	eors	r6, r2
1000ffd4:	9a02      	ldr	r2, [sp, #8]
1000ffd6:	f3c4 4e07 	ubfx	lr, r4, #16, #8
1000ffda:	ea86 060b 	eor.w	r6, r6, fp
1000ffde:	4056      	eors	r6, r2
1000ffe0:	f3cc 2c07 	ubfx	ip, ip, #8, #8
1000ffe4:	6f42      	ldr	r2, [r0, #116]	@ 0x74
1000ffe6:	f50e 7e80 	add.w	lr, lr, #256	@ 0x100
1000ffea:	f50c 7c00 	add.w	ip, ip, #512	@ 0x200
1000ffee:	f853 e02e 	ldr.w	lr, [r3, lr, lsl #2]
1000fff2:	f853 c02c 	ldr.w	ip, [r3, ip, lsl #2]
1000fff6:	4055      	eors	r5, r2
1000fff8:	6f82      	ldr	r2, [r0, #120]	@ 0x78
1000fffa:	f3c1 4907 	ubfx	r9, r1, #16, #8
1000fffe:	f50a 7a80 	add.w	sl, sl, #256	@ 0x100
10010002:	f3c1 2107 	ubfx	r1, r1, #8, #8
10010006:	ea85 050e 	eor.w	r5, r5, lr
1001000a:	4057      	eors	r7, r2
1001000c:	f501 7100 	add.w	r1, r1, #512	@ 0x200
10010010:	6fc2      	ldr	r2, [r0, #124]	@ 0x7c
10010012:	f853 a02a 	ldr.w	sl, [r3, sl, lsl #2]
10010016:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
1001001a:	ea85 0c0c 	eor.w	ip, r5, ip
1001001e:	f509 7980 	add.w	r9, r9, #256	@ 0x100
10010022:	ea88 0e02 	eor.w	lr, r8, r2
    DEC_ROUND_S_T(32); DEC_ROUND_T_S(32);
10010026:	fa5f f28c 	uxtb.w	r2, ip
    DEC_ROUND_S_T(24); DEC_ROUND_T_S(24);
1001002a:	f853 9029 	ldr.w	r9, [r3, r9, lsl #2]
1001002e:	ea8e 0e0a 	eor.w	lr, lr, sl
    DEC_ROUND_S_T(32); DEC_ROUND_T_S(32);
10010032:	f502 7240 	add.w	r2, r2, #768	@ 0x300
    DEC_ROUND_S_T(24); DEC_ROUND_T_S(24);
10010036:	f3c4 2407 	ubfx	r4, r4, #8, #8
1001003a:	ea8e 0e01 	eor.w	lr, lr, r1
1001003e:	f504 7400 	add.w	r4, r4, #512	@ 0x200
10010042:	ea87 0709 	eor.w	r7, r7, r9
    DEC_ROUND_S_T(32); DEC_ROUND_T_S(32);
10010046:	f853 9022 	ldr.w	r9, [r3, r2, lsl #2]
    DEC_ROUND_S_T(24); DEC_ROUND_T_S(24);
1001004a:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
    DEC_ROUND_S_T(32); DEC_ROUND_T_S(32);
1001004e:	f3ce 4207 	ubfx	r2, lr, #16, #8
10010052:	f502 7280 	add.w	r2, r2, #256	@ 0x100
    DEC_ROUND_S_T(24); DEC_ROUND_T_S(24);
10010056:	4067      	eors	r7, r4
    DEC_ROUND_S_T(32); DEC_ROUND_T_S(32);
10010058:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1001005c:	9202      	str	r2, [sp, #8]
1001005e:	f3c7 2207 	ubfx	r2, r7, #8, #8
10010062:	f502 7200 	add.w	r2, r2, #512	@ 0x200
10010066:	ea4f 611e 	mov.w	r1, lr, lsr #24
1001006a:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1001006e:	9203      	str	r2, [sp, #12]
10010070:	b2fa      	uxtb	r2, r7
10010072:	f502 7240 	add.w	r2, r2, #768	@ 0x300
10010076:	fa5f f886 	uxtb.w	r8, r6
1001007a:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
1001007e:	f3c6 4207 	ubfx	r2, r6, #16, #8
10010082:	f502 7280 	add.w	r2, r2, #256	@ 0x100
10010086:	f508 7840 	add.w	r8, r8, #768	@ 0x300
1001008a:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
1001008e:	9504      	str	r5, [sp, #16]
10010090:	f3ce 2207 	ubfx	r2, lr, #8, #8
10010094:	f502 7200 	add.w	r2, r2, #512	@ 0x200
10010098:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
1001009c:	9105      	str	r1, [sp, #20]
1001009e:	fa5f f28e 	uxtb.w	r2, lr
100100a2:	ea4f 6e16 	mov.w	lr, r6, lsr #24
100100a6:	f3c6 2607 	ubfx	r6, r6, #8, #8
100100aa:	f506 7100 	add.w	r1, r6, #512	@ 0x200
100100ae:	ea4f 661c 	mov.w	r6, ip, lsr #24
100100b2:	f502 7240 	add.w	r2, r2, #768	@ 0x300
100100b6:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
100100ba:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
100100be:	f853 b02e 	ldr.w	fp, [r3, lr, lsl #2]
100100c2:	ea86 0a04 	eor.w	sl, r6, r4
100100c6:	0e3c      	lsrs	r4, r7, #24
100100c8:	ea8b 0b09 	eor.w	fp, fp, r9
100100cc:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
100100d0:	ea84 0e02 	eor.w	lr, r4, r2
100100d4:	f8d0 4080 	ldr.w	r4, [r0, #128]	@ 0x80
100100d8:	ea8b 0b04 	eor.w	fp, fp, r4
100100dc:	9c02      	ldr	r4, [sp, #8]
100100de:	ea8b 0b04 	eor.w	fp, fp, r4
100100e2:	9c03      	ldr	r4, [sp, #12]
100100e4:	ea8b 0604 	eor.w	r6, fp, r4
100100e8:	f8d0 4084 	ldr.w	r4, [r0, #132]	@ 0x84
100100ec:	ea8a 0a04 	eor.w	sl, sl, r4
100100f0:	9c04      	ldr	r4, [sp, #16]
100100f2:	ea8a 0a04 	eor.w	sl, sl, r4
100100f6:	f8d0 4088 	ldr.w	r4, [r0, #136]	@ 0x88
100100fa:	f3c7 4707 	ubfx	r7, r7, #16, #8
100100fe:	f507 7280 	add.w	r2, r7, #256	@ 0x100
10010102:	ea8e 0704 	eor.w	r7, lr, r4
10010106:	9c05      	ldr	r4, [sp, #20]
10010108:	f3cc 4907 	ubfx	r9, ip, #16, #8
1001010c:	f853 e024 	ldr.w	lr, [r3, r4, lsl #2]
10010110:	f853 4028 	ldr.w	r4, [r3, r8, lsl #2]
10010114:	f509 7980 	add.w	r9, r9, #256	@ 0x100
10010118:	ea8e 0404 	eor.w	r4, lr, r4
1001011c:	f853 e029 	ldr.w	lr, [r3, r9, lsl #2]
10010120:	ea87 070e 	eor.w	r7, r7, lr
10010124:	f853 e022 	ldr.w	lr, [r3, r2, lsl #2]
10010128:	f853 2021 	ldr.w	r2, [r3, r1, lsl #2]
1001012c:	f3cc 2c07 	ubfx	ip, ip, #8, #8
10010130:	4057      	eors	r7, r2
10010132:	f50c 7c00 	add.w	ip, ip, #512	@ 0x200
10010136:	f8d0 208c 	ldr.w	r2, [r0, #140]	@ 0x8c
1001013a:	f853 102c 	ldr.w	r1, [r3, ip, lsl #2]
1001013e:	ea8a 0505 	eor.w	r5, sl, r5
10010142:	ea84 0c02 	eor.w	ip, r4, r2
10010146:	b2ea      	uxtb	r2, r5
10010148:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1001014c:	ea8c 0c0e 	eor.w	ip, ip, lr
10010150:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
10010154:	b2fa      	uxtb	r2, r7
10010156:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1001015a:	ea8c 0c01 	eor.w	ip, ip, r1
1001015e:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
10010162:	fa5f f28c 	uxtb.w	r2, ip
10010166:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1001016a:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
1001016e:	b2f2      	uxtb	r2, r6
10010170:	f502 7240 	add.w	r2, r2, #768	@ 0x300
10010174:	f853 e022 	ldr.w	lr, [r3, r2, lsl #2]
10010178:	0e32      	lsrs	r2, r6, #24
1001017a:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1001017e:	4054      	eors	r4, r2
10010180:	0e2a      	lsrs	r2, r5, #24
10010182:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
10010186:	4051      	eors	r1, r2
10010188:	0e3a      	lsrs	r2, r7, #24
1001018a:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1001018e:	ea82 0208 	eor.w	r2, r2, r8
10010192:	ea4f 681c 	mov.w	r8, ip, lsr #24
10010196:	9202      	str	r2, [sp, #8]
10010198:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1001019c:	ea88 080e 	eor.w	r8, r8, lr
100101a0:	f3cc 4e07 	ubfx	lr, ip, #16, #8
100101a4:	f3cc 2c07 	ubfx	ip, ip, #8, #8
100101a8:	f50c 7c00 	add.w	ip, ip, #512	@ 0x200
100101ac:	f50e 7e80 	add.w	lr, lr, #256	@ 0x100
100101b0:	f853 a02c 	ldr.w	sl, [r3, ip, lsl #2]
100101b4:	f853 b02e 	ldr.w	fp, [r3, lr, lsl #2]
100101b8:	f3c6 4c07 	ubfx	ip, r6, #16, #8
100101bc:	f3c6 2607 	ubfx	r6, r6, #8, #8
100101c0:	f50c 7c80 	add.w	ip, ip, #256	@ 0x100
100101c4:	f506 7600 	add.w	r6, r6, #512	@ 0x200
100101c8:	f853 902c 	ldr.w	r9, [r3, ip, lsl #2]
100101cc:	f853 c026 	ldr.w	ip, [r3, r6, lsl #2]
100101d0:	f3c5 4607 	ubfx	r6, r5, #16, #8
100101d4:	f506 7680 	add.w	r6, r6, #256	@ 0x100
100101d8:	f3c5 2507 	ubfx	r5, r5, #8, #8
100101dc:	f505 7500 	add.w	r5, r5, #512	@ 0x200
100101e0:	f853 e026 	ldr.w	lr, [r3, r6, lsl #2]
100101e4:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
100101e8:	f8d0 2090 	ldr.w	r2, [r0, #144]	@ 0x90
100101ec:	f3c7 4607 	ubfx	r6, r7, #16, #8
100101f0:	f3c7 2707 	ubfx	r7, r7, #8, #8
100101f4:	f507 7700 	add.w	r7, r7, #512	@ 0x200
100101f8:	4054      	eors	r4, r2
100101fa:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
100101fe:	9a02      	ldr	r2, [sp, #8]
10010200:	ea84 040b 	eor.w	r4, r4, fp
10010204:	407c      	eors	r4, r7
10010206:	f8d0 7094 	ldr.w	r7, [r0, #148]	@ 0x94
1001020a:	4079      	eors	r1, r7
1001020c:	f8d0 7098 	ldr.w	r7, [r0, #152]	@ 0x98
10010210:	f506 7680 	add.w	r6, r6, #256	@ 0x100
10010214:	407a      	eors	r2, r7
10010216:	f8d0 709c 	ldr.w	r7, [r0, #156]	@ 0x9c
1001021a:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1001021e:	ea82 020e 	eor.w	r2, r2, lr
10010222:	ea82 020c 	eor.w	r2, r2, ip
10010226:	ea88 0c07 	eor.w	ip, r8, r7
1001022a:	ea8c 0c06 	eor.w	ip, ip, r6
1001022e:	ea8c 0c05 	eor.w	ip, ip, r5
    if (r > 5) {
10010232:	9d00      	ldr	r5, [sp, #0]
    DEC_ROUND_S_T(32); DEC_ROUND_T_S(32);
10010234:	ea81 0109 	eor.w	r1, r1, r9
    if (r > 5) {
10010238:	2d05      	cmp	r5, #5
    DEC_ROUND_S_T(32); DEC_ROUND_T_S(32);
1001023a:	ea81 010a 	eor.w	r1, r1, sl
    if (r > 5) {
1001023e:	f240 81ee 	bls.w	1001061e <AesDecrypt_C+0xca2>
        DEC_ROUND_S_T(40); DEC_ROUND_T_S(40);
10010242:	b2cd      	uxtb	r5, r1
10010244:	f505 7540 	add.w	r5, r5, #768	@ 0x300
10010248:	f3c2 4a07 	ubfx	sl, r2, #16, #8
1001024c:	f853 6025 	ldr.w	r6, [r3, r5, lsl #2]
10010250:	b2d5      	uxtb	r5, r2
10010252:	f505 7540 	add.w	r5, r5, #768	@ 0x300
10010256:	f3c1 4907 	ubfx	r9, r1, #16, #8
1001025a:	f853 8025 	ldr.w	r8, [r3, r5, lsl #2]
1001025e:	fa5f f58c 	uxtb.w	r5, ip
10010262:	f505 7540 	add.w	r5, r5, #768	@ 0x300
10010266:	f50a 7a80 	add.w	sl, sl, #256	@ 0x100
1001026a:	f853 7025 	ldr.w	r7, [r3, r5, lsl #2]
1001026e:	f853 a02a 	ldr.w	sl, [r3, sl, lsl #2]
10010272:	b2e5      	uxtb	r5, r4
10010274:	f505 7540 	add.w	r5, r5, #768	@ 0x300
10010278:	f509 7980 	add.w	r9, r9, #256	@ 0x100
1001027c:	f853 e025 	ldr.w	lr, [r3, r5, lsl #2]
10010280:	f853 9029 	ldr.w	r9, [r3, r9, lsl #2]
10010284:	0e25      	lsrs	r5, r4, #24
10010286:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
1001028a:	406e      	eors	r6, r5
1001028c:	0e0d      	lsrs	r5, r1, #24
1001028e:	f3c1 2107 	ubfx	r1, r1, #8, #8
10010292:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
10010296:	ea85 0508 	eor.w	r5, r5, r8
1001029a:	ea4f 6812 	mov.w	r8, r2, lsr #24
1001029e:	f3c2 2207 	ubfx	r2, r2, #8, #8
100102a2:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
100102a6:	ea88 0707 	eor.w	r7, r8, r7
100102aa:	ea4f 681c 	mov.w	r8, ip, lsr #24
100102ae:	f502 7200 	add.w	r2, r2, #512	@ 0x200
100102b2:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
100102b6:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
100102ba:	9202      	str	r2, [sp, #8]
100102bc:	ea88 080e 	eor.w	r8, r8, lr
100102c0:	f3cc 4e07 	ubfx	lr, ip, #16, #8
100102c4:	f50e 7e80 	add.w	lr, lr, #256	@ 0x100
100102c8:	f8d0 20a0 	ldr.w	r2, [r0, #160]	@ 0xa0
100102cc:	f853 b02e 	ldr.w	fp, [r3, lr, lsl #2]
100102d0:	4056      	eors	r6, r2
100102d2:	9a02      	ldr	r2, [sp, #8]
100102d4:	f3c4 4e07 	ubfx	lr, r4, #16, #8
100102d8:	ea86 060b 	eor.w	r6, r6, fp
100102dc:	4056      	eors	r6, r2
100102de:	f3cc 2c07 	ubfx	ip, ip, #8, #8
100102e2:	f8d0 20a4 	ldr.w	r2, [r0, #164]	@ 0xa4
100102e6:	f50e 7e80 	add.w	lr, lr, #256	@ 0x100
100102ea:	f50c 7c00 	add.w	ip, ip, #512	@ 0x200
100102ee:	f853 e02e 	ldr.w	lr, [r3, lr, lsl #2]
100102f2:	f853 c02c 	ldr.w	ip, [r3, ip, lsl #2]
100102f6:	4055      	eors	r5, r2
100102f8:	f8d0 20a8 	ldr.w	r2, [r0, #168]	@ 0xa8
100102fc:	ea85 050e 	eor.w	r5, r5, lr
10010300:	4057      	eors	r7, r2
10010302:	f501 7100 	add.w	r1, r1, #512	@ 0x200
10010306:	f8d0 20ac 	ldr.w	r2, [r0, #172]	@ 0xac
1001030a:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
1001030e:	ea85 050c 	eor.w	r5, r5, ip
10010312:	f3c4 2407 	ubfx	r4, r4, #8, #8
10010316:	ea88 0c02 	eor.w	ip, r8, r2
1001031a:	b2ea      	uxtb	r2, r5
1001031c:	ea8c 0c0a 	eor.w	ip, ip, sl
10010320:	f502 7240 	add.w	r2, r2, #768	@ 0x300
10010324:	f504 7400 	add.w	r4, r4, #512	@ 0x200
10010328:	ea8c 0c01 	eor.w	ip, ip, r1
1001032c:	f853 e022 	ldr.w	lr, [r3, r2, lsl #2]
10010330:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
10010334:	f3cc 4207 	ubfx	r2, ip, #16, #8
10010338:	ea87 0709 	eor.w	r7, r7, r9
1001033c:	f502 7280 	add.w	r2, r2, #256	@ 0x100
10010340:	4067      	eors	r7, r4
10010342:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
10010346:	f3c7 2207 	ubfx	r2, r7, #8, #8
1001034a:	f502 7200 	add.w	r2, r2, #512	@ 0x200
1001034e:	ea4f 6816 	mov.w	r8, r6, lsr #24
10010352:	f853 9022 	ldr.w	r9, [r3, r2, lsl #2]
10010356:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1001035a:	b2fa      	uxtb	r2, r7
1001035c:	f502 7240 	add.w	r2, r2, #768	@ 0x300
10010360:	ea4f 6a1c 	mov.w	sl, ip, lsr #24
10010364:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
10010368:	f3c6 4207 	ubfx	r2, r6, #16, #8
1001036c:	f502 7280 	add.w	r2, r2, #256	@ 0x100
10010370:	ea88 080e 	eor.w	r8, r8, lr
10010374:	f853 b022 	ldr.w	fp, [r3, r2, lsl #2]
10010378:	f3cc 2207 	ubfx	r2, ip, #8, #8
1001037c:	f502 7200 	add.w	r2, r2, #512	@ 0x200
10010380:	ea4f 6e15 	mov.w	lr, r5, lsr #24
10010384:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
10010388:	9202      	str	r2, [sp, #8]
1001038a:	fa5f f28c 	uxtb.w	r2, ip
1001038e:	f502 7240 	add.w	r2, r2, #768	@ 0x300
10010392:	fa5f fc86 	uxtb.w	ip, r6
10010396:	f3c6 2607 	ubfx	r6, r6, #8, #8
1001039a:	f506 7600 	add.w	r6, r6, #512	@ 0x200
1001039e:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
100103a2:	9603      	str	r6, [sp, #12]
100103a4:	f853 e02e 	ldr.w	lr, [r3, lr, lsl #2]
100103a8:	f8d0 60b0 	ldr.w	r6, [r0, #176]	@ 0xb0
100103ac:	ea8e 0101 	eor.w	r1, lr, r1
100103b0:	ea88 0806 	eor.w	r8, r8, r6
100103b4:	ea4f 6e17 	mov.w	lr, r7, lsr #24
100103b8:	f8d0 60b4 	ldr.w	r6, [r0, #180]	@ 0xb4
100103bc:	f853 e02e 	ldr.w	lr, [r3, lr, lsl #2]
100103c0:	4071      	eors	r1, r6
100103c2:	9e02      	ldr	r6, [sp, #8]
100103c4:	ea81 010b 	eor.w	r1, r1, fp
100103c8:	ea8e 0202 	eor.w	r2, lr, r2
100103cc:	4071      	eors	r1, r6
100103ce:	f3c5 4e07 	ubfx	lr, r5, #16, #8
100103d2:	f8d0 60b8 	ldr.w	r6, [r0, #184]	@ 0xb8
100103d6:	f50e 7e80 	add.w	lr, lr, #256	@ 0x100
100103da:	4072      	eors	r2, r6
100103dc:	9e03      	ldr	r6, [sp, #12]
100103de:	f853 e02e 	ldr.w	lr, [r3, lr, lsl #2]
100103e2:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
100103e6:	f50c 7c40 	add.w	ip, ip, #768	@ 0x300
100103ea:	f3c5 2507 	ubfx	r5, r5, #8, #8
100103ee:	f505 7500 	add.w	r5, r5, #512	@ 0x200
100103f2:	ea88 0804 	eor.w	r8, r8, r4
100103f6:	f853 c02c 	ldr.w	ip, [r3, ip, lsl #2]
100103fa:	f3c7 4707 	ubfx	r7, r7, #16, #8
100103fe:	ea88 0409 	eor.w	r4, r8, r9
10010402:	ea82 020e 	eor.w	r2, r2, lr
10010406:	f853 902a 	ldr.w	r9, [r3, sl, lsl #2]
1001040a:	f507 7780 	add.w	r7, r7, #256	@ 0x100
1001040e:	4072      	eors	r2, r6
10010410:	f853 6025 	ldr.w	r6, [r3, r5, lsl #2]
10010414:	f8d0 50bc 	ldr.w	r5, [r0, #188]	@ 0xbc
10010418:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
1001041c:	ea89 0c0c 	eor.w	ip, r9, ip
10010420:	ea8c 0c05 	eor.w	ip, ip, r5
        if (r > 6) {
10010424:	9d00      	ldr	r5, [sp, #0]
        DEC_ROUND_S_T(40); DEC_ROUND_T_S(40);
10010426:	ea8c 0c07 	eor.w	ip, ip, r7
        if (r > 6) {
1001042a:	2d06      	cmp	r5, #6
        DEC_ROUND_S_T(40); DEC_ROUND_T_S(40);
1001042c:	ea8c 0c06 	eor.w	ip, ip, r6
        if (r > 6) {
10010430:	f000 80f5 	beq.w	1001061e <AesDecrypt_C+0xca2>
            DEC_ROUND_S_T(48); DEC_ROUND_T_S(48);
10010434:	b2cd      	uxtb	r5, r1
10010436:	f505 7540 	add.w	r5, r5, #768	@ 0x300
1001043a:	f3c2 4a07 	ubfx	sl, r2, #16, #8
1001043e:	f853 6025 	ldr.w	r6, [r3, r5, lsl #2]
10010442:	b2d5      	uxtb	r5, r2
10010444:	f505 7540 	add.w	r5, r5, #768	@ 0x300
10010448:	f3c1 4907 	ubfx	r9, r1, #16, #8
1001044c:	f853 8025 	ldr.w	r8, [r3, r5, lsl #2]
10010450:	fa5f f58c 	uxtb.w	r5, ip
10010454:	f505 7540 	add.w	r5, r5, #768	@ 0x300
10010458:	f50a 7a80 	add.w	sl, sl, #256	@ 0x100
1001045c:	f853 7025 	ldr.w	r7, [r3, r5, lsl #2]
10010460:	f853 a02a 	ldr.w	sl, [r3, sl, lsl #2]
10010464:	b2e5      	uxtb	r5, r4
10010466:	f505 7540 	add.w	r5, r5, #768	@ 0x300
1001046a:	f509 7980 	add.w	r9, r9, #256	@ 0x100
1001046e:	f853 e025 	ldr.w	lr, [r3, r5, lsl #2]
10010472:	f853 9029 	ldr.w	r9, [r3, r9, lsl #2]
10010476:	0e25      	lsrs	r5, r4, #24
10010478:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
1001047c:	406e      	eors	r6, r5
1001047e:	0e0d      	lsrs	r5, r1, #24
10010480:	f3c1 2107 	ubfx	r1, r1, #8, #8
10010484:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
10010488:	ea85 0508 	eor.w	r5, r5, r8
1001048c:	ea4f 6812 	mov.w	r8, r2, lsr #24
10010490:	f3c2 2207 	ubfx	r2, r2, #8, #8
10010494:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
10010498:	ea88 0707 	eor.w	r7, r8, r7
1001049c:	ea4f 681c 	mov.w	r8, ip, lsr #24
100104a0:	f502 7200 	add.w	r2, r2, #512	@ 0x200
100104a4:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
100104a8:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
100104ac:	9202      	str	r2, [sp, #8]
100104ae:	ea88 080e 	eor.w	r8, r8, lr
100104b2:	f3cc 4e07 	ubfx	lr, ip, #16, #8
100104b6:	f50e 7e80 	add.w	lr, lr, #256	@ 0x100
100104ba:	f8d0 20c0 	ldr.w	r2, [r0, #192]	@ 0xc0
100104be:	f853 b02e 	ldr.w	fp, [r3, lr, lsl #2]
100104c2:	4056      	eors	r6, r2
100104c4:	9a02      	ldr	r2, [sp, #8]
100104c6:	f3c4 4e07 	ubfx	lr, r4, #16, #8
100104ca:	ea86 060b 	eor.w	r6, r6, fp
100104ce:	4056      	eors	r6, r2
100104d0:	f3cc 2c07 	ubfx	ip, ip, #8, #8
100104d4:	f8d0 20c4 	ldr.w	r2, [r0, #196]	@ 0xc4
100104d8:	f50e 7e80 	add.w	lr, lr, #256	@ 0x100
100104dc:	f50c 7c00 	add.w	ip, ip, #512	@ 0x200
100104e0:	f853 e02e 	ldr.w	lr, [r3, lr, lsl #2]
100104e4:	f853 c02c 	ldr.w	ip, [r3, ip, lsl #2]
100104e8:	4055      	eors	r5, r2
100104ea:	f8d0 20c8 	ldr.w	r2, [r0, #200]	@ 0xc8
100104ee:	ea85 050e 	eor.w	r5, r5, lr
100104f2:	4057      	eors	r7, r2
100104f4:	f501 7100 	add.w	r1, r1, #512	@ 0x200
100104f8:	f8d0 20cc 	ldr.w	r2, [r0, #204]	@ 0xcc
100104fc:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
10010500:	ea85 050c 	eor.w	r5, r5, ip
10010504:	f3c4 2407 	ubfx	r4, r4, #8, #8
10010508:	ea88 0c02 	eor.w	ip, r8, r2
1001050c:	b2ea      	uxtb	r2, r5
1001050e:	ea8c 0c0a 	eor.w	ip, ip, sl
10010512:	f502 7240 	add.w	r2, r2, #768	@ 0x300
10010516:	f504 7400 	add.w	r4, r4, #512	@ 0x200
1001051a:	ea8c 0c01 	eor.w	ip, ip, r1
1001051e:	f853 e022 	ldr.w	lr, [r3, r2, lsl #2]
10010522:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
10010526:	f3cc 4207 	ubfx	r2, ip, #16, #8
1001052a:	ea87 0709 	eor.w	r7, r7, r9
1001052e:	f502 7280 	add.w	r2, r2, #256	@ 0x100
10010532:	4067      	eors	r7, r4
10010534:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
10010538:	f3c7 2207 	ubfx	r2, r7, #8, #8
1001053c:	f502 7200 	add.w	r2, r2, #512	@ 0x200
10010540:	ea4f 6816 	mov.w	r8, r6, lsr #24
10010544:	f853 9022 	ldr.w	r9, [r3, r2, lsl #2]
10010548:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1001054c:	b2fa      	uxtb	r2, r7
1001054e:	f502 7240 	add.w	r2, r2, #768	@ 0x300
10010552:	ea88 080e 	eor.w	r8, r8, lr
10010556:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
1001055a:	f3c6 4207 	ubfx	r2, r6, #16, #8
1001055e:	f502 7280 	add.w	r2, r2, #256	@ 0x100
10010562:	ea4f 6e15 	mov.w	lr, r5, lsr #24
10010566:	f853 b022 	ldr.w	fp, [r3, r2, lsl #2]
1001056a:	f853 e02e 	ldr.w	lr, [r3, lr, lsl #2]
1001056e:	f3cc 2207 	ubfx	r2, ip, #8, #8
10010572:	f502 7200 	add.w	r2, r2, #512	@ 0x200
10010576:	ea8e 0101 	eor.w	r1, lr, r1
1001057a:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1001057e:	9202      	str	r2, [sp, #8]
10010580:	fa5f f28c 	uxtb.w	r2, ip
10010584:	ea4f 6e17 	mov.w	lr, r7, lsr #24
10010588:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1001058c:	ea4f 6a1c 	mov.w	sl, ip, lsr #24
10010590:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
10010594:	f853 e02e 	ldr.w	lr, [r3, lr, lsl #2]
10010598:	ea8e 0202 	eor.w	r2, lr, r2
1001059c:	f3c5 4e07 	ubfx	lr, r5, #16, #8
100105a0:	f3c5 2507 	ubfx	r5, r5, #8, #8
100105a4:	f505 7500 	add.w	r5, r5, #512	@ 0x200
100105a8:	9503      	str	r5, [sp, #12]
100105aa:	f8d0 50d0 	ldr.w	r5, [r0, #208]	@ 0xd0
100105ae:	ea88 0805 	eor.w	r8, r8, r5
100105b2:	f8d0 50d4 	ldr.w	r5, [r0, #212]	@ 0xd4
100105b6:	4069      	eors	r1, r5
100105b8:	9d02      	ldr	r5, [sp, #8]
100105ba:	ea81 010b 	eor.w	r1, r1, fp
100105be:	fa5f fc86 	uxtb.w	ip, r6
100105c2:	4069      	eors	r1, r5
100105c4:	f8d0 50d8 	ldr.w	r5, [r0, #216]	@ 0xd8
100105c8:	f50c 7c40 	add.w	ip, ip, #768	@ 0x300
100105cc:	f3c6 2607 	ubfx	r6, r6, #8, #8
100105d0:	f3c7 4707 	ubfx	r7, r7, #16, #8
100105d4:	406a      	eors	r2, r5
100105d6:	f506 7600 	add.w	r6, r6, #512	@ 0x200
100105da:	9d03      	ldr	r5, [sp, #12]
100105dc:	f853 c02c 	ldr.w	ip, [r3, ip, lsl #2]
100105e0:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
100105e4:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
100105e8:	f507 7780 	add.w	r7, r7, #256	@ 0x100
100105ec:	f50e 7e80 	add.w	lr, lr, #256	@ 0x100
100105f0:	ea88 0804 	eor.w	r8, r8, r4
100105f4:	ea88 0409 	eor.w	r4, r8, r9
100105f8:	f853 902a 	ldr.w	r9, [r3, sl, lsl #2]
100105fc:	f853 e02e 	ldr.w	lr, [r3, lr, lsl #2]
10010600:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
10010604:	f8d0 30dc 	ldr.w	r3, [r0, #220]	@ 0xdc
10010608:	ea89 0c0c 	eor.w	ip, r9, ip
1001060c:	ea8c 0c03 	eor.w	ip, ip, r3
10010610:	ea82 020e 	eor.w	r2, r2, lr
10010614:	ea8c 0c07 	eor.w	ip, ip, r7
10010618:	4072      	eors	r2, r6
1001061a:	ea8c 0c05 	eor.w	ip, ip, r5

#ifndef WC_NO_CACHE_RESISTANT
    t0 |= PreFetchTd4();
#endif

    s0 = GetTable8_4(Td4, GETBYTE(t0, 3), GETBYTE(t3, 2),
1001061e:	4b32      	ldr	r3, [pc, #200]	@ (100106e8 <AesDecrypt_C+0xd6c>)
10010620:	0e25      	lsrs	r5, r4, #24
10010622:	b2ce      	uxtb	r6, r1
10010624:	5d5d      	ldrb	r5, [r3, r5]
10010626:	5d9e      	ldrb	r6, [r3, r6]
10010628:	ea46 6605 	orr.w	r6, r6, r5, lsl #24
                          GETBYTE(t2, 1), GETBYTE(t1, 0)) ^ rk[0];
    s1 = GetTable8_4(Td4, GETBYTE(t1, 3), GETBYTE(t0, 2),
1001062c:	0e0d      	lsrs	r5, r1, #24
                          GETBYTE(t3, 1), GETBYTE(t2, 0)) ^ rk[1];
    s2 = GetTable8_4(Td4, GETBYTE(t2, 3), GETBYTE(t1, 2),
1001062e:	fa5f fe8c 	uxtb.w	lr, ip
    s1 = GetTable8_4(Td4, GETBYTE(t1, 3), GETBYTE(t0, 2),
10010632:	5d5f      	ldrb	r7, [r3, r5]
    s2 = GetTable8_4(Td4, GETBYTE(t2, 3), GETBYTE(t1, 2),
10010634:	f813 e00e 	ldrb.w	lr, [r3, lr]
    s1 = GetTable8_4(Td4, GETBYTE(t1, 3), GETBYTE(t0, 2),
10010638:	b2d5      	uxtb	r5, r2
1001063a:	5d5d      	ldrb	r5, [r3, r5]
1001063c:	ea45 6507 	orr.w	r5, r5, r7, lsl #24
    s2 = GetTable8_4(Td4, GETBYTE(t2, 3), GETBYTE(t1, 2),
10010640:	0e17      	lsrs	r7, r2, #24
10010642:	5ddf      	ldrb	r7, [r3, r7]
10010644:	ea4e 6e07 	orr.w	lr, lr, r7, lsl #24
                          GETBYTE(t0, 1), GETBYTE(t3, 0)) ^ rk[2];
    s3 = GetTable8_4(Td4, GETBYTE(t3, 3), GETBYTE(t2, 2),
10010648:	ea4f 671c 	mov.w	r7, ip, lsr #24
1001064c:	f813 8007 	ldrb.w	r8, [r3, r7]
10010650:	b2e7      	uxtb	r7, r4
10010652:	5ddf      	ldrb	r7, [r3, r7]
10010654:	ea47 6708 	orr.w	r7, r7, r8, lsl #24
    s0 = GetTable8_4(Td4, GETBYTE(t0, 3), GETBYTE(t3, 2),
10010658:	f3cc 4807 	ubfx	r8, ip, #16, #8
    s1 = GetTable8_4(Td4, GETBYTE(t1, 3), GETBYTE(t0, 2),
1001065c:	f3cc 2c07 	ubfx	ip, ip, #8, #8
    s0 = GetTable8_4(Td4, GETBYTE(t0, 3), GETBYTE(t3, 2),
10010660:	f813 8008 	ldrb.w	r8, [r3, r8]
    s1 = GetTable8_4(Td4, GETBYTE(t1, 3), GETBYTE(t0, 2),
10010664:	f813 c00c 	ldrb.w	ip, [r3, ip]
    s0 = GetTable8_4(Td4, GETBYTE(t0, 3), GETBYTE(t3, 2),
10010668:	ea46 4608 	orr.w	r6, r6, r8, lsl #16
    s1 = GetTable8_4(Td4, GETBYTE(t1, 3), GETBYTE(t0, 2),
1001066c:	f3c4 4807 	ubfx	r8, r4, #16, #8
    s2 = GetTable8_4(Td4, GETBYTE(t2, 3), GETBYTE(t1, 2),
10010670:	f3c4 2407 	ubfx	r4, r4, #8, #8
    s1 = GetTable8_4(Td4, GETBYTE(t1, 3), GETBYTE(t0, 2),
10010674:	f813 8008 	ldrb.w	r8, [r3, r8]
10010678:	ea45 4508 	orr.w	r5, r5, r8, lsl #16
1001067c:	ea45 250c 	orr.w	r5, r5, ip, lsl #8
    s2 = GetTable8_4(Td4, GETBYTE(t2, 3), GETBYTE(t1, 2),
10010680:	f813 c004 	ldrb.w	ip, [r3, r4]
10010684:	f3c1 4407 	ubfx	r4, r1, #16, #8
    s3 = GetTable8_4(Td4, GETBYTE(t3, 3), GETBYTE(t2, 2),
10010688:	f3c1 2107 	ubfx	r1, r1, #8, #8
    s2 = GetTable8_4(Td4, GETBYTE(t2, 3), GETBYTE(t1, 2),
1001068c:	5d1c      	ldrb	r4, [r3, r4]
1001068e:	ea4e 4404 	orr.w	r4, lr, r4, lsl #16
10010692:	ea44 240c 	orr.w	r4, r4, ip, lsl #8
    s3 = GetTable8_4(Td4, GETBYTE(t3, 3), GETBYTE(t2, 2),
10010696:	f813 c001 	ldrb.w	ip, [r3, r1]
1001069a:	f3c2 4107 	ubfx	r1, r2, #16, #8
    s0 = GetTable8_4(Td4, GETBYTE(t0, 3), GETBYTE(t3, 2),
1001069e:	f3c2 2207 	ubfx	r2, r2, #8, #8
    s3 = GetTable8_4(Td4, GETBYTE(t3, 3), GETBYTE(t2, 2),
100106a2:	5c59      	ldrb	r1, [r3, r1]
    s0 = GetTable8_4(Td4, GETBYTE(t0, 3), GETBYTE(t3, 2),
100106a4:	5c9b      	ldrb	r3, [r3, r2]
    rk += r * 8;
100106a6:	9a00      	ldr	r2, [sp, #0]
    s0 = GetTable8_4(Td4, GETBYTE(t0, 3), GETBYTE(t3, 2),
100106a8:	ea46 2303 	orr.w	r3, r6, r3, lsl #8
    rk += r * 8;
100106ac:	eb00 1642 	add.w	r6, r0, r2, lsl #5
100106b0:	0152      	lsls	r2, r2, #5
    s3 = GetTable8_4(Td4, GETBYTE(t3, 3), GETBYTE(t2, 2),
100106b2:	ea47 4101 	orr.w	r1, r7, r1, lsl #16
                          GETBYTE(t2, 1), GETBYTE(t1, 0)) ^ rk[0];
100106b6:	5882      	ldr	r2, [r0, r2]
100106b8:	4053      	eors	r3, r2
                          GETBYTE(t3, 1), GETBYTE(t2, 0)) ^ rk[1];
100106ba:	6872      	ldr	r2, [r6, #4]
100106bc:	ea85 0002 	eor.w	r0, r5, r2
                          GETBYTE(t0, 1), GETBYTE(t3, 0)) ^ rk[2];
100106c0:	68b2      	ldr	r2, [r6, #8]
    s1 = ByteReverseWord32(s1);
    s2 = ByteReverseWord32(s2);
    s3 = ByteReverseWord32(s3);
#endif

    XMEMCPY(outBlock,                  &s0, sizeof(s0));
100106c2:	9d01      	ldr	r5, [sp, #4]
                          GETBYTE(t0, 1), GETBYTE(t3, 0)) ^ rk[2];
100106c4:	4062      	eors	r2, r4
                          GETBYTE(t1, 1), GETBYTE(t0, 0)) ^ rk[3];
100106c6:	68f4      	ldr	r4, [r6, #12]
    s3 = GetTable8_4(Td4, GETBYTE(t3, 3), GETBYTE(t2, 2),
100106c8:	ea41 210c 	orr.w	r1, r1, ip, lsl #8
100106cc:	ba1b      	rev	r3, r3
    XMEMCPY(outBlock,                  &s0, sizeof(s0));
100106ce:	602b      	str	r3, [r5, #0]
                          GETBYTE(t1, 1), GETBYTE(t0, 0)) ^ rk[3];
100106d0:	ea81 0304 	eor.w	r3, r1, r4
100106d4:	ba00      	rev	r0, r0
    s2 = ByteReverseWord32(s2);
100106d6:	ba12      	rev	r2, r2
    s3 = ByteReverseWord32(s3);
100106d8:	ba1b      	rev	r3, r3
    XMEMCPY(outBlock + sizeof(s0),     &s1, sizeof(s1));
100106da:	6068      	str	r0, [r5, #4]
    XMEMCPY(outBlock + 2 * sizeof(s0), &s2, sizeof(s2));
100106dc:	60aa      	str	r2, [r5, #8]
    XMEMCPY(outBlock + 3 * sizeof(s0), &s3, sizeof(s3));
100106de:	60eb      	str	r3, [r5, #12]

}
100106e0:	b007      	add	sp, #28
100106e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
100106e6:	bf00      	nop
100106e8:	1001b674 	.word	0x1001b674

100106ec <wc_AesSetKeyLocal.constprop.0>:
    #ifdef WOLFSSL_IMX6_CAAM_BLOB
        byte   local[32];
        word32 localSz = 32;
    #endif

        if (aes == NULL)
100106ec:	2800      	cmp	r0, #0
100106ee:	f000 8277 	beq.w	10010be0 <wc_AesSetKeyLocal.constprop.0+0x4f4>
    static WARN_UNUSED_RESULT int wc_AesSetKeyLocal(
100106f2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
        ret = wc_debug_CipherLifecycleCheck(aes->CipherLifecycleTag, 0);
        if (ret < 0)
            return ret;
#endif

        switch (keylen) {
100106f6:	f1a2 0510 	sub.w	r5, r2, #16
100106fa:	2d10      	cmp	r5, #16
    static WARN_UNUSED_RESULT int wc_AesSetKeyLocal(
100106fc:	b085      	sub	sp, #20
100106fe:	4692      	mov	sl, r2
        switch (keylen) {
10010700:	d804      	bhi.n	1001070c <wc_AesSetKeyLocal.constprop.0+0x20>
10010702:	461f      	mov	r7, r3
10010704:	4bd5      	ldr	r3, [pc, #852]	@ (10010a5c <wc_AesSetKeyLocal.constprop.0+0x370>)
10010706:	40eb      	lsrs	r3, r5
10010708:	07db      	lsls	r3, r3, #31
1001070a:	d404      	bmi.n	10010716 <wc_AesSetKeyLocal.constprop.0+0x2a>
1001070c:	f06f 00ac 	mvn.w	r0, #172	@ 0xac
    #endif
    #ifdef WOLFSSL_IMX6_CAAM_BLOB
        ForceZero(local, sizeof(local));
    #endif
        return ret;
    } /* wc_AesSetKeyLocal */
10010710:	b005      	add	sp, #20
10010712:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        aes->rounds = (keylen/4) + 6;
10010716:	ea4f 0892 	mov.w	r8, r2, lsr #2
1001071a:	f108 0306 	add.w	r3, r8, #6
1001071e:	4689      	mov	r9, r1
10010720:	4604      	mov	r4, r0
        aes->keylen = (int)keylen;
10010722:	f8c0 20f4 	str.w	r2, [r0, #244]	@ 0xf4
        aes->rounds = (keylen/4) + 6;
10010726:	f8c0 30f0 	str.w	r3, [r0, #240]	@ 0xf0
        XMEMCPY(aes->key, userKey, keylen);
1001072a:	4606      	mov	r6, r0
            return ret;
    }
#endif

    if (iv)
        XMEMCPY(aes->reg, iv, AES_BLOCK_SIZE);
1001072c:	f100 0bf8 	add.w	fp, r0, #248	@ 0xf8
    if (iv)
10010730:	2f00      	cmp	r7, #0
10010732:	d047      	beq.n	100107c4 <wc_AesSetKeyLocal.constprop.0+0xd8>
        XMEMCPY(aes->reg, iv, AES_BLOCK_SIZE);
10010734:	f8d7 e000 	ldr.w	lr, [r7]
10010738:	f8d7 c004 	ldr.w	ip, [r7, #4]
1001073c:	68bd      	ldr	r5, [r7, #8]
1001073e:	68fb      	ldr	r3, [r7, #12]
10010740:	f8c0 e0f8 	str.w	lr, [r0, #248]	@ 0xf8
10010744:	f8cb c004 	str.w	ip, [fp, #4]
10010748:	f8cb 5008 	str.w	r5, [fp, #8]
1001074c:	f8cb 300c 	str.w	r3, [fp, #12]
        XMEMCPY(aes->key, userKey, keylen);
10010750:	f005 fc46 	bl	10015fe0 <memcpy>
    if ((((size_t)in & 0x3) == 0) &&
        (((size_t)out & 0x3) == 0))
#endif
    {
        word32 count = byteCount/(word32)sizeof(word32);
        for (i = 0; i < count; i++)
10010754:	eb04 0888 	add.w	r8, r4, r8, lsl #2
10010758:	4625      	mov	r5, r4
    static WARN_UNUSED_RESULT int wc_AesSetKeyLocal(
1001075a:	4623      	mov	r3, r4
            out[i] = ByteReverseWord32(in[i]);
1001075c:	681a      	ldr	r2, [r3, #0]
1001075e:	ba12      	rev	r2, r2
10010760:	f843 2b04 	str.w	r2, [r3], #4
        for (i = 0; i < count; i++)
10010764:	4598      	cmp	r8, r3
10010766:	d1f9      	bne.n	1001075c <wc_AesSetKeyLocal.constprop.0+0x70>
    XMEMCPY(rk, key, keySz);
10010768:	4649      	mov	r1, r9
1001076a:	4652      	mov	r2, sl
1001076c:	4620      	mov	r0, r4
1001076e:	f005 fc37 	bl	10015fe0 <memcpy>
10010772:	4623      	mov	r3, r4
            out[i] = ByteReverseWord32(in[i]);
10010774:	681a      	ldr	r2, [r3, #0]
10010776:	ba12      	rev	r2, r2
10010778:	f843 2b04 	str.w	r2, [r3], #4
        for (i = 0; i < count; i++)
1001077c:	4598      	cmp	r8, r3
1001077e:	d1f9      	bne.n	10010774 <wc_AesSetKeyLocal.constprop.0+0x88>
    switch (keySz) {
10010780:	f1ba 0f18 	cmp.w	sl, #24
10010784:	f000 81e2 	beq.w	10010b4c <wc_AesSetKeyLocal.constprop.0+0x460>
10010788:	f1ba 0f20 	cmp.w	sl, #32
1001078c:	f000 8157 	beq.w	10010a3e <wc_AesSetKeyLocal.constprop.0+0x352>
10010790:	f1ba 0f10 	cmp.w	sl, #16
10010794:	f000 8111 	beq.w	100109ba <wc_AesSetKeyLocal.constprop.0+0x2ce>
    if (dir == AES_DECRYPTION) {
10010798:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001079a:	2b01      	cmp	r3, #1
1001079c:	d01d      	beq.n	100107da <wc_AesSetKeyLocal.constprop.0+0xee>
    if (iv)
1001079e:	2f00      	cmp	r7, #0
100107a0:	f000 8102 	beq.w	100109a8 <wc_AesSetKeyLocal.constprop.0+0x2bc>
        XMEMCPY(aes->reg, iv, AES_BLOCK_SIZE);
100107a4:	6838      	ldr	r0, [r7, #0]
100107a6:	6879      	ldr	r1, [r7, #4]
100107a8:	68ba      	ldr	r2, [r7, #8]
100107aa:	68fb      	ldr	r3, [r7, #12]
100107ac:	f8c4 00f8 	str.w	r0, [r4, #248]	@ 0xf8
100107b0:	f8cb 1004 	str.w	r1, [fp, #4]
100107b4:	f8cb 2008 	str.w	r2, [fp, #8]
100107b8:	f8cb 300c 	str.w	r3, [fp, #12]
        return ret;
100107bc:	2000      	movs	r0, #0
    } /* wc_AesSetKeyLocal */
100107be:	b005      	add	sp, #20
100107c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    else
        XMEMSET(aes->reg,  0, AES_BLOCK_SIZE);
100107c4:	f8c0 70f8 	str.w	r7, [r0, #248]	@ 0xf8
100107c8:	f8cb 7004 	str.w	r7, [fp, #4]
100107cc:	f8cb 7008 	str.w	r7, [fp, #8]
100107d0:	f8cb 700c 	str.w	r7, [fp, #12]
        XMEMCPY(aes->key, userKey, keylen);
100107d4:	f005 fc04 	bl	10015fe0 <memcpy>
100107d8:	e7bc      	b.n	10010754 <wc_AesSetKeyLocal.constprop.0+0x68>
        for (i = 0, j = 4* aes->rounds; i < j; i += 4, j -= 4) {
100107da:	f8d4 30f0 	ldr.w	r3, [r4, #240]	@ 0xf0
100107de:	009e      	lsls	r6, r3, #2
100107e0:	d01f      	beq.n	10010822 <wc_AesSetKeyLocal.constprop.0+0x136>
100107e2:	eb04 1303 	add.w	r3, r4, r3, lsl #4
100107e6:	4622      	mov	r2, r4
100107e8:	2100      	movs	r1, #0
100107ea:	46a4      	mov	ip, r4
            temp = rk[i    ]; rk[i    ] = rk[j    ]; rk[j    ] = temp;
100107ec:	6810      	ldr	r0, [r2, #0]
100107ee:	681c      	ldr	r4, [r3, #0]
100107f0:	6014      	str	r4, [r2, #0]
100107f2:	6018      	str	r0, [r3, #0]
            temp = rk[i + 1]; rk[i + 1] = rk[j + 1]; rk[j + 1] = temp;
100107f4:	6850      	ldr	r0, [r2, #4]
100107f6:	685c      	ldr	r4, [r3, #4]
100107f8:	6054      	str	r4, [r2, #4]
100107fa:	6058      	str	r0, [r3, #4]
            temp = rk[i + 2]; rk[i + 2] = rk[j + 2]; rk[j + 2] = temp;
100107fc:	6890      	ldr	r0, [r2, #8]
100107fe:	689c      	ldr	r4, [r3, #8]
10010800:	6094      	str	r4, [r2, #8]
10010802:	6098      	str	r0, [r3, #8]
            temp = rk[i + 3]; rk[i + 3] = rk[j + 3]; rk[j + 3] = temp;
10010804:	68d0      	ldr	r0, [r2, #12]
10010806:	68dc      	ldr	r4, [r3, #12]
10010808:	60d4      	str	r4, [r2, #12]
        for (i = 0, j = 4* aes->rounds; i < j; i += 4, j -= 4) {
1001080a:	3104      	adds	r1, #4
            temp = rk[i + 3]; rk[i + 3] = rk[j + 3]; rk[j + 3] = temp;
1001080c:	60d8      	str	r0, [r3, #12]
        for (i = 0, j = 4* aes->rounds; i < j; i += 4, j -= 4) {
1001080e:	1a70      	subs	r0, r6, r1
10010810:	4281      	cmp	r1, r0
10010812:	f102 0210 	add.w	r2, r2, #16
10010816:	f1a3 0310 	sub.w	r3, r3, #16
1001081a:	d3e7      	bcc.n	100107ec <wc_AesSetKeyLocal.constprop.0+0x100>
        for (i = 1; i < aes->rounds; i++) {
1001081c:	f8dc 30f0 	ldr.w	r3, [ip, #240]	@ 0xf0
10010820:	4664      	mov	r4, ip
10010822:	2b01      	cmp	r3, #1
10010824:	d9bb      	bls.n	1001079e <wc_AesSetKeyLocal.constprop.0+0xb2>
10010826:	4b8e      	ldr	r3, [pc, #568]	@ (10010a60 <wc_AesSetKeyLocal.constprop.0+0x374>)
10010828:	4a8e      	ldr	r2, [pc, #568]	@ (10010a64 <wc_AesSetKeyLocal.constprop.0+0x378>)
1001082a:	f8cd b008 	str.w	fp, [sp, #8]
1001082e:	f04f 0e01 	mov.w	lr, #1
10010832:	46a3      	mov	fp, r4
10010834:	9703      	str	r7, [sp, #12]
                GetTable(Td[0], GetTable(Te[1], GETBYTE(rk[1], 3)) & 0xff) ^
10010836:	e9d5 6004 	ldrd	r6, r0, [r5, #16]
                GetTable(Td[3], GetTable(Te[1], GETBYTE(rk[0], 0)) & 0xff);
1001083a:	b2f4      	uxtb	r4, r6
1001083c:	f504 7480 	add.w	r4, r4, #256	@ 0x100
                GetTable(Td[0], GetTable(Te[1], GETBYTE(rk[2], 3)) & 0xff) ^
10010840:	69a9      	ldr	r1, [r5, #24]
                GetTable(Td[3], GetTable(Te[1], GETBYTE(rk[0], 0)) & 0xff);
10010842:	f813 4024 	ldrb.w	r4, [r3, r4, lsl #2]
10010846:	f504 7440 	add.w	r4, r4, #768	@ 0x300
                GetTable(Td[0], GetTable(Te[1], GETBYTE(rk[0], 3)) & 0xff) ^
1001084a:	ea4f 6a16 	mov.w	sl, r6, lsr #24
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[0], 1)) & 0xff) ^
1001084e:	f852 9024 	ldr.w	r9, [r2, r4, lsl #2]
                GetTable(Td[3], GetTable(Te[1], GETBYTE(rk[1], 0)) & 0xff);
10010852:	b2c4      	uxtb	r4, r0
10010854:	f504 7480 	add.w	r4, r4, #256	@ 0x100
                GetTable(Td[0], GetTable(Te[1], GETBYTE(rk[0], 3)) & 0xff) ^
10010858:	f50a 7a80 	add.w	sl, sl, #256	@ 0x100
                GetTable(Td[3], GetTable(Te[1], GETBYTE(rk[1], 0)) & 0xff);
1001085c:	f813 4024 	ldrb.w	r4, [r3, r4, lsl #2]
                GetTable(Td[0], GetTable(Te[1], GETBYTE(rk[0], 3)) & 0xff) ^
10010860:	f813 a02a 	ldrb.w	sl, [r3, sl, lsl #2]
                GetTable(Td[3], GetTable(Te[1], GETBYTE(rk[1], 0)) & 0xff);
10010864:	f504 7440 	add.w	r4, r4, #768	@ 0x300
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[0], 1)) & 0xff) ^
10010868:	f852 a02a 	ldr.w	sl, [r2, sl, lsl #2]
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[1], 1)) & 0xff) ^
1001086c:	f852 c024 	ldr.w	ip, [r2, r4, lsl #2]
                GetTable(Td[3], GetTable(Te[1], GETBYTE(rk[2], 0)) & 0xff);
10010870:	b2cc      	uxtb	r4, r1
10010872:	f504 7480 	add.w	r4, r4, #256	@ 0x100
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[0], 1)) & 0xff) ^
10010876:	ea8a 0a09 	eor.w	sl, sl, r9
                GetTable(Td[3], GetTable(Te[1], GETBYTE(rk[2], 0)) & 0xff);
1001087a:	f813 4024 	ldrb.w	r4, [r3, r4, lsl #2]
1001087e:	f504 7440 	add.w	r4, r4, #768	@ 0x300
                GetTable(Td[1], GetTable(Te[1], GETBYTE(rk[2], 2)) & 0xff) ^
10010882:	f3c1 4707 	ubfx	r7, r1, #16, #8
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[2], 1)) & 0xff) ^
10010886:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
1001088a:	9401      	str	r4, [sp, #4]
                GetTable(Td[1], GetTable(Te[1], GETBYTE(rk[0], 2)) & 0xff) ^
1001088c:	f3c6 4407 	ubfx	r4, r6, #16, #8
10010890:	f504 7480 	add.w	r4, r4, #256	@ 0x100
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[0], 1)) & 0xff) ^
10010894:	f3c6 2607 	ubfx	r6, r6, #8, #8
10010898:	f506 7680 	add.w	r6, r6, #256	@ 0x100
                GetTable(Td[1], GetTable(Te[1], GETBYTE(rk[0], 2)) & 0xff) ^
1001089c:	f813 4024 	ldrb.w	r4, [r3, r4, lsl #2]
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[0], 1)) & 0xff) ^
100108a0:	f813 6026 	ldrb.w	r6, [r3, r6, lsl #2]
                GetTable(Td[1], GetTable(Te[1], GETBYTE(rk[0], 2)) & 0xff) ^
100108a4:	f504 7480 	add.w	r4, r4, #256	@ 0x100
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[0], 1)) & 0xff) ^
100108a8:	f506 7600 	add.w	r6, r6, #512	@ 0x200
100108ac:	f852 8024 	ldr.w	r8, [r2, r4, lsl #2]
100108b0:	f852 6026 	ldr.w	r6, [r2, r6, lsl #2]
100108b4:	ea8a 0a08 	eor.w	sl, sl, r8
                GetTable(Td[1], GetTable(Te[1], GETBYTE(rk[1], 2)) & 0xff) ^
100108b8:	f3c0 4407 	ubfx	r4, r0, #16, #8
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[0], 1)) & 0xff) ^
100108bc:	ea8a 0606 	eor.w	r6, sl, r6
            rk[0] =
100108c0:	612e      	str	r6, [r5, #16]
                GetTable(Td[1], GetTable(Te[1], GETBYTE(rk[1], 2)) & 0xff) ^
100108c2:	f504 7480 	add.w	r4, r4, #256	@ 0x100
                GetTable(Td[0], GetTable(Te[1], GETBYTE(rk[1], 3)) & 0xff) ^
100108c6:	0e06      	lsrs	r6, r0, #24
100108c8:	f506 7680 	add.w	r6, r6, #256	@ 0x100
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[1], 1)) & 0xff) ^
100108cc:	f3c0 2007 	ubfx	r0, r0, #8, #8
                GetTable(Td[1], GetTable(Te[1], GETBYTE(rk[1], 2)) & 0xff) ^
100108d0:	f813 4024 	ldrb.w	r4, [r3, r4, lsl #2]
                GetTable(Td[0], GetTable(Te[1], GETBYTE(rk[1], 3)) & 0xff) ^
100108d4:	f813 6026 	ldrb.w	r6, [r3, r6, lsl #2]
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[1], 1)) & 0xff) ^
100108d8:	f500 7080 	add.w	r0, r0, #256	@ 0x100
                GetTable(Td[1], GetTable(Te[1], GETBYTE(rk[1], 2)) & 0xff) ^
100108dc:	f504 7480 	add.w	r4, r4, #256	@ 0x100
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[1], 1)) & 0xff) ^
100108e0:	f813 8020 	ldrb.w	r8, [r3, r0, lsl #2]
100108e4:	f852 0026 	ldr.w	r0, [r2, r6, lsl #2]
100108e8:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
100108ec:	f508 7800 	add.w	r8, r8, #512	@ 0x200
100108f0:	ea80 000c 	eor.w	r0, r0, ip
100108f4:	4060      	eors	r0, r4
100108f6:	f852 4028 	ldr.w	r4, [r2, r8, lsl #2]
100108fa:	4060      	eors	r0, r4
            rk[1] =
100108fc:	6168      	str	r0, [r5, #20]
                GetTable(Td[1], GetTable(Te[1], GETBYTE(rk[2], 2)) & 0xff) ^
100108fe:	f507 7780 	add.w	r7, r7, #256	@ 0x100
                GetTable(Td[0], GetTable(Te[1], GETBYTE(rk[2], 3)) & 0xff) ^
10010902:	0e08      	lsrs	r0, r1, #24
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[2], 1)) & 0xff) ^
10010904:	f3c1 2107 	ubfx	r1, r1, #8, #8
                GetTable(Td[0], GetTable(Te[1], GETBYTE(rk[2], 3)) & 0xff) ^
10010908:	f500 7080 	add.w	r0, r0, #256	@ 0x100
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[2], 1)) & 0xff) ^
1001090c:	f501 7180 	add.w	r1, r1, #256	@ 0x100
                GetTable(Td[1], GetTable(Te[1], GETBYTE(rk[2], 2)) & 0xff) ^
10010910:	f813 7027 	ldrb.w	r7, [r3, r7, lsl #2]
                GetTable(Td[0], GetTable(Te[1], GETBYTE(rk[2], 3)) & 0xff) ^
10010914:	f813 4020 	ldrb.w	r4, [r3, r0, lsl #2]
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[2], 1)) & 0xff) ^
10010918:	f813 0021 	ldrb.w	r0, [r3, r1, lsl #2]
1001091c:	f852 1024 	ldr.w	r1, [r2, r4, lsl #2]
10010920:	9c01      	ldr	r4, [sp, #4]
                GetTable(Td[1], GetTable(Te[1], GETBYTE(rk[2], 2)) & 0xff) ^
10010922:	f507 7780 	add.w	r7, r7, #256	@ 0x100
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[2], 1)) & 0xff) ^
10010926:	f500 7000 	add.w	r0, r0, #512	@ 0x200
1001092a:	f852 7027 	ldr.w	r7, [r2, r7, lsl #2]
1001092e:	f852 0020 	ldr.w	r0, [r2, r0, lsl #2]
10010932:	4061      	eors	r1, r4
10010934:	4079      	eors	r1, r7
10010936:	4041      	eors	r1, r0
            rk[2] =
10010938:	61a9      	str	r1, [r5, #24]
                GetTable(Td[0], GetTable(Te[1], GETBYTE(rk[3], 3)) & 0xff) ^
1001093a:	69e9      	ldr	r1, [r5, #28]
1001093c:	0e08      	lsrs	r0, r1, #24
1001093e:	f500 7080 	add.w	r0, r0, #256	@ 0x100
        for (i = 1; i < aes->rounds; i++) {
10010942:	3510      	adds	r5, #16
                GetTable(Td[0], GetTable(Te[1], GETBYTE(rk[3], 3)) & 0xff) ^
10010944:	f813 6020 	ldrb.w	r6, [r3, r0, lsl #2]
                GetTable(Td[3], GetTable(Te[1], GETBYTE(rk[3], 0)) & 0xff);
10010948:	b2c8      	uxtb	r0, r1
1001094a:	f500 7080 	add.w	r0, r0, #256	@ 0x100
        for (i = 1; i < aes->rounds; i++) {
1001094e:	f10e 0e01 	add.w	lr, lr, #1
                GetTable(Td[3], GetTable(Te[1], GETBYTE(rk[3], 0)) & 0xff);
10010952:	f813 4020 	ldrb.w	r4, [r3, r0, lsl #2]
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[3], 1)) & 0xff) ^
10010956:	f852 0026 	ldr.w	r0, [r2, r6, lsl #2]
                GetTable(Td[3], GetTable(Te[1], GETBYTE(rk[3], 0)) & 0xff);
1001095a:	f504 7440 	add.w	r4, r4, #768	@ 0x300
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[3], 1)) & 0xff) ^
1001095e:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
10010962:	4060      	eors	r0, r4
                GetTable(Td[1], GetTable(Te[1], GETBYTE(rk[3], 2)) & 0xff) ^
10010964:	f3c1 4407 	ubfx	r4, r1, #16, #8
10010968:	f504 7480 	add.w	r4, r4, #256	@ 0x100
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[3], 1)) & 0xff) ^
1001096c:	f3c1 2107 	ubfx	r1, r1, #8, #8
                GetTable(Td[1], GetTable(Te[1], GETBYTE(rk[3], 2)) & 0xff) ^
10010970:	f813 6024 	ldrb.w	r6, [r3, r4, lsl #2]
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[3], 1)) & 0xff) ^
10010974:	f501 7180 	add.w	r1, r1, #256	@ 0x100
10010978:	f813 4021 	ldrb.w	r4, [r3, r1, lsl #2]
                GetTable(Td[1], GetTable(Te[1], GETBYTE(rk[3], 2)) & 0xff) ^
1001097c:	f506 7180 	add.w	r1, r6, #256	@ 0x100
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[3], 1)) & 0xff) ^
10010980:	f504 7400 	add.w	r4, r4, #512	@ 0x200
10010984:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
10010988:	4041      	eors	r1, r0
1001098a:	f852 0024 	ldr.w	r0, [r2, r4, lsl #2]
1001098e:	4041      	eors	r1, r0
            rk[3] =
10010990:	60e9      	str	r1, [r5, #12]
        for (i = 1; i < aes->rounds; i++) {
10010992:	f8db 10f0 	ldr.w	r1, [fp, #240]	@ 0xf0
10010996:	458e      	cmp	lr, r1
10010998:	f4ff af4d 	bcc.w	10010836 <wc_AesSetKeyLocal.constprop.0+0x14a>
1001099c:	465c      	mov	r4, fp
1001099e:	e9dd b702 	ldrd	fp, r7, [sp, #8]
    if (iv)
100109a2:	2f00      	cmp	r7, #0
100109a4:	f47f aefe 	bne.w	100107a4 <wc_AesSetKeyLocal.constprop.0+0xb8>
        XMEMSET(aes->reg,  0, AES_BLOCK_SIZE);
100109a8:	f8c4 70f8 	str.w	r7, [r4, #248]	@ 0xf8
100109ac:	f8cb 7004 	str.w	r7, [fp, #4]
100109b0:	f8cb 7008 	str.w	r7, [fp, #8]
100109b4:	f8cb 700c 	str.w	r7, [fp, #12]
100109b8:	e700      	b.n	100107bc <wc_AesSetKeyLocal.constprop.0+0xd0>
100109ba:	e9d4 ce01 	ldrd	ip, lr, [r4, #4]
100109be:	4b28      	ldr	r3, [pc, #160]	@ (10010a60 <wc_AesSetKeyLocal.constprop.0+0x374>)
100109c0:	f8df 80a4 	ldr.w	r8, [pc, #164]	@ 10010a68 <wc_AesSetKeyLocal.constprop.0+0x37c>
100109c4:	6820      	ldr	r0, [r4, #0]
100109c6:	68e1      	ldr	r1, [r4, #12]
100109c8:	46a2      	mov	sl, r4
100109ca:	461a      	mov	r2, r3
100109cc:	4674      	mov	r4, lr
100109ce:	4663      	mov	r3, ip
100109d0:	f108 0928 	add.w	r9, r8, #40	@ 0x28
100109d4:	4694      	mov	ip, r2
100109d6:	46d6      	mov	lr, sl
100109d8:	e000      	b.n	100109dc <wc_AesSetKeyLocal.constprop.0+0x2f0>
            rk += 4;
100109da:	3610      	adds	r6, #16
                (GetTable(Te[0], GETBYTE(temp, 0)) & 0x0000ff00) ^
100109dc:	b2ca      	uxtb	r2, r1
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
100109de:	ea4f 6a11 	mov.w	sl, r1, lsr #24
100109e2:	f50a 7a80 	add.w	sl, sl, #256	@ 0x100
                (GetTable(Te[0], GETBYTE(temp, 0)) & 0x0000ff00) ^
100109e6:	f85c 2022 	ldr.w	r2, [ip, r2, lsl #2]
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
100109ea:	f81c a02a 	ldrb.w	sl, [ip, sl, lsl #2]
                (GetTable(Te[0], GETBYTE(temp, 0)) & 0x0000ff00) ^
100109ee:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
100109f2:	ea42 020a 	orr.w	r2, r2, sl
                (GetTable(Te[2], GETBYTE(temp, 2)) & 0xff000000) ^
100109f6:	f3c1 4a07 	ubfx	sl, r1, #16, #8
100109fa:	f50a 7a00 	add.w	sl, sl, #512	@ 0x200
100109fe:	f85c a02a 	ldr.w	sl, [ip, sl, lsl #2]
10010a02:	f00a 4a7f 	and.w	sl, sl, #4278190080	@ 0xff000000
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
10010a06:	ea82 020a 	eor.w	r2, r2, sl
                (GetTable(Te[3], GETBYTE(temp, 1)) & 0x00ff0000) ^
10010a0a:	f3c1 2a07 	ubfx	sl, r1, #8, #8
10010a0e:	f50a 7a40 	add.w	sl, sl, #768	@ 0x300
10010a12:	f85c a02a 	ldr.w	sl, [ip, sl, lsl #2]
10010a16:	f40a 0a7f 	and.w	sl, sl, #16711680	@ 0xff0000
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
10010a1a:	ea82 020a 	eor.w	r2, r2, sl
                rcon[i];
10010a1e:	f858 ab04 	ldr.w	sl, [r8], #4
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
10010a22:	ea82 020a 	eor.w	r2, r2, sl
10010a26:	4050      	eors	r0, r2
            rk[5] = rk[1] ^ rk[4];
10010a28:	4043      	eors	r3, r0
            rk[6] = rk[2] ^ rk[5];
10010a2a:	405c      	eors	r4, r3
            rk[7] = rk[3] ^ rk[6];
10010a2c:	4061      	eors	r1, r4
            if (++i == 10)
10010a2e:	45c1      	cmp	r9, r8
            rk[5] = rk[1] ^ rk[4];
10010a30:	e9c6 0304 	strd	r0, r3, [r6, #16]
            rk[7] = rk[3] ^ rk[6];
10010a34:	e9c6 4106 	strd	r4, r1, [r6, #24]
            if (++i == 10)
10010a38:	d1cf      	bne.n	100109da <wc_AesSetKeyLocal.constprop.0+0x2ee>
10010a3a:	4674      	mov	r4, lr
10010a3c:	e6ac      	b.n	10010798 <wc_AesSetKeyLocal.constprop.0+0xac>
10010a3e:	e9d4 8e00 	ldrd	r8, lr, [r4]
10010a42:	e9d4 c102 	ldrd	ip, r1, [r4, #8]
10010a46:	4622      	mov	r2, r4
10010a48:	9501      	str	r5, [sp, #4]
10010a4a:	4664      	mov	r4, ip
10010a4c:	f8df 901c 	ldr.w	r9, [pc, #28]	@ 10010a6c <wc_AesSetKeyLocal.constprop.0+0x380>
10010a50:	4b03      	ldr	r3, [pc, #12]	@ (10010a60 <wc_AesSetKeyLocal.constprop.0+0x374>)
10010a52:	9702      	str	r7, [sp, #8]
10010a54:	4640      	mov	r0, r8
10010a56:	4675      	mov	r5, lr
10010a58:	4694      	mov	ip, r2
10010a5a:	e03d      	b.n	10010ad8 <wc_AesSetKeyLocal.constprop.0+0x3ec>
10010a5c:	00010101 	.word	0x00010101
10010a60:	1001c774 	.word	0x1001c774
10010a64:	1001b774 	.word	0x1001b774
10010a68:	1001d774 	.word	0x1001d774
10010a6c:	1001d770 	.word	0x1001d770
                (GetTable(Te[3], GETBYTE(temp, 2)) & 0x00ff0000) ^
10010a70:	f3c1 4e07 	ubfx	lr, r1, #16, #8
10010a74:	f50e 7e40 	add.w	lr, lr, #768	@ 0x300
                (GetTable(Te[0], GETBYTE(temp, 1)) & 0x0000ff00) ^
10010a78:	f3c1 2807 	ubfx	r8, r1, #8, #8
                (GetTable(Te[3], GETBYTE(temp, 2)) & 0x00ff0000) ^
10010a7c:	f853 e02e 	ldr.w	lr, [r3, lr, lsl #2]
                (GetTable(Te[0], GETBYTE(temp, 1)) & 0x0000ff00) ^
10010a80:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
10010a84:	6937      	ldr	r7, [r6, #16]
10010a86:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
                (GetTable(Te[3], GETBYTE(temp, 2)) & 0x00ff0000) ^
10010a8a:	f40e 0e7f 	and.w	lr, lr, #16711680	@ 0xff0000
                (GetTable(Te[0], GETBYTE(temp, 1)) & 0x0000ff00) ^
10010a8e:	ea4e 0e08 	orr.w	lr, lr, r8
                (GetTable(Te[2], GETBYTE(temp, 3)) & 0xff000000) ^
10010a92:	ea4f 6811 	mov.w	r8, r1, lsr #24
10010a96:	f508 7800 	add.w	r8, r8, #512	@ 0x200
                (GetTable(Te[0], GETBYTE(temp, 1)) & 0x0000ff00) ^
10010a9a:	ea8e 0e07 	eor.w	lr, lr, r7
                (GetTable(Te[2], GETBYTE(temp, 3)) & 0xff000000) ^
10010a9e:	f853 a028 	ldr.w	sl, [r3, r8, lsl #2]
            rk[13] = rk[ 5] ^ rk[12];
10010aa2:	6977      	ldr	r7, [r6, #20]
                (GetTable(Te[1], GETBYTE(temp, 0)) & 0x000000ff);
10010aa4:	fa5f f881 	uxtb.w	r8, r1
10010aa8:	f508 7880 	add.w	r8, r8, #256	@ 0x100
                (GetTable(Te[2], GETBYTE(temp, 3)) & 0xff000000) ^
10010aac:	f00a 4a7f 	and.w	sl, sl, #4278190080	@ 0xff000000
                (GetTable(Te[1], GETBYTE(temp, 0)) & 0x000000ff);
10010ab0:	f813 8028 	ldrb.w	r8, [r3, r8, lsl #2]
                (GetTable(Te[0], GETBYTE(temp, 1)) & 0x0000ff00) ^
10010ab4:	ea4a 0808 	orr.w	r8, sl, r8
10010ab8:	ea8e 0e08 	eor.w	lr, lr, r8
            rk[12] = rk[ 4] ^
10010abc:	f8c6 e030 	str.w	lr, [r6, #48]	@ 0x30
            rk[13] = rk[ 5] ^ rk[12];
10010ac0:	ea8e 0e07 	eor.w	lr, lr, r7
            rk[14] = rk[ 6] ^ rk[13];
10010ac4:	69b7      	ldr	r7, [r6, #24]
            rk[13] = rk[ 5] ^ rk[12];
10010ac6:	f8c6 e034 	str.w	lr, [r6, #52]	@ 0x34
            rk[14] = rk[ 6] ^ rk[13];
10010aca:	ea8e 0e07 	eor.w	lr, lr, r7
            rk[15] = rk[ 7] ^ rk[14];
10010ace:	ea82 020e 	eor.w	r2, r2, lr
10010ad2:	e9c6 e20e 	strd	lr, r2, [r6, #56]	@ 0x38
            rk += 8;
10010ad6:	3620      	adds	r6, #32
            temp = rk[ 7];
10010ad8:	69f2      	ldr	r2, [r6, #28]
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
10010ada:	f859 af04 	ldr.w	sl, [r9, #4]!
            if (++i == 7)
10010ade:	4f42      	ldr	r7, [pc, #264]	@ (10010be8 <wc_AesSetKeyLocal.constprop.0+0x4fc>)
                (GetTable(Te[0], GETBYTE(temp, 0)) & 0x0000ff00) ^
10010ae0:	fa5f fe82 	uxtb.w	lr, r2
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
10010ae4:	ea4f 6812 	mov.w	r8, r2, lsr #24
10010ae8:	f508 7880 	add.w	r8, r8, #256	@ 0x100
                (GetTable(Te[0], GETBYTE(temp, 0)) & 0x0000ff00) ^
10010aec:	f853 e02e 	ldr.w	lr, [r3, lr, lsl #2]
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
10010af0:	f813 8028 	ldrb.w	r8, [r3, r8, lsl #2]
                (GetTable(Te[0], GETBYTE(temp, 0)) & 0x0000ff00) ^
10010af4:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
10010af8:	ea4e 0e08 	orr.w	lr, lr, r8
                (GetTable(Te[2], GETBYTE(temp, 2)) & 0xff000000) ^
10010afc:	f3c2 4807 	ubfx	r8, r2, #16, #8
10010b00:	f508 7800 	add.w	r8, r8, #512	@ 0x200
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
10010b04:	ea8e 0e0a 	eor.w	lr, lr, sl
                (GetTable(Te[2], GETBYTE(temp, 2)) & 0xff000000) ^
10010b08:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
10010b0c:	f008 487f 	and.w	r8, r8, #4278190080	@ 0xff000000
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
10010b10:	ea8e 0e08 	eor.w	lr, lr, r8
                (GetTable(Te[3], GETBYTE(temp, 1)) & 0x00ff0000) ^
10010b14:	f3c2 2807 	ubfx	r8, r2, #8, #8
10010b18:	f508 7840 	add.w	r8, r8, #768	@ 0x300
            if (++i == 7)
10010b1c:	454f      	cmp	r7, r9
                (GetTable(Te[3], GETBYTE(temp, 1)) & 0x00ff0000) ^
10010b1e:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
10010b22:	f408 087f 	and.w	r8, r8, #16711680	@ 0xff0000
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
10010b26:	ea8e 0e08 	eor.w	lr, lr, r8
10010b2a:	ea80 000e 	eor.w	r0, r0, lr
            rk[ 9] = rk[ 1] ^ rk[ 8];
10010b2e:	ea85 0500 	eor.w	r5, r5, r0
            rk[10] = rk[ 2] ^ rk[ 9];
10010b32:	ea84 0405 	eor.w	r4, r4, r5
            rk[11] = rk[ 3] ^ rk[10];
10010b36:	ea81 0104 	eor.w	r1, r1, r4
            rk[ 9] = rk[ 1] ^ rk[ 8];
10010b3a:	e9c6 0508 	strd	r0, r5, [r6, #32]
            rk[11] = rk[ 3] ^ rk[10];
10010b3e:	e9c6 410a 	strd	r4, r1, [r6, #40]	@ 0x28
            if (++i == 7)
10010b42:	d195      	bne.n	10010a70 <wc_AesSetKeyLocal.constprop.0+0x384>
10010b44:	9d01      	ldr	r5, [sp, #4]
10010b46:	9f02      	ldr	r7, [sp, #8]
10010b48:	4664      	mov	r4, ip
10010b4a:	e625      	b.n	10010798 <wc_AesSetKeyLocal.constprop.0+0xac>
10010b4c:	e9d4 c902 	ldrd	ip, r9, [r4, #8]
10010b50:	4b26      	ldr	r3, [pc, #152]	@ (10010bec <wc_AesSetKeyLocal.constprop.0+0x500>)
10010b52:	f8d4 e000 	ldr.w	lr, [r4]
10010b56:	6860      	ldr	r0, [r4, #4]
10010b58:	9501      	str	r5, [sp, #4]
10010b5a:	461a      	mov	r2, r3
10010b5c:	46a0      	mov	r8, r4
10010b5e:	4663      	mov	r3, ip
10010b60:	f8df a090 	ldr.w	sl, [pc, #144]	@ 10010bf4 <wc_AesSetKeyLocal.constprop.0+0x508>
10010b64:	4675      	mov	r5, lr
10010b66:	464c      	mov	r4, r9
10010b68:	4694      	mov	ip, r2
10010b6a:	e005      	b.n	10010b78 <wc_AesSetKeyLocal.constprop.0+0x48c>
            rk[10] = rk[ 4] ^ rk[ 9];
10010b6c:	6932      	ldr	r2, [r6, #16]
10010b6e:	4062      	eors	r2, r4
            rk[11] = rk[ 5] ^ rk[10];
10010b70:	4051      	eors	r1, r2
10010b72:	e9c6 210a 	strd	r2, r1, [r6, #40]	@ 0x28
            rk += 6;
10010b76:	3618      	adds	r6, #24
            temp = rk[ 5];
10010b78:	6971      	ldr	r1, [r6, #20]
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
10010b7a:	f85a 9f04 	ldr.w	r9, [sl, #4]!
                (GetTable(Te[0], GETBYTE(temp, 0)) & 0x0000ff00) ^
10010b7e:	b2ca      	uxtb	r2, r1
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
10010b80:	ea4f 6e11 	mov.w	lr, r1, lsr #24
10010b84:	f50e 7e80 	add.w	lr, lr, #256	@ 0x100
                (GetTable(Te[0], GETBYTE(temp, 0)) & 0x0000ff00) ^
10010b88:	f85c 2022 	ldr.w	r2, [ip, r2, lsl #2]
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
10010b8c:	f81c e02e 	ldrb.w	lr, [ip, lr, lsl #2]
                (GetTable(Te[0], GETBYTE(temp, 0)) & 0x0000ff00) ^
10010b90:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
10010b94:	ea42 020e 	orr.w	r2, r2, lr
                (GetTable(Te[2], GETBYTE(temp, 2)) & 0xff000000) ^
10010b98:	f3c1 4e07 	ubfx	lr, r1, #16, #8
10010b9c:	f50e 7e00 	add.w	lr, lr, #512	@ 0x200
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
10010ba0:	ea82 0209 	eor.w	r2, r2, r9
                (GetTable(Te[2], GETBYTE(temp, 2)) & 0xff000000) ^
10010ba4:	f85c e02e 	ldr.w	lr, [ip, lr, lsl #2]
10010ba8:	f00e 4e7f 	and.w	lr, lr, #4278190080	@ 0xff000000
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
10010bac:	ea82 020e 	eor.w	r2, r2, lr
                (GetTable(Te[3], GETBYTE(temp, 1)) & 0x00ff0000) ^
10010bb0:	f3c1 2e07 	ubfx	lr, r1, #8, #8
10010bb4:	f50e 7e40 	add.w	lr, lr, #768	@ 0x300
10010bb8:	f85c e02e 	ldr.w	lr, [ip, lr, lsl #2]
10010bbc:	f40e 0e7f 	and.w	lr, lr, #16711680	@ 0xff0000
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
10010bc0:	ea82 020e 	eor.w	r2, r2, lr
10010bc4:	4055      	eors	r5, r2
            rk[ 7] = rk[ 1] ^ rk[ 6];
10010bc6:	4068      	eors	r0, r5
            if (++i == 8)
10010bc8:	4a09      	ldr	r2, [pc, #36]	@ (10010bf0 <wc_AesSetKeyLocal.constprop.0+0x504>)
            rk[ 8] = rk[ 2] ^ rk[ 7];
10010bca:	4043      	eors	r3, r0
            rk[ 9] = rk[ 3] ^ rk[ 8];
10010bcc:	405c      	eors	r4, r3
            if (++i == 8)
10010bce:	4552      	cmp	r2, sl
            rk[ 7] = rk[ 1] ^ rk[ 6];
10010bd0:	e9c6 5006 	strd	r5, r0, [r6, #24]
            rk[ 9] = rk[ 3] ^ rk[ 8];
10010bd4:	e9c6 3408 	strd	r3, r4, [r6, #32]
            if (++i == 8)
10010bd8:	d1c8      	bne.n	10010b6c <wc_AesSetKeyLocal.constprop.0+0x480>
10010bda:	9d01      	ldr	r5, [sp, #4]
10010bdc:	4644      	mov	r4, r8
10010bde:	e5db      	b.n	10010798 <wc_AesSetKeyLocal.constprop.0+0xac>
10010be0:	f06f 00ac 	mvn.w	r0, #172	@ 0xac
    } /* wc_AesSetKeyLocal */
10010be4:	4770      	bx	lr
10010be6:	bf00      	nop
10010be8:	1001d78c 	.word	0x1001d78c
10010bec:	1001c774 	.word	0x1001c774
10010bf0:	1001d790 	.word	0x1001d790
10010bf4:	1001d770 	.word	0x1001d770

10010bf8 <wc_AesSetKey>:
    {
10010bf8:	b410      	push	{r4}
10010bfa:	9c01      	ldr	r4, [sp, #4]
        if (aes == NULL) {
10010bfc:	b130      	cbz	r0, 10010c0c <wc_AesSetKey+0x14>
        if (keylen > sizeof(aes->key)) {
10010bfe:	2af0      	cmp	r2, #240	@ 0xf0
10010c00:	d804      	bhi.n	10010c0c <wc_AesSetKey+0x14>
        return wc_AesSetKeyLocal(aes, userKey, keylen, iv, dir, 1);
10010c02:	9401      	str	r4, [sp, #4]
    } /* wc_AesSetKey() */
10010c04:	f85d 4b04 	ldr.w	r4, [sp], #4
        return wc_AesSetKeyLocal(aes, userKey, keylen, iv, dir, 1);
10010c08:	f7ff bd70 	b.w	100106ec <wc_AesSetKeyLocal.constprop.0>
    } /* wc_AesSetKey() */
10010c0c:	f06f 00ac 	mvn.w	r0, #172	@ 0xac
10010c10:	f85d 4b04 	ldr.w	r4, [sp], #4
10010c14:	4770      	bx	lr
10010c16:	bf00      	nop

10010c18 <wc_AesEncryptDirect>:
        /* Allow direct access to one block encrypt */
        int wc_AesEncryptDirect(Aes* aes, byte* out, const byte* in)
        {
            int ret;

            if (aes == NULL)
10010c18:	b190      	cbz	r0, 10010c40 <wc_AesEncryptDirect+0x28>
        {
10010c1a:	b508      	push	{r3, lr}
10010c1c:	4613      	mov	r3, r2
10010c1e:	460a      	mov	r2, r1
10010c20:	4619      	mov	r1, r3
    r = aes->rounds >> 1;
10010c22:	f8d0 30f0 	ldr.w	r3, [r0, #240]	@ 0xf0
10010c26:	085b      	lsrs	r3, r3, #1
    if (r > 7 || r == 0) {
10010c28:	f103 3cff 	add.w	ip, r3, #4294967295	@ 0xffffffff
10010c2c:	f1bc 0f06 	cmp.w	ip, #6
10010c30:	d803      	bhi.n	10010c3a <wc_AesEncryptDirect+0x22>
    AesEncrypt_C(aes, inBlock, outBlock, r);
10010c32:	f7fd ffbb 	bl	1000ebac <AesEncrypt_C>
    return 0;
10010c36:	2000      	movs	r0, #0
                return BAD_FUNC_ARG;
            VECTOR_REGISTERS_PUSH;
            ret = wc_AesEncrypt(aes, in, out);
            VECTOR_REGISTERS_POP;
            return ret;
        }
10010c38:	bd08      	pop	{r3, pc}
        return KEYUSAGE_E;
10010c3a:	f06f 00e1 	mvn.w	r0, #225	@ 0xe1
        }
10010c3e:	bd08      	pop	{r3, pc}
                return BAD_FUNC_ARG;
10010c40:	f06f 00ac 	mvn.w	r0, #172	@ 0xac
        }
10010c44:	4770      	bx	lr
10010c46:	bf00      	nop

10010c48 <wc_AesDecryptDirect>:
        /* Allow direct access to one block decrypt */
        int wc_AesDecryptDirect(Aes* aes, byte* out, const byte* in)
        {
            int ret;

            if (aes == NULL)
10010c48:	b190      	cbz	r0, 10010c70 <wc_AesDecryptDirect+0x28>
        {
10010c4a:	b508      	push	{r3, lr}
10010c4c:	4613      	mov	r3, r2
10010c4e:	460a      	mov	r2, r1
10010c50:	4619      	mov	r1, r3
    r = aes->rounds >> 1;
10010c52:	f8d0 30f0 	ldr.w	r3, [r0, #240]	@ 0xf0
10010c56:	085b      	lsrs	r3, r3, #1
    if (r > 7 || r == 0) {
10010c58:	f103 3cff 	add.w	ip, r3, #4294967295	@ 0xffffffff
10010c5c:	f1bc 0f06 	cmp.w	ip, #6
10010c60:	d803      	bhi.n	10010c6a <wc_AesDecryptDirect+0x22>
    AesDecrypt_C(aes, inBlock, outBlock, r);
10010c62:	f7fe fe8b 	bl	1000f97c <AesDecrypt_C>
    return 0;
10010c66:	2000      	movs	r0, #0
                return BAD_FUNC_ARG;
            VECTOR_REGISTERS_PUSH;
            ret = wc_AesDecrypt(aes, in, out);
            VECTOR_REGISTERS_POP;
            return ret;
        }
10010c68:	bd08      	pop	{r3, pc}
        return KEYUSAGE_E;
10010c6a:	f06f 00e1 	mvn.w	r0, #225	@ 0xe1
        }
10010c6e:	bd08      	pop	{r3, pc}
                return BAD_FUNC_ARG;
10010c70:	f06f 00ac 	mvn.w	r0, #172	@ 0xac
        }
10010c74:	4770      	bx	lr
10010c76:	bf00      	nop

10010c78 <mxc_assert>:
};
const unsigned int num_leds = (sizeof(led_pin) / sizeof(mxc_gpio_cfg_t));

/******************************************************************************/
void mxc_assert(const char *expr, const char *file, int line)
{
10010c78:	b508      	push	{r3, lr}
10010c7a:	4603      	mov	r3, r0
    printf("MXC_ASSERT %s #%d: (%s)\n", file, line, expr);
10010c7c:	4801      	ldr	r0, [pc, #4]	@ (10010c84 <mxc_assert+0xc>)
10010c7e:	f003 ff77 	bl	10014b70 <printf>

    while (1) {}
10010c82:	e7fe      	b.n	10010c82 <mxc_assert+0xa>
10010c84:	1001d79c 	.word	0x1001d79c

10010c88 <GPIO0_IRQHandler>:
 * NOTE: This weak definition is included to support Push Button 0 interrupts in
 *       case the user does not define this interrupt handler in their application.
 **/
__weak void GPIO0_IRQHandler(void)
{
    MXC_GPIO_Handler(MXC_GPIO_GET_IDX(MXC_GPIO0));
10010c88:	2000      	movs	r0, #0
10010c8a:	f000 bd79 	b.w	10011780 <MXC_GPIO_Handler>
10010c8e:	bf00      	nop

10010c90 <GPIO1_IRQHandler>:
 * NOTE: This weak definition is included to support Push Button 1 interrupts in
 *       case the user does not define this interrupt handler in their application.
 **/
__weak void GPIO1_IRQHandler(void)
{
    MXC_GPIO_Handler(MXC_GPIO_GET_IDX(MXC_GPIO1));
10010c90:	2001      	movs	r0, #1
10010c92:	f000 bd75 	b.w	10011780 <MXC_GPIO_Handler>
10010c96:	bf00      	nop

10010c98 <Board_Init>:
}

/******************************************************************************/
int Board_Init(void)
{
10010c98:	b510      	push	{r4, lr}
#ifndef __riscv
    int err;

    // Enable GPIO
    MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_GPIO0);
10010c9a:	2000      	movs	r0, #0
10010c9c:	f000 fb5c 	bl	10011358 <MXC_SYS_ClockEnable>
    MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_GPIO1);
10010ca0:	2001      	movs	r0, #1
10010ca2:	f000 fb59 	bl	10011358 <MXC_SYS_ClockEnable>
    MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_GPIO2);
10010ca6:	2040      	movs	r0, #64	@ 0x40
10010ca8:	f000 fb56 	bl	10011358 <MXC_SYS_ClockEnable>
/******************************************************************************/
int Console_Init(void)
{
    int err;

    if ((err = MXC_UART_Init(ConsoleUart, CONSOLE_BAUD, MXC_UART_IBRO_CLK)) != E_NO_ERROR) {
10010cac:	4b10      	ldr	r3, [pc, #64]	@ (10010cf0 <Board_Init+0x58>)
10010cae:	2202      	movs	r2, #2
10010cb0:	6818      	ldr	r0, [r3, #0]
10010cb2:	f44f 31e1 	mov.w	r1, #115200	@ 0x1c200
10010cb6:	f001 f92f 	bl	10011f18 <MXC_UART_Init>
    if ((err = Console_Init()) < E_NO_ERROR) {
10010cba:	1e04      	subs	r4, r0, #0
10010cbc:	db0c      	blt.n	10010cd8 <Board_Init+0x40>
    if ((err = PB_Init()) != E_NO_ERROR) {
10010cbe:	f000 f8eb 	bl	10010e98 <PB_Init>
10010cc2:	b958      	cbnz	r0, 10010cdc <Board_Init+0x44>
    if ((err = LED_Init()) != E_NO_ERROR) {
10010cc4:	f000 f888 	bl	10010dd8 <LED_Init>
10010cc8:	4604      	mov	r4, r0
10010cca:	b960      	cbnz	r0, 10010ce6 <Board_Init+0x4e>
    MXC_SIMO->vrego_c = 0x43; // Set CNN voltage
10010ccc:	4b09      	ldr	r3, [pc, #36]	@ (10010cf4 <Board_Init+0x5c>)
    MXC_Delay(200000);
10010cce:	480a      	ldr	r0, [pc, #40]	@ (10010cf8 <Board_Init+0x60>)
    MXC_SIMO->vrego_c = 0x43; // Set CNN voltage
10010cd0:	2243      	movs	r2, #67	@ 0x43
10010cd2:	60da      	str	r2, [r3, #12]
    MXC_Delay(200000);
10010cd4:	f000 fabe 	bl	10011254 <MXC_Delay>
}
10010cd8:	4620      	mov	r0, r4
10010cda:	bd10      	pop	{r4, pc}
        MXC_ASSERT_FAIL();
10010cdc:	4907      	ldr	r1, [pc, #28]	@ (10010cfc <Board_Init+0x64>)
10010cde:	4808      	ldr	r0, [pc, #32]	@ (10010d00 <Board_Init+0x68>)
10010ce0:	226f      	movs	r2, #111	@ 0x6f
10010ce2:	f7ff ffc9 	bl	10010c78 <mxc_assert>
        MXC_ASSERT_FAIL();
10010ce6:	4905      	ldr	r1, [pc, #20]	@ (10010cfc <Board_Init+0x64>)
10010ce8:	4805      	ldr	r0, [pc, #20]	@ (10010d00 <Board_Init+0x68>)
10010cea:	2274      	movs	r2, #116	@ 0x74
10010cec:	f7ff ffc4 	bl	10010c78 <mxc_assert>
10010cf0:	20000040 	.word	0x20000040
10010cf4:	40004400 	.word	0x40004400
10010cf8:	00030d40 	.word	0x00030d40
10010cfc:	1001d7b8 	.word	0x1001d7b8
10010d00:	1001d800 	.word	0x1001d800

10010d04 <NMI_Handler>:
}

/******************************************************************************/
void NMI_Handler(void)
{
    __NOP();
10010d04:	bf00      	nop
}
10010d06:	4770      	bx	lr

10010d08 <_close>:
    return -1;
}
int _close(int file)
{
    return -1;
}
10010d08:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10010d0c:	4770      	bx	lr
10010d0e:	bf00      	nop

10010d10 <_isatty>:
int _isatty(int file)
10010d10:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10010d14:	4770      	bx	lr
10010d16:	bf00      	nop

10010d18 <_lseek>:
    return -1;
}
int _lseek(int file, off_t offset, int whence)
{
    return -1;
}
10010d18:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10010d1c:	4770      	bx	lr
10010d1e:	bf00      	nop

10010d20 <_fstat>:
int _fstat(int file, struct stat *st)
{
    return -1;
}
10010d20:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10010d24:	4770      	bx	lr
10010d26:	bf00      	nop

10010d28 <_read>:
   fgetc for stdio */
#if defined(__ICCARM__) || defined(__GNUC__)

#if defined(__GNUC__) // GNUC _read function prototype
int _read(int file, char *ptr, int len)
{
10010d28:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    size_t n;
#endif /*  */

    int num = 0; // count of number received.

    switch (file) {
10010d2a:	b9e0      	cbnz	r0, 10010d66 <_read+0x3e>
    case STDIN_FILENO:
        for (n = 0; n < len; n++) {
10010d2c:	2a00      	cmp	r2, #0
10010d2e:	dd19      	ble.n	10010d64 <_read+0x3c>
            *ptr = MXC_UART_ReadCharacter(MXC_UARTn); // read a byte.
10010d30:	4d10      	ldr	r5, [pc, #64]	@ (10010d74 <_read+0x4c>)
10010d32:	460e      	mov	r6, r1
10010d34:	188f      	adds	r7, r1, r2
        for (n = 0; n < len; n++) {
10010d36:	460c      	mov	r4, r1
10010d38:	e002      	b.n	10010d40 <_read+0x18>
10010d3a:	42bb      	cmp	r3, r7
10010d3c:	d00f      	beq.n	10010d5e <_read+0x36>
                num++;
                ptr++;

                break;
            } else {
                ptr++;
10010d3e:	461c      	mov	r4, r3
            *ptr = MXC_UART_ReadCharacter(MXC_UARTn); // read a byte.
10010d40:	4628      	mov	r0, r5
10010d42:	f001 f9e1 	bl	10012108 <MXC_UART_ReadCharacter>
10010d46:	b2c1      	uxtb	r1, r0
10010d48:	7021      	strb	r1, [r4, #0]
            MXC_UART_WriteCharacter(MXC_UARTn, *ptr); // echo the byte.
10010d4a:	4628      	mov	r0, r5
10010d4c:	f001 f9de 	bl	1001210c <MXC_UART_WriteCharacter>
            if (*ptr == '\r') { // check for end of line.
10010d50:	7822      	ldrb	r2, [r4, #0]
10010d52:	2a0d      	cmp	r2, #13
                ptr++;
10010d54:	f104 0301 	add.w	r3, r4, #1
            if (*ptr == '\r') { // check for end of line.
10010d58:	d1ef      	bne.n	10010d3a <_read+0x12>
                *ptr = '\n';
10010d5a:	230a      	movs	r3, #10
10010d5c:	7023      	strb	r3, [r4, #0]
                num++;
10010d5e:	f1c6 0601 	rsb	r6, r6, #1
10010d62:	19a0      	adds	r0, r4, r6
        errno = EBADF;
        return -1;
    }

    return num;
}
10010d64:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        errno = EBADF;
10010d66:	f001 fcb3 	bl	100126d0 <__errno>
10010d6a:	2309      	movs	r3, #9
10010d6c:	6003      	str	r3, [r0, #0]
        return -1;
10010d6e:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
10010d72:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10010d74:	40042000 	.word	0x40042000

10010d78 <_write>:

/* newlib/libc printf() will eventually call write() to get the data to the stdout */
#if defined(__GNUC__)
// GNUC _write function prototype
int _write(int file, char *ptr, int len)
{
10010d78:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
int __write(int file, const unsigned char *ptr, size_t len)
{
    size_t n;
#endif /* __GNUC__ */

    switch (file) {
10010d7a:	1e43      	subs	r3, r0, #1
10010d7c:	2b01      	cmp	r3, #1
10010d7e:	d821      	bhi.n	10010dc4 <_write+0x4c>
    case STDOUT_FILENO:
    case STDERR_FILENO:

        // This function should be as fast as possible
        // So we'll forgo the UART driver for now
        for (n = 0; n < len; n++) {
10010d80:	2a00      	cmp	r2, #0
10010d82:	4617      	mov	r7, r2
10010d84:	dd12      	ble.n	10010dac <_write+0x34>
10010d86:	1e53      	subs	r3, r2, #1
            if (*ptr == '\n') {
                // Wait until there's room in the FIFO
                while (MXC_UART_GetTXFIFOAvailable(MXC_UARTn) == 0) {}
10010d88:	4e12      	ldr	r6, [pc, #72]	@ (10010dd4 <_write+0x5c>)
10010d8a:	1e4c      	subs	r4, r1, #1
10010d8c:	18cd      	adds	r5, r1, r3
            if (*ptr == '\n') {
10010d8e:	f814 3f01 	ldrb.w	r3, [r4, #1]!
10010d92:	2b0a      	cmp	r3, #10
10010d94:	d00c      	beq.n	10010db0 <_write+0x38>

                MXC_UART_WriteCharacter(MXC_UARTn, '\r');
            }

            // Wait until there's room in the FIFO
            while (MXC_UART_GetTXFIFOAvailable(MXC_UARTn) == 0) {}
10010d96:	480f      	ldr	r0, [pc, #60]	@ (10010dd4 <_write+0x5c>)
10010d98:	f001 f9bc 	bl	10012114 <MXC_UART_GetTXFIFOAvailable>
10010d9c:	2800      	cmp	r0, #0
10010d9e:	d0fa      	beq.n	10010d96 <_write+0x1e>

            MXC_UART_WriteCharacter(MXC_UARTn, *ptr++);
10010da0:	7821      	ldrb	r1, [r4, #0]
10010da2:	4630      	mov	r0, r6
10010da4:	f001 f9b2 	bl	1001210c <MXC_UART_WriteCharacter>
        for (n = 0; n < len; n++) {
10010da8:	42ac      	cmp	r4, r5
10010daa:	d1f0      	bne.n	10010d8e <_write+0x16>

        break;

    default:
        errno = EBADF;
        return -1;
10010dac:	4638      	mov	r0, r7
    }

    return len;
}
10010dae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
                while (MXC_UART_GetTXFIFOAvailable(MXC_UARTn) == 0) {}
10010db0:	4808      	ldr	r0, [pc, #32]	@ (10010dd4 <_write+0x5c>)
10010db2:	f001 f9af 	bl	10012114 <MXC_UART_GetTXFIFOAvailable>
10010db6:	2800      	cmp	r0, #0
10010db8:	d0fa      	beq.n	10010db0 <_write+0x38>
                MXC_UART_WriteCharacter(MXC_UARTn, '\r');
10010dba:	210d      	movs	r1, #13
10010dbc:	4630      	mov	r0, r6
10010dbe:	f001 f9a5 	bl	1001210c <MXC_UART_WriteCharacter>
10010dc2:	e7e8      	b.n	10010d96 <_write+0x1e>
        errno = EBADF;
10010dc4:	f001 fc84 	bl	100126d0 <__errno>
10010dc8:	2309      	movs	r3, #9
10010dca:	6003      	str	r3, [r0, #0]
        return -1;
10010dcc:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
10010dd0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10010dd2:	bf00      	nop
10010dd4:	40042000 	.word	0x40042000

10010dd8 <LED_Init>:
#include "led.h"
#include "mxc_device.h"

/******************************************************************************/
int LED_Init(void)
{
10010dd8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    int retval = E_NO_ERROR;
    unsigned int i;

    /* setup GPIO for the LED */
    for (i = 0; i < num_leds; i++) {
10010dda:	4b0d      	ldr	r3, [pc, #52]	@ (10010e10 <LED_Init+0x38>)
10010ddc:	681f      	ldr	r7, [r3, #0]
10010dde:	b1a7      	cbz	r7, 10010e0a <LED_Init+0x32>
10010de0:	2500      	movs	r5, #0
10010de2:	4c0c      	ldr	r4, [pc, #48]	@ (10010e14 <LED_Init+0x3c>)
    int retval = E_NO_ERROR;
10010de4:	462e      	mov	r6, r5
//******************************************************************************
void LED_Off(unsigned int idx)
{
    MXC_ASSERT(idx < num_leds);
#if (LED_ON == 0)
    MXC_GPIO_OutSet(led_pin[idx].port, led_pin[idx].mask);
10010de6:	e9d4 0100 	ldrd	r0, r1, [r4]
10010dea:	f000 fc9b 	bl	10011724 <MXC_GPIO_OutSet>
        if (MXC_GPIO_Config(&led_pin[i]) != E_NO_ERROR) {
10010dee:	4620      	mov	r0, r4
10010df0:	f000 fb92 	bl	10011518 <MXC_GPIO_Config>
    for (i = 0; i < num_leds; i++) {
10010df4:	3501      	adds	r5, #1
            retval = E_UNKNOWN;
10010df6:	2800      	cmp	r0, #0
10010df8:	bf18      	it	ne
10010dfa:	f06f 0607 	mvnne.w	r6, #7
    for (i = 0; i < num_leds; i++) {
10010dfe:	42af      	cmp	r7, r5
10010e00:	f104 040c 	add.w	r4, r4, #12
10010e04:	d1ef      	bne.n	10010de6 <LED_Init+0xe>
}
10010e06:	4630      	mov	r0, r6
10010e08:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    int retval = E_NO_ERROR;
10010e0a:	463e      	mov	r6, r7
}
10010e0c:	4630      	mov	r0, r6
10010e0e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10010e10:	1001d808 	.word	0x1001d808
10010e14:	1001d80c 	.word	0x1001d80c

10010e18 <LED_On>:
    MXC_ASSERT(idx < num_leds);
10010e18:	4b0b      	ldr	r3, [pc, #44]	@ (10010e48 <LED_On+0x30>)
10010e1a:	681b      	ldr	r3, [r3, #0]
10010e1c:	4283      	cmp	r3, r0
{
10010e1e:	b510      	push	{r4, lr}
10010e20:	4604      	mov	r4, r0
    MXC_ASSERT(idx < num_leds);
10010e22:	d90b      	bls.n	10010e3c <LED_On+0x24>
    MXC_GPIO_OutClr(led_pin[idx].port, led_pin[idx].mask);
10010e24:	4b09      	ldr	r3, [pc, #36]	@ (10010e4c <LED_On+0x34>)
10010e26:	eb04 0444 	add.w	r4, r4, r4, lsl #1
10010e2a:	eb03 0284 	add.w	r2, r3, r4, lsl #2
10010e2e:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
10010e32:	6851      	ldr	r1, [r2, #4]
}
10010e34:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    MXC_GPIO_OutClr(led_pin[idx].port, led_pin[idx].mask);
10010e38:	f000 bc8a 	b.w	10011750 <MXC_GPIO_OutClr>
    MXC_ASSERT(idx < num_leds);
10010e3c:	4904      	ldr	r1, [pc, #16]	@ (10010e50 <LED_On+0x38>)
10010e3e:	4805      	ldr	r0, [pc, #20]	@ (10010e54 <LED_On+0x3c>)
10010e40:	223b      	movs	r2, #59	@ 0x3b
10010e42:	f7ff ff19 	bl	10010c78 <mxc_assert>
10010e46:	e7ed      	b.n	10010e24 <LED_On+0xc>
10010e48:	1001d808 	.word	0x1001d808
10010e4c:	1001d80c 	.word	0x1001d80c
10010e50:	1001d84c 	.word	0x1001d84c
10010e54:	1001d884 	.word	0x1001d884

10010e58 <LED_Off>:
    MXC_ASSERT(idx < num_leds);
10010e58:	4b0b      	ldr	r3, [pc, #44]	@ (10010e88 <LED_Off+0x30>)
10010e5a:	681b      	ldr	r3, [r3, #0]
10010e5c:	4283      	cmp	r3, r0
{
10010e5e:	b510      	push	{r4, lr}
10010e60:	4604      	mov	r4, r0
    MXC_ASSERT(idx < num_leds);
10010e62:	d90b      	bls.n	10010e7c <LED_Off+0x24>
    MXC_GPIO_OutSet(led_pin[idx].port, led_pin[idx].mask);
10010e64:	4b09      	ldr	r3, [pc, #36]	@ (10010e8c <LED_Off+0x34>)
10010e66:	eb04 0444 	add.w	r4, r4, r4, lsl #1
10010e6a:	eb03 0284 	add.w	r2, r3, r4, lsl #2
10010e6e:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
10010e72:	6851      	ldr	r1, [r2, #4]
#else
    MXC_GPIO_OutClr(led_pin[idx].port, led_pin[idx].mask);
#endif
}
10010e74:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    MXC_GPIO_OutSet(led_pin[idx].port, led_pin[idx].mask);
10010e78:	f000 bc54 	b.w	10011724 <MXC_GPIO_OutSet>
    MXC_ASSERT(idx < num_leds);
10010e7c:	4904      	ldr	r1, [pc, #16]	@ (10010e90 <LED_Off+0x38>)
10010e7e:	4805      	ldr	r0, [pc, #20]	@ (10010e94 <LED_Off+0x3c>)
10010e80:	2246      	movs	r2, #70	@ 0x46
10010e82:	f7ff fef9 	bl	10010c78 <mxc_assert>
10010e86:	e7ed      	b.n	10010e64 <LED_Off+0xc>
10010e88:	1001d808 	.word	0x1001d808
10010e8c:	1001d80c 	.word	0x1001d80c
10010e90:	1001d84c 	.word	0x1001d84c
10010e94:	1001d884 	.word	0x1001d884

10010e98 <PB_Init>:
#include "mxc_assert.h"
#include "pb.h"

/******************************************************************************/
int PB_Init(void)
{
10010e98:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    int retval = E_NO_ERROR;
    unsigned int i;

    // Enable pushbutton inputs
    for (i = 0; i < num_pbs; i++) {
10010e9a:	4b0b      	ldr	r3, [pc, #44]	@ (10010ec8 <PB_Init+0x30>)
10010e9c:	681f      	ldr	r7, [r3, #0]
10010e9e:	b187      	cbz	r7, 10010ec2 <PB_Init+0x2a>
10010ea0:	2400      	movs	r4, #0
10010ea2:	4d0a      	ldr	r5, [pc, #40]	@ (10010ecc <PB_Init+0x34>)
    int retval = E_NO_ERROR;
10010ea4:	4626      	mov	r6, r4
        if (MXC_GPIO_Config(&pb_pin[i]) != E_NO_ERROR) {
10010ea6:	4628      	mov	r0, r5
10010ea8:	f000 fb36 	bl	10011518 <MXC_GPIO_Config>
    for (i = 0; i < num_pbs; i++) {
10010eac:	3401      	adds	r4, #1
            retval = E_UNKNOWN;
10010eae:	2800      	cmp	r0, #0
10010eb0:	bf18      	it	ne
10010eb2:	f06f 0607 	mvnne.w	r6, #7
    for (i = 0; i < num_pbs; i++) {
10010eb6:	42bc      	cmp	r4, r7
10010eb8:	f105 050c 	add.w	r5, r5, #12
10010ebc:	d1f3      	bne.n	10010ea6 <PB_Init+0xe>
        }
    }

    return retval;
}
10010ebe:	4630      	mov	r0, r6
10010ec0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    int retval = E_NO_ERROR;
10010ec2:	463e      	mov	r6, r7
}
10010ec4:	4630      	mov	r0, r6
10010ec6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10010ec8:	1001d830 	.word	0x1001d830
10010ecc:	1001d834 	.word	0x1001d834

10010ed0 <Reset_Handler>:
10010ed0:	4847      	ldr	r0, [pc, #284]	@ (10010ff0 <LPCMP_IRQHandler+0x2>)
10010ed2:	4685      	mov	sp, r0
10010ed4:	4847      	ldr	r0, [pc, #284]	@ (10010ff4 <LPCMP_IRQHandler+0x6>)
10010ed6:	4780      	blx	r0
10010ed8:	b980      	cbnz	r0, 10010efc <.SKIPRAMINIT>
10010eda:	4947      	ldr	r1, [pc, #284]	@ (10010ff8 <LPCMP_IRQHandler+0xa>)
10010edc:	4a47      	ldr	r2, [pc, #284]	@ (10010ffc <LPCMP_IRQHandler+0xe>)
10010ede:	4b48      	ldr	r3, [pc, #288]	@ (10011000 <LPCMP_IRQHandler+0x12>)
10010ee0:	1a9b      	subs	r3, r3, r2
10010ee2:	dd03      	ble.n	10010eec <Reset_Handler+0x1c>
10010ee4:	3b04      	subs	r3, #4
10010ee6:	58c8      	ldr	r0, [r1, r3]
10010ee8:	50d0      	str	r0, [r2, r3]
10010eea:	dcfb      	bgt.n	10010ee4 <Reset_Handler+0x14>
10010eec:	4945      	ldr	r1, [pc, #276]	@ (10011004 <LPCMP_IRQHandler+0x16>)
10010eee:	4a46      	ldr	r2, [pc, #280]	@ (10011008 <LPCMP_IRQHandler+0x1a>)
10010ef0:	2000      	movs	r0, #0
10010ef2:	4291      	cmp	r1, r2
10010ef4:	bfbc      	itt	lt
10010ef6:	f841 0b04 	strlt.w	r0, [r1], #4
10010efa:	e7fa      	blt.n	10010ef2 <Reset_Handler+0x22>

10010efc <.SKIPRAMINIT>:
10010efc:	4843      	ldr	r0, [pc, #268]	@ (1001100c <LPCMP_IRQHandler+0x1e>)
10010efe:	4780      	blx	r0
10010f00:	4843      	ldr	r0, [pc, #268]	@ (10011010 <LPCMP_IRQHandler+0x22>)
10010f02:	4780      	blx	r0
10010f04:	4843      	ldr	r0, [pc, #268]	@ (10011014 <LPCMP_IRQHandler+0x26>)
10010f06:	4780      	blx	r0

10010f08 <.SPIN>:
10010f08:	f7ff fffe 	bl	10010f08 <.SPIN>
10010f0c:	e7fe      	b.n	10010f0c <.SPIN+0x4>

10010f0e <HardFault_Handler>:
10010f0e:	e7fe      	b.n	10010f0e <HardFault_Handler>

10010f10 <MemManage_Handler>:
10010f10:	e7fe      	b.n	10010f10 <MemManage_Handler>

10010f12 <BusFault_Handler>:
10010f12:	e7fe      	b.n	10010f12 <BusFault_Handler>

10010f14 <UsageFault_Handler>:
10010f14:	e7fe      	b.n	10010f14 <UsageFault_Handler>

10010f16 <SVC_Handler>:
10010f16:	e7fe      	b.n	10010f16 <SVC_Handler>

10010f18 <DebugMon_Handler>:
10010f18:	e7fe      	b.n	10010f18 <DebugMon_Handler>

10010f1a <PendSV_Handler>:
10010f1a:	e7fe      	b.n	10010f1a <PendSV_Handler>

10010f1c <SysTick_Handler>:
10010f1c:	e7fe      	b.n	10010f1c <SysTick_Handler>

10010f1e <Default_Handler>:
10010f1e:	e7fe      	b.n	10010f1e <Default_Handler>

10010f20 <PF_IRQHandler>:
10010f20:	e7fe      	b.n	10010f20 <PF_IRQHandler>

10010f22 <WDT0_IRQHandler>:
10010f22:	e7fe      	b.n	10010f22 <WDT0_IRQHandler>

10010f24 <RSV02_IRQHandler>:
10010f24:	e7fe      	b.n	10010f24 <RSV02_IRQHandler>

10010f26 <RTC_IRQHandler>:
10010f26:	e7fe      	b.n	10010f26 <RTC_IRQHandler>
10010f28:	e7fe      	b.n	10010f28 <RTC_IRQHandler+0x2>

10010f2a <TMR0_IRQHandler>:
10010f2a:	e7fe      	b.n	10010f2a <TMR0_IRQHandler>

10010f2c <TMR1_IRQHandler>:
10010f2c:	e7fe      	b.n	10010f2c <TMR1_IRQHandler>

10010f2e <TMR2_IRQHandler>:
10010f2e:	e7fe      	b.n	10010f2e <TMR2_IRQHandler>

10010f30 <TMR3_IRQHandler>:
10010f30:	e7fe      	b.n	10010f30 <TMR3_IRQHandler>

10010f32 <TMR4_IRQHandler>:
10010f32:	e7fe      	b.n	10010f32 <TMR4_IRQHandler>

10010f34 <TMR5_IRQHandler>:
10010f34:	e7fe      	b.n	10010f34 <TMR5_IRQHandler>

10010f36 <RSV11_IRQHandler>:
10010f36:	e7fe      	b.n	10010f36 <RSV11_IRQHandler>

10010f38 <RSV12_IRQHandler>:
10010f38:	e7fe      	b.n	10010f38 <RSV12_IRQHandler>

10010f3a <I2C0_IRQHandler>:
10010f3a:	e7fe      	b.n	10010f3a <I2C0_IRQHandler>

10010f3c <UART0_IRQHandler>:
10010f3c:	e7fe      	b.n	10010f3c <UART0_IRQHandler>

10010f3e <UART1_IRQHandler>:
10010f3e:	e7fe      	b.n	10010f3e <UART1_IRQHandler>

10010f40 <SPI1_IRQHandler>:
10010f40:	e7fe      	b.n	10010f40 <SPI1_IRQHandler>

10010f42 <RSV17_IRQHandler>:
10010f42:	e7fe      	b.n	10010f42 <RSV17_IRQHandler>

10010f44 <RSV18_IRQHandler>:
10010f44:	e7fe      	b.n	10010f44 <RSV18_IRQHandler>

10010f46 <RSV19_IRQHandler>:
10010f46:	e7fe      	b.n	10010f46 <RSV19_IRQHandler>

10010f48 <ADC_IRQHandler>:
10010f48:	e7fe      	b.n	10010f48 <ADC_IRQHandler>

10010f4a <RSV21_IRQHandler>:
10010f4a:	e7fe      	b.n	10010f4a <RSV21_IRQHandler>

10010f4c <RSV22_IRQHandler>:
10010f4c:	e7fe      	b.n	10010f4c <RSV22_IRQHandler>

10010f4e <FLC0_IRQHandler>:
10010f4e:	e7fe      	b.n	10010f4e <FLC0_IRQHandler>
10010f50:	e7fe      	b.n	10010f50 <FLC0_IRQHandler+0x2>
10010f52:	e7fe      	b.n	10010f52 <FLC0_IRQHandler+0x4>

10010f54 <GPIO2_IRQHandler>:
10010f54:	e7fe      	b.n	10010f54 <GPIO2_IRQHandler>

10010f56 <RSV27_IRQHandler>:
10010f56:	e7fe      	b.n	10010f56 <RSV27_IRQHandler>

10010f58 <DMA0_IRQHandler>:
10010f58:	e7fe      	b.n	10010f58 <DMA0_IRQHandler>

10010f5a <DMA1_IRQHandler>:
10010f5a:	e7fe      	b.n	10010f5a <DMA1_IRQHandler>

10010f5c <DMA2_IRQHandler>:
10010f5c:	e7fe      	b.n	10010f5c <DMA2_IRQHandler>

10010f5e <DMA3_IRQHandler>:
10010f5e:	e7fe      	b.n	10010f5e <DMA3_IRQHandler>

10010f60 <RSV32_IRQHandler>:
10010f60:	e7fe      	b.n	10010f60 <RSV32_IRQHandler>

10010f62 <RSV33_IRQHandler>:
10010f62:	e7fe      	b.n	10010f62 <RSV33_IRQHandler>

10010f64 <UART2_IRQHandler>:
10010f64:	e7fe      	b.n	10010f64 <UART2_IRQHandler>

10010f66 <RSV35_IRQHandler>:
10010f66:	e7fe      	b.n	10010f66 <RSV35_IRQHandler>

10010f68 <I2C1_IRQHandler>:
10010f68:	e7fe      	b.n	10010f68 <I2C1_IRQHandler>

10010f6a <RSV37_IRQHandler>:
10010f6a:	e7fe      	b.n	10010f6a <RSV37_IRQHandler>

10010f6c <RSV38_IRQHandler>:
10010f6c:	e7fe      	b.n	10010f6c <RSV38_IRQHandler>

10010f6e <RSV39_IRQHandler>:
10010f6e:	e7fe      	b.n	10010f6e <RSV39_IRQHandler>

10010f70 <RSV40_IRQHandler>:
10010f70:	e7fe      	b.n	10010f70 <RSV40_IRQHandler>

10010f72 <RSV41_IRQHandler>:
10010f72:	e7fe      	b.n	10010f72 <RSV41_IRQHandler>

10010f74 <RSV42_IRQHandler>:
10010f74:	e7fe      	b.n	10010f74 <RSV42_IRQHandler>

10010f76 <RSV43_IRQHandler>:
10010f76:	e7fe      	b.n	10010f76 <RSV43_IRQHandler>

10010f78 <RSV44_IRQHandler>:
10010f78:	e7fe      	b.n	10010f78 <RSV44_IRQHandler>

10010f7a <RSV45_IRQHandler>:
10010f7a:	e7fe      	b.n	10010f7a <RSV45_IRQHandler>

10010f7c <RSV46_IRQHandler>:
10010f7c:	e7fe      	b.n	10010f7c <RSV46_IRQHandler>

10010f7e <RSV47_IRQHandler>:
10010f7e:	e7fe      	b.n	10010f7e <RSV47_IRQHandler>

10010f80 <RSV48_IRQHandler>:
10010f80:	e7fe      	b.n	10010f80 <RSV48_IRQHandler>

10010f82 <RSV49_IRQHandler>:
10010f82:	e7fe      	b.n	10010f82 <RSV49_IRQHandler>

10010f84 <RSV50_IRQHandler>:
10010f84:	e7fe      	b.n	10010f84 <RSV50_IRQHandler>

10010f86 <RSV51_IRQHandler>:
10010f86:	e7fe      	b.n	10010f86 <RSV51_IRQHandler>

10010f88 <RSV52_IRQHandler>:
10010f88:	e7fe      	b.n	10010f88 <RSV52_IRQHandler>

10010f8a <WUT_IRQHandler>:
10010f8a:	e7fe      	b.n	10010f8a <WUT_IRQHandler>

10010f8c <GPIOWAKE_IRQHandler>:
10010f8c:	e7fe      	b.n	10010f8c <GPIOWAKE_IRQHandler>

10010f8e <RSV55_IRQHandler>:
10010f8e:	e7fe      	b.n	10010f8e <RSV55_IRQHandler>

10010f90 <SPI0_IRQHandler>:
10010f90:	e7fe      	b.n	10010f90 <SPI0_IRQHandler>

10010f92 <WDT1_IRQHandler>:
10010f92:	e7fe      	b.n	10010f92 <WDT1_IRQHandler>

10010f94 <RSV58_IRQHandler>:
10010f94:	e7fe      	b.n	10010f94 <RSV58_IRQHandler>

10010f96 <PT_IRQHandler>:
10010f96:	e7fe      	b.n	10010f96 <PT_IRQHandler>

10010f98 <RSV60_IRQHandler>:
10010f98:	e7fe      	b.n	10010f98 <RSV60_IRQHandler>

10010f9a <RSV61_IRQHandler>:
10010f9a:	e7fe      	b.n	10010f9a <RSV61_IRQHandler>

10010f9c <I2C2_IRQHandler>:
10010f9c:	e7fe      	b.n	10010f9c <I2C2_IRQHandler>

10010f9e <RISCV_IRQHandler>:
10010f9e:	e7fe      	b.n	10010f9e <RISCV_IRQHandler>

10010fa0 <RSV64_IRQHandler>:
10010fa0:	e7fe      	b.n	10010fa0 <RSV64_IRQHandler>

10010fa2 <RSV65_IRQHandler>:
10010fa2:	e7fe      	b.n	10010fa2 <RSV65_IRQHandler>

10010fa4 <RSV66_IRQHandler>:
10010fa4:	e7fe      	b.n	10010fa4 <RSV66_IRQHandler>

10010fa6 <OWM_IRQHandler>:
10010fa6:	e7fe      	b.n	10010fa6 <OWM_IRQHandler>

10010fa8 <RSV68_IRQHandler>:
10010fa8:	e7fe      	b.n	10010fa8 <RSV68_IRQHandler>

10010faa <RSV69_IRQHandler>:
10010faa:	e7fe      	b.n	10010faa <RSV69_IRQHandler>

10010fac <RSV70_IRQHandler>:
10010fac:	e7fe      	b.n	10010fac <RSV70_IRQHandler>

10010fae <RSV71_IRQHandler>:
10010fae:	e7fe      	b.n	10010fae <RSV71_IRQHandler>

10010fb0 <RSV72_IRQHandler>:
10010fb0:	e7fe      	b.n	10010fb0 <RSV72_IRQHandler>

10010fb2 <RSV73_IRQHandler>:
10010fb2:	e7fe      	b.n	10010fb2 <RSV73_IRQHandler>

10010fb4 <RSV74_IRQHandler>:
10010fb4:	e7fe      	b.n	10010fb4 <RSV74_IRQHandler>

10010fb6 <RSV75_IRQHandler>:
10010fb6:	e7fe      	b.n	10010fb6 <RSV75_IRQHandler>

10010fb8 <RSV76_IRQHandler>:
10010fb8:	e7fe      	b.n	10010fb8 <RSV76_IRQHandler>

10010fba <RSV77_IRQHandler>:
10010fba:	e7fe      	b.n	10010fba <RSV77_IRQHandler>

10010fbc <RSV78_IRQHandler>:
10010fbc:	e7fe      	b.n	10010fbc <RSV78_IRQHandler>

10010fbe <RSV79_IRQHandler>:
10010fbe:	e7fe      	b.n	10010fbe <RSV79_IRQHandler>

10010fc0 <RSV80_IRQHandler>:
10010fc0:	e7fe      	b.n	10010fc0 <RSV80_IRQHandler>

10010fc2 <RSV81_IRQHandler>:
10010fc2:	e7fe      	b.n	10010fc2 <RSV81_IRQHandler>

10010fc4 <ECC_IRQHandler>:
10010fc4:	e7fe      	b.n	10010fc4 <ECC_IRQHandler>

10010fc6 <DVS_IRQHandler>:
10010fc6:	e7fe      	b.n	10010fc6 <DVS_IRQHandler>

10010fc8 <SIMO_IRQHandler>:
10010fc8:	e7fe      	b.n	10010fc8 <SIMO_IRQHandler>

10010fca <RSV85_IRQHandler>:
10010fca:	e7fe      	b.n	10010fca <RSV85_IRQHandler>

10010fcc <RSV86_IRQHandler>:
10010fcc:	e7fe      	b.n	10010fcc <RSV86_IRQHandler>

10010fce <RSV87_IRQHandler>:
10010fce:	e7fe      	b.n	10010fce <RSV87_IRQHandler>

10010fd0 <UART3_IRQHandler>:
10010fd0:	e7fe      	b.n	10010fd0 <UART3_IRQHandler>

10010fd2 <RSV89_IRQHandler>:
10010fd2:	e7fe      	b.n	10010fd2 <RSV89_IRQHandler>

10010fd4 <RSV90_IRQHandler>:
10010fd4:	e7fe      	b.n	10010fd4 <RSV90_IRQHandler>

10010fd6 <PCIF_IRQHandler>:
10010fd6:	e7fe      	b.n	10010fd6 <PCIF_IRQHandler>

10010fd8 <RSV92_IRQHandler>:
10010fd8:	e7fe      	b.n	10010fd8 <RSV92_IRQHandler>

10010fda <RSV93_IRQHandler>:
10010fda:	e7fe      	b.n	10010fda <RSV93_IRQHandler>

10010fdc <RSV94_IRQHandler>:
10010fdc:	e7fe      	b.n	10010fdc <RSV94_IRQHandler>

10010fde <RSV95_IRQHandler>:
10010fde:	e7fe      	b.n	10010fde <RSV95_IRQHandler>

10010fe0 <RSV96_IRQHandler>:
10010fe0:	e7fe      	b.n	10010fe0 <RSV96_IRQHandler>

10010fe2 <AES_IRQHandler>:
10010fe2:	e7fe      	b.n	10010fe2 <AES_IRQHandler>

10010fe4 <RSV98_IRQHandler>:
10010fe4:	e7fe      	b.n	10010fe4 <RSV98_IRQHandler>

10010fe6 <I2S_IRQHandler>:
10010fe6:	e7fe      	b.n	10010fe6 <I2S_IRQHandler>

10010fe8 <CNN_FIFO_IRQHandler>:
10010fe8:	e7fe      	b.n	10010fe8 <CNN_FIFO_IRQHandler>

10010fea <CNN_IRQHandler>:
10010fea:	e7fe      	b.n	10010fea <CNN_IRQHandler>

10010fec <RSV102_IRQHandler>:
10010fec:	e7fe      	b.n	10010fec <RSV102_IRQHandler>

10010fee <LPCMP_IRQHandler>:
10010fee:	e7fe      	b.n	10010fee <LPCMP_IRQHandler>
10010ff0:	20020000 	.word	0x20020000
10010ff4:	100110bd 	.word	0x100110bd
10010ff8:	1001de58 	.word	0x1001de58
10010ffc:	20000000 	.word	0x20000000
10011000:	20000708 	.word	0x20000708
10011004:	20000800 	.word	0x20000800
10011008:	20001950 	.word	0x20001950
1001100c:	100110c1 	.word	0x100110c1
10011010:	100149f9 	.word	0x100149f9
10011014:	1000e6ad 	.word	0x1000e6ad

10011018 <_sbrk>:
extern unsigned int __HeapLimit;
caddr_t _sbrk(int incr)
{
    char *prev_heap_end;

    if (heap_end == 0) {
10011018:	4a0b      	ldr	r2, [pc, #44]	@ (10011048 <_sbrk+0x30>)
{
1001101a:	b508      	push	{r3, lr}
1001101c:	4603      	mov	r3, r0
    if (heap_end == 0) {
1001101e:	6810      	ldr	r0, [r2, #0]
10011020:	b128      	cbz	r0, 1001102e <_sbrk+0x16>
        heap_end = (caddr_t)&__HeapBase;
    }
    prev_heap_end = heap_end;

    if ((unsigned int)(heap_end + incr) > (unsigned int)&__HeapLimit) {
10011022:	490a      	ldr	r1, [pc, #40]	@ (1001104c <_sbrk+0x34>)
10011024:	4403      	add	r3, r0
10011026:	428b      	cmp	r3, r1
10011028:	d807      	bhi.n	1001103a <_sbrk+0x22>
        errno = ENOMEM;
        return (caddr_t)-1;
    }

    heap_end += incr;
1001102a:	6013      	str	r3, [r2, #0]

    return (caddr_t)prev_heap_end;
}
1001102c:	bd08      	pop	{r3, pc}
        heap_end = (caddr_t)&__HeapBase;
1001102e:	4808      	ldr	r0, [pc, #32]	@ (10011050 <_sbrk+0x38>)
    if ((unsigned int)(heap_end + incr) > (unsigned int)&__HeapLimit) {
10011030:	4906      	ldr	r1, [pc, #24]	@ (1001104c <_sbrk+0x34>)
        heap_end = (caddr_t)&__HeapBase;
10011032:	6010      	str	r0, [r2, #0]
    if ((unsigned int)(heap_end + incr) > (unsigned int)&__HeapLimit) {
10011034:	4403      	add	r3, r0
10011036:	428b      	cmp	r3, r1
10011038:	d9f7      	bls.n	1001102a <_sbrk+0x12>
        errno = ENOMEM;
1001103a:	f001 fb49 	bl	100126d0 <__errno>
1001103e:	230c      	movs	r3, #12
10011040:	6003      	str	r3, [r0, #0]
        return (caddr_t)-1;
10011042:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
10011046:	bd08      	pop	{r3, pc}
10011048:	20000e38 	.word	0x20000e38
1001104c:	2001f000 	.word	0x2001f000
10011050:	20001958 	.word	0x20001958

10011054 <SystemCoreClockUpdate>:
__weak void SystemCoreClockUpdate(void)
{
    uint32_t base_freq, div, clk_src;

    // Get the clock source and frequency
    clk_src = (MXC_GCR->clkctrl & MXC_F_GCR_CLKCTRL_SYSCLK_SEL);
10011054:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
10011058:	689a      	ldr	r2, [r3, #8]
1001105a:	f402 6260 	and.w	r2, r2, #3584	@ 0xe00
    switch (clk_src) {
1001105e:	f5b2 6f20 	cmp.w	r2, #2560	@ 0xa00
10011062:	d020      	beq.n	100110a6 <SystemCoreClockUpdate+0x52>
10011064:	d911      	bls.n	1001108a <SystemCoreClockUpdate+0x36>
10011066:	f5b2 6f40 	cmp.w	r2, #3072	@ 0xc00
1001106a:	d017      	beq.n	1001109c <SystemCoreClockUpdate+0x48>
        break;
    case MXC_S_GCR_CLKCTRL_SYSCLK_SEL_INRO:
        base_freq = INRO_FREQ;
        break;
    case MXC_S_GCR_CLKCTRL_SYSCLK_SEL_IPO:
        base_freq = IPO_FREQ;
1001106c:	4b0f      	ldr	r3, [pc, #60]	@ (100110ac <SystemCoreClockUpdate+0x58>)
1001106e:	4910      	ldr	r1, [pc, #64]	@ (100110b0 <SystemCoreClockUpdate+0x5c>)
10011070:	f5b2 6f60 	cmp.w	r2, #3584	@ 0xe00
10011074:	bf18      	it	ne
10011076:	460b      	movne	r3, r1
        // This code should never execute, however, initialize to safe value.
        base_freq = HIRC_FREQ;
        break;
    }

    div = (MXC_GCR->clkctrl & MXC_F_GCR_CLKCTRL_SYSCLK_DIV) >> MXC_F_GCR_CLKCTRL_SYSCLK_DIV_POS;
10011078:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000

    SystemCoreClock = base_freq >> div;
1001107c:	490d      	ldr	r1, [pc, #52]	@ (100110b4 <SystemCoreClockUpdate+0x60>)
    div = (MXC_GCR->clkctrl & MXC_F_GCR_CLKCTRL_SYSCLK_DIV) >> MXC_F_GCR_CLKCTRL_SYSCLK_DIV_POS;
1001107e:	6892      	ldr	r2, [r2, #8]
10011080:	f3c2 1282 	ubfx	r2, r2, #6, #3
    SystemCoreClock = base_freq >> div;
10011084:	40d3      	lsrs	r3, r2
10011086:	600b      	str	r3, [r1, #0]
}
10011088:	4770      	bx	lr
    switch (clk_src) {
1001108a:	b152      	cbz	r2, 100110a2 <SystemCoreClockUpdate+0x4e>
        base_freq = IPO_FREQ;
1001108c:	4908      	ldr	r1, [pc, #32]	@ (100110b0 <SystemCoreClockUpdate+0x5c>)
1001108e:	f247 5330 	movw	r3, #30000	@ 0x7530
10011092:	f5b2 6fc0 	cmp.w	r2, #1536	@ 0x600
10011096:	bf18      	it	ne
10011098:	460b      	movne	r3, r1
1001109a:	e7ed      	b.n	10011078 <SystemCoreClockUpdate+0x24>
        base_freq = ERTCO_FREQ;
1001109c:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
100110a0:	e7ea      	b.n	10011078 <SystemCoreClockUpdate+0x24>
        base_freq = ISO_FREQ;
100110a2:	4b05      	ldr	r3, [pc, #20]	@ (100110b8 <SystemCoreClockUpdate+0x64>)
100110a4:	e7e8      	b.n	10011078 <SystemCoreClockUpdate+0x24>
        base_freq = IBRO_FREQ;
100110a6:	f44f 03e1 	mov.w	r3, #7372800	@ 0x708000
100110aa:	e7e5      	b.n	10011078 <SystemCoreClockUpdate+0x24>
100110ac:	047868c0 	.word	0x047868c0
100110b0:	05f5e100 	.word	0x05f5e100
100110b4:	20001950 	.word	0x20001950
100110b8:	03938700 	.word	0x03938700

100110bc <PreInit>:
 */
__weak int PreInit(void)
{
    /* Do nothing */
    return 0;
}
100110bc:	2000      	movs	r0, #0
100110be:	4770      	bx	lr

100110c0 <SystemInit>:
 * You may over-ride this function in your program by defining a custom 
 *  SystemInit(), but care should be taken to reproduce the initialization
 *  steps or a non-functional system may result.
 */
__weak void SystemInit(void)
{
100110c0:	b510      	push	{r4, lr}
    /* Configure the interrupt controller to use the application vector table in */
    /* the application space */
#if defined(__CC_ARM) || defined(__GNUC__)
    /* IAR sets the VTOR pointer incorrectly and causes stack corruption */
    SCB->VTOR = (uint32_t)__isr_vector;
100110c2:	4c0a      	ldr	r4, [pc, #40]	@ (100110ec <SystemInit+0x2c>)
100110c4:	4b0a      	ldr	r3, [pc, #40]	@ (100110f0 <SystemInit+0x30>)
100110c6:	60a3      	str	r3, [r4, #8]
#endif /* __CC_ARM || __GNUC__ */

    /* Enable instruction cache */
    MXC_ICC_Enable(MXC_ICC0);
100110c8:	480a      	ldr	r0, [pc, #40]	@ (100110f4 <SystemInit+0x34>)
100110ca:	f000 fe37 	bl	10011d3c <MXC_ICC_Enable>

    /* Enable FPU on Cortex-M4, which occupies coprocessor slots 10 & 11 */
    /* Grant full access, per "Table B3-24 CPACR bit assignments". */
    /* DDI0403D "ARMv7-M Architecture Reference Manual" */
    SCB->CPACR |= SCB_CPACR_CP10_Msk | SCB_CPACR_CP11_Msk;
100110ce:	f8d4 3088 	ldr.w	r3, [r4, #136]	@ 0x88
100110d2:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
100110d6:	f8c4 3088 	str.w	r3, [r4, #136]	@ 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
100110da:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
100110de:	f3bf 8f6f 	isb	sy
    __DSB();
    __ISB();

    SystemCoreClockUpdate();
100110e2:	f7ff ffb7 	bl	10011054 <SystemCoreClockUpdate>

    Board_Init();
100110e6:	f7ff fdd7 	bl	10010c98 <Board_Init>
}
100110ea:	bd10      	pop	{r4, pc}
100110ec:	e000ed00 	.word	0xe000ed00
100110f0:	1000e000 	.word	0x1000e000
100110f4:	4002a000 	.word	0x4002a000

100110f8 <MXC_DelayInit>:
    }
}

/* ************************************************************************** */
static void MXC_DelayInit(uint32_t us)
{
100110f8:	b538      	push	{r3, r4, r5, lr}
    uint32_t starttick, reload, ticks, lastticks;

    // Record the current tick value and clear the overflow flag
    starttick = SysTick->VAL;
100110fa:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000

    // Save the state of control register (and clear the overflow flag)
    ctrl_save = SysTick->CTRL & ~SysTick_CTRL_COUNTFLAG_Msk;
100110fe:	4918      	ldr	r1, [pc, #96]	@ (10011160 <MXC_DelayInit+0x68>)
    starttick = SysTick->VAL;
10011100:	699c      	ldr	r4, [r3, #24]
    ctrl_save = SysTick->CTRL & ~SysTick_CTRL_COUNTFLAG_Msk;
10011102:	691a      	ldr	r2, [r3, #16]
10011104:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
10011108:	600a      	str	r2, [r1, #0]

    // If the SysTick is not running, configure and start it
    if (!(SysTick->CTRL & SysTick_CTRL_ENABLE_Msk)) {
1001110a:	691a      	ldr	r2, [r3, #16]
1001110c:	07d2      	lsls	r2, r2, #31
1001110e:	d41f      	bmi.n	10011150 <MXC_DelayInit+0x58>
        SysTick->LOAD = SysTick_LOAD_RELOAD_Msk;
10011110:	f06f 447f 	mvn.w	r4, #4278190080	@ 0xff000000
        SysTick->VAL = SysTick_VAL_CURRENT_Msk;
        SysTick->CTRL = SysTick_CTRL_ENABLE_Msk | SysTick_CTRL_CLKSOURCE_Msk;
10011114:	2205      	movs	r2, #5
        SysTick->LOAD = SysTick_LOAD_RELOAD_Msk;
10011116:	615c      	str	r4, [r3, #20]
        starttick = SysTick_VAL_CURRENT_Msk;
        reload = SysTick_LOAD_RELOAD_Msk + 1;
10011118:	f04f 7580 	mov.w	r5, #16777216	@ 0x1000000
        SysTick->VAL = SysTick_VAL_CURRENT_Msk;
1001111c:	619c      	str	r4, [r3, #24]
        SysTick->CTRL = SysTick_CTRL_ENABLE_Msk | SysTick_CTRL_CLKSOURCE_Msk;
1001111e:	611a      	str	r2, [r3, #16]
    } else {
        reload = SysTick->LOAD + 1; // get the current reload value
    }

    // Calculate the total number of ticks to delay
    ticks = (uint32_t)(((uint64_t)us * (uint64_t)SystemCoreClock) / 1000000);
10011120:	4b10      	ldr	r3, [pc, #64]	@ (10011164 <MXC_DelayInit+0x6c>)
10011122:	4a11      	ldr	r2, [pc, #68]	@ (10011168 <MXC_DelayInit+0x70>)
10011124:	6819      	ldr	r1, [r3, #0]
10011126:	2300      	movs	r3, #0
10011128:	fba0 0101 	umull	r0, r1, r0, r1
1001112c:	f00a f898 	bl	1001b260 <__aeabi_uldivmod>

    // How many overflows of the SysTick will occur
    overflows = ticks / reload;
10011130:	4b0e      	ldr	r3, [pc, #56]	@ (1001116c <MXC_DelayInit+0x74>)
10011132:	fbb0 f2f5 	udiv	r2, r0, r5

    // How many remaining ticks after the last overflow
    lastticks = ticks % reload;
10011136:	fb05 0012 	mls	r0, r5, r2, r0

    // Check if there will be another overflow due to the current value of the SysTick
    if (lastticks >= starttick) {
1001113a:	4284      	cmp	r4, r0
    overflows = ticks / reload;
1001113c:	601a      	str	r2, [r3, #0]
    if (lastticks >= starttick) {
1001113e:	d80a      	bhi.n	10011156 <MXC_DelayInit+0x5e>
        overflows++;
10011140:	681a      	ldr	r2, [r3, #0]
10011142:	3201      	adds	r2, #1
10011144:	601a      	str	r2, [r3, #0]
        endtick = reload - (lastticks - starttick);
10011146:	4425      	add	r5, r4
10011148:	4b09      	ldr	r3, [pc, #36]	@ (10011170 <MXC_DelayInit+0x78>)
1001114a:	1a28      	subs	r0, r5, r0
1001114c:	6018      	str	r0, [r3, #0]
    } else {
        endtick = starttick - lastticks;
    }
}
1001114e:	bd38      	pop	{r3, r4, r5, pc}
        reload = SysTick->LOAD + 1; // get the current reload value
10011150:	695d      	ldr	r5, [r3, #20]
10011152:	3501      	adds	r5, #1
10011154:	e7e4      	b.n	10011120 <MXC_DelayInit+0x28>
        endtick = starttick - lastticks;
10011156:	4b06      	ldr	r3, [pc, #24]	@ (10011170 <MXC_DelayInit+0x78>)
10011158:	1a20      	subs	r0, r4, r0
1001115a:	6018      	str	r0, [r3, #0]
}
1001115c:	bd38      	pop	{r3, r4, r5, pc}
1001115e:	bf00      	nop
10011160:	20000e40 	.word	0x20000e40
10011164:	20001950 	.word	0x20001950
10011168:	000f4240 	.word	0x000f4240
1001116c:	20000044 	.word	0x20000044
10011170:	20000e44 	.word	0x20000e44

10011174 <MXC_DelayAsync>:

/* ************************************************************************** */
int MXC_DelayAsync(uint32_t us, mxc_delay_complete_t callback)
{
10011174:	b510      	push	{r4, lr}
    cbFunc = callback;

    // Check if timeout currently ongoing
    if (overflows > 0) {
10011176:	4c0c      	ldr	r4, [pc, #48]	@ (100111a8 <MXC_DelayAsync+0x34>)
    cbFunc = callback;
10011178:	4b0c      	ldr	r3, [pc, #48]	@ (100111ac <MXC_DelayAsync+0x38>)
    if (overflows > 0) {
1001117a:	6822      	ldr	r2, [r4, #0]
    cbFunc = callback;
1001117c:	6019      	str	r1, [r3, #0]
    if (overflows > 0) {
1001117e:	2a00      	cmp	r2, #0
10011180:	dc0e      	bgt.n	100111a0 <MXC_DelayAsync+0x2c>
        return E_BUSY;
    }

    // Check if there is nothing to do
    if (us == 0) {
10011182:	b908      	cbnz	r0, 10011188 <MXC_DelayAsync+0x14>
        return E_NO_ERROR;
10011184:	2000      	movs	r0, #0
    if (overflows > 0) {
        SysTick->CTRL |= SysTick_CTRL_TICKINT_Msk;
    }

    return E_NO_ERROR;
}
10011186:	bd10      	pop	{r4, pc}
    MXC_DelayInit(us);
10011188:	f7ff ffb6 	bl	100110f8 <MXC_DelayInit>
    if (overflows > 0) {
1001118c:	6823      	ldr	r3, [r4, #0]
1001118e:	2b00      	cmp	r3, #0
10011190:	ddf8      	ble.n	10011184 <MXC_DelayAsync+0x10>
        SysTick->CTRL |= SysTick_CTRL_TICKINT_Msk;
10011192:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
10011196:	6913      	ldr	r3, [r2, #16]
10011198:	f043 0302 	orr.w	r3, r3, #2
1001119c:	6113      	str	r3, [r2, #16]
1001119e:	e7f1      	b.n	10011184 <MXC_DelayAsync+0x10>
        return E_BUSY;
100111a0:	f06f 0005 	mvn.w	r0, #5
}
100111a4:	bd10      	pop	{r4, pc}
100111a6:	bf00      	nop
100111a8:	20000044 	.word	0x20000044
100111ac:	20000e3c 	.word	0x20000e3c

100111b0 <MXC_DelayCheck>:

/* ************************************************************************** */
int MXC_DelayCheck(void)
{
100111b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    // Check if timeout currently ongoing
    if (overflows < 0) {
100111b2:	4c17      	ldr	r4, [pc, #92]	@ (10011210 <MXC_DelayCheck+0x60>)
100111b4:	6823      	ldr	r3, [r4, #0]
100111b6:	2b00      	cmp	r3, #0
100111b8:	db1e      	blt.n	100111f8 <MXC_DelayCheck+0x48>

        return E_NO_ERROR;
    }

    // Check the global values
    if ((overflows == 0) && (SysTick->VAL <= endtick)) {
100111ba:	6826      	ldr	r6, [r4, #0]
100111bc:	bb2e      	cbnz	r6, 1001120a <MXC_DelayCheck+0x5a>
100111be:	4b15      	ldr	r3, [pc, #84]	@ (10011214 <MXC_DelayCheck+0x64>)
100111c0:	f04f 25e0 	mov.w	r5, #3758153728	@ 0xe000e000
100111c4:	681b      	ldr	r3, [r3, #0]
100111c6:	69aa      	ldr	r2, [r5, #24]
100111c8:	429a      	cmp	r2, r3
100111ca:	d81e      	bhi.n	1001120a <MXC_DelayCheck+0x5a>
}

/* ************************************************************************** */
void MXC_DelayAbort(void)
{
    if (cbFunc != NULL) {
100111cc:	4f12      	ldr	r7, [pc, #72]	@ (10011218 <MXC_DelayCheck+0x68>)
100111ce:	683b      	ldr	r3, [r7, #0]
100111d0:	b15b      	cbz	r3, 100111ea <MXC_DelayCheck+0x3a>
        cbFunc(E_ABORT);
100111d2:	f06f 000f 	mvn.w	r0, #15
100111d6:	4798      	blx	r3
        cbFunc = NULL;
    }

    SysTick->CTRL = ctrl_save;
100111d8:	4b10      	ldr	r3, [pc, #64]	@ (1001121c <MXC_DelayCheck+0x6c>)
        cbFunc = NULL;
100111da:	603e      	str	r6, [r7, #0]
    SysTick->CTRL = ctrl_save;
100111dc:	681a      	ldr	r2, [r3, #0]
100111de:	612a      	str	r2, [r5, #16]
    overflows = -1;
100111e0:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
100111e4:	6023      	str	r3, [r4, #0]
        return E_NO_ERROR;
100111e6:	2000      	movs	r0, #0
}
100111e8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    SysTick->CTRL = ctrl_save;
100111ea:	4a0c      	ldr	r2, [pc, #48]	@ (1001121c <MXC_DelayCheck+0x6c>)
    overflows = -1;
100111ec:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
    SysTick->CTRL = ctrl_save;
100111f0:	6812      	ldr	r2, [r2, #0]
100111f2:	612a      	str	r2, [r5, #16]
    overflows = -1;
100111f4:	6023      	str	r3, [r4, #0]
        if (cbFunc != NULL) {
100111f6:	e7f6      	b.n	100111e6 <MXC_DelayCheck+0x36>
        if (cbFunc != NULL) {
100111f8:	4c07      	ldr	r4, [pc, #28]	@ (10011218 <MXC_DelayCheck+0x68>)
100111fa:	6823      	ldr	r3, [r4, #0]
100111fc:	2b00      	cmp	r3, #0
100111fe:	d0f2      	beq.n	100111e6 <MXC_DelayCheck+0x36>
            cbFunc(E_NO_ERROR);
10011200:	2000      	movs	r0, #0
10011202:	4798      	blx	r3
            cbFunc = NULL;
10011204:	2300      	movs	r3, #0
10011206:	6023      	str	r3, [r4, #0]
10011208:	e7ed      	b.n	100111e6 <MXC_DelayCheck+0x36>
    return E_BUSY;
1001120a:	f06f 0005 	mvn.w	r0, #5
}
1001120e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10011210:	20000044 	.word	0x20000044
10011214:	20000e44 	.word	0x20000e44
10011218:	20000e3c 	.word	0x20000e3c
1001121c:	20000e40 	.word	0x20000e40

10011220 <MXC_DelayAbort>:
{
10011220:	b510      	push	{r4, lr}
    if (cbFunc != NULL) {
10011222:	4c09      	ldr	r4, [pc, #36]	@ (10011248 <MXC_DelayAbort+0x28>)
10011224:	6823      	ldr	r3, [r4, #0]
10011226:	b123      	cbz	r3, 10011232 <MXC_DelayAbort+0x12>
        cbFunc(E_ABORT);
10011228:	f06f 000f 	mvn.w	r0, #15
1001122c:	4798      	blx	r3
        cbFunc = NULL;
1001122e:	2300      	movs	r3, #0
10011230:	6023      	str	r3, [r4, #0]
    SysTick->CTRL = ctrl_save;
10011232:	4a06      	ldr	r2, [pc, #24]	@ (1001124c <MXC_DelayAbort+0x2c>)
    overflows = -1;
10011234:	4b06      	ldr	r3, [pc, #24]	@ (10011250 <MXC_DelayAbort+0x30>)
    SysTick->CTRL = ctrl_save;
10011236:	6810      	ldr	r0, [r2, #0]
10011238:	f04f 21e0 	mov.w	r1, #3758153728	@ 0xe000e000
    overflows = -1;
1001123c:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
    SysTick->CTRL = ctrl_save;
10011240:	6108      	str	r0, [r1, #16]
    overflows = -1;
10011242:	601a      	str	r2, [r3, #0]
}
10011244:	bd10      	pop	{r4, pc}
10011246:	bf00      	nop
10011248:	20000e3c 	.word	0x20000e3c
1001124c:	20000e40 	.word	0x20000e40
10011250:	20000044 	.word	0x20000044

10011254 <MXC_Delay>:

/* ************************************************************************** */
int MXC_Delay(uint32_t us)
{
10011254:	b538      	push	{r3, r4, r5, lr}
    // Check if timeout currently ongoing
    if (overflows > 0) {
10011256:	4c18      	ldr	r4, [pc, #96]	@ (100112b8 <MXC_Delay+0x64>)
10011258:	6822      	ldr	r2, [r4, #0]
1001125a:	2a00      	cmp	r2, #0
1001125c:	dc29      	bgt.n	100112b2 <MXC_Delay+0x5e>
        return E_BUSY;
    }

    // Check if there is nothing to do
    if (us == 0) {
1001125e:	b908      	cbnz	r0, 10011264 <MXC_Delay+0x10>
        return E_NO_ERROR;
10011260:	2000      	movs	r0, #0
    // Wait for the counter value
    while (SysTick->VAL > endtick) {}

    MXC_DelayAbort();
    return E_NO_ERROR;
}
10011262:	bd38      	pop	{r3, r4, r5, pc}
    MXC_DelayInit(us);
10011264:	f7ff ff48 	bl	100110f8 <MXC_DelayInit>
        if (SysTick->CTRL & SysTick_CTRL_COUNTFLAG_Msk) {
10011268:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
    while (overflows > 0) {
1001126c:	e002      	b.n	10011274 <MXC_Delay+0x20>
        if (SysTick->CTRL & SysTick_CTRL_COUNTFLAG_Msk) {
1001126e:	6913      	ldr	r3, [r2, #16]
10011270:	03db      	lsls	r3, r3, #15
10011272:	d41a      	bmi.n	100112aa <MXC_Delay+0x56>
    while (overflows > 0) {
10011274:	6823      	ldr	r3, [r4, #0]
10011276:	2b00      	cmp	r3, #0
10011278:	dcf9      	bgt.n	1001126e <MXC_Delay+0x1a>
    while (SysTick->VAL > endtick) {}
1001127a:	4b10      	ldr	r3, [pc, #64]	@ (100112bc <MXC_Delay+0x68>)
1001127c:	681a      	ldr	r2, [r3, #0]
1001127e:	f04f 21e0 	mov.w	r1, #3758153728	@ 0xe000e000
10011282:	698b      	ldr	r3, [r1, #24]
10011284:	4293      	cmp	r3, r2
10011286:	d8fc      	bhi.n	10011282 <MXC_Delay+0x2e>
    if (cbFunc != NULL) {
10011288:	4d0d      	ldr	r5, [pc, #52]	@ (100112c0 <MXC_Delay+0x6c>)
1001128a:	682b      	ldr	r3, [r5, #0]
1001128c:	b123      	cbz	r3, 10011298 <MXC_Delay+0x44>
        cbFunc(E_ABORT);
1001128e:	f06f 000f 	mvn.w	r0, #15
10011292:	4798      	blx	r3
        cbFunc = NULL;
10011294:	2300      	movs	r3, #0
10011296:	602b      	str	r3, [r5, #0]
    SysTick->CTRL = ctrl_save;
10011298:	4b0a      	ldr	r3, [pc, #40]	@ (100112c4 <MXC_Delay+0x70>)
1001129a:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
1001129e:	6819      	ldr	r1, [r3, #0]
100112a0:	6111      	str	r1, [r2, #16]
    overflows = -1;
100112a2:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
100112a6:	6023      	str	r3, [r4, #0]
}
100112a8:	e7da      	b.n	10011260 <MXC_Delay+0xc>
            overflows--;
100112aa:	6823      	ldr	r3, [r4, #0]
100112ac:	3b01      	subs	r3, #1
100112ae:	6023      	str	r3, [r4, #0]
100112b0:	e7e0      	b.n	10011274 <MXC_Delay+0x20>
        return E_BUSY;
100112b2:	f06f 0005 	mvn.w	r0, #5
}
100112b6:	bd38      	pop	{r3, r4, r5, pc}
100112b8:	20000044 	.word	0x20000044
100112bc:	20000e44 	.word	0x20000e44
100112c0:	20000e3c 	.word	0x20000e3c
100112c4:	20000e40 	.word	0x20000e40

100112c8 <MXC_NVIC_SetVector>:
    memcpy(&ramVectorTable, &__isr_vector, sizeof(ramVectorTable));
    SCB->VTOR = (uint32_t)&ramVectorTable;
}

void MXC_NVIC_SetVector(IRQn_Type irqn, void (*irq_handler)(void))
{
100112c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    int index = irqn + 16; /* offset for externals */

    /* If not copied, do copy */
    if (SCB->VTOR != (uint32_t)&ramVectorTable) {
100112ca:	4e0f      	ldr	r6, [pc, #60]	@ (10011308 <MXC_NVIC_SetVector+0x40>)
100112cc:	4b0f      	ldr	r3, [pc, #60]	@ (1001130c <MXC_NVIC_SetVector+0x44>)
100112ce:	68b2      	ldr	r2, [r6, #8]
100112d0:	429a      	cmp	r2, r3
{
100112d2:	4604      	mov	r4, r0
100112d4:	460d      	mov	r5, r1
    int index = irqn + 16; /* offset for externals */
100112d6:	f100 0710 	add.w	r7, r0, #16
    if (SCB->VTOR != (uint32_t)&ramVectorTable) {
100112da:	d007      	beq.n	100112ec <MXC_NVIC_SetVector+0x24>
    memcpy(&ramVectorTable, &__isr_vector, sizeof(ramVectorTable));
100112dc:	4618      	mov	r0, r3
100112de:	490c      	ldr	r1, [pc, #48]	@ (10011310 <MXC_NVIC_SetVector+0x48>)
100112e0:	f44f 72f0 	mov.w	r2, #480	@ 0x1e0
100112e4:	f004 fe7c 	bl	10015fe0 <memcpy>
100112e8:	4603      	mov	r3, r0
    SCB->VTOR = (uint32_t)&ramVectorTable;
100112ea:	60b0      	str	r0, [r6, #8]
  if ((int32_t)(IRQn) >= 0)
100112ec:	2c00      	cmp	r4, #0
        NVIC_SetRAM();
    }

    ramVectorTable[index] = irq_handler;
100112ee:	f843 5027 	str.w	r5, [r3, r7, lsl #2]
100112f2:	db07      	blt.n	10011304 <MXC_NVIC_SetVector+0x3c>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
100112f4:	4a07      	ldr	r2, [pc, #28]	@ (10011314 <MXC_NVIC_SetVector+0x4c>)
100112f6:	0961      	lsrs	r1, r4, #5
100112f8:	2301      	movs	r3, #1
100112fa:	f004 041f 	and.w	r4, r4, #31
100112fe:	40a3      	lsls	r3, r4
10011300:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
    NVIC_EnableIRQ(irqn);
}
10011304:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10011306:	bf00      	nop
10011308:	e000ed00 	.word	0xe000ed00
1001130c:	20001000 	.word	0x20001000
10011310:	1000e000 	.word	0x1000e000
10011314:	e000e100 	.word	0xe000e100

10011318 <MXC_SYS_ClockDisable>:

/* ************************************************************************** */
void MXC_SYS_ClockDisable(mxc_sys_periph_clock_t clock)
{
    /* The mxc_sys_periph_clock_t enum uses enum values that are the offset by 32 and 64 for the perckcn1 register. */
    if (clock > 63) {
10011318:	283f      	cmp	r0, #63	@ 0x3f
1001131a:	d908      	bls.n	1001132e <MXC_SYS_ClockDisable+0x16>
        clock -= 64;
        MXC_LPGCR->pclkdis |= (0x1 << clock);
1001131c:	4a0d      	ldr	r2, [pc, #52]	@ (10011354 <MXC_SYS_ClockDisable+0x3c>)
        clock -= 64;
1001131e:	3840      	subs	r0, #64	@ 0x40
        MXC_LPGCR->pclkdis |= (0x1 << clock);
10011320:	68d1      	ldr	r1, [r2, #12]
10011322:	b2c0      	uxtb	r0, r0
10011324:	2301      	movs	r3, #1
10011326:	4083      	lsls	r3, r0
10011328:	430b      	orrs	r3, r1
1001132a:	60d3      	str	r3, [r2, #12]
1001132c:	4770      	bx	lr
    } else if (clock > 31) {
1001132e:	281f      	cmp	r0, #31
        clock -= 32;
        MXC_GCR->pclkdis1 |= (0x1 << clock);
10011330:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
    } else if (clock > 31) {
10011334:	d907      	bls.n	10011346 <MXC_SYS_ClockDisable+0x2e>
        clock -= 32;
10011336:	3820      	subs	r0, #32
        MXC_GCR->pclkdis1 |= (0x1 << clock);
10011338:	6c91      	ldr	r1, [r2, #72]	@ 0x48
1001133a:	b2c0      	uxtb	r0, r0
1001133c:	2301      	movs	r3, #1
1001133e:	4083      	lsls	r3, r0
10011340:	430b      	orrs	r3, r1
10011342:	6493      	str	r3, [r2, #72]	@ 0x48
10011344:	4770      	bx	lr
    } else {
        MXC_GCR->pclkdis0 |= (0x1 << clock);
10011346:	6a51      	ldr	r1, [r2, #36]	@ 0x24
10011348:	2301      	movs	r3, #1
1001134a:	4083      	lsls	r3, r0
1001134c:	430b      	orrs	r3, r1
1001134e:	6253      	str	r3, [r2, #36]	@ 0x24
    }
}
10011350:	4770      	bx	lr
10011352:	bf00      	nop
10011354:	40080000 	.word	0x40080000

10011358 <MXC_SYS_ClockEnable>:

/* ************************************************************************** */
void MXC_SYS_ClockEnable(mxc_sys_periph_clock_t clock)
{
    /* The mxc_sys_periph_clock_t enum uses enum values that are the offset by 32 and 64 for the perckcn1 register. */
    if (clock > 63) {
10011358:	283f      	cmp	r0, #63	@ 0x3f
1001135a:	d909      	bls.n	10011370 <MXC_SYS_ClockEnable+0x18>
        clock -= 64;
        MXC_LPGCR->pclkdis &= ~(0x1 << clock);
1001135c:	490e      	ldr	r1, [pc, #56]	@ (10011398 <MXC_SYS_ClockEnable+0x40>)
        clock -= 64;
1001135e:	3840      	subs	r0, #64	@ 0x40
        MXC_LPGCR->pclkdis &= ~(0x1 << clock);
10011360:	68cb      	ldr	r3, [r1, #12]
10011362:	b2c0      	uxtb	r0, r0
10011364:	2201      	movs	r2, #1
10011366:	4082      	lsls	r2, r0
10011368:	ea23 0302 	bic.w	r3, r3, r2
1001136c:	60cb      	str	r3, [r1, #12]
1001136e:	4770      	bx	lr
    } else if (clock > 31) {
10011370:	281f      	cmp	r0, #31
        clock -= 32;
        MXC_GCR->pclkdis1 &= ~(0x1 << clock);
10011372:	f04f 4180 	mov.w	r1, #1073741824	@ 0x40000000
    } else if (clock > 31) {
10011376:	d908      	bls.n	1001138a <MXC_SYS_ClockEnable+0x32>
        clock -= 32;
10011378:	3820      	subs	r0, #32
        MXC_GCR->pclkdis1 &= ~(0x1 << clock);
1001137a:	6c8b      	ldr	r3, [r1, #72]	@ 0x48
1001137c:	b2c0      	uxtb	r0, r0
1001137e:	2201      	movs	r2, #1
10011380:	4082      	lsls	r2, r0
10011382:	ea23 0302 	bic.w	r3, r3, r2
10011386:	648b      	str	r3, [r1, #72]	@ 0x48
10011388:	4770      	bx	lr
    } else {
        MXC_GCR->pclkdis0 &= ~(0x1 << clock);
1001138a:	6a4b      	ldr	r3, [r1, #36]	@ 0x24
1001138c:	2201      	movs	r2, #1
1001138e:	4082      	lsls	r2, r0
10011390:	ea23 0302 	bic.w	r3, r3, r2
10011394:	624b      	str	r3, [r1, #36]	@ 0x24
    }
}
10011396:	4770      	bx	lr
10011398:	40080000 	.word	0x40080000

1001139c <MXC_SYS_ClockSourceEnable>:
    }
}

/******************************************************************************/
int MXC_SYS_ClockSourceEnable(mxc_sys_system_clock_t clock)
{
1001139c:	b510      	push	{r4, lr}
    switch (clock) {
1001139e:	2807      	cmp	r0, #7
100113a0:	d80a      	bhi.n	100113b8 <MXC_SYS_ClockSourceEnable+0x1c>
100113a2:	e8df f000 	tbb	[pc, r0]
100113a6:	090c      	.short	0x090c
100113a8:	47332309 	.word	0x47332309
100113ac:	045b      	.short	0x045b

    default:
        return E_BAD_PARAM;
        break;
    }
}
100113ae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        return MXC_GPIO_Config(&gpio_cfg_extclk);
100113b2:	4836      	ldr	r0, [pc, #216]	@ (1001148c <MXC_SYS_ClockSourceEnable+0xf0>)
100113b4:	f000 b8b0 	b.w	10011518 <MXC_GPIO_Config>
    switch (clock) {
100113b8:	f06f 0002 	mvn.w	r0, #2
}
100113bc:	bd10      	pop	{r4, pc}
        MXC_GCR->clkctrl |= MXC_F_GCR_CLKCTRL_ISO_EN;
100113be:	f04f 4480 	mov.w	r4, #1073741824	@ 0x40000000
    // We do not have access to a system tick in the RV core.
    while (!(MXC_GCR->clkctrl & ready)) {}
    return E_NO_ERROR;
#else
    // Start timeout, wait for ready
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
100113c2:	2100      	movs	r1, #0
        MXC_GCR->clkctrl |= MXC_F_GCR_CLKCTRL_ISO_EN;
100113c4:	68a3      	ldr	r3, [r4, #8]
100113c6:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
100113ca:	60a3      	str	r3, [r4, #8]
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
100113cc:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
100113d0:	f7ff fed0 	bl	10011174 <MXC_DelayAsync>
100113d4:	e003      	b.n	100113de <MXC_SYS_ClockSourceEnable+0x42>
    do {
        if (MXC_GCR->clkctrl & ready) {
            MXC_DelayAbort();
            return E_NO_ERROR;
        }
    } while (MXC_DelayCheck() == E_BUSY);
100113d6:	f7ff feeb 	bl	100111b0 <MXC_DelayCheck>
100113da:	3006      	adds	r0, #6
100113dc:	d152      	bne.n	10011484 <MXC_SYS_ClockSourceEnable+0xe8>
        if (MXC_GCR->clkctrl & ready) {
100113de:	68a3      	ldr	r3, [r4, #8]
100113e0:	0159      	lsls	r1, r3, #5
100113e2:	d5f8      	bpl.n	100113d6 <MXC_SYS_ClockSourceEnable+0x3a>
            MXC_DelayAbort();
100113e4:	f7ff ff1c 	bl	10011220 <MXC_DelayAbort>
            return E_NO_ERROR;
100113e8:	2000      	movs	r0, #0
}
100113ea:	bd10      	pop	{r4, pc}
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
100113ec:	2100      	movs	r1, #0
100113ee:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
100113f2:	f7ff febf 	bl	10011174 <MXC_DelayAsync>
        if (MXC_GCR->clkctrl & ready) {
100113f6:	f04f 4480 	mov.w	r4, #1073741824	@ 0x40000000
100113fa:	e003      	b.n	10011404 <MXC_SYS_ClockSourceEnable+0x68>
    } while (MXC_DelayCheck() == E_BUSY);
100113fc:	f7ff fed8 	bl	100111b0 <MXC_DelayCheck>
10011400:	3006      	adds	r0, #6
10011402:	d13f      	bne.n	10011484 <MXC_SYS_ClockSourceEnable+0xe8>
        if (MXC_GCR->clkctrl & ready) {
10011404:	68a3      	ldr	r3, [r4, #8]
10011406:	009a      	lsls	r2, r3, #2
10011408:	d4ec      	bmi.n	100113e4 <MXC_SYS_ClockSourceEnable+0x48>
1001140a:	e7f7      	b.n	100113fc <MXC_SYS_ClockSourceEnable+0x60>
        MXC_GCR->clkctrl |= MXC_F_GCR_CLKCTRL_IPO_EN;
1001140c:	f04f 4480 	mov.w	r4, #1073741824	@ 0x40000000
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
10011410:	2100      	movs	r1, #0
        MXC_GCR->clkctrl |= MXC_F_GCR_CLKCTRL_IPO_EN;
10011412:	68a3      	ldr	r3, [r4, #8]
10011414:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
10011418:	60a3      	str	r3, [r4, #8]
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
1001141a:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
1001141e:	f7ff fea9 	bl	10011174 <MXC_DelayAsync>
10011422:	e003      	b.n	1001142c <MXC_SYS_ClockSourceEnable+0x90>
    } while (MXC_DelayCheck() == E_BUSY);
10011424:	f7ff fec4 	bl	100111b0 <MXC_DelayCheck>
10011428:	3006      	adds	r0, #6
1001142a:	d12b      	bne.n	10011484 <MXC_SYS_ClockSourceEnable+0xe8>
        if (MXC_GCR->clkctrl & ready) {
1001142c:	68a3      	ldr	r3, [r4, #8]
1001142e:	011b      	lsls	r3, r3, #4
10011430:	d5f8      	bpl.n	10011424 <MXC_SYS_ClockSourceEnable+0x88>
10011432:	e7d7      	b.n	100113e4 <MXC_SYS_ClockSourceEnable+0x48>
        MXC_GCR->clkctrl |= MXC_F_GCR_CLKCTRL_IBRO_EN;
10011434:	f04f 4480 	mov.w	r4, #1073741824	@ 0x40000000
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
10011438:	2100      	movs	r1, #0
        MXC_GCR->clkctrl |= MXC_F_GCR_CLKCTRL_IBRO_EN;
1001143a:	68a3      	ldr	r3, [r4, #8]
1001143c:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
10011440:	60a3      	str	r3, [r4, #8]
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
10011442:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
10011446:	f7ff fe95 	bl	10011174 <MXC_DelayAsync>
1001144a:	e003      	b.n	10011454 <MXC_SYS_ClockSourceEnable+0xb8>
    } while (MXC_DelayCheck() == E_BUSY);
1001144c:	f7ff feb0 	bl	100111b0 <MXC_DelayCheck>
10011450:	3006      	adds	r0, #6
10011452:	d117      	bne.n	10011484 <MXC_SYS_ClockSourceEnable+0xe8>
        if (MXC_GCR->clkctrl & ready) {
10011454:	68a3      	ldr	r3, [r4, #8]
10011456:	00d8      	lsls	r0, r3, #3
10011458:	d4c4      	bmi.n	100113e4 <MXC_SYS_ClockSourceEnable+0x48>
1001145a:	e7f7      	b.n	1001144c <MXC_SYS_ClockSourceEnable+0xb0>
        MXC_GCR->clkctrl |= MXC_F_GCR_CLKCTRL_ERTCO_EN;
1001145c:	f04f 4480 	mov.w	r4, #1073741824	@ 0x40000000
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
10011460:	2100      	movs	r1, #0
        MXC_GCR->clkctrl |= MXC_F_GCR_CLKCTRL_ERTCO_EN;
10011462:	68a3      	ldr	r3, [r4, #8]
10011464:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
10011468:	60a3      	str	r3, [r4, #8]
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
1001146a:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
1001146e:	f7ff fe81 	bl	10011174 <MXC_DelayAsync>
10011472:	e003      	b.n	1001147c <MXC_SYS_ClockSourceEnable+0xe0>
    } while (MXC_DelayCheck() == E_BUSY);
10011474:	f7ff fe9c 	bl	100111b0 <MXC_DelayCheck>
10011478:	3006      	adds	r0, #6
1001147a:	d103      	bne.n	10011484 <MXC_SYS_ClockSourceEnable+0xe8>
        if (MXC_GCR->clkctrl & ready) {
1001147c:	68a3      	ldr	r3, [r4, #8]
1001147e:	019b      	lsls	r3, r3, #6
10011480:	d4b0      	bmi.n	100113e4 <MXC_SYS_ClockSourceEnable+0x48>
10011482:	e7f7      	b.n	10011474 <MXC_SYS_ClockSourceEnable+0xd8>

    return E_TIME_OUT;
10011484:	f06f 0009 	mvn.w	r0, #9
}
10011488:	bd10      	pop	{r4, pc}
1001148a:	bf00      	nop
1001148c:	1001d8e8 	.word	0x1001d8e8

10011490 <MXC_SYS_Reset_Periph>:

/* ************************************************************************** */
void MXC_SYS_Reset_Periph(mxc_sys_reset_t reset)
{
    /* The mxc_sys_reset_t enum uses enum values that are the offset by 32 and 64 for the rst register. */
    if (reset > 63) {
10011490:	283f      	cmp	r0, #63	@ 0x3f
10011492:	d909      	bls.n	100114a8 <MXC_SYS_Reset_Periph+0x18>
        reset -= 64;
10011494:	3840      	subs	r0, #64	@ 0x40
        MXC_LPGCR->rst = (0x1 << reset);
10011496:	490f      	ldr	r1, [pc, #60]	@ (100114d4 <MXC_SYS_Reset_Periph+0x44>)
10011498:	b2c0      	uxtb	r0, r0
1001149a:	2201      	movs	r2, #1
1001149c:	4082      	lsls	r2, r0
1001149e:	608a      	str	r2, [r1, #8]
        while (MXC_LPGCR->rst & (0x1 << reset)) {}
100114a0:	688b      	ldr	r3, [r1, #8]
100114a2:	421a      	tst	r2, r3
100114a4:	d1fc      	bne.n	100114a0 <MXC_SYS_Reset_Periph+0x10>
100114a6:	4770      	bx	lr
    } else if (reset > 31) {
100114a8:	281f      	cmp	r0, #31
100114aa:	d90a      	bls.n	100114c2 <MXC_SYS_Reset_Periph+0x32>
        reset -= 32;
100114ac:	3820      	subs	r0, #32
        MXC_GCR->rst1 = (0x1 << reset);
100114ae:	b2c0      	uxtb	r0, r0
100114b0:	2201      	movs	r2, #1
100114b2:	f04f 4180 	mov.w	r1, #1073741824	@ 0x40000000
100114b6:	4082      	lsls	r2, r0
100114b8:	644a      	str	r2, [r1, #68]	@ 0x44
        while (MXC_GCR->rst1 & (0x1 << reset)) {}
100114ba:	6c4b      	ldr	r3, [r1, #68]	@ 0x44
100114bc:	421a      	tst	r2, r3
100114be:	d1fc      	bne.n	100114ba <MXC_SYS_Reset_Periph+0x2a>
100114c0:	4770      	bx	lr
    } else {
        MXC_GCR->rst0 = (0x1 << reset);
100114c2:	2201      	movs	r2, #1
100114c4:	f04f 4180 	mov.w	r1, #1073741824	@ 0x40000000
100114c8:	4082      	lsls	r2, r0
100114ca:	604a      	str	r2, [r1, #4]
        while (MXC_GCR->rst0 & (0x1 << reset)) {}
100114cc:	684b      	ldr	r3, [r1, #4]
100114ce:	421a      	tst	r2, r3
100114d0:	d1fc      	bne.n	100114cc <MXC_SYS_Reset_Periph+0x3c>
    }
}
100114d2:	4770      	bx	lr
100114d4:	40080000 	.word	0x40080000

100114d8 <MXC_GPIO_Init>:
/* **** Globals **** */

/* **** Functions **** */
int MXC_GPIO_Init(uint32_t portmask)
{
    if (portmask & 0x1) {
100114d8:	07c1      	lsls	r1, r0, #31
{
100114da:	b510      	push	{r4, lr}
100114dc:	4604      	mov	r4, r0
    if (portmask & 0x1) {
100114de:	d408      	bmi.n	100114f2 <MXC_GPIO_Init+0x1a>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_GPIO0);
    }

    if (portmask & 0x2) {
100114e0:	07a2      	lsls	r2, r4, #30
100114e2:	d40b      	bmi.n	100114fc <MXC_GPIO_Init+0x24>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_GPIO1);
    }

    if (portmask & 0x4) {
100114e4:	0763      	lsls	r3, r4, #29
100114e6:	d40e      	bmi.n	10011506 <MXC_GPIO_Init+0x2e>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_GPIO2);
    }

    return MXC_GPIO_Common_Init(portmask);
100114e8:	4620      	mov	r0, r4
}
100114ea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return MXC_GPIO_Common_Init(portmask);
100114ee:	f000 bff1 	b.w	100124d4 <MXC_GPIO_Common_Init>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_GPIO0);
100114f2:	2000      	movs	r0, #0
100114f4:	f7ff ff30 	bl	10011358 <MXC_SYS_ClockEnable>
    if (portmask & 0x2) {
100114f8:	07a2      	lsls	r2, r4, #30
100114fa:	d5f3      	bpl.n	100114e4 <MXC_GPIO_Init+0xc>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_GPIO1);
100114fc:	2001      	movs	r0, #1
100114fe:	f7ff ff2b 	bl	10011358 <MXC_SYS_ClockEnable>
    if (portmask & 0x4) {
10011502:	0763      	lsls	r3, r4, #29
10011504:	d5f0      	bpl.n	100114e8 <MXC_GPIO_Init+0x10>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_GPIO2);
10011506:	2040      	movs	r0, #64	@ 0x40
10011508:	f7ff ff26 	bl	10011358 <MXC_SYS_ClockEnable>
    return MXC_GPIO_Common_Init(portmask);
1001150c:	4620      	mov	r0, r4
}
1001150e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return MXC_GPIO_Common_Init(portmask);
10011512:	f000 bfdf 	b.w	100124d4 <MXC_GPIO_Common_Init>
10011516:	bf00      	nop

10011518 <MXC_GPIO_Config>:

    return E_NO_ERROR;
}

int MXC_GPIO_Config(const mxc_gpio_cfg_t *cfg)
{
10011518:	b570      	push	{r4, r5, r6, lr}
    int port, error;
    mxc_gpio_regs_t *gpio = cfg->port;

    port = MXC_GPIO_GET_IDX(cfg->port);
1001151a:	4b7f      	ldr	r3, [pc, #508]	@ (10011718 <MXC_GPIO_Config+0x200>)
    mxc_gpio_regs_t *gpio = cfg->port;
1001151c:	6805      	ldr	r5, [r0, #0]
    port = MXC_GPIO_GET_IDX(cfg->port);
1001151e:	429d      	cmp	r5, r3
{
10011520:	4604      	mov	r4, r0
    port = MXC_GPIO_GET_IDX(cfg->port);
10011522:	d037      	beq.n	10011594 <MXC_GPIO_Config+0x7c>
10011524:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10011528:	429d      	cmp	r5, r3
1001152a:	d020      	beq.n	1001156e <MXC_GPIO_Config+0x56>
1001152c:	f503 23ee 	add.w	r3, r3, #487424	@ 0x77000
10011530:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
10011534:	429d      	cmp	r5, r3
10011536:	d07f      	beq.n	10011638 <MXC_GPIO_Config+0x120>
10011538:	4878      	ldr	r0, [pc, #480]	@ (1001171c <MXC_GPIO_Config+0x204>)
1001153a:	1a28      	subs	r0, r5, r0
1001153c:	fab0 f080 	clz	r0, r0
10011540:	0940      	lsrs	r0, r0, #5
10011542:	00c0      	lsls	r0, r0, #3

    MXC_GPIO_Init(1 << port);
10011544:	f7ff ffc8 	bl	100114d8 <MXC_GPIO_Init>

    if (cfg->port == MXC_GPIO3) {
10011548:	4b74      	ldr	r3, [pc, #464]	@ (1001171c <MXC_GPIO_Config+0x204>)
1001154a:	6822      	ldr	r2, [r4, #0]
1001154c:	429a      	cmp	r2, r3
1001154e:	d015      	beq.n	1001157c <MXC_GPIO_Config+0x64>
        default:
            return E_NOT_SUPPORTED;
        }
    } else {
        // Configure alternate function
        error = MXC_GPIO_RevA_SetAF((mxc_gpio_reva_regs_t *)gpio, cfg->func, cfg->mask);
10011550:	6862      	ldr	r2, [r4, #4]
10011552:	7a21      	ldrb	r1, [r4, #8]
10011554:	4628      	mov	r0, r5
10011556:	f000 f94b 	bl	100117f0 <MXC_GPIO_RevA_SetAF>
        if (error != E_NO_ERROR) {
1001155a:	b9d0      	cbnz	r0, 10011592 <MXC_GPIO_Config+0x7a>
            return error;
        }

        // Configure the pad
        switch (cfg->pad) {
1001155c:	7a63      	ldrb	r3, [r4, #9]
1001155e:	2b04      	cmp	r3, #4
10011560:	f200 80d7 	bhi.w	10011712 <MXC_GPIO_Config+0x1fa>
10011564:	e8df f003 	tbb	[pc, r3]
10011568:	2f3e4c5a 	.word	0x2f3e4c5a
1001156c:	18          	.byte	0x18
1001156d:	00          	.byte	0x00
1001156e:	2002      	movs	r0, #2
    MXC_GPIO_Init(1 << port);
10011570:	f7ff ffb2 	bl	100114d8 <MXC_GPIO_Init>
    if (cfg->port == MXC_GPIO3) {
10011574:	4b69      	ldr	r3, [pc, #420]	@ (1001171c <MXC_GPIO_Config+0x204>)
10011576:	6822      	ldr	r2, [r4, #0]
10011578:	429a      	cmp	r2, r3
1001157a:	d1e9      	bne.n	10011550 <MXC_GPIO_Config+0x38>
        switch (cfg->func) {
1001157c:	7a23      	ldrb	r3, [r4, #8]
1001157e:	2b01      	cmp	r3, #1
10011580:	f000 80bb 	beq.w	100116fa <MXC_GPIO_Config+0x1e2>
10011584:	2b02      	cmp	r3, #2
10011586:	f000 80a5 	beq.w	100116d4 <MXC_GPIO_Config+0x1bc>
1001158a:	2b00      	cmp	r3, #0
1001158c:	d056      	beq.n	1001163c <MXC_GPIO_Config+0x124>
            return E_NOT_SUPPORTED;
1001158e:	f06f 0010 	mvn.w	r0, #16
        }
    }

    // Configure the vssel
    return MXC_GPIO_SetVSSEL(gpio, cfg->vssel, cfg->mask);
}
10011592:	bd70      	pop	{r4, r5, r6, pc}
10011594:	2001      	movs	r0, #1
10011596:	e7d5      	b.n	10011544 <MXC_GPIO_Config+0x2c>
            gpio->padctrl0 &= ~cfg->mask;
10011598:	6e2b      	ldr	r3, [r5, #96]	@ 0x60
1001159a:	6862      	ldr	r2, [r4, #4]
1001159c:	ea23 0302 	bic.w	r3, r3, r2
100115a0:	662b      	str	r3, [r5, #96]	@ 0x60
            gpio->padctrl1 |= cfg->mask;
100115a2:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
100115a4:	4313      	orrs	r3, r2
100115a6:	666b      	str	r3, [r5, #100]	@ 0x64
            gpio->ps &= ~cfg->mask;
100115a8:	f8d5 30b8 	ldr.w	r3, [r5, #184]	@ 0xb8
100115ac:	ea23 0302 	bic.w	r3, r3, r2
100115b0:	f8c5 30b8 	str.w	r3, [r5, #184]	@ 0xb8
}

/* ************************************************************************** */
int MXC_GPIO_SetVSSEL(mxc_gpio_regs_t *port, mxc_gpio_vssel_t vssel, uint32_t mask)
{
    if (port == MXC_GPIO3) {
100115b4:	4b59      	ldr	r3, [pc, #356]	@ (1001171c <MXC_GPIO_Config+0x204>)
    return MXC_GPIO_SetVSSEL(gpio, cfg->vssel, cfg->mask);
100115b6:	7aa1      	ldrb	r1, [r4, #10]
    if (port == MXC_GPIO3) {
100115b8:	429d      	cmp	r5, r3
100115ba:	d039      	beq.n	10011630 <MXC_GPIO_Config+0x118>
        }

        return E_NO_ERROR;
    }

    return MXC_GPIO_RevA_SetVSSEL((mxc_gpio_reva_regs_t *)port, vssel, mask);
100115bc:	4628      	mov	r0, r5
}
100115be:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    return MXC_GPIO_RevA_SetVSSEL((mxc_gpio_reva_regs_t *)port, vssel, mask);
100115c2:	f000 b8ff 	b.w	100117c4 <MXC_GPIO_RevA_SetVSSEL>
            gpio->padctrl0 |= cfg->mask;
100115c6:	6e2b      	ldr	r3, [r5, #96]	@ 0x60
100115c8:	6862      	ldr	r2, [r4, #4]
100115ca:	4313      	orrs	r3, r2
100115cc:	662b      	str	r3, [r5, #96]	@ 0x60
            gpio->padctrl1 &= ~cfg->mask;
100115ce:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
100115d0:	ea23 0302 	bic.w	r3, r3, r2
100115d4:	666b      	str	r3, [r5, #100]	@ 0x64
            gpio->ps &= ~cfg->mask;
100115d6:	f8d5 30b8 	ldr.w	r3, [r5, #184]	@ 0xb8
100115da:	ea23 0302 	bic.w	r3, r3, r2
100115de:	f8c5 30b8 	str.w	r3, [r5, #184]	@ 0xb8
            break;
100115e2:	e7e7      	b.n	100115b4 <MXC_GPIO_Config+0x9c>
            gpio->padctrl0 &= ~cfg->mask;
100115e4:	6e2b      	ldr	r3, [r5, #96]	@ 0x60
100115e6:	6862      	ldr	r2, [r4, #4]
100115e8:	ea23 0302 	bic.w	r3, r3, r2
100115ec:	662b      	str	r3, [r5, #96]	@ 0x60
            gpio->padctrl1 |= cfg->mask;
100115ee:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
100115f0:	4313      	orrs	r3, r2
100115f2:	666b      	str	r3, [r5, #100]	@ 0x64
            gpio->ps |= cfg->mask;
100115f4:	f8d5 30b8 	ldr.w	r3, [r5, #184]	@ 0xb8
100115f8:	4313      	orrs	r3, r2
100115fa:	f8c5 30b8 	str.w	r3, [r5, #184]	@ 0xb8
            break;
100115fe:	e7d9      	b.n	100115b4 <MXC_GPIO_Config+0x9c>
            gpio->padctrl0 |= cfg->mask;
10011600:	6e2b      	ldr	r3, [r5, #96]	@ 0x60
10011602:	6862      	ldr	r2, [r4, #4]
10011604:	4313      	orrs	r3, r2
10011606:	662b      	str	r3, [r5, #96]	@ 0x60
            gpio->padctrl1 &= ~cfg->mask;
10011608:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
1001160a:	ea23 0302 	bic.w	r3, r3, r2
1001160e:	666b      	str	r3, [r5, #100]	@ 0x64
            gpio->ps |= cfg->mask;
10011610:	f8d5 30b8 	ldr.w	r3, [r5, #184]	@ 0xb8
10011614:	4313      	orrs	r3, r2
10011616:	f8c5 30b8 	str.w	r3, [r5, #184]	@ 0xb8
            break;
1001161a:	e7cb      	b.n	100115b4 <MXC_GPIO_Config+0x9c>
            gpio->padctrl0 &= ~cfg->mask;
1001161c:	6e2b      	ldr	r3, [r5, #96]	@ 0x60
1001161e:	6862      	ldr	r2, [r4, #4]
10011620:	ea23 0302 	bic.w	r3, r3, r2
10011624:	662b      	str	r3, [r5, #96]	@ 0x60
            gpio->padctrl1 &= ~cfg->mask;
10011626:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
10011628:	ea23 0302 	bic.w	r3, r3, r2
1001162c:	666b      	str	r3, [r5, #100]	@ 0x64
            break;
1001162e:	e7c1      	b.n	100115b4 <MXC_GPIO_Config+0x9c>
        if (vssel == MXC_GPIO_VSSEL_VDDIO) {
10011630:	2900      	cmp	r1, #0
10011632:	d0ac      	beq.n	1001158e <MXC_GPIO_Config+0x76>
        return E_NO_ERROR;
10011634:	2000      	movs	r0, #0
}
10011636:	bd70      	pop	{r4, r5, r6, pc}
10011638:	2004      	movs	r0, #4
1001163a:	e783      	b.n	10011544 <MXC_GPIO_Config+0x2c>
            MXC_MCR->gpio3_ctrl &= ~(P30_OUT_EN(cfg->mask) | P31_OUT_EN(cfg->mask));
1001163c:	6863      	ldr	r3, [r4, #4]
1001163e:	4938      	ldr	r1, [pc, #224]	@ (10011720 <MXC_GPIO_Config+0x208>)
10011640:	0058      	lsls	r0, r3, #1
10011642:	011a      	lsls	r2, r3, #4
10011644:	6a0e      	ldr	r6, [r1, #32]
10011646:	f000 0002 	and.w	r0, r0, #2
1001164a:	f002 0220 	and.w	r2, r2, #32
1001164e:	4302      	orrs	r2, r0
10011650:	ea26 0202 	bic.w	r2, r6, r2
            MXC_MCR->gpio3_ctrl |= P30_OUT_EN(cfg->mask) | P31_OUT_EN(cfg->mask);
10011654:	620a      	str	r2, [r1, #32]
            MXC_MCR->outen &= ~(SQWAVE_OUT_EN(cfg->mask) | PDOWN_OUT_EN(cfg->mask));
10011656:	688a      	ldr	r2, [r1, #8]
10011658:	f3c3 0340 	ubfx	r3, r3, #1, #1
1001165c:	4303      	orrs	r3, r0
1001165e:	ea22 0303 	bic.w	r3, r2, r3
10011662:	608b      	str	r3, [r1, #8]
        switch (cfg->pad) {
10011664:	7a63      	ldrb	r3, [r4, #9]
10011666:	2b04      	cmp	r3, #4
10011668:	d891      	bhi.n	1001158e <MXC_GPIO_Config+0x76>
1001166a:	e8df f003 	tbb	[pc, r3]
1001166e:	1b26      	.short	0x1b26
10011670:	1b03      	.short	0x1b03
10011672:	03          	.byte	0x03
10011673:	00          	.byte	0x00
            MXC_MCR->gpio3_ctrl &= ~(P30_DATA_OUT(cfg->mask) | P31_DATA_OUT(cfg->mask));
10011674:	6862      	ldr	r2, [r4, #4]
10011676:	492a      	ldr	r1, [pc, #168]	@ (10011720 <MXC_GPIO_Config+0x208>)
10011678:	00d3      	lsls	r3, r2, #3
1001167a:	6a08      	ldr	r0, [r1, #32]
1001167c:	f003 0310 	and.w	r3, r3, #16
10011680:	f002 0601 	and.w	r6, r2, #1
10011684:	4333      	orrs	r3, r6
10011686:	ea20 0303 	bic.w	r3, r0, r3
1001168a:	620b      	str	r3, [r1, #32]
            MXC_MCR->gpio3_ctrl &= ~(P30_PULL_DIS(cfg->mask) | P31_PULL_DIS(cfg->mask));
1001168c:	0156      	lsls	r6, r2, #5
1001168e:	0093      	lsls	r3, r2, #2
10011690:	6a08      	ldr	r0, [r1, #32]
10011692:	f003 0304 	and.w	r3, r3, #4
10011696:	f006 0640 	and.w	r6, r6, #64	@ 0x40
1001169a:	4333      	orrs	r3, r6
1001169c:	ea20 0303 	bic.w	r3, r0, r3
100116a0:	620b      	str	r3, [r1, #32]
            break;
100116a2:	e787      	b.n	100115b4 <MXC_GPIO_Config+0x9c>
            MXC_MCR->gpio3_ctrl |= P30_DATA_OUT(cfg->mask) | P31_DATA_OUT(cfg->mask);
100116a4:	491e      	ldr	r1, [pc, #120]	@ (10011720 <MXC_GPIO_Config+0x208>)
100116a6:	6862      	ldr	r2, [r4, #4]
100116a8:	6a0e      	ldr	r6, [r1, #32]
100116aa:	00d3      	lsls	r3, r2, #3
100116ac:	f002 0001 	and.w	r0, r2, #1
100116b0:	f003 0310 	and.w	r3, r3, #16
100116b4:	4330      	orrs	r0, r6
100116b6:	4303      	orrs	r3, r0
100116b8:	e7e7      	b.n	1001168a <MXC_GPIO_Config+0x172>
            MXC_MCR->gpio3_ctrl |= P30_PULL_DIS(cfg->mask) | P31_PULL_DIS(cfg->mask);
100116ba:	6862      	ldr	r2, [r4, #4]
100116bc:	4818      	ldr	r0, [pc, #96]	@ (10011720 <MXC_GPIO_Config+0x208>)
100116be:	0093      	lsls	r3, r2, #2
100116c0:	0151      	lsls	r1, r2, #5
100116c2:	6a06      	ldr	r6, [r0, #32]
100116c4:	f003 0304 	and.w	r3, r3, #4
100116c8:	f001 0140 	and.w	r1, r1, #64	@ 0x40
100116cc:	430b      	orrs	r3, r1
100116ce:	4333      	orrs	r3, r6
100116d0:	6203      	str	r3, [r0, #32]
            break;
100116d2:	e76f      	b.n	100115b4 <MXC_GPIO_Config+0x9c>
            MXC_MCR->gpio3_ctrl |= P30_OUT_EN(cfg->mask) | P31_OUT_EN(cfg->mask);
100116d4:	6863      	ldr	r3, [r4, #4]
100116d6:	4912      	ldr	r1, [pc, #72]	@ (10011720 <MXC_GPIO_Config+0x208>)
100116d8:	0058      	lsls	r0, r3, #1
100116da:	011a      	lsls	r2, r3, #4
100116dc:	6a0e      	ldr	r6, [r1, #32]
100116de:	f000 0002 	and.w	r0, r0, #2
100116e2:	f002 0220 	and.w	r2, r2, #32
100116e6:	4302      	orrs	r2, r0
100116e8:	4332      	orrs	r2, r6
100116ea:	620a      	str	r2, [r1, #32]
            MXC_MCR->outen |= SQWAVE_OUT_EN(cfg->mask) | PDOWN_OUT_EN(cfg->mask);
100116ec:	688a      	ldr	r2, [r1, #8]
100116ee:	f3c3 0340 	ubfx	r3, r3, #1, #1
100116f2:	4303      	orrs	r3, r0
100116f4:	4313      	orrs	r3, r2
100116f6:	608b      	str	r3, [r1, #8]
            break;
100116f8:	e7b4      	b.n	10011664 <MXC_GPIO_Config+0x14c>
            MXC_MCR->gpio3_ctrl |= P30_OUT_EN(cfg->mask) | P31_OUT_EN(cfg->mask);
100116fa:	6863      	ldr	r3, [r4, #4]
100116fc:	4908      	ldr	r1, [pc, #32]	@ (10011720 <MXC_GPIO_Config+0x208>)
100116fe:	0058      	lsls	r0, r3, #1
10011700:	011a      	lsls	r2, r3, #4
10011702:	6a0e      	ldr	r6, [r1, #32]
10011704:	f000 0002 	and.w	r0, r0, #2
10011708:	f002 0220 	and.w	r2, r2, #32
1001170c:	4302      	orrs	r2, r0
1001170e:	4332      	orrs	r2, r6
10011710:	e7a0      	b.n	10011654 <MXC_GPIO_Config+0x13c>
        switch (cfg->pad) {
10011712:	f06f 0002 	mvn.w	r0, #2
}
10011716:	bd70      	pop	{r4, r5, r6, pc}
10011718:	40008000 	.word	0x40008000
1001171c:	40080600 	.word	0x40080600
10011720:	40006c00 	.word	0x40006c00

10011724 <MXC_GPIO_OutSet>:
    if (port == MXC_GPIO3) {
10011724:	4a08      	ldr	r2, [pc, #32]	@ (10011748 <MXC_GPIO_OutSet+0x24>)
10011726:	4290      	cmp	r0, r2
10011728:	d001      	beq.n	1001172e <MXC_GPIO_OutSet+0xa>
    MXC_GPIO_RevA_OutSet((mxc_gpio_reva_regs_t *)port, mask);
1001172a:	f000 b843 	b.w	100117b4 <MXC_GPIO_RevA_OutSet>
        MXC_MCR->gpio3_ctrl |= P30_DATA_OUT(mask) | P31_DATA_OUT(mask);
1001172e:	4807      	ldr	r0, [pc, #28]	@ (1001174c <MXC_GPIO_OutSet+0x28>)
{
10011730:	b410      	push	{r4}
        MXC_MCR->gpio3_ctrl |= P30_DATA_OUT(mask) | P31_DATA_OUT(mask);
10011732:	6a04      	ldr	r4, [r0, #32]
10011734:	00ca      	lsls	r2, r1, #3
10011736:	f001 0101 	and.w	r1, r1, #1
1001173a:	4321      	orrs	r1, r4
1001173c:	f002 0310 	and.w	r3, r2, #16
10011740:	430b      	orrs	r3, r1
}
10011742:	bc10      	pop	{r4}
        MXC_MCR->gpio3_ctrl |= P30_DATA_OUT(mask) | P31_DATA_OUT(mask);
10011744:	6203      	str	r3, [r0, #32]
}
10011746:	4770      	bx	lr
10011748:	40080600 	.word	0x40080600
1001174c:	40006c00 	.word	0x40006c00

10011750 <MXC_GPIO_OutClr>:
    if (port == MXC_GPIO3) {
10011750:	4a09      	ldr	r2, [pc, #36]	@ (10011778 <MXC_GPIO_OutClr+0x28>)
10011752:	4290      	cmp	r0, r2
10011754:	d001      	beq.n	1001175a <MXC_GPIO_OutClr+0xa>
    MXC_GPIO_RevA_OutClr((mxc_gpio_reva_regs_t *)port, mask);
10011756:	f000 b82f 	b.w	100117b8 <MXC_GPIO_RevA_OutClr>
{
1001175a:	b410      	push	{r4}
        MXC_MCR->gpio3_ctrl &= ~(P30_DATA_OUT(mask) | P31_DATA_OUT(mask));
1001175c:	4c07      	ldr	r4, [pc, #28]	@ (1001177c <MXC_GPIO_OutClr+0x2c>)
1001175e:	00ca      	lsls	r2, r1, #3
10011760:	6a20      	ldr	r0, [r4, #32]
10011762:	f002 0210 	and.w	r2, r2, #16
10011766:	f001 0101 	and.w	r1, r1, #1
1001176a:	ea42 0301 	orr.w	r3, r2, r1
1001176e:	ea20 0303 	bic.w	r3, r0, r3
10011772:	6223      	str	r3, [r4, #32]
}
10011774:	bc10      	pop	{r4}
10011776:	4770      	bx	lr
10011778:	40080600 	.word	0x40080600
1001177c:	40006c00 	.word	0x40006c00

10011780 <MXC_GPIO_Handler>:
    MXC_GPIO_Common_Handler(port);
10011780:	f000 beba 	b.w	100124f8 <MXC_GPIO_Common_Handler>

10011784 <MXC_GPIO_ClearFlags>:
    if (port == MXC_GPIO3) {
10011784:	4a03      	ldr	r2, [pc, #12]	@ (10011794 <MXC_GPIO_ClearFlags+0x10>)
10011786:	4290      	cmp	r0, r2
10011788:	d001      	beq.n	1001178e <MXC_GPIO_ClearFlags+0xa>
    MXC_GPIO_RevA_ClearFlags((mxc_gpio_reva_regs_t *)port, flags);
1001178a:	f000 b817 	b.w	100117bc <MXC_GPIO_RevA_ClearFlags>
        MXC_PWRSEQ->lpwkst3 = flags;
1001178e:	4a02      	ldr	r2, [pc, #8]	@ (10011798 <MXC_GPIO_ClearFlags+0x14>)
10011790:	61d1      	str	r1, [r2, #28]
}
10011792:	4770      	bx	lr
10011794:	40080600 	.word	0x40080600
10011798:	40006800 	.word	0x40006800

1001179c <MXC_GPIO_GetFlags>:
    if (port == MXC_GPIO3) {
1001179c:	4b03      	ldr	r3, [pc, #12]	@ (100117ac <MXC_GPIO_GetFlags+0x10>)
1001179e:	4298      	cmp	r0, r3
100117a0:	d001      	beq.n	100117a6 <MXC_GPIO_GetFlags+0xa>
    return MXC_GPIO_RevA_GetFlags((mxc_gpio_reva_regs_t *)port);
100117a2:	f000 b80d 	b.w	100117c0 <MXC_GPIO_RevA_GetFlags>
        return MXC_PWRSEQ->lpwkst3;
100117a6:	4b02      	ldr	r3, [pc, #8]	@ (100117b0 <MXC_GPIO_GetFlags+0x14>)
100117a8:	69d8      	ldr	r0, [r3, #28]
}
100117aa:	4770      	bx	lr
100117ac:	40080600 	.word	0x40080600
100117b0:	40006800 	.word	0x40006800

100117b4 <MXC_GPIO_RevA_OutSet>:
    return (port->in & mask);
}

void MXC_GPIO_RevA_OutSet(mxc_gpio_reva_regs_t *port, uint32_t mask)
{
    port->out_set = mask;
100117b4:	61c1      	str	r1, [r0, #28]
}
100117b6:	4770      	bx	lr

100117b8 <MXC_GPIO_RevA_OutClr>:

void MXC_GPIO_RevA_OutClr(mxc_gpio_reva_regs_t *port, uint32_t mask)
{
    port->out_clr = mask;
100117b8:	6201      	str	r1, [r0, #32]
}
100117ba:	4770      	bx	lr

100117bc <MXC_GPIO_RevA_ClearFlags>:
    port->inten_clr = mask;
}

void MXC_GPIO_RevA_ClearFlags(mxc_gpio_reva_regs_t *port, uint32_t flags)
{
    port->intfl_clr = flags;
100117bc:	6481      	str	r1, [r0, #72]	@ 0x48
}
100117be:	4770      	bx	lr

100117c0 <MXC_GPIO_RevA_GetFlags>:

uint32_t MXC_GPIO_RevA_GetFlags(mxc_gpio_reva_regs_t *port)
{
    return port->intfl;
100117c0:	6c00      	ldr	r0, [r0, #64]	@ 0x40
}
100117c2:	4770      	bx	lr

100117c4 <MXC_GPIO_RevA_SetVSSEL>:

int MXC_GPIO_RevA_SetVSSEL(mxc_gpio_reva_regs_t *port, mxc_gpio_vssel_t vssel, uint32_t mask)
{
    // Configure the vssel
    switch (vssel) {
100117c4:	b159      	cbz	r1, 100117de <MXC_GPIO_RevA_SetVSSEL+0x1a>
100117c6:	2901      	cmp	r1, #1
100117c8:	d106      	bne.n	100117d8 <MXC_GPIO_RevA_SetVSSEL+0x14>
    case MXC_GPIO_VSSEL_VDDIO:
        port->vssel &= ~mask;
        break;

    case MXC_GPIO_VSSEL_VDDIOH:
        port->vssel |= mask;
100117ca:	f8d0 30c0 	ldr.w	r3, [r0, #192]	@ 0xc0
100117ce:	4313      	orrs	r3, r2
100117d0:	f8c0 30c0 	str.w	r3, [r0, #192]	@ 0xc0

    default:
        return E_BAD_PARAM;
    }

    return E_NO_ERROR;
100117d4:	2000      	movs	r0, #0
}
100117d6:	4770      	bx	lr
    switch (vssel) {
100117d8:	f06f 0002 	mvn.w	r0, #2
100117dc:	4770      	bx	lr
        port->vssel &= ~mask;
100117de:	f8d0 30c0 	ldr.w	r3, [r0, #192]	@ 0xc0
100117e2:	ea23 0302 	bic.w	r3, r3, r2
100117e6:	f8c0 30c0 	str.w	r3, [r0, #192]	@ 0xc0
    return E_NO_ERROR;
100117ea:	2000      	movs	r0, #0
}
100117ec:	4770      	bx	lr
100117ee:	bf00      	nop

100117f0 <MXC_GPIO_RevA_SetAF>:

int MXC_GPIO_RevA_SetAF(mxc_gpio_reva_regs_t *port, mxc_gpio_func_t func, uint32_t mask)
{
    //This is required for new devices going forward.
    port->inen |= mask;
100117f0:	6b03      	ldr	r3, [r0, #48]	@ 0x30
100117f2:	4313      	orrs	r3, r2
100117f4:	6303      	str	r3, [r0, #48]	@ 0x30

    //Switch to I/O mode first
    port->en0_set = mask;
100117f6:	6042      	str	r2, [r0, #4]

    switch (func) {
100117f8:	2905      	cmp	r1, #5
100117fa:	d82c      	bhi.n	10011856 <MXC_GPIO_RevA_SetAF+0x66>
100117fc:	e8df f001 	tbb	[pc, r1]
10011800:	1f19120a 	.word	0x1f19120a
10011804:	0325      	.short	0x0325
        port->en1_clr = mask;
        port->en0_clr = mask;
        break;

    case MXC_GPIO_FUNC_ALT4:
        port->en3_clr = mask;
10011806:	f8c0 2088 	str.w	r2, [r0, #136]	@ 0x88
        port->en2_set = mask;
1001180a:	6782      	str	r2, [r0, #120]	@ 0x78
        port->en1_set = mask;
1001180c:	66c2      	str	r2, [r0, #108]	@ 0x6c
        port->en0_clr = mask;
1001180e:	6082      	str	r2, [r0, #8]
#endif
    default:
        return E_BAD_PARAM;
    }

    return E_NO_ERROR;
10011810:	2000      	movs	r0, #0
10011812:	4770      	bx	lr
        port->outen_clr = mask;
10011814:	6142      	str	r2, [r0, #20]
        port->en0_set = mask;
10011816:	6042      	str	r2, [r0, #4]
        port->en1_clr = mask;
10011818:	6702      	str	r2, [r0, #112]	@ 0x70
        port->en2_clr = mask;
1001181a:	67c2      	str	r2, [r0, #124]	@ 0x7c
        port->en3_clr = mask;
1001181c:	f8c0 2088 	str.w	r2, [r0, #136]	@ 0x88
    return E_NO_ERROR;
10011820:	2000      	movs	r0, #0
10011822:	4770      	bx	lr
        port->outen_set = mask;
10011824:	6102      	str	r2, [r0, #16]
        port->en0_set = mask;
10011826:	6042      	str	r2, [r0, #4]
        port->en1_clr = mask;
10011828:	6702      	str	r2, [r0, #112]	@ 0x70
        port->en2_clr = mask;
1001182a:	67c2      	str	r2, [r0, #124]	@ 0x7c
        port->en3_clr = mask;
1001182c:	f8c0 2088 	str.w	r2, [r0, #136]	@ 0x88
        break;
10011830:	e7ee      	b.n	10011810 <MXC_GPIO_RevA_SetAF+0x20>
        port->en3_clr = mask;
10011832:	f8c0 2088 	str.w	r2, [r0, #136]	@ 0x88
        port->en2_clr = mask;
10011836:	67c2      	str	r2, [r0, #124]	@ 0x7c
        port->en1_clr = mask;
10011838:	6702      	str	r2, [r0, #112]	@ 0x70
        port->en0_clr = mask;
1001183a:	6082      	str	r2, [r0, #8]
        break;
1001183c:	e7e8      	b.n	10011810 <MXC_GPIO_RevA_SetAF+0x20>
        port->en3_clr = mask;
1001183e:	f8c0 2088 	str.w	r2, [r0, #136]	@ 0x88
        port->en2_clr = mask;
10011842:	67c2      	str	r2, [r0, #124]	@ 0x7c
        port->en1_set = mask;
10011844:	66c2      	str	r2, [r0, #108]	@ 0x6c
        port->en0_clr = mask;
10011846:	6082      	str	r2, [r0, #8]
        break;
10011848:	e7e2      	b.n	10011810 <MXC_GPIO_RevA_SetAF+0x20>
        port->en3_clr = mask;
1001184a:	f8c0 2088 	str.w	r2, [r0, #136]	@ 0x88
        port->en2_set = mask;
1001184e:	6782      	str	r2, [r0, #120]	@ 0x78
        port->en1_clr = mask;
10011850:	6702      	str	r2, [r0, #112]	@ 0x70
        port->en0_clr = mask;
10011852:	6082      	str	r2, [r0, #8]
        break;
10011854:	e7dc      	b.n	10011810 <MXC_GPIO_RevA_SetAF+0x20>
    switch (func) {
10011856:	f06f 0002 	mvn.w	r0, #2
}
1001185a:	4770      	bx	lr

1001185c <MXC_I2C_SetSlaveAddr>:
    return MXC_I2C_RevA_Init((mxc_i2c_reva_regs_t *)i2c, masterMode, slaveAddr);
}

int MXC_I2C_SetSlaveAddr(mxc_i2c_regs_t *i2c, unsigned int slaveAddr, int idx)
{
    return MXC_I2C_RevA_SetSlaveAddr((mxc_i2c_reva_regs_t *)i2c, slaveAddr, idx);
1001185c:	f000 b8f6 	b.w	10011a4c <MXC_I2C_RevA_SetSlaveAddr>

10011860 <MXC_I2C_Shutdown>:
}

int MXC_I2C_Shutdown(mxc_i2c_regs_t *i2c)
{
10011860:	b508      	push	{r3, lr}
    // Configure GPIO for I2C
    if (i2c == MXC_I2C0) {
10011862:	4b11      	ldr	r3, [pc, #68]	@ (100118a8 <MXC_I2C_Shutdown+0x48>)
10011864:	4298      	cmp	r0, r3
10011866:	d00d      	beq.n	10011884 <MXC_I2C_Shutdown+0x24>
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_I2C0);
        MXC_SYS_Reset_Periph(MXC_SYS_RESET0_I2C0);
    } else if (i2c == MXC_I2C1) {
10011868:	4b10      	ldr	r3, [pc, #64]	@ (100118ac <MXC_I2C_Shutdown+0x4c>)
1001186a:	4298      	cmp	r0, r3
1001186c:	d011      	beq.n	10011892 <MXC_I2C_Shutdown+0x32>
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_I2C1);
        MXC_SYS_Reset_Periph(MXC_SYS_RESET1_I2C1);
    } else if (i2c == MXC_I2C2) {
1001186e:	4b10      	ldr	r3, [pc, #64]	@ (100118b0 <MXC_I2C_Shutdown+0x50>)
10011870:	4298      	cmp	r0, r3
10011872:	d115      	bne.n	100118a0 <MXC_I2C_Shutdown+0x40>
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_I2C2);
10011874:	2038      	movs	r0, #56	@ 0x38
10011876:	f7ff fd4f 	bl	10011318 <MXC_SYS_ClockDisable>
        MXC_SYS_Reset_Periph(MXC_SYS_RESET1_I2C2);
1001187a:	2034      	movs	r0, #52	@ 0x34
1001187c:	f7ff fe08 	bl	10011490 <MXC_SYS_Reset_Periph>
    } else {
        return E_NO_DEVICE;
    }

    return E_NO_ERROR;
10011880:	2000      	movs	r0, #0
}
10011882:	bd08      	pop	{r3, pc}
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_I2C0);
10011884:	200d      	movs	r0, #13
10011886:	f7ff fd47 	bl	10011318 <MXC_SYS_ClockDisable>
        MXC_SYS_Reset_Periph(MXC_SYS_RESET0_I2C0);
1001188a:	2010      	movs	r0, #16
1001188c:	f7ff fe00 	bl	10011490 <MXC_SYS_Reset_Periph>
10011890:	e7f6      	b.n	10011880 <MXC_I2C_Shutdown+0x20>
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_I2C1);
10011892:	201c      	movs	r0, #28
10011894:	f7ff fd40 	bl	10011318 <MXC_SYS_ClockDisable>
        MXC_SYS_Reset_Periph(MXC_SYS_RESET1_I2C1);
10011898:	2020      	movs	r0, #32
1001189a:	f7ff fdf9 	bl	10011490 <MXC_SYS_Reset_Periph>
1001189e:	e7ef      	b.n	10011880 <MXC_I2C_Shutdown+0x20>
        return E_NO_DEVICE;
100118a0:	f06f 0001 	mvn.w	r0, #1
}
100118a4:	bd08      	pop	{r3, pc}
100118a6:	bf00      	nop
100118a8:	4001d000 	.word	0x4001d000
100118ac:	4001e000 	.word	0x4001e000
100118b0:	4001f000 	.word	0x4001f000

100118b4 <MXC_I2C_Init>:
    if (i2c == NULL) {
100118b4:	b3c0      	cbz	r0, 10011928 <MXC_I2C_Init+0x74>
{
100118b6:	b570      	push	{r4, r5, r6, lr}
100118b8:	4604      	mov	r4, r0
    MXC_I2C_Shutdown(i2c); // Clear everything out
100118ba:	460d      	mov	r5, r1
100118bc:	4616      	mov	r6, r2
100118be:	f7ff ffcf 	bl	10011860 <MXC_I2C_Shutdown>
    if (i2c == MXC_I2C0) {
100118c2:	4b1b      	ldr	r3, [pc, #108]	@ (10011930 <MXC_I2C_Init+0x7c>)
100118c4:	429c      	cmp	r4, r3
100118c6:	d012      	beq.n	100118ee <MXC_I2C_Init+0x3a>
    } else if (i2c == MXC_I2C1) {
100118c8:	4b1a      	ldr	r3, [pc, #104]	@ (10011934 <MXC_I2C_Init+0x80>)
100118ca:	429c      	cmp	r4, r3
100118cc:	d01c      	beq.n	10011908 <MXC_I2C_Init+0x54>
    } else if (i2c == MXC_I2C2) {
100118ce:	4b1a      	ldr	r3, [pc, #104]	@ (10011938 <MXC_I2C_Init+0x84>)
100118d0:	429c      	cmp	r4, r3
100118d2:	d126      	bne.n	10011922 <MXC_I2C_Init+0x6e>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_I2C2);
100118d4:	2038      	movs	r0, #56	@ 0x38
100118d6:	f7ff fd3f 	bl	10011358 <MXC_SYS_ClockEnable>
        MXC_GPIO_Config(&gpio_cfg_i2c2);
100118da:	4818      	ldr	r0, [pc, #96]	@ (1001193c <MXC_I2C_Init+0x88>)
100118dc:	f7ff fe1c 	bl	10011518 <MXC_GPIO_Config>
    return MXC_I2C_RevA_Init((mxc_i2c_reva_regs_t *)i2c, masterMode, slaveAddr);
100118e0:	4632      	mov	r2, r6
100118e2:	4629      	mov	r1, r5
100118e4:	4620      	mov	r0, r4
}
100118e6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    return MXC_I2C_RevA_Init((mxc_i2c_reva_regs_t *)i2c, masterMode, slaveAddr);
100118ea:	f000 b849 	b.w	10011980 <MXC_I2C_RevA_Init>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_I2C0);
100118ee:	200d      	movs	r0, #13
100118f0:	f7ff fd32 	bl	10011358 <MXC_SYS_ClockEnable>
        MXC_GPIO_Config(&gpio_cfg_i2c0);
100118f4:	4812      	ldr	r0, [pc, #72]	@ (10011940 <MXC_I2C_Init+0x8c>)
100118f6:	f7ff fe0f 	bl	10011518 <MXC_GPIO_Config>
    return MXC_I2C_RevA_Init((mxc_i2c_reva_regs_t *)i2c, masterMode, slaveAddr);
100118fa:	4632      	mov	r2, r6
100118fc:	4629      	mov	r1, r5
100118fe:	4620      	mov	r0, r4
}
10011900:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    return MXC_I2C_RevA_Init((mxc_i2c_reva_regs_t *)i2c, masterMode, slaveAddr);
10011904:	f000 b83c 	b.w	10011980 <MXC_I2C_RevA_Init>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_I2C1);
10011908:	201c      	movs	r0, #28
1001190a:	f7ff fd25 	bl	10011358 <MXC_SYS_ClockEnable>
        MXC_GPIO_Config(&gpio_cfg_i2c1);
1001190e:	480d      	ldr	r0, [pc, #52]	@ (10011944 <MXC_I2C_Init+0x90>)
10011910:	f7ff fe02 	bl	10011518 <MXC_GPIO_Config>
    return MXC_I2C_RevA_Init((mxc_i2c_reva_regs_t *)i2c, masterMode, slaveAddr);
10011914:	4632      	mov	r2, r6
10011916:	4629      	mov	r1, r5
10011918:	4620      	mov	r0, r4
}
1001191a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    return MXC_I2C_RevA_Init((mxc_i2c_reva_regs_t *)i2c, masterMode, slaveAddr);
1001191e:	f000 b82f 	b.w	10011980 <MXC_I2C_RevA_Init>
        return E_NO_DEVICE;
10011922:	f06f 0001 	mvn.w	r0, #1
}
10011926:	bd70      	pop	{r4, r5, r6, pc}
        return E_NULL_PTR;
10011928:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
1001192c:	4770      	bx	lr
1001192e:	bf00      	nop
10011930:	4001d000 	.word	0x4001d000
10011934:	4001e000 	.word	0x4001e000
10011938:	4001f000 	.word	0x4001f000
1001193c:	1001d8c4 	.word	0x1001d8c4
10011940:	1001d8dc 	.word	0x1001d8dc
10011944:	1001d8d0 	.word	0x1001d8d0

10011948 <MXC_I2C_SetFrequency>:
    return E_NO_ERROR;
}

int MXC_I2C_SetFrequency(mxc_i2c_regs_t *i2c, unsigned int hz)
{
    return MXC_I2C_RevA_SetFrequency((mxc_i2c_reva_regs_t *)i2c, hz);
10011948:	f000 b89a 	b.w	10011a80 <MXC_I2C_RevA_SetFrequency>

1001194c <MXC_I2C_GetFrequency>:
}

int MXC_I2C_GetFrequency(mxc_i2c_regs_t *i2c)
{
    return MXC_I2C_RevA_GetFrequency((mxc_i2c_reva_regs_t *)i2c);
1001194c:	f000 b8e8 	b.w	10011b20 <MXC_I2C_RevA_GetFrequency>

10011950 <MXC_I2C_ReadRXFIFO>:
    return MXC_I2C_RevA_Read((mxc_i2c_reva_regs_t *)i2c, bytes, len, ack);
}

int MXC_I2C_ReadRXFIFO(mxc_i2c_regs_t *i2c, volatile unsigned char *bytes, unsigned int len)
{
    return MXC_I2C_RevA_ReadRXFIFO((mxc_i2c_reva_regs_t *)i2c, bytes, len);
10011950:	f000 b8f6 	b.w	10011b40 <MXC_I2C_RevA_ReadRXFIFO>

10011954 <MXC_I2C_GetRXFIFOAvailable>:
                                      (mxc_i2c_reva_dma_complete_cb_t)callback, config, MXC_DMA);
}

int MXC_I2C_GetRXFIFOAvailable(mxc_i2c_regs_t *i2c)
{
    return MXC_I2C_RevA_GetRXFIFOAvailable((mxc_i2c_reva_regs_t *)i2c);
10011954:	f000 b912 	b.w	10011b7c <MXC_I2C_RevA_GetRXFIFOAvailable>

10011958 <MXC_I2C_WriteTXFIFO>:
}

int MXC_I2C_WriteTXFIFO(mxc_i2c_regs_t *i2c, volatile unsigned char *bytes, unsigned int len)
{
    return MXC_I2C_RevA_WriteTXFIFO((mxc_i2c_reva_regs_t *)i2c, bytes, len);
10011958:	f000 b918 	b.w	10011b8c <MXC_I2C_RevA_WriteTXFIFO>

1001195c <MXC_I2C_GetTXFIFOAvailable>:
                                       (mxc_i2c_reva_dma_complete_cb_t)callback, config, MXC_DMA);
}

int MXC_I2C_GetTXFIFOAvailable(mxc_i2c_regs_t *i2c)
{
    return MXC_I2C_RevA_GetTXFIFOAvailable((mxc_i2c_reva_regs_t *)i2c);
1001195c:	f000 b92e 	b.w	10011bbc <MXC_I2C_RevA_GetTXFIFOAvailable>

10011960 <MXC_I2C_ClearRXFIFO>:
}

void MXC_I2C_ClearRXFIFO(mxc_i2c_regs_t *i2c)
{
    MXC_I2C_RevA_ClearRXFIFO((mxc_i2c_reva_regs_t *)i2c);
10011960:	f000 b938 	b.w	10011bd4 <MXC_I2C_RevA_ClearRXFIFO>

10011964 <MXC_I2C_ClearTXFIFO>:
}

void MXC_I2C_ClearTXFIFO(mxc_i2c_regs_t *i2c)
{
    MXC_I2C_RevA_ClearTXFIFO((mxc_i2c_reva_regs_t *)i2c);
10011964:	f000 b93e 	b.w	10011be4 <MXC_I2C_RevA_ClearTXFIFO>

10011968 <MXC_I2C_ClearFlags>:
    return MXC_I2C_RevA_GetFlags((mxc_i2c_reva_regs_t *)i2c, flags0, flags1);
}

void MXC_I2C_ClearFlags(mxc_i2c_regs_t *i2c, unsigned int flags0, unsigned int flags1)
{
    MXC_I2C_RevA_ClearFlags((mxc_i2c_reva_regs_t *)i2c, flags0, flags1);
10011968:	f000 b944 	b.w	10011bf4 <MXC_I2C_RevA_ClearFlags>

1001196c <MXC_I2C_EnableInt>:
}

void MXC_I2C_EnableInt(mxc_i2c_regs_t *i2c, unsigned int flags0, unsigned int flags1)
{
    MXC_I2C_RevA_EnableInt((mxc_i2c_reva_regs_t *)i2c, flags0, flags1);
1001196c:	f000 b946 	b.w	10011bfc <MXC_I2C_RevA_EnableInt>

10011970 <MXC_I2C_DisableInt>:
}

void MXC_I2C_DisableInt(mxc_i2c_regs_t *i2c, unsigned int flags0, unsigned int flags1)
{
    MXC_I2C_RevA_DisableInt((mxc_i2c_reva_regs_t *)i2c, flags0, flags1);
10011970:	f000 b94c 	b.w	10011c0c <MXC_I2C_RevA_DisableInt>

10011974 <MXC_I2C_Recover>:
    return MXC_I2C_RevA_GetTimeout((mxc_i2c_reva_regs_t *)i2c);
}

int MXC_I2C_Recover(mxc_i2c_regs_t *i2c, unsigned int retries)
{
    return MXC_I2C_RevA_Recover((mxc_i2c_reva_regs_t *)i2c, retries);
10011974:	f000 b954 	b.w	10011c20 <MXC_I2C_RevA_Recover>

10011978 <MXC_I2C_SetRXThreshold>:
        (mxc_i2c_reva_regs_t *)i2c, (mxc_i2c_reva_slave_handler_t)callback, interruptCheck);
}

int MXC_I2C_SetRXThreshold(mxc_i2c_regs_t *i2c, unsigned int numBytes)
{
    return MXC_I2C_RevA_SetRXThreshold((mxc_i2c_reva_regs_t *)i2c, numBytes);
10011978:	f000 b9be 	b.w	10011cf8 <MXC_I2C_RevA_SetRXThreshold>

1001197c <MXC_I2C_SetTXThreshold>:
    return MXC_I2C_RevA_GetRXThreshold((mxc_i2c_reva_regs_t *)i2c);
}

int MXC_I2C_SetTXThreshold(mxc_i2c_regs_t *i2c, unsigned int numBytes)
{
    return MXC_I2C_RevA_SetTXThreshold((mxc_i2c_reva_regs_t *)i2c, numBytes);
1001197c:	f000 b9cc 	b.w	10011d18 <MXC_I2C_RevA_SetTXThreshold>

10011980 <MXC_I2C_RevA_Init>:

/* ************************************************************************* */
/* Control/Configuration functions                                           */
/* ************************************************************************* */
int MXC_I2C_RevA_Init(mxc_i2c_reva_regs_t *i2c, int masterMode, unsigned int slaveAddr)
{
10011980:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    int err;

    if (i2c == NULL) {
10011982:	2800      	cmp	r0, #0
10011984:	d057      	beq.n	10011a36 <MXC_I2C_RevA_Init+0xb6>
        return E_NULL_PTR;
    }

    if ((err = MXC_I2C_Recover((mxc_i2c_regs_t *)i2c, 16)) != E_NO_ERROR) {
10011986:	460f      	mov	r7, r1
10011988:	2110      	movs	r1, #16
1001198a:	4615      	mov	r5, r2
1001198c:	4604      	mov	r4, r0
1001198e:	f7ff fff1 	bl	10011974 <MXC_I2C_Recover>
10011992:	4606      	mov	r6, r0
10011994:	b108      	cbz	r0, 1001199a <MXC_I2C_RevA_Init+0x1a>
        i2c->ctrl |= MXC_F_I2C_REVA_CTRL_MST_MODE;
        states[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)].master = 1;
    }

    return E_NO_ERROR;
}
10011996:	4630      	mov	r0, r6
10011998:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    i2c->ctrl |= MXC_F_I2C_REVA_CTRL_EN;
1001199a:	6823      	ldr	r3, [r4, #0]
1001199c:	f043 0301 	orr.w	r3, r3, #1
100119a0:	6023      	str	r3, [r4, #0]
    MXC_I2C_ClearRXFIFO((mxc_i2c_regs_t *)i2c);
100119a2:	4620      	mov	r0, r4
100119a4:	f7ff ffdc 	bl	10011960 <MXC_I2C_ClearRXFIFO>
    MXC_I2C_ClearTXFIFO((mxc_i2c_regs_t *)i2c);
100119a8:	4620      	mov	r0, r4
100119aa:	f7ff ffdb 	bl	10011964 <MXC_I2C_ClearTXFIFO>
    MXC_I2C_SetTXThreshold((mxc_i2c_regs_t *)i2c, 2); // set TX threshold to 2 bytes
100119ae:	2102      	movs	r1, #2
100119b0:	4620      	mov	r0, r4
100119b2:	f7ff ffe3 	bl	1001197c <MXC_I2C_SetTXThreshold>
    MXC_I2C_SetRXThreshold((mxc_i2c_regs_t *)i2c, 6); // set RX threshold to 6 bytes
100119b6:	2106      	movs	r1, #6
100119b8:	4620      	mov	r0, r4
100119ba:	f7ff ffdd 	bl	10011978 <MXC_I2C_SetRXThreshold>
    if (!masterMode) {
100119be:	b1df      	cbz	r7, 100119f8 <MXC_I2C_RevA_Init+0x78>
        i2c->ctrl |= MXC_F_I2C_REVA_CTRL_MST_MODE;
100119c0:	6823      	ldr	r3, [r4, #0]
        states[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)].master = 1;
100119c2:	4a1e      	ldr	r2, [pc, #120]	@ (10011a3c <MXC_I2C_RevA_Init+0xbc>)
        i2c->ctrl |= MXC_F_I2C_REVA_CTRL_MST_MODE;
100119c4:	f043 0302 	orr.w	r3, r3, #2
        states[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)].master = 1;
100119c8:	4294      	cmp	r4, r2
        i2c->ctrl |= MXC_F_I2C_REVA_CTRL_MST_MODE;
100119ca:	6023      	str	r3, [r4, #0]
        states[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)].master = 1;
100119cc:	d02f      	beq.n	10011a2e <MXC_I2C_RevA_Init+0xae>
100119ce:	4b1c      	ldr	r3, [pc, #112]	@ (10011a40 <MXC_I2C_RevA_Init+0xc0>)
100119d0:	429c      	cmp	r4, r3
100119d2:	d00f      	beq.n	100119f4 <MXC_I2C_RevA_Init+0x74>
100119d4:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
100119d8:	429c      	cmp	r4, r3
100119da:	bf14      	ite	ne
100119dc:	f04f 34ff 	movne.w	r4, #4294967295	@ 0xffffffff
100119e0:	2402      	moveq	r4, #2
100119e2:	4b18      	ldr	r3, [pc, #96]	@ (10011a44 <MXC_I2C_RevA_Init+0xc4>)
100119e4:	eb04 0444 	add.w	r4, r4, r4, lsl #1
100119e8:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
100119ec:	2201      	movs	r2, #1
100119ee:	605a      	str	r2, [r3, #4]
}
100119f0:	4630      	mov	r0, r6
100119f2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        states[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)].master = 1;
100119f4:	2401      	movs	r4, #1
100119f6:	e7f4      	b.n	100119e2 <MXC_I2C_RevA_Init+0x62>
        MXC_I2C_SetSlaveAddr((mxc_i2c_regs_t *)i2c, slaveAddr, 0);
100119f8:	463a      	mov	r2, r7
100119fa:	4629      	mov	r1, r5
100119fc:	4620      	mov	r0, r4
100119fe:	f7ff ff2d 	bl	1001185c <MXC_I2C_SetSlaveAddr>
        states[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)].master = 0;
10011a02:	4b0e      	ldr	r3, [pc, #56]	@ (10011a3c <MXC_I2C_RevA_Init+0xbc>)
10011a04:	429c      	cmp	r4, r3
10011a06:	d009      	beq.n	10011a1c <MXC_I2C_RevA_Init+0x9c>
10011a08:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10011a0c:	429c      	cmp	r4, r3
10011a0e:	d010      	beq.n	10011a32 <MXC_I2C_RevA_Init+0xb2>
10011a10:	4f0d      	ldr	r7, [pc, #52]	@ (10011a48 <MXC_I2C_RevA_Init+0xc8>)
10011a12:	42bc      	cmp	r4, r7
10011a14:	bf14      	ite	ne
10011a16:	f04f 37ff 	movne.w	r7, #4294967295	@ 0xffffffff
10011a1a:	2702      	moveq	r7, #2
10011a1c:	4b09      	ldr	r3, [pc, #36]	@ (10011a44 <MXC_I2C_RevA_Init+0xc4>)
10011a1e:	eb07 0147 	add.w	r1, r7, r7, lsl #1
10011a22:	eb03 03c1 	add.w	r3, r3, r1, lsl #3
10011a26:	2200      	movs	r2, #0
10011a28:	605a      	str	r2, [r3, #4]
}
10011a2a:	4630      	mov	r0, r6
10011a2c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        states[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)].master = 1;
10011a2e:	4634      	mov	r4, r6
10011a30:	e7d7      	b.n	100119e2 <MXC_I2C_RevA_Init+0x62>
        states[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)].master = 0;
10011a32:	2701      	movs	r7, #1
10011a34:	e7f2      	b.n	10011a1c <MXC_I2C_RevA_Init+0x9c>
        return E_NULL_PTR;
10011a36:	f04f 36ff 	mov.w	r6, #4294967295	@ 0xffffffff
10011a3a:	e7ac      	b.n	10011996 <MXC_I2C_RevA_Init+0x16>
10011a3c:	4001d000 	.word	0x4001d000
10011a40:	4001e000 	.word	0x4001e000
10011a44:	200011e0 	.word	0x200011e0
10011a48:	4001f000 	.word	0x4001f000

10011a4c <MXC_I2C_RevA_SetSlaveAddr>:

int MXC_I2C_RevA_SetSlaveAddr(mxc_i2c_reva_regs_t *i2c, unsigned int slaveAddr, int idx)
{
    if (i2c == NULL) {
10011a4c:	4603      	mov	r3, r0
10011a4e:	b1a0      	cbz	r0, 10011a7a <MXC_I2C_RevA_SetSlaveAddr+0x2e>
        return E_NULL_PTR;
    }

    if (idx != 0) {
10011a50:	b96a      	cbnz	r2, 10011a6e <MXC_I2C_RevA_SetSlaveAddr+0x22>
        // Multiple slaves are not supported yet
        return E_NOT_SUPPORTED;
    }

    if (slaveAddr > MXC_F_I2C_REVA_SLAVE_ADDR) {
10011a52:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
10011a56:	d20d      	bcs.n	10011a74 <MXC_I2C_RevA_SetSlaveAddr+0x28>
        return E_BAD_PARAM;
    }

    i2c->slave = 0;

    if (slaveAddr > MXC_I2C_REVA_MAX_ADDR_WIDTH) {
10011a58:	297f      	cmp	r1, #127	@ 0x7f
    i2c->slave = 0;
10011a5a:	64c2      	str	r2, [r0, #76]	@ 0x4c
        // Set for 10bit addressing mode
        i2c->slave = MXC_F_I2C_REVA_SLAVE_EXT_ADDR_EN;
10011a5c:	bf84      	itt	hi
10011a5e:	f44f 4200 	movhi.w	r2, #32768	@ 0x8000
10011a62:	64c2      	strhi	r2, [r0, #76]	@ 0x4c
    }

    i2c->slave |= slaveAddr;
10011a64:	6cc2      	ldr	r2, [r0, #76]	@ 0x4c
10011a66:	430a      	orrs	r2, r1

    return E_NO_ERROR;
10011a68:	2000      	movs	r0, #0
    i2c->slave |= slaveAddr;
10011a6a:	64da      	str	r2, [r3, #76]	@ 0x4c
    return E_NO_ERROR;
10011a6c:	4770      	bx	lr
        return E_NOT_SUPPORTED;
10011a6e:	f06f 0010 	mvn.w	r0, #16
10011a72:	4770      	bx	lr
        return E_BAD_PARAM;
10011a74:	f06f 0002 	mvn.w	r0, #2
}
10011a78:	4770      	bx	lr
        return E_NULL_PTR;
10011a7a:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10011a7e:	4770      	bx	lr

10011a80 <MXC_I2C_RevA_SetFrequency>:

int MXC_I2C_RevA_SetFrequency(mxc_i2c_reva_regs_t *i2c, unsigned int hz)
{
    unsigned int ticksTotal, hiClks, lowClks;

    if (i2c == NULL) {
10011a80:	2800      	cmp	r0, #0
10011a82:	d03f      	beq.n	10011b04 <MXC_I2C_RevA_SetFrequency+0x84>
{
10011a84:	b410      	push	{r4}
        return E_NULL_PTR;
    }

    if (hz > MXC_I2C_REVA_FASTPLUS_SPEED && hz <= MXC_I2C_REVA_HIGH_SPEED) {
10011a86:	4a21      	ldr	r2, [pc, #132]	@ (10011b0c <MXC_I2C_RevA_SetFrequency+0x8c>)
10011a88:	f5a1 2374 	sub.w	r3, r1, #999424	@ 0xf4000
10011a8c:	f46f 7410 	mvn.w	r4, #576	@ 0x240
10011a90:	4423      	add	r3, r4
10011a92:	4293      	cmp	r3, r2
10011a94:	d313      	bcc.n	10011abe <MXC_I2C_RevA_SetFrequency+0x3e>

        i2c->ctrl |= MXC_F_I2C_REVA_CTRL_HS_EN;

        hz = MXC_I2C_REVA_FAST_SPEED; // High speed preambles will be sent at 400kHz

    } else if (hz > MXC_I2C_REVA_HIGH_SPEED) {
10011a96:	4b1e      	ldr	r3, [pc, #120]	@ (10011b10 <MXC_I2C_RevA_SetFrequency+0x90>)
10011a98:	4299      	cmp	r1, r3
10011a9a:	d82f      	bhi.n	10011afc <MXC_I2C_RevA_SetFrequency+0x7c>
        ticksTotal = PeripheralClock / hz;
10011a9c:	4b1d      	ldr	r3, [pc, #116]	@ (10011b14 <MXC_I2C_RevA_SetFrequency+0x94>)
        return E_BAD_PARAM;
    }

    // Calculate the period of SCL, 50% duty cycle
    ticksTotal = PeripheralClock / hz;
10011a9e:	681b      	ldr	r3, [r3, #0]
10011aa0:	085b      	lsrs	r3, r3, #1
10011aa2:	fbb3 f3f1 	udiv	r3, r3, r1
    hiClks = (ticksTotal >> 1) - 1;
10011aa6:	085b      	lsrs	r3, r3, #1
    if (ticksTotal % 1) {
        hiClks++;
    }

    // Check for maximum/minimum supported speeds
    if ((hiClks > MXC_F_I2C_REVA_CLKHI_HI) || (lowClks == 0)) {
10011aa8:	1e9a      	subs	r2, r3, #2
10011aaa:	f5b2 7fff 	cmp.w	r2, #510	@ 0x1fe
    hiClks = (ticksTotal >> 1) - 1;
10011aae:	f103 33ff 	add.w	r3, r3, #4294967295	@ 0xffffffff
    if ((hiClks > MXC_F_I2C_REVA_CLKHI_HI) || (lowClks == 0)) {
10011ab2:	d823      	bhi.n	10011afc <MXC_I2C_RevA_SetFrequency+0x7c>
        return E_BAD_PARAM;
    }

    i2c->clklo = lowClks & MXC_F_I2C_REVA_CLKLO_LO;
10011ab4:	6343      	str	r3, [r0, #52]	@ 0x34
    i2c->clkhi = hiClks & MXC_F_I2C_REVA_CLKHI_HI;

    // Return the actual speed set, since it won't be exactly what's requested
    return MXC_I2C_GetFrequency((mxc_i2c_regs_t *)i2c);
}
10011ab6:	bc10      	pop	{r4}
    i2c->clkhi = hiClks & MXC_F_I2C_REVA_CLKHI_HI;
10011ab8:	6383      	str	r3, [r0, #56]	@ 0x38
    return MXC_I2C_GetFrequency((mxc_i2c_regs_t *)i2c);
10011aba:	f7ff bf47 	b.w	1001194c <MXC_I2C_GetFrequency>
        ticksTotal = PeripheralClock / hz;
10011abe:	4b15      	ldr	r3, [pc, #84]	@ (10011b14 <MXC_I2C_RevA_SetFrequency+0x94>)
        hsLowClks = (ticksTotal * 2) / 3 - 1;
10011ac0:	4c15      	ldr	r4, [pc, #84]	@ (10011b18 <MXC_I2C_RevA_SetFrequency+0x98>)
        ticksTotal = PeripheralClock / hz;
10011ac2:	681b      	ldr	r3, [r3, #0]
10011ac4:	085b      	lsrs	r3, r3, #1
10011ac6:	fbb3 f1f1 	udiv	r1, r3, r1
        hsLowClks = (ticksTotal * 2) / 3 - 1;
10011aca:	004a      	lsls	r2, r1, #1
        hsHiClks = ticksTotal / 3 - 1;
10011acc:	fba4 c101 	umull	ip, r1, r4, r1
10011ad0:	0849      	lsrs	r1, r1, #1
        hsLowClks = (ticksTotal * 2) / 3 - 1;
10011ad2:	fba4 4202 	umull	r4, r2, r4, r2
        hsHiClks = ticksTotal / 3 - 1;
10011ad6:	3901      	subs	r1, #1
        hsLowClks = (ticksTotal * 2) / 3 - 1;
10011ad8:	0852      	lsrs	r2, r2, #1
        if ((hsHiClks > 0xF) || (hsLowClks > 0xF)) {
10011ada:	290f      	cmp	r1, #15
        hsLowClks = (ticksTotal * 2) / 3 - 1;
10011adc:	f102 32ff 	add.w	r2, r2, #4294967295	@ 0xffffffff
        if ((hsHiClks > 0xF) || (hsLowClks > 0xF)) {
10011ae0:	dc0c      	bgt.n	10011afc <MXC_I2C_RevA_SetFrequency+0x7c>
10011ae2:	2a0f      	cmp	r2, #15
10011ae4:	dc0a      	bgt.n	10011afc <MXC_I2C_RevA_SetFrequency+0x7c>
        hsHiClks = (hsHiClks << MXC_F_I2C_REVA_HSCLK_HI_POS) & MXC_F_I2C_REVA_HSCLK_HI;
10011ae6:	0209      	lsls	r1, r1, #8
10011ae8:	b289      	uxth	r1, r1
        i2c->hsclk = (hsLowClks | hsHiClks);
10011aea:	b2d2      	uxtb	r2, r2
10011aec:	430a      	orrs	r2, r1
10011aee:	63c2      	str	r2, [r0, #60]	@ 0x3c
        i2c->ctrl |= MXC_F_I2C_REVA_CTRL_HS_EN;
10011af0:	6802      	ldr	r2, [r0, #0]
        hz = MXC_I2C_REVA_FAST_SPEED; // High speed preambles will be sent at 400kHz
10011af2:	490a      	ldr	r1, [pc, #40]	@ (10011b1c <MXC_I2C_RevA_SetFrequency+0x9c>)
        i2c->ctrl |= MXC_F_I2C_REVA_CTRL_HS_EN;
10011af4:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
10011af8:	6002      	str	r2, [r0, #0]
        hz = MXC_I2C_REVA_FAST_SPEED; // High speed preambles will be sent at 400kHz
10011afa:	e7d2      	b.n	10011aa2 <MXC_I2C_RevA_SetFrequency+0x22>
            return E_BAD_PARAM;
10011afc:	f06f 0002 	mvn.w	r0, #2
}
10011b00:	bc10      	pop	{r4}
10011b02:	4770      	bx	lr
        return E_NULL_PTR;
10011b04:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
10011b08:	4770      	bx	lr
10011b0a:	bf00      	nop
10011b0c:	00249f00 	.word	0x00249f00
10011b10:	0033e140 	.word	0x0033e140
10011b14:	20001950 	.word	0x20001950
10011b18:	aaaaaaab 	.word	0xaaaaaaab
10011b1c:	00061a80 	.word	0x00061a80

10011b20 <MXC_I2C_RevA_GetFrequency>:
    unsigned int sclCycles = 0;

    // Calculate the speed based on what we've written into registers
    sclCycles = (i2c->clklo & MXC_F_I2C_REVA_CLKLO_LO) + (i2c->clkhi & MXC_F_I2C_REVA_CLKHI_HI);

    return PeripheralClock / sclCycles;
10011b20:	4906      	ldr	r1, [pc, #24]	@ (10011b3c <MXC_I2C_RevA_GetFrequency+0x1c>)
    sclCycles = (i2c->clklo & MXC_F_I2C_REVA_CLKLO_LO) + (i2c->clkhi & MXC_F_I2C_REVA_CLKHI_HI);
10011b22:	6b43      	ldr	r3, [r0, #52]	@ 0x34
10011b24:	6b82      	ldr	r2, [r0, #56]	@ 0x38
    return PeripheralClock / sclCycles;
10011b26:	6808      	ldr	r0, [r1, #0]
    sclCycles = (i2c->clklo & MXC_F_I2C_REVA_CLKLO_LO) + (i2c->clkhi & MXC_F_I2C_REVA_CLKHI_HI);
10011b28:	f3c2 0208 	ubfx	r2, r2, #0, #9
10011b2c:	f3c3 0308 	ubfx	r3, r3, #0, #9
10011b30:	4413      	add	r3, r2
    return PeripheralClock / sclCycles;
10011b32:	0840      	lsrs	r0, r0, #1
}
10011b34:	fbb0 f0f3 	udiv	r0, r0, r3
10011b38:	4770      	bx	lr
10011b3a:	bf00      	nop
10011b3c:	20001950 	.word	0x20001950

10011b40 <MXC_I2C_RevA_ReadRXFIFO>:
int MXC_I2C_RevA_ReadRXFIFO(mxc_i2c_reva_regs_t *i2c, volatile unsigned char *bytes,
                            unsigned int len)
{
    unsigned read = 0;

    if ((i2c == NULL) || (bytes == NULL)) {
10011b40:	b1c8      	cbz	r0, 10011b76 <MXC_I2C_RevA_ReadRXFIFO+0x36>
10011b42:	b1c1      	cbz	r1, 10011b76 <MXC_I2C_RevA_ReadRXFIFO+0x36>
        return E_NULL_PTR;
    }

    while ((len > read) && (!(i2c->status & MXC_F_I2C_REVA_STATUS_RX_EM))) {
10011b44:	b1aa      	cbz	r2, 10011b72 <MXC_I2C_RevA_ReadRXFIFO+0x32>
{
10011b46:	b500      	push	{lr}
    unsigned read = 0;
10011b48:	2300      	movs	r3, #0
        bytes[read++] = i2c->fifo;
10011b4a:	f101 3eff 	add.w	lr, r1, #4294967295	@ 0xffffffff
10011b4e:	e007      	b.n	10011b60 <MXC_I2C_RevA_ReadRXFIFO+0x20>
10011b50:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
10011b52:	3301      	adds	r3, #1
10011b54:	fa5f fc81 	uxtb.w	ip, r1
    while ((len > read) && (!(i2c->status & MXC_F_I2C_REVA_STATUS_RX_EM))) {
10011b58:	429a      	cmp	r2, r3
        bytes[read++] = i2c->fifo;
10011b5a:	f80e c003 	strb.w	ip, [lr, r3]
    while ((len > read) && (!(i2c->status & MXC_F_I2C_REVA_STATUS_RX_EM))) {
10011b5e:	d005      	beq.n	10011b6c <MXC_I2C_RevA_ReadRXFIFO+0x2c>
10011b60:	6841      	ldr	r1, [r0, #4]
10011b62:	0789      	lsls	r1, r1, #30
10011b64:	d5f4      	bpl.n	10011b50 <MXC_I2C_RevA_ReadRXFIFO+0x10>
    }

    return read;
10011b66:	4618      	mov	r0, r3
}
10011b68:	f85d fb04 	ldr.w	pc, [sp], #4
    return read;
10011b6c:	4610      	mov	r0, r2
}
10011b6e:	f85d fb04 	ldr.w	pc, [sp], #4
    while ((len > read) && (!(i2c->status & MXC_F_I2C_REVA_STATUS_RX_EM))) {
10011b72:	4610      	mov	r0, r2
10011b74:	4770      	bx	lr
        return E_NULL_PTR;
10011b76:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
10011b7a:	4770      	bx	lr

10011b7c <MXC_I2C_RevA_GetRXFIFOAvailable>:
    return E_NO_ERROR;
}

int MXC_I2C_RevA_GetRXFIFOAvailable(mxc_i2c_reva_regs_t *i2c)
{
    if (i2c == NULL) {
10011b7c:	b118      	cbz	r0, 10011b86 <MXC_I2C_RevA_GetRXFIFOAvailable+0xa>
        return E_NULL_PTR;
    }

    return (i2c->rxctrl1 & MXC_F_I2C_REVA_RXCTRL1_LVL) >> MXC_F_I2C_REVA_RXCTRL1_LVL_POS;
10011b7e:	6a00      	ldr	r0, [r0, #32]
10011b80:	f3c0 2003 	ubfx	r0, r0, #8, #4
10011b84:	4770      	bx	lr
        return E_NULL_PTR;
10011b86:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
10011b8a:	4770      	bx	lr

10011b8c <MXC_I2C_RevA_WriteTXFIFO>:
int MXC_I2C_RevA_WriteTXFIFO(mxc_i2c_reva_regs_t *i2c, volatile unsigned char *bytes,
                             unsigned int len)
{
    unsigned written = 0;

    if ((i2c == NULL) || (bytes == NULL)) {
10011b8c:	b198      	cbz	r0, 10011bb6 <MXC_I2C_RevA_WriteTXFIFO+0x2a>
10011b8e:	b191      	cbz	r1, 10011bb6 <MXC_I2C_RevA_WriteTXFIFO+0x2a>
        return E_NULL_PTR;
    }

    while ((len > written) && (!(i2c->status & MXC_F_I2C_REVA_STATUS_TX_FULL))) {
10011b90:	b17a      	cbz	r2, 10011bb2 <MXC_I2C_RevA_WriteTXFIFO+0x26>
    unsigned written = 0;
10011b92:	2300      	movs	r3, #0
        i2c->fifo = bytes[written++];
10011b94:	f101 3cff 	add.w	ip, r1, #4294967295	@ 0xffffffff
10011b98:	e006      	b.n	10011ba8 <MXC_I2C_RevA_WriteTXFIFO+0x1c>
10011b9a:	3301      	adds	r3, #1
    while ((len > written) && (!(i2c->status & MXC_F_I2C_REVA_STATUS_TX_FULL))) {
10011b9c:	429a      	cmp	r2, r3
        i2c->fifo = bytes[written++];
10011b9e:	f81c 1003 	ldrb.w	r1, [ip, r3]
10011ba2:	b2c9      	uxtb	r1, r1
10011ba4:	62c1      	str	r1, [r0, #44]	@ 0x2c
    while ((len > written) && (!(i2c->status & MXC_F_I2C_REVA_STATUS_TX_FULL))) {
10011ba6:	d004      	beq.n	10011bb2 <MXC_I2C_RevA_WriteTXFIFO+0x26>
10011ba8:	6841      	ldr	r1, [r0, #4]
10011baa:	06c9      	lsls	r1, r1, #27
10011bac:	d5f5      	bpl.n	10011b9a <MXC_I2C_RevA_WriteTXFIFO+0xe>
    }

    return written;
10011bae:	4618      	mov	r0, r3
10011bb0:	4770      	bx	lr
10011bb2:	4610      	mov	r0, r2
10011bb4:	4770      	bx	lr
        return E_NULL_PTR;
10011bb6:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
10011bba:	4770      	bx	lr

10011bbc <MXC_I2C_RevA_GetTXFIFOAvailable>:
    return E_NO_ERROR;
}

int MXC_I2C_RevA_GetTXFIFOAvailable(mxc_i2c_reva_regs_t *i2c)
{
    if (i2c == NULL) {
10011bbc:	b138      	cbz	r0, 10011bce <MXC_I2C_RevA_GetTXFIFOAvailable+0x12>
        return E_NULL_PTR;
    }

    int txFIFOlen = (i2c->fifolen & MXC_F_I2C_REVA_FIFOLEN_TX_DEPTH) >>
10011bbe:	6983      	ldr	r3, [r0, #24]
                    MXC_F_I2C_REVA_FIFOLEN_TX_DEPTH_POS;
    return txFIFOlen -
           ((i2c->txctrl1 & MXC_F_I2C_REVA_TXCTRL1_LVL) >> MXC_F_I2C_REVA_TXCTRL1_LVL_POS);
10011bc0:	6a82      	ldr	r2, [r0, #40]	@ 0x28
    return txFIFOlen -
10011bc2:	f3c3 2007 	ubfx	r0, r3, #8, #8
           ((i2c->txctrl1 & MXC_F_I2C_REVA_TXCTRL1_LVL) >> MXC_F_I2C_REVA_TXCTRL1_LVL_POS);
10011bc6:	f3c2 2303 	ubfx	r3, r2, #8, #4
    return txFIFOlen -
10011bca:	1ac0      	subs	r0, r0, r3
10011bcc:	4770      	bx	lr
        return E_NULL_PTR;
10011bce:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
10011bd2:	4770      	bx	lr

10011bd4 <MXC_I2C_RevA_ClearRXFIFO>:

void MXC_I2C_RevA_ClearRXFIFO(mxc_i2c_reva_regs_t *i2c)
{
    i2c->rxctrl0 |= MXC_F_I2C_REVA_RXCTRL0_FLUSH;
10011bd4:	69c3      	ldr	r3, [r0, #28]
10011bd6:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
10011bda:	61c3      	str	r3, [r0, #28]

    while (i2c->rxctrl0 & MXC_F_I2C_REVA_RXCTRL0_FLUSH) {}
10011bdc:	69c3      	ldr	r3, [r0, #28]
10011bde:	061b      	lsls	r3, r3, #24
10011be0:	d4fc      	bmi.n	10011bdc <MXC_I2C_RevA_ClearRXFIFO+0x8>
}
10011be2:	4770      	bx	lr

10011be4 <MXC_I2C_RevA_ClearTXFIFO>:

void MXC_I2C_RevA_ClearTXFIFO(mxc_i2c_reva_regs_t *i2c)
{
    i2c->txctrl0 |= MXC_F_I2C_REVA_TXCTRL0_FLUSH;
10011be4:	6a43      	ldr	r3, [r0, #36]	@ 0x24
10011be6:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
10011bea:	6243      	str	r3, [r0, #36]	@ 0x24

    while (i2c->txctrl0 & MXC_F_I2C_REVA_TXCTRL0_FLUSH) {}
10011bec:	6a43      	ldr	r3, [r0, #36]	@ 0x24
10011bee:	061b      	lsls	r3, r3, #24
10011bf0:	d4fc      	bmi.n	10011bec <MXC_I2C_RevA_ClearTXFIFO+0x8>
}
10011bf2:	4770      	bx	lr

10011bf4 <MXC_I2C_RevA_ClearFlags>:
    return E_NO_ERROR;
}

void MXC_I2C_RevA_ClearFlags(mxc_i2c_reva_regs_t *i2c, unsigned int flags0, unsigned int flags1)
{
    i2c->intfl0 = flags0;
10011bf4:	6081      	str	r1, [r0, #8]
    i2c->intfl1 = flags1;
10011bf6:	6102      	str	r2, [r0, #16]
}
10011bf8:	4770      	bx	lr
10011bfa:	bf00      	nop

10011bfc <MXC_I2C_RevA_EnableInt>:

void MXC_I2C_RevA_EnableInt(mxc_i2c_reva_regs_t *i2c, unsigned int flags0, unsigned int flags1)
{
    i2c->inten0 |= flags0;
10011bfc:	68c3      	ldr	r3, [r0, #12]
10011bfe:	430b      	orrs	r3, r1
10011c00:	60c3      	str	r3, [r0, #12]
    i2c->inten1 |= flags1;
10011c02:	6943      	ldr	r3, [r0, #20]
10011c04:	4313      	orrs	r3, r2
10011c06:	6143      	str	r3, [r0, #20]
}
10011c08:	4770      	bx	lr
10011c0a:	bf00      	nop

10011c0c <MXC_I2C_RevA_DisableInt>:

void MXC_I2C_RevA_DisableInt(mxc_i2c_reva_regs_t *i2c, unsigned int flags0, unsigned int flags1)
{
    i2c->inten0 &= ~flags0;
10011c0c:	68c3      	ldr	r3, [r0, #12]
10011c0e:	ea23 0301 	bic.w	r3, r3, r1
10011c12:	60c3      	str	r3, [r0, #12]
    i2c->inten1 &= ~flags1;
10011c14:	6943      	ldr	r3, [r0, #20]
10011c16:	ea23 0302 	bic.w	r3, r3, r2
10011c1a:	6143      	str	r3, [r0, #20]
}
10011c1c:	4770      	bx	lr
10011c1e:	bf00      	nop

10011c20 <MXC_I2C_RevA_Recover>:
int MXC_I2C_RevA_Recover(mxc_i2c_reva_regs_t *i2c, unsigned int retries)
{
    int err;
    unsigned int i;

    if (i2c == NULL) {
10011c20:	2800      	cmp	r0, #0
10011c22:	d065      	beq.n	10011cf0 <MXC_I2C_RevA_Recover+0xd0>
        return E_NULL_PTR;
    }

    err = E_COMM_ERR;

    i2c->ctrl |= MXC_F_I2C_REVA_CTRL_EN;
10011c24:	6803      	ldr	r3, [r0, #0]
10011c26:	f043 0301 	orr.w	r3, r3, #1
{
10011c2a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    i2c->ctrl |= MXC_F_I2C_REVA_CTRL_EN;
10011c2e:	6003      	str	r3, [r0, #0]
    int swBit = i2c->ctrl & MXC_F_I2C_REVA_CTRL_BB_MODE;
10011c30:	6807      	ldr	r7, [r0, #0]

    if (i2c == NULL) {
        return E_NULL_PTR;
    }

    i2c->ctrl |= MXC_F_I2C_REVA_CTRL_BB_MODE;
10011c32:	6803      	ldr	r3, [r0, #0]
10011c34:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
10011c38:	460e      	mov	r6, r1
10011c3a:	4604      	mov	r4, r0
10011c3c:	f407 6780 	and.w	r7, r7, #1024	@ 0x400
10011c40:	6003      	str	r3, [r0, #0]

    // Follow the procedure detailed in the header file
    // Delay 10uS between each step to give the line/slaves time to react
    for (i = 0; i < retries; i++) {
10011c42:	2900      	cmp	r1, #0
10011c44:	d043      	beq.n	10011cce <MXC_I2C_RevA_Recover+0xae>
10011c46:	2500      	movs	r5, #0
10011c48:	e02b      	b.n	10011ca2 <MXC_I2C_RevA_Recover+0x82>
        if (i2c->ctrl & MXC_F_I2C_REVA_CTRL_SCL) {
            i2c->ctrl |= MXC_F_I2C_REVA_CTRL_SCL_OUT | MXC_F_I2C_REVA_CTRL_SDA_OUT;
            continue; // Give up and try again
        }

        MXC_Delay(10);
10011c4a:	f7ff fb03 	bl	10011254 <MXC_Delay>
        i2c->ctrl &= ~MXC_F_I2C_REVA_CTRL_SDA_OUT;
10011c4e:	6823      	ldr	r3, [r4, #0]
10011c50:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
10011c54:	6023      	str	r3, [r4, #0]

        MXC_Delay(10);
10011c56:	200a      	movs	r0, #10
10011c58:	f7ff fafc 	bl	10011254 <MXC_Delay>

        if (i2c->ctrl & MXC_F_I2C_REVA_CTRL_SDA) {
10011c5c:	6823      	ldr	r3, [r4, #0]
10011c5e:	f413 7800 	ands.w	r8, r3, #512	@ 0x200
            i2c->ctrl |= MXC_F_I2C_REVA_CTRL_SCL_OUT | MXC_F_I2C_REVA_CTRL_SDA_OUT;
            continue; // Give up and try again
        }

        MXC_Delay(10);
10011c62:	f04f 000a 	mov.w	r0, #10
        if (i2c->ctrl & MXC_F_I2C_REVA_CTRL_SDA) {
10011c66:	d12b      	bne.n	10011cc0 <MXC_I2C_RevA_Recover+0xa0>
        MXC_Delay(10);
10011c68:	f7ff faf4 	bl	10011254 <MXC_Delay>
        i2c->ctrl |= MXC_F_I2C_REVA_CTRL_SDA_OUT;
10011c6c:	6823      	ldr	r3, [r4, #0]
10011c6e:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
10011c72:	6023      	str	r3, [r4, #0]

        MXC_Delay(10);
10011c74:	200a      	movs	r0, #10
10011c76:	f7ff faed 	bl	10011254 <MXC_Delay>

        if (!(i2c->ctrl & MXC_F_I2C_REVA_CTRL_SDA)) {
10011c7a:	6823      	ldr	r3, [r4, #0]
10011c7c:	059a      	lsls	r2, r3, #22
            i2c->ctrl |= MXC_F_I2C_REVA_CTRL_SCL_OUT | MXC_F_I2C_REVA_CTRL_SDA_OUT;
            continue; // Give up and try again
        }

        MXC_Delay(10);
10011c7e:	f04f 000a 	mov.w	r0, #10
        if (!(i2c->ctrl & MXC_F_I2C_REVA_CTRL_SDA)) {
10011c82:	d51d      	bpl.n	10011cc0 <MXC_I2C_RevA_Recover+0xa0>
        MXC_Delay(10);
10011c84:	f7ff fae6 	bl	10011254 <MXC_Delay>
        i2c->ctrl |= MXC_F_I2C_REVA_CTRL_SCL_OUT;
10011c88:	6823      	ldr	r3, [r4, #0]
10011c8a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10011c8e:	6023      	str	r3, [r4, #0]

        MXC_Delay(10);
10011c90:	200a      	movs	r0, #10
10011c92:	f7ff fadf 	bl	10011254 <MXC_Delay>

        if (i2c->ctrl & MXC_F_I2C_REVA_CTRL_SCL) {
10011c96:	6823      	ldr	r3, [r4, #0]
10011c98:	05db      	lsls	r3, r3, #23
10011c9a:	d425      	bmi.n	10011ce8 <MXC_I2C_RevA_Recover+0xc8>
    for (i = 0; i < retries; i++) {
10011c9c:	3501      	adds	r5, #1
10011c9e:	42ae      	cmp	r6, r5
10011ca0:	d015      	beq.n	10011cce <MXC_I2C_RevA_Recover+0xae>
        MXC_Delay(10);
10011ca2:	200a      	movs	r0, #10
10011ca4:	f7ff fad6 	bl	10011254 <MXC_Delay>
        i2c->ctrl &= ~MXC_F_I2C_REVA_CTRL_SCL_OUT;
10011ca8:	6823      	ldr	r3, [r4, #0]
10011caa:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
10011cae:	6023      	str	r3, [r4, #0]
        MXC_Delay(10);
10011cb0:	200a      	movs	r0, #10
10011cb2:	f7ff facf 	bl	10011254 <MXC_Delay>
        if (i2c->ctrl & MXC_F_I2C_REVA_CTRL_SCL) {
10011cb6:	6823      	ldr	r3, [r4, #0]
10011cb8:	05d9      	lsls	r1, r3, #23
        MXC_Delay(10);
10011cba:	f04f 000a 	mov.w	r0, #10
        if (i2c->ctrl & MXC_F_I2C_REVA_CTRL_SCL) {
10011cbe:	d5c4      	bpl.n	10011c4a <MXC_I2C_RevA_Recover+0x2a>
            i2c->ctrl |= MXC_F_I2C_REVA_CTRL_SCL_OUT | MXC_F_I2C_REVA_CTRL_SDA_OUT;
10011cc0:	6823      	ldr	r3, [r4, #0]
    for (i = 0; i < retries; i++) {
10011cc2:	3501      	adds	r5, #1
            i2c->ctrl |= MXC_F_I2C_REVA_CTRL_SCL_OUT | MXC_F_I2C_REVA_CTRL_SDA_OUT;
10011cc4:	f043 03c0 	orr.w	r3, r3, #192	@ 0xc0
    for (i = 0; i < retries; i++) {
10011cc8:	42ae      	cmp	r6, r5
            i2c->ctrl |= MXC_F_I2C_REVA_CTRL_SCL_OUT | MXC_F_I2C_REVA_CTRL_SDA_OUT;
10011cca:	6023      	str	r3, [r4, #0]
    for (i = 0; i < retries; i++) {
10011ccc:	d1e9      	bne.n	10011ca2 <MXC_I2C_RevA_Recover+0x82>
    err = E_COMM_ERR;
10011cce:	f06f 0008 	mvn.w	r0, #8
            err = E_NO_ERROR; // We have control
            break;
        }
    }

    if (swBit == 0) {
10011cd2:	b91f      	cbnz	r7, 10011cdc <MXC_I2C_RevA_Recover+0xbc>
        i2c->ctrl &= ~MXC_F_I2C_REVA_CTRL_BB_MODE;
10011cd4:	6823      	ldr	r3, [r4, #0]
10011cd6:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
10011cda:	6023      	str	r3, [r4, #0]
    }

    i2c->ctrl &= ~MXC_F_I2C_REVA_CTRL_EN;
10011cdc:	6823      	ldr	r3, [r4, #0]
10011cde:	f023 0301 	bic.w	r3, r3, #1
10011ce2:	6023      	str	r3, [r4, #0]

    return err;
}
10011ce4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            err = E_NO_ERROR; // We have control
10011ce8:	4640      	mov	r0, r8
    if (swBit == 0) {
10011cea:	2f00      	cmp	r7, #0
10011cec:	d1f6      	bne.n	10011cdc <MXC_I2C_RevA_Recover+0xbc>
10011cee:	e7f1      	b.n	10011cd4 <MXC_I2C_RevA_Recover+0xb4>
        return E_NULL_PTR;
10011cf0:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
10011cf4:	4770      	bx	lr
10011cf6:	bf00      	nop

10011cf8 <MXC_I2C_RevA_SetRXThreshold>:
    return E_NO_ERROR;
}

int MXC_I2C_RevA_SetRXThreshold(mxc_i2c_reva_regs_t *i2c, unsigned int numBytes)
{
    unsigned int rxFIFOlen = (i2c->fifolen & MXC_F_I2C_REVA_FIFOLEN_RX_DEPTH) >>
10011cf8:	6982      	ldr	r2, [r0, #24]
10011cfa:	b2d2      	uxtb	r2, r2
                             MXC_F_I2C_REVA_FIFOLEN_RX_DEPTH_POS;

    if (numBytes > rxFIFOlen) {
10011cfc:	428a      	cmp	r2, r1
{
10011cfe:	4603      	mov	r3, r0
    if (numBytes > rxFIFOlen) {
10011d00:	d307      	bcc.n	10011d12 <MXC_I2C_RevA_SetRXThreshold+0x1a>
        return E_BAD_PARAM;
    }

    i2c->rxctrl0 = (i2c->rxctrl0 & ~MXC_F_I2C_REVA_RXCTRL0_THD_LVL) |
10011d02:	69c2      	ldr	r2, [r0, #28]
10011d04:	f422 6270 	bic.w	r2, r2, #3840	@ 0xf00
10011d08:	ea42 2101 	orr.w	r1, r2, r1, lsl #8
                   (numBytes << MXC_F_I2C_REVA_RXCTRL0_THD_LVL_POS);
    return E_NO_ERROR;
10011d0c:	2000      	movs	r0, #0
    i2c->rxctrl0 = (i2c->rxctrl0 & ~MXC_F_I2C_REVA_RXCTRL0_THD_LVL) |
10011d0e:	61d9      	str	r1, [r3, #28]
    return E_NO_ERROR;
10011d10:	4770      	bx	lr
        return E_BAD_PARAM;
10011d12:	f06f 0002 	mvn.w	r0, #2
}
10011d16:	4770      	bx	lr

10011d18 <MXC_I2C_RevA_SetTXThreshold>:
    return (i2c->rxctrl0 & MXC_F_I2C_REVA_RXCTRL0_THD_LVL) >> MXC_F_I2C_REVA_RXCTRL0_THD_LVL_POS;
}

int MXC_I2C_RevA_SetTXThreshold(mxc_i2c_reva_regs_t *i2c, unsigned int numBytes)
{
    unsigned int txFIFOlen = (i2c->fifolen & MXC_F_I2C_REVA_FIFOLEN_TX_DEPTH) >>
10011d18:	6982      	ldr	r2, [r0, #24]
10011d1a:	f3c2 2207 	ubfx	r2, r2, #8, #8
                             MXC_F_I2C_REVA_FIFOLEN_TX_DEPTH_POS;

    if (numBytes > txFIFOlen) {
10011d1e:	428a      	cmp	r2, r1
{
10011d20:	4603      	mov	r3, r0
    if (numBytes > txFIFOlen) {
10011d22:	d307      	bcc.n	10011d34 <MXC_I2C_RevA_SetTXThreshold+0x1c>
        return E_BAD_PARAM;
    }

    i2c->txctrl0 = (i2c->txctrl0 & ~MXC_F_I2C_REVA_TXCTRL0_THD_LVL) |
10011d24:	6a42      	ldr	r2, [r0, #36]	@ 0x24
10011d26:	f422 6270 	bic.w	r2, r2, #3840	@ 0xf00
10011d2a:	ea42 2101 	orr.w	r1, r2, r1, lsl #8
                   (numBytes << MXC_F_I2C_REVA_TXCTRL0_THD_LVL_POS);
    return E_NO_ERROR;
10011d2e:	2000      	movs	r0, #0
    i2c->txctrl0 = (i2c->txctrl0 & ~MXC_F_I2C_REVA_TXCTRL0_THD_LVL) |
10011d30:	6259      	str	r1, [r3, #36]	@ 0x24
    return E_NO_ERROR;
10011d32:	4770      	bx	lr
        return E_BAD_PARAM;
10011d34:	f06f 0002 	mvn.w	r0, #2
}
10011d38:	4770      	bx	lr
10011d3a:	bf00      	nop

10011d3c <MXC_ICC_Enable>:
    return MXC_ICC_RevA_ID((mxc_icc_reva_regs_t *)icc, cid);
}

void MXC_ICC_Enable(mxc_icc_regs_t *icc)
{
    MXC_ICC_RevA_Enable((mxc_icc_reva_regs_t *)icc);
10011d3c:	f000 b802 	b.w	10011d44 <MXC_ICC_RevA_Enable>

10011d40 <MXC_ICC_Disable>:
}

void MXC_ICC_Disable(mxc_icc_regs_t *icc)
{
    MXC_ICC_RevA_Disable((mxc_icc_reva_regs_t *)icc);
10011d40:	f000 b818 	b.w	10011d74 <MXC_ICC_RevA_Disable>

10011d44 <MXC_ICC_RevA_Enable>:
}

void MXC_ICC_RevA_Enable(mxc_icc_reva_regs_t *icc)
{
    // Invalidate cache and wait until ready
    icc->ctrl &= ~MXC_F_ICC_REVA_CTRL_EN;
10011d44:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
    icc->invalidate = 1;
10011d48:	2201      	movs	r2, #1
    icc->ctrl &= ~MXC_F_ICC_REVA_CTRL_EN;
10011d4a:	f023 0301 	bic.w	r3, r3, #1
10011d4e:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
    icc->invalidate = 1;
10011d52:	f8c0 2700 	str.w	r2, [r0, #1792]	@ 0x700
    return (icc->ctrl & MXC_F_ICC_REVA_CTRL_RDY);
10011d56:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100

    while (!(MXC_ICC_Ready(icc))) {}
10011d5a:	03da      	lsls	r2, r3, #15
10011d5c:	d5fb      	bpl.n	10011d56 <MXC_ICC_RevA_Enable+0x12>

    // Enable Cache
    icc->ctrl |= MXC_F_ICC_REVA_CTRL_EN;
10011d5e:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
10011d62:	f043 0301 	orr.w	r3, r3, #1
10011d66:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
    return (icc->ctrl & MXC_F_ICC_REVA_CTRL_RDY);
10011d6a:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
    while (!(MXC_ICC_Ready(icc))) {}
10011d6e:	03db      	lsls	r3, r3, #15
10011d70:	d5fb      	bpl.n	10011d6a <MXC_ICC_RevA_Enable+0x26>
}
10011d72:	4770      	bx	lr

10011d74 <MXC_ICC_RevA_Disable>:

void MXC_ICC_RevA_Disable(mxc_icc_reva_regs_t *icc)
{
    // Disable Cache
    icc->ctrl &= ~MXC_F_ICC_REVA_CTRL_EN;
10011d74:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
10011d78:	f023 0301 	bic.w	r3, r3, #1
10011d7c:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
}
10011d80:	4770      	bx	lr
10011d82:	bf00      	nop

10011d84 <MXC_TRNG_Init>:
/* ************************************************************************* */

/********************************************************/

int MXC_TRNG_Init()
{
10011d84:	b508      	push	{r3, lr}
    MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_TRNG);
10011d86:	2022      	movs	r0, #34	@ 0x22
10011d88:	f7ff fae6 	bl	10011358 <MXC_SYS_ClockEnable>

    MXC_TRNG_RevB_Init();
10011d8c:	f000 f81a 	bl	10011dc4 <MXC_TRNG_RevB_Init>

    return E_NO_ERROR;
}
10011d90:	2000      	movs	r0, #0
10011d92:	bd08      	pop	{r3, pc}

10011d94 <MXC_TRNG_Shutdown>:
{
    MXC_TRNG_RevB_DisableInt((mxc_trng_revb_regs_t *)MXC_TRNG);
}

int MXC_TRNG_Shutdown(void)
{
10011d94:	b510      	push	{r4, lr}
    int error = MXC_TRNG_RevB_Shutdown();
10011d96:	f000 f817 	bl	10011dc8 <MXC_TRNG_RevB_Shutdown>
10011d9a:	4604      	mov	r4, r0

    MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_TRNG);
10011d9c:	2022      	movs	r0, #34	@ 0x22
10011d9e:	f7ff fabb 	bl	10011318 <MXC_SYS_ClockDisable>

    return error;
}
10011da2:	4620      	mov	r0, r4
10011da4:	bd10      	pop	{r4, pc}
10011da6:	bf00      	nop

10011da8 <MXC_TRNG_Handler>:

void MXC_TRNG_Handler(void)
{
    MXC_TRNG_RevB_Handler((mxc_trng_revb_regs_t *)MXC_TRNG);
10011da8:	4801      	ldr	r0, [pc, #4]	@ (10011db0 <MXC_TRNG_Handler+0x8>)
10011daa:	f000 b80f 	b.w	10011dcc <MXC_TRNG_RevB_Handler>
10011dae:	bf00      	nop
10011db0:	4004d000 	.word	0x4004d000

10011db4 <MXC_TRNG_RandomInt>:
/* True Random Number Generator (TRNG) functions                             */
/* ************************************************************************* */

int MXC_TRNG_RandomInt(void)
{
    return MXC_TRNG_RevB_RandomInt((mxc_trng_revb_regs_t *)MXC_TRNG);
10011db4:	4801      	ldr	r0, [pc, #4]	@ (10011dbc <MXC_TRNG_RandomInt+0x8>)
10011db6:	f000 b83d 	b.w	10011e34 <MXC_TRNG_RevB_RandomInt>
10011dba:	bf00      	nop
10011dbc:	4004d000 	.word	0x4004d000

10011dc0 <MXC_TRNG_Random>:
}

int MXC_TRNG_Random(uint8_t *data, uint32_t len)
{
    return MXC_TRNG_RevB_Random(data, len);
10011dc0:	f000 b83e 	b.w	10011e40 <MXC_TRNG_RevB_Random>

10011dc4 <MXC_TRNG_RevB_Init>:
/* ************************************************************************* */

int MXC_TRNG_RevB_Init(void)
{
    return E_NO_ERROR;
}
10011dc4:	2000      	movs	r0, #0
10011dc6:	4770      	bx	lr

10011dc8 <MXC_TRNG_RevB_Shutdown>:
void MXC_TRNG_RevB_DisableInt(mxc_trng_revb_regs_t *trng)
{
    trng->ctrl &= ~MXC_F_TRNG_REVB_CTRL_RND_IE;
}

int MXC_TRNG_RevB_Shutdown(void)
10011dc8:	2000      	movs	r0, #0
10011dca:	4770      	bx	lr

10011dcc <MXC_TRNG_RevB_Handler>:
{
    return E_NO_ERROR;
}

void MXC_TRNG_RevB_Handler(mxc_trng_revb_regs_t *trng)
{
10011dcc:	b5f0      	push	{r4, r5, r6, r7, lr}
    uint32_t temp;
    mxc_trng_complete_t cb;

    // if this is last block, disable interrupt before reading trng->data
    if (TRNG_maxLength <= TRNG_count + 4) {
10011dce:	4f15      	ldr	r7, [pc, #84]	@ (10011e24 <MXC_TRNG_RevB_Handler+0x58>)
10011dd0:	4b15      	ldr	r3, [pc, #84]	@ (10011e28 <MXC_TRNG_RevB_Handler+0x5c>)
10011dd2:	683d      	ldr	r5, [r7, #0]
10011dd4:	681e      	ldr	r6, [r3, #0]
10011dd6:	1d2a      	adds	r2, r5, #4
10011dd8:	42b2      	cmp	r2, r6
{
10011dda:	b083      	sub	sp, #12
    if (TRNG_maxLength <= TRNG_count + 4) {
10011ddc:	d303      	bcc.n	10011de6 <MXC_TRNG_RevB_Handler+0x1a>
        trng->ctrl &= ~MXC_F_TRNG_REVB_CTRL_RND_IE;
10011dde:	6803      	ldr	r3, [r0, #0]
10011de0:	f023 0302 	bic.w	r3, r3, #2
10011de4:	6003      	str	r3, [r0, #0]
    }

    temp = trng->data;

    if ((TRNG_count + 3) < TRNG_maxLength) {
        memcpy(&(TRNG_data[TRNG_count]), (uint8_t *)(&temp), 4);
10011de6:	4b11      	ldr	r3, [pc, #68]	@ (10011e2c <MXC_TRNG_RevB_Handler+0x60>)
    temp = trng->data;
10011de8:	6884      	ldr	r4, [r0, #8]
        memcpy(&(TRNG_data[TRNG_count]), (uint8_t *)(&temp), 4);
10011dea:	6819      	ldr	r1, [r3, #0]
    temp = trng->data;
10011dec:	9401      	str	r4, [sp, #4]
    if ((TRNG_count + 3) < TRNG_maxLength) {
10011dee:	1ceb      	adds	r3, r5, #3
10011df0:	429e      	cmp	r6, r3
        memcpy(&(TRNG_data[TRNG_count]), (uint8_t *)(&temp), 4);
10011df2:	eb01 0005 	add.w	r0, r1, r5
    if ((TRNG_count + 3) < TRNG_maxLength) {
10011df6:	d90d      	bls.n	10011e14 <MXC_TRNG_RevB_Handler+0x48>
        memcpy(&(TRNG_data[TRNG_count]), (uint8_t *)(&temp), 4);
10011df8:	514c      	str	r4, [r1, r5]
    } else {
        memcpy(&(TRNG_data[TRNG_count]), (uint8_t *)(&temp), TRNG_maxLength & 0x03);
        TRNG_count += (TRNG_maxLength & 0x03);
    }

    if (TRNG_maxLength == TRNG_count) {
10011dfa:	4296      	cmp	r6, r2
        TRNG_count += 4;
10011dfc:	603a      	str	r2, [r7, #0]
    if (TRNG_maxLength == TRNG_count) {
10011dfe:	d001      	beq.n	10011e04 <MXC_TRNG_RevB_Handler+0x38>
        cb = MXC_TRNG_Callback;
        cb(0, 0);
    }
}
10011e00:	b003      	add	sp, #12
10011e02:	bdf0      	pop	{r4, r5, r6, r7, pc}
        cb = MXC_TRNG_Callback;
10011e04:	4b0a      	ldr	r3, [pc, #40]	@ (10011e30 <MXC_TRNG_RevB_Handler+0x64>)
        cb(0, 0);
10011e06:	2100      	movs	r1, #0
10011e08:	681b      	ldr	r3, [r3, #0]
10011e0a:	4608      	mov	r0, r1
}
10011e0c:	b003      	add	sp, #12
10011e0e:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
        cb(0, 0);
10011e12:	4718      	bx	r3
        memcpy(&(TRNG_data[TRNG_count]), (uint8_t *)(&temp), TRNG_maxLength & 0x03);
10011e14:	f006 0203 	and.w	r2, r6, #3
10011e18:	4614      	mov	r4, r2
10011e1a:	a901      	add	r1, sp, #4
10011e1c:	f004 f8e0 	bl	10015fe0 <memcpy>
        TRNG_count += (TRNG_maxLength & 0x03);
10011e20:	192a      	adds	r2, r5, r4
10011e22:	e7ea      	b.n	10011dfa <MXC_TRNG_RevB_Handler+0x2e>
10011e24:	20001230 	.word	0x20001230
10011e28:	2000122c 	.word	0x2000122c
10011e2c:	20001228 	.word	0x20001228
10011e30:	20001234 	.word	0x20001234

10011e34 <MXC_TRNG_RevB_RandomInt>:
/* True Random Number Generator(TRNG) functions                             */
/* ************************************************************************* */

int MXC_TRNG_RevB_RandomInt(mxc_trng_revb_regs_t *trng)
{
    while (!(trng->status & MXC_F_TRNG_REVB_STATUS_RDY)) {}
10011e34:	6843      	ldr	r3, [r0, #4]
10011e36:	07db      	lsls	r3, r3, #31
10011e38:	d5fc      	bpl.n	10011e34 <MXC_TRNG_RevB_RandomInt>

    return (int)trng->data;
10011e3a:	6880      	ldr	r0, [r0, #8]
}
10011e3c:	4770      	bx	lr
10011e3e:	bf00      	nop

10011e40 <MXC_TRNG_RevB_Random>:

int MXC_TRNG_RevB_Random(uint8_t *data, uint32_t len)
{
    unsigned int i, temp;

    if (data == NULL) {
10011e40:	b380      	cbz	r0, 10011ea4 <MXC_TRNG_RevB_Random+0x64>
{
10011e42:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
        return E_NULL_PTR;
    }

    for (i = 0; (i + 3) < len; i += 4) {
10011e46:	2903      	cmp	r1, #3
{
10011e48:	b082      	sub	sp, #8
10011e4a:	460e      	mov	r6, r1
10011e4c:	4607      	mov	r7, r0
    for (i = 0; (i + 3) < len; i += 4) {
10011e4e:	d926      	bls.n	10011e9e <MXC_TRNG_RevB_Random+0x5e>
10011e50:	f1a1 0804 	sub.w	r8, r1, #4
10011e54:	f028 0503 	bic.w	r5, r8, #3
10011e58:	4604      	mov	r4, r0
10011e5a:	4405      	add	r5, r0
        temp = MXC_TRNG_RandomInt();
10011e5c:	f7ff ffaa 	bl	10011db4 <MXC_TRNG_RandomInt>
    for (i = 0; (i + 3) < len; i += 4) {
10011e60:	42ac      	cmp	r4, r5
        memcpy(&(data[i]), (uint8_t *)(&temp), 4);
10011e62:	6020      	str	r0, [r4, #0]
        temp = MXC_TRNG_RandomInt();
10011e64:	9001      	str	r0, [sp, #4]
    for (i = 0; (i + 3) < len; i += 4) {
10011e66:	f104 0404 	add.w	r4, r4, #4
10011e6a:	d1f7      	bne.n	10011e5c <MXC_TRNG_RevB_Random+0x1c>
10011e6c:	f028 0803 	bic.w	r8, r8, #3
10011e70:	f108 0804 	add.w	r8, r8, #4
    }

    if (len & 0x03) {
10011e74:	f016 0603 	ands.w	r6, r6, #3
10011e78:	d103      	bne.n	10011e82 <MXC_TRNG_RevB_Random+0x42>
        temp = MXC_TRNG_RandomInt();
        memcpy(&(data[i]), (uint8_t *)(&temp), len & 0x03);
    }

    return E_NO_ERROR;
10011e7a:	2000      	movs	r0, #0
}
10011e7c:	b002      	add	sp, #8
10011e7e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        temp = MXC_TRNG_RandomInt();
10011e82:	f7ff ff97 	bl	10011db4 <MXC_TRNG_RandomInt>
        memcpy(&(data[i]), (uint8_t *)(&temp), len & 0x03);
10011e86:	4632      	mov	r2, r6
        temp = MXC_TRNG_RandomInt();
10011e88:	4603      	mov	r3, r0
        memcpy(&(data[i]), (uint8_t *)(&temp), len & 0x03);
10011e8a:	a901      	add	r1, sp, #4
10011e8c:	eb07 0008 	add.w	r0, r7, r8
        temp = MXC_TRNG_RandomInt();
10011e90:	9301      	str	r3, [sp, #4]
        memcpy(&(data[i]), (uint8_t *)(&temp), len & 0x03);
10011e92:	f004 f8a5 	bl	10015fe0 <memcpy>
    return E_NO_ERROR;
10011e96:	2000      	movs	r0, #0
}
10011e98:	b002      	add	sp, #8
10011e9a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    for (i = 0; (i + 3) < len; i += 4) {
10011e9e:	f04f 0800 	mov.w	r8, #0
10011ea2:	e7e7      	b.n	10011e74 <MXC_TRNG_RevB_Random+0x34>
        return E_NULL_PTR;
10011ea4:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
10011ea8:	4770      	bx	lr
10011eaa:	bf00      	nop

10011eac <MXC_UART_Shutdown>:

    return MXC_UART_RevB_Init((mxc_uart_revb_regs_t *)uart, baud, clock);
}

int MXC_UART_Shutdown(mxc_uart_regs_t *uart)
{
10011eac:	b508      	push	{r3, lr}
    switch (MXC_UART_GET_IDX(uart)) {
10011eae:	4b16      	ldr	r3, [pc, #88]	@ (10011f08 <MXC_UART_Shutdown+0x5c>)
10011eb0:	4298      	cmp	r0, r3
10011eb2:	d010      	beq.n	10011ed6 <MXC_UART_Shutdown+0x2a>
10011eb4:	4b15      	ldr	r3, [pc, #84]	@ (10011f0c <MXC_UART_Shutdown+0x60>)
10011eb6:	4298      	cmp	r0, r3
10011eb8:	d014      	beq.n	10011ee4 <MXC_UART_Shutdown+0x38>
10011eba:	4b15      	ldr	r3, [pc, #84]	@ (10011f10 <MXC_UART_Shutdown+0x64>)
10011ebc:	4298      	cmp	r0, r3
10011ebe:	d018      	beq.n	10011ef2 <MXC_UART_Shutdown+0x46>
10011ec0:	4b14      	ldr	r3, [pc, #80]	@ (10011f14 <MXC_UART_Shutdown+0x68>)
10011ec2:	4298      	cmp	r0, r3
10011ec4:	d11c      	bne.n	10011f00 <MXC_UART_Shutdown+0x54>
        MXC_SYS_Reset_Periph(MXC_SYS_RESET0_UART2);
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_UART2);
        break;

    case 3:
        MXC_SYS_Reset_Periph(MXC_SYS_RESET_UART3);
10011ec6:	2044      	movs	r0, #68	@ 0x44
10011ec8:	f7ff fae2 	bl	10011490 <MXC_SYS_Reset_Periph>
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_UART3);
10011ecc:	2044      	movs	r0, #68	@ 0x44
10011ece:	f7ff fa23 	bl	10011318 <MXC_SYS_ClockDisable>

    default:
        return E_BAD_PARAM;
    }

    return E_NO_ERROR;
10011ed2:	2000      	movs	r0, #0
}
10011ed4:	bd08      	pop	{r3, pc}
        MXC_SYS_Reset_Periph(MXC_SYS_RESET0_UART0);
10011ed6:	200b      	movs	r0, #11
10011ed8:	f7ff fada 	bl	10011490 <MXC_SYS_Reset_Periph>
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_UART0);
10011edc:	2009      	movs	r0, #9
10011ede:	f7ff fa1b 	bl	10011318 <MXC_SYS_ClockDisable>
        break;
10011ee2:	e7f6      	b.n	10011ed2 <MXC_UART_Shutdown+0x26>
        MXC_SYS_Reset_Periph(MXC_SYS_RESET0_UART1);
10011ee4:	200c      	movs	r0, #12
10011ee6:	f7ff fad3 	bl	10011490 <MXC_SYS_Reset_Periph>
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_UART1);
10011eea:	200a      	movs	r0, #10
10011eec:	f7ff fa14 	bl	10011318 <MXC_SYS_ClockDisable>
        break;
10011ef0:	e7ef      	b.n	10011ed2 <MXC_UART_Shutdown+0x26>
        MXC_SYS_Reset_Periph(MXC_SYS_RESET0_UART2);
10011ef2:	201c      	movs	r0, #28
10011ef4:	f7ff facc 	bl	10011490 <MXC_SYS_Reset_Periph>
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_UART2);
10011ef8:	2021      	movs	r0, #33	@ 0x21
10011efa:	f7ff fa0d 	bl	10011318 <MXC_SYS_ClockDisable>
        break;
10011efe:	e7e8      	b.n	10011ed2 <MXC_UART_Shutdown+0x26>
        return E_BAD_PARAM;
10011f00:	f06f 0002 	mvn.w	r0, #2
}
10011f04:	bd08      	pop	{r3, pc}
10011f06:	bf00      	nop
10011f08:	40042000 	.word	0x40042000
10011f0c:	40043000 	.word	0x40043000
10011f10:	40044000 	.word	0x40044000
10011f14:	40081400 	.word	0x40081400

10011f18 <MXC_UART_Init>:
{
10011f18:	b570      	push	{r4, r5, r6, lr}
10011f1a:	4604      	mov	r4, r0
10011f1c:	460e      	mov	r6, r1
10011f1e:	4615      	mov	r5, r2
    retval = MXC_UART_Shutdown(uart);
10011f20:	f7ff ffc4 	bl	10011eac <MXC_UART_Shutdown>
    if (retval) {
10011f24:	bba8      	cbnz	r0, 10011f92 <MXC_UART_Init+0x7a>
    switch (clock) {
10011f26:	2d02      	cmp	r5, #2
10011f28:	d02d      	beq.n	10011f86 <MXC_UART_Init+0x6e>
10011f2a:	2d04      	cmp	r5, #4
10011f2c:	d018      	beq.n	10011f60 <MXC_UART_Init+0x48>
    switch (MXC_UART_GET_IDX(uart)) {
10011f2e:	4b20      	ldr	r3, [pc, #128]	@ (10011fb0 <MXC_UART_Init+0x98>)
10011f30:	429c      	cmp	r4, r3
10011f32:	d01b      	beq.n	10011f6c <MXC_UART_Init+0x54>
10011f34:	4b1f      	ldr	r3, [pc, #124]	@ (10011fb4 <MXC_UART_Init+0x9c>)
10011f36:	429c      	cmp	r4, r3
10011f38:	d02c      	beq.n	10011f94 <MXC_UART_Init+0x7c>
10011f3a:	4b1f      	ldr	r3, [pc, #124]	@ (10011fb8 <MXC_UART_Init+0xa0>)
10011f3c:	429c      	cmp	r4, r3
10011f3e:	d030      	beq.n	10011fa2 <MXC_UART_Init+0x8a>
10011f40:	4b1e      	ldr	r3, [pc, #120]	@ (10011fbc <MXC_UART_Init+0xa4>)
10011f42:	429c      	cmp	r4, r3
10011f44:	d123      	bne.n	10011f8e <MXC_UART_Init+0x76>
        MXC_GPIO_Config(&gpio_cfg_uart3);
10011f46:	481e      	ldr	r0, [pc, #120]	@ (10011fc0 <MXC_UART_Init+0xa8>)
10011f48:	f7ff fae6 	bl	10011518 <MXC_GPIO_Config>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_UART3);
10011f4c:	2044      	movs	r0, #68	@ 0x44
10011f4e:	f7ff fa03 	bl	10011358 <MXC_SYS_ClockEnable>
    return MXC_UART_RevB_Init((mxc_uart_revb_regs_t *)uart, baud, clock);
10011f52:	462a      	mov	r2, r5
10011f54:	4631      	mov	r1, r6
10011f56:	4620      	mov	r0, r4
}
10011f58:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    return MXC_UART_RevB_Init((mxc_uart_revb_regs_t *)uart, baud, clock);
10011f5c:	f000 b8f8 	b.w	10012150 <MXC_UART_RevB_Init>
        MXC_SYS_ClockSourceEnable(MXC_SYS_CLOCK_ERTCO);
10011f60:	2006      	movs	r0, #6
10011f62:	f7ff fa1b 	bl	1001139c <MXC_SYS_ClockSourceEnable>
    switch (MXC_UART_GET_IDX(uart)) {
10011f66:	4b12      	ldr	r3, [pc, #72]	@ (10011fb0 <MXC_UART_Init+0x98>)
10011f68:	429c      	cmp	r4, r3
10011f6a:	d1e3      	bne.n	10011f34 <MXC_UART_Init+0x1c>
        MXC_GPIO_Config(&gpio_cfg_uart0);
10011f6c:	4815      	ldr	r0, [pc, #84]	@ (10011fc4 <MXC_UART_Init+0xac>)
10011f6e:	f7ff fad3 	bl	10011518 <MXC_GPIO_Config>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_UART0);
10011f72:	2009      	movs	r0, #9
10011f74:	f7ff f9f0 	bl	10011358 <MXC_SYS_ClockEnable>
    return MXC_UART_RevB_Init((mxc_uart_revb_regs_t *)uart, baud, clock);
10011f78:	462a      	mov	r2, r5
10011f7a:	4631      	mov	r1, r6
10011f7c:	4620      	mov	r0, r4
}
10011f7e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    return MXC_UART_RevB_Init((mxc_uart_revb_regs_t *)uart, baud, clock);
10011f82:	f000 b8e5 	b.w	10012150 <MXC_UART_RevB_Init>
        MXC_SYS_ClockSourceEnable(MXC_SYS_CLOCK_IBRO);
10011f86:	2005      	movs	r0, #5
10011f88:	f7ff fa08 	bl	1001139c <MXC_SYS_ClockSourceEnable>
        break;
10011f8c:	e7cf      	b.n	10011f2e <MXC_UART_Init+0x16>
        return E_BAD_PARAM;
10011f8e:	f06f 0002 	mvn.w	r0, #2
}
10011f92:	bd70      	pop	{r4, r5, r6, pc}
        MXC_GPIO_Config(&gpio_cfg_uart1);
10011f94:	480c      	ldr	r0, [pc, #48]	@ (10011fc8 <MXC_UART_Init+0xb0>)
10011f96:	f7ff fabf 	bl	10011518 <MXC_GPIO_Config>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_UART1);
10011f9a:	200a      	movs	r0, #10
10011f9c:	f7ff f9dc 	bl	10011358 <MXC_SYS_ClockEnable>
        break;
10011fa0:	e7d7      	b.n	10011f52 <MXC_UART_Init+0x3a>
        MXC_GPIO_Config(&gpio_cfg_uart2);
10011fa2:	480a      	ldr	r0, [pc, #40]	@ (10011fcc <MXC_UART_Init+0xb4>)
10011fa4:	f7ff fab8 	bl	10011518 <MXC_GPIO_Config>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_UART2);
10011fa8:	2021      	movs	r0, #33	@ 0x21
10011faa:	f7ff f9d5 	bl	10011358 <MXC_SYS_ClockEnable>
        break;
10011fae:	e7d0      	b.n	10011f52 <MXC_UART_Init+0x3a>
10011fb0:	40042000 	.word	0x40042000
10011fb4:	40043000 	.word	0x40043000
10011fb8:	40044000 	.word	0x40044000
10011fbc:	40081400 	.word	0x40081400
10011fc0:	1001d894 	.word	0x1001d894
10011fc4:	1001d8b8 	.word	0x1001d8b8
10011fc8:	1001d8ac 	.word	0x1001d8ac
10011fcc:	1001d8a0 	.word	0x1001d8a0

10011fd0 <MXC_UART_SetFrequency>:
}

int MXC_UART_SetFrequency(mxc_uart_regs_t *uart, unsigned int baud, mxc_uart_clock_t clock)
{
    int frequency, clkDiv = 0, mod = 0;
    if (MXC_UART_GET_IDX(uart) < 0) {
10011fd0:	4b31      	ldr	r3, [pc, #196]	@ (10012098 <MXC_UART_SetFrequency+0xc8>)
10011fd2:	4298      	cmp	r0, r3
{
10011fd4:	b510      	push	{r4, lr}
10011fd6:	4604      	mov	r4, r0
    if (MXC_UART_GET_IDX(uart) < 0) {
10011fd8:	d015      	beq.n	10012006 <MXC_UART_SetFrequency+0x36>
10011fda:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10011fde:	4298      	cmp	r0, r3
10011fe0:	d011      	beq.n	10012006 <MXC_UART_SetFrequency+0x36>
10011fe2:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10011fe6:	4298      	cmp	r0, r3
10011fe8:	d00d      	beq.n	10012006 <MXC_UART_SetFrequency+0x36>
10011fea:	f503 3375 	add.w	r3, r3, #250880	@ 0x3d400
10011fee:	4298      	cmp	r0, r3
10011ff0:	d106      	bne.n	10012000 <MXC_UART_SetFrequency+0x30>
    }

    // check if the uart is LPUART
    if (uart == MXC_UART3) {
        // OSR default value
        uart->osr = 5;
10011ff2:	2305      	movs	r3, #5

        switch (clock) {
10011ff4:	2a02      	cmp	r2, #2
        uart->osr = 5;
10011ff6:	6143      	str	r3, [r0, #20]
        switch (clock) {
10011ff8:	d014      	beq.n	10012024 <MXC_UART_SetFrequency+0x54>
10011ffa:	2a04      	cmp	r2, #4
10011ffc:	d032      	beq.n	10012064 <MXC_UART_SetFrequency+0x94>
10011ffe:	b18a      	cbz	r2, 10012024 <MXC_UART_SetFrequency+0x54>
        return E_BAD_PARAM;
10012000:	f06f 0002 	mvn.w	r0, #2
        uart->ctrl |= MXC_F_UART_CTRL_BCLKEN;
        while (((uart->ctrl & MXC_F_UART_CTRL_BCLKRDY) >> MXC_F_UART_CTRL_BCLKRDY_POS) == 0) {}
    }

    return frequency;
}
10012004:	bd10      	pop	{r4, pc}
        if (clock == MXC_UART_ERTCO_CLK) {
10012006:	2a04      	cmp	r2, #4
10012008:	d0fa      	beq.n	10012000 <MXC_UART_SetFrequency+0x30>
        frequency = MXC_UART_RevB_SetFrequency((mxc_uart_revb_regs_t *)uart, baud, clock);
1001200a:	4620      	mov	r0, r4
1001200c:	f000 f8d8 	bl	100121c0 <MXC_UART_RevB_SetFrequency>
    if (frequency > 0) {
10012010:	2800      	cmp	r0, #0
10012012:	ddf7      	ble.n	10012004 <MXC_UART_SetFrequency+0x34>
        uart->ctrl |= MXC_F_UART_CTRL_BCLKEN;
10012014:	6823      	ldr	r3, [r4, #0]
10012016:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
1001201a:	6023      	str	r3, [r4, #0]
        while (((uart->ctrl & MXC_F_UART_CTRL_BCLKRDY) >> MXC_F_UART_CTRL_BCLKRDY_POS) == 0) {}
1001201c:	6823      	ldr	r3, [r4, #0]
1001201e:	031b      	lsls	r3, r3, #12
10012020:	d5fc      	bpl.n	1001201c <MXC_UART_SetFrequency+0x4c>
}
10012022:	bd10      	pop	{r4, pc}
            clkDiv = ((IBRO_FREQ) / baud);
10012024:	f44f 03e1 	mov.w	r3, #7372800	@ 0x708000
10012028:	fbb3 f3f1 	udiv	r3, r3, r1
            mod = ((IBRO_FREQ) % baud);
1001202c:	fb01 f203 	mul.w	r2, r1, r3
10012030:	f5c2 02e1 	rsb	r2, r2, #7372800	@ 0x708000
        if (!clkDiv || mod > (baud / 2)) {
10012034:	b113      	cbz	r3, 1001203c <MXC_UART_SetFrequency+0x6c>
10012036:	ebb2 0f51 	cmp.w	r2, r1, lsr #1
1001203a:	d900      	bls.n	1001203e <MXC_UART_SetFrequency+0x6e>
            clkDiv++;
1001203c:	3301      	adds	r3, #1
        uart->clkdiv = clkDiv;
1001203e:	4a17      	ldr	r2, [pc, #92]	@ (1001209c <MXC_UART_SetFrequency+0xcc>)
10012040:	6113      	str	r3, [r2, #16]
        return E_BAD_PARAM;
    }

    // check if UARt is LP UART
    if (uart == MXC_UART3) {
        if ((uart->ctrl & MXC_F_UART_CTRL_BCLKSRC) == MXC_S_UART_CTRL_BCLKSRC_EXTERNAL_CLOCK) {
10012042:	6810      	ldr	r0, [r2, #0]
10012044:	f400 3040 	and.w	r0, r0, #196608	@ 0x30000
10012048:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
1001204c:	d005      	beq.n	1001205a <MXC_UART_SetFrequency+0x8a>
            periphClock = ERTCO_FREQ * 2;
        } else if ((uart->ctrl & MXC_F_UART_CTRL_BCLKSRC) ==
1001204e:	6813      	ldr	r3, [r2, #0]
10012050:	f413 3f40 	tst.w	r3, #196608	@ 0x30000
10012054:	d1d4      	bne.n	10012000 <MXC_UART_SetFrequency+0x30>
10012056:	f44f 00e1 	mov.w	r0, #7372800	@ 0x708000
                   MXC_S_UART_CTRL_BCLKSRC_PERIPHERAL_CLOCK) {
            periphClock = IBRO_FREQ;
        } else {
            return E_BAD_PARAM;
        }
        return (periphClock / uart->clkdiv);
1001205a:	4b10      	ldr	r3, [pc, #64]	@ (1001209c <MXC_UART_SetFrequency+0xcc>)
1001205c:	691b      	ldr	r3, [r3, #16]
1001205e:	fbb0 f0f3 	udiv	r0, r0, r3
10012062:	e7d5      	b.n	10012010 <MXC_UART_SetFrequency+0x40>
            uart->ctrl |= MXC_S_UART_CTRL_BCLKSRC_EXTERNAL_CLOCK;
10012064:	6803      	ldr	r3, [r0, #0]
10012066:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
1001206a:	6003      	str	r3, [r0, #0]
            uart->ctrl |= MXC_F_UART_CTRL_FDM;
1001206c:	6803      	ldr	r3, [r0, #0]
            if (baud > 2400) {
1001206e:	f5b1 6f16 	cmp.w	r1, #2400	@ 0x960
            uart->ctrl |= MXC_F_UART_CTRL_FDM;
10012072:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
10012076:	6003      	str	r3, [r0, #0]
            if (baud > 2400) {
10012078:	d90a      	bls.n	10012090 <MXC_UART_SetFrequency+0xc0>
                uart->osr = 0;
1001207a:	2300      	movs	r3, #0
1001207c:	6143      	str	r3, [r0, #20]
            clkDiv = ((ERTCO_FREQ * 2) / baud);
1001207e:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
10012082:	fbb3 f3f1 	udiv	r3, r3, r1
            mod = ((ERTCO_FREQ * 2) % baud);
10012086:	fb01 f203 	mul.w	r2, r1, r3
1001208a:	f5c2 3280 	rsb	r2, r2, #65536	@ 0x10000
1001208e:	e7d1      	b.n	10012034 <MXC_UART_SetFrequency+0x64>
                uart->osr = 1;
10012090:	2301      	movs	r3, #1
10012092:	6143      	str	r3, [r0, #20]
10012094:	e7f3      	b.n	1001207e <MXC_UART_SetFrequency+0xae>
10012096:	bf00      	nop
10012098:	40042000 	.word	0x40042000
1001209c:	40081400 	.word	0x40081400

100120a0 <MXC_UART_GetFrequency>:
    if (MXC_UART_GET_IDX(uart) < 0) {
100120a0:	4b12      	ldr	r3, [pc, #72]	@ (100120ec <MXC_UART_GetFrequency+0x4c>)
100120a2:	4298      	cmp	r0, r3
100120a4:	d01c      	beq.n	100120e0 <MXC_UART_GetFrequency+0x40>
100120a6:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
100120aa:	4298      	cmp	r0, r3
100120ac:	d018      	beq.n	100120e0 <MXC_UART_GetFrequency+0x40>
100120ae:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
100120b2:	4298      	cmp	r0, r3
100120b4:	d014      	beq.n	100120e0 <MXC_UART_GetFrequency+0x40>
100120b6:	f503 3375 	add.w	r3, r3, #250880	@ 0x3d400
100120ba:	4298      	cmp	r0, r3
100120bc:	d112      	bne.n	100120e4 <MXC_UART_GetFrequency+0x44>
        if ((uart->ctrl & MXC_F_UART_CTRL_BCLKSRC) == MXC_S_UART_CTRL_BCLKSRC_EXTERNAL_CLOCK) {
100120be:	6803      	ldr	r3, [r0, #0]
100120c0:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
100120c4:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
100120c8:	d005      	beq.n	100120d6 <MXC_UART_GetFrequency+0x36>
        } else if ((uart->ctrl & MXC_F_UART_CTRL_BCLKSRC) ==
100120ca:	6803      	ldr	r3, [r0, #0]
100120cc:	f413 3f40 	tst.w	r3, #196608	@ 0x30000
100120d0:	d108      	bne.n	100120e4 <MXC_UART_GetFrequency+0x44>
100120d2:	f44f 03e1 	mov.w	r3, #7372800	@ 0x708000
        return (periphClock / uart->clkdiv);
100120d6:	4a06      	ldr	r2, [pc, #24]	@ (100120f0 <MXC_UART_GetFrequency+0x50>)
100120d8:	6910      	ldr	r0, [r2, #16]
100120da:	fbb3 f0f0 	udiv	r0, r3, r0
100120de:	4770      	bx	lr
    } else {
        return MXC_UART_RevB_GetFrequency((mxc_uart_revb_regs_t *)uart);
100120e0:	f000 b8ba 	b.w	10012258 <MXC_UART_RevB_GetFrequency>
        return E_BAD_PARAM;
100120e4:	f06f 0002 	mvn.w	r0, #2
    }
}
100120e8:	4770      	bx	lr
100120ea:	bf00      	nop
100120ec:	40042000 	.word	0x40042000
100120f0:	40081400 	.word	0x40081400

100120f4 <MXC_UART_SetDataSize>:

int MXC_UART_SetDataSize(mxc_uart_regs_t *uart, int dataSize)
{
    return MXC_UART_RevB_SetDataSize((mxc_uart_revb_regs_t *)uart, dataSize);
100120f4:	f000 b8f0 	b.w	100122d8 <MXC_UART_RevB_SetDataSize>

100120f8 <MXC_UART_SetStopBits>:
}

int MXC_UART_SetStopBits(mxc_uart_regs_t *uart, mxc_uart_stop_t stopBits)
{
    return MXC_UART_RevB_SetStopBits((mxc_uart_revb_regs_t *)uart, stopBits);
100120f8:	f000 b90e 	b.w	10012318 <MXC_UART_RevB_SetStopBits>

100120fc <MXC_UART_SetParity>:
}

int MXC_UART_SetParity(mxc_uart_regs_t *uart, mxc_uart_parity_t parity)
{
    return MXC_UART_RevB_SetParity((mxc_uart_revb_regs_t *)uart, parity);
100120fc:	f000 b930 	b.w	10012360 <MXC_UART_RevB_SetParity>

10012100 <MXC_UART_ReadCharacterRaw>:
    return MXC_UART_RevB_AbortTransmission((mxc_uart_revb_regs_t *)uart);
}

int MXC_UART_ReadCharacterRaw(mxc_uart_regs_t *uart)
{
    return MXC_UART_RevB_ReadCharacterRaw((mxc_uart_revb_regs_t *)uart);
10012100:	f000 b984 	b.w	1001240c <MXC_UART_RevB_ReadCharacterRaw>

10012104 <MXC_UART_WriteCharacterRaw>:
}

int MXC_UART_WriteCharacterRaw(mxc_uart_regs_t *uart, uint8_t character)
{
    return MXC_UART_RevB_WriteCharacterRaw((mxc_uart_revb_regs_t *)uart, character);
10012104:	f000 b99e 	b.w	10012444 <MXC_UART_RevB_WriteCharacterRaw>

10012108 <MXC_UART_ReadCharacter>:
}

int MXC_UART_ReadCharacter(mxc_uart_regs_t *uart)
{
    return MXC_UART_Common_ReadCharacter(uart);
10012108:	f000 b808 	b.w	1001211c <MXC_UART_Common_ReadCharacter>

1001210c <MXC_UART_WriteCharacter>:
}

int MXC_UART_WriteCharacter(mxc_uart_regs_t *uart, uint8_t character)
{
    return MXC_UART_Common_WriteCharacter(uart, character);
1001210c:	f000 b812 	b.w	10012134 <MXC_UART_Common_WriteCharacter>

10012110 <MXC_UART_GetRXFIFOAvailable>:
    return MXC_UART_RevB_ReadRXFIFODMA((mxc_uart_revb_regs_t *)uart, bytes, len, callback, config);
}

unsigned int MXC_UART_GetRXFIFOAvailable(mxc_uart_regs_t *uart)
{
    return MXC_UART_RevB_GetRXFIFOAvailable((mxc_uart_revb_regs_t *)uart);
10012110:	f000 b9b6 	b.w	10012480 <MXC_UART_RevB_GetRXFIFOAvailable>

10012114 <MXC_UART_GetTXFIFOAvailable>:
    return MXC_UART_RevB_WriteTXFIFODMA((mxc_uart_revb_regs_t *)uart, bytes, len, callback, config);
}

unsigned int MXC_UART_GetTXFIFOAvailable(mxc_uart_regs_t *uart)
{
    return MXC_UART_RevB_GetTXFIFOAvailable((mxc_uart_revb_regs_t *)uart);
10012114:	f000 b9b8 	b.w	10012488 <MXC_UART_RevB_GetTXFIFOAvailable>

10012118 <MXC_UART_SetRXThreshold>:
    return MXC_UART_RevB_ClearTXFIFO((mxc_uart_revb_regs_t *)uart);
}

int MXC_UART_SetRXThreshold(mxc_uart_regs_t *uart, unsigned int numBytes)
{
    return MXC_UART_RevB_SetRXThreshold((mxc_uart_revb_regs_t *)uart, numBytes);
10012118:	f000 b9bc 	b.w	10012494 <MXC_UART_RevB_SetRXThreshold>

1001211c <MXC_UART_Common_ReadCharacter>:

#include "uart_common.h"
#include "uart.h"

int MXC_UART_Common_ReadCharacter(mxc_uart_regs_t *uart)
{
1001211c:	b510      	push	{r4, lr}
1001211e:	4604      	mov	r4, r0
    // Wait until FIFO has a character ready.
    while (MXC_UART_GetRXFIFOAvailable(uart) < 1) {}
10012120:	4620      	mov	r0, r4
10012122:	f7ff fff5 	bl	10012110 <MXC_UART_GetRXFIFOAvailable>
10012126:	2800      	cmp	r0, #0
10012128:	d0fa      	beq.n	10012120 <MXC_UART_Common_ReadCharacter+0x4>

    // Read the character using the non-blocking function.
    return MXC_UART_ReadCharacterRaw(uart);
1001212a:	4620      	mov	r0, r4
}
1001212c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return MXC_UART_ReadCharacterRaw(uart);
10012130:	f7ff bfe6 	b.w	10012100 <MXC_UART_ReadCharacterRaw>

10012134 <MXC_UART_Common_WriteCharacter>:

int MXC_UART_Common_WriteCharacter(mxc_uart_regs_t *uart, uint8_t character)
{
10012134:	b538      	push	{r3, r4, r5, lr}
10012136:	4604      	mov	r4, r0
10012138:	460d      	mov	r5, r1
    // Wait until FIFO has space for the character.
    while (MXC_UART_GetTXFIFOAvailable(uart) < 1) {}
1001213a:	4620      	mov	r0, r4
1001213c:	f7ff ffea 	bl	10012114 <MXC_UART_GetTXFIFOAvailable>
10012140:	2800      	cmp	r0, #0
10012142:	d0fa      	beq.n	1001213a <MXC_UART_Common_WriteCharacter+0x6>

    // Write the character using the non-blocking function.
    return MXC_UART_WriteCharacterRaw(uart, character);
10012144:	4629      	mov	r1, r5
10012146:	4620      	mov	r0, r4
}
10012148:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    return MXC_UART_WriteCharacterRaw(uart, character);
1001214c:	f7ff bfda 	b.w	10012104 <MXC_UART_WriteCharacterRaw>

10012150 <MXC_UART_RevB_Init>:
/* ************************************************************************* */
int MXC_UART_RevB_Init(mxc_uart_revb_regs_t *uart, unsigned int baud, mxc_uart_revb_clock_t clock)
{
    int err;

    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
10012150:	4b1a      	ldr	r3, [pc, #104]	@ (100121bc <MXC_UART_RevB_Init+0x6c>)
10012152:	4298      	cmp	r0, r3
{
10012154:	b570      	push	{r4, r5, r6, lr}
10012156:	4604      	mov	r4, r0
10012158:	460d      	mov	r5, r1
1001215a:	4616      	mov	r6, r2
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
1001215c:	d00b      	beq.n	10012176 <MXC_UART_RevB_Init+0x26>
1001215e:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10012162:	4298      	cmp	r0, r3
10012164:	d007      	beq.n	10012176 <MXC_UART_RevB_Init+0x26>
10012166:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
1001216a:	4298      	cmp	r0, r3
1001216c:	d003      	beq.n	10012176 <MXC_UART_RevB_Init+0x26>
1001216e:	f503 3375 	add.w	r3, r3, #250880	@ 0x3d400
10012172:	4298      	cmp	r0, r3
10012174:	d11f      	bne.n	100121b6 <MXC_UART_RevB_Init+0x66>
        return E_BAD_PARAM;
    }

    // Initialize UART
    if ((err = MXC_UART_SetRXThreshold((mxc_uart_regs_t *)uart, 1)) !=
10012176:	2101      	movs	r1, #1
10012178:	4620      	mov	r0, r4
1001217a:	f7ff ffcd 	bl	10012118 <MXC_UART_SetRXThreshold>
1001217e:	b100      	cbz	r0, 10012182 <MXC_UART_RevB_Init+0x32>
        E_NO_ERROR) {
        return err;
    }

    return E_NO_ERROR;
}
10012180:	bd70      	pop	{r4, r5, r6, pc}
    if ((err = MXC_UART_SetDataSize((mxc_uart_regs_t *)uart, 8)) !=
10012182:	2108      	movs	r1, #8
10012184:	4620      	mov	r0, r4
10012186:	f7ff ffb5 	bl	100120f4 <MXC_UART_SetDataSize>
1001218a:	2800      	cmp	r0, #0
1001218c:	d1f8      	bne.n	10012180 <MXC_UART_RevB_Init+0x30>
    if ((err = MXC_UART_SetParity((mxc_uart_regs_t *)uart, MXC_UART_PARITY_DISABLE)) !=
1001218e:	4601      	mov	r1, r0
10012190:	4620      	mov	r0, r4
10012192:	f7ff ffb3 	bl	100120fc <MXC_UART_SetParity>
10012196:	2800      	cmp	r0, #0
10012198:	d1f2      	bne.n	10012180 <MXC_UART_RevB_Init+0x30>
    if ((err = MXC_UART_SetStopBits((mxc_uart_regs_t *)uart, MXC_UART_STOP_1)) != E_NO_ERROR) {
1001219a:	4601      	mov	r1, r0
1001219c:	4620      	mov	r0, r4
1001219e:	f7ff ffab 	bl	100120f8 <MXC_UART_SetStopBits>
100121a2:	2800      	cmp	r0, #0
100121a4:	d1ec      	bne.n	10012180 <MXC_UART_RevB_Init+0x30>
    if ((err = MXC_UART_SetFrequency((mxc_uart_regs_t *)uart, baud, (mxc_uart_clock_t)clock)) <
100121a6:	4632      	mov	r2, r6
100121a8:	4629      	mov	r1, r5
100121aa:	4620      	mov	r0, r4
100121ac:	f7ff ff10 	bl	10011fd0 <MXC_UART_SetFrequency>
100121b0:	ea00 70e0 	and.w	r0, r0, r0, asr #31
}
100121b4:	bd70      	pop	{r4, r5, r6, pc}
        return E_BAD_PARAM;
100121b6:	f06f 0002 	mvn.w	r0, #2
}
100121ba:	bd70      	pop	{r4, r5, r6, pc}
100121bc:	40042000 	.word	0x40042000

100121c0 <MXC_UART_RevB_SetFrequency>:

int MXC_UART_RevB_SetFrequency(mxc_uart_revb_regs_t *uart, unsigned int baud,
                               mxc_uart_revb_clock_t clock)
{
    unsigned clkDiv = 0, mod = 0;
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
100121c0:	4b22      	ldr	r3, [pc, #136]	@ (1001224c <MXC_UART_RevB_SetFrequency+0x8c>)
100121c2:	4298      	cmp	r0, r3
100121c4:	d00b      	beq.n	100121de <MXC_UART_RevB_SetFrequency+0x1e>
100121c6:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
100121ca:	4298      	cmp	r0, r3
100121cc:	d007      	beq.n	100121de <MXC_UART_RevB_SetFrequency+0x1e>
100121ce:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
100121d2:	4298      	cmp	r0, r3
100121d4:	d003      	beq.n	100121de <MXC_UART_RevB_SetFrequency+0x1e>
100121d6:	f503 3375 	add.w	r3, r3, #250880	@ 0x3d400
100121da:	4298      	cmp	r0, r3
100121dc:	d132      	bne.n	10012244 <MXC_UART_RevB_SetFrequency+0x84>
        return E_BAD_PARAM;
    }

    // OSR default value
    uart->osr = 5;
100121de:	2305      	movs	r3, #5

    switch (clock) {
100121e0:	2a01      	cmp	r2, #1
{
100121e2:	b410      	push	{r4}
    uart->osr = 5;
100121e4:	6143      	str	r3, [r0, #20]
    switch (clock) {
100121e6:	d023      	beq.n	10012230 <MXC_UART_RevB_SetFrequency+0x70>
100121e8:	2a02      	cmp	r2, #2
100121ea:	d014      	beq.n	10012216 <MXC_UART_RevB_SetFrequency+0x56>
100121ec:	b11a      	cbz	r2, 100121f6 <MXC_UART_RevB_SetFrequency+0x36>
    if (!clkDiv || mod > (baud / 2)) {
        clkDiv++;
    }
    uart->clkdiv = clkDiv;
    return MXC_UART_GetFrequency((mxc_uart_regs_t *)uart);
}
100121ee:	f06f 0002 	mvn.w	r0, #2
100121f2:	bc10      	pop	{r4}
100121f4:	4770      	bx	lr
        clkDiv = (PeripheralClock / baud);
100121f6:	4b16      	ldr	r3, [pc, #88]	@ (10012250 <MXC_UART_RevB_SetFrequency+0x90>)
100121f8:	681a      	ldr	r2, [r3, #0]
100121fa:	0852      	lsrs	r2, r2, #1
100121fc:	fbb2 f3f1 	udiv	r3, r2, r1
        mod = (PeripheralClock % baud);
10012200:	fb01 2213 	mls	r2, r1, r3, r2
    if (!clkDiv || mod > (baud / 2)) {
10012204:	b113      	cbz	r3, 1001220c <MXC_UART_RevB_SetFrequency+0x4c>
10012206:	ebb2 0f51 	cmp.w	r2, r1, lsr #1
1001220a:	d900      	bls.n	1001220e <MXC_UART_RevB_SetFrequency+0x4e>
        clkDiv++;
1001220c:	3301      	adds	r3, #1
}
1001220e:	bc10      	pop	{r4}
    uart->clkdiv = clkDiv;
10012210:	6103      	str	r3, [r0, #16]
    return MXC_UART_GetFrequency((mxc_uart_regs_t *)uart);
10012212:	f7ff bf45 	b.w	100120a0 <MXC_UART_GetFrequency>
        uart->ctrl |= MXC_S_UART_REVB_CTRL_BCLKSRC_CLK2;
10012216:	6804      	ldr	r4, [r0, #0]
        clkDiv = (IBRO_FREQ / baud);
10012218:	f44f 03e1 	mov.w	r3, #7372800	@ 0x708000
        uart->ctrl |= MXC_S_UART_REVB_CTRL_BCLKSRC_CLK2;
1001221c:	f444 3400 	orr.w	r4, r4, #131072	@ 0x20000
        clkDiv = (IBRO_FREQ / baud);
10012220:	fbb3 f3f1 	udiv	r3, r3, r1
        mod = (IBRO_FREQ % baud);
10012224:	fb01 f203 	mul.w	r2, r1, r3
10012228:	f5c2 02e1 	rsb	r2, r2, #7372800	@ 0x708000
        uart->ctrl |= MXC_S_UART_REVB_CTRL_BCLKSRC_CLK2;
1001222c:	6004      	str	r4, [r0, #0]
        break;
1001222e:	e7e9      	b.n	10012204 <MXC_UART_RevB_SetFrequency+0x44>
        uart->ctrl |= MXC_S_UART_REVB_CTRL_BCLKSRC_EXTERNAL_CLOCK;
10012230:	6804      	ldr	r4, [r0, #0]
        clkDiv = UART_EXTCLK_FREQ / baud;
10012232:	4a08      	ldr	r2, [pc, #32]	@ (10012254 <MXC_UART_RevB_SetFrequency+0x94>)
10012234:	fbb2 f3f1 	udiv	r3, r2, r1
        uart->ctrl |= MXC_S_UART_REVB_CTRL_BCLKSRC_EXTERNAL_CLOCK;
10012238:	f444 3480 	orr.w	r4, r4, #65536	@ 0x10000
1001223c:	6004      	str	r4, [r0, #0]
        mod = UART_EXTCLK_FREQ % baud;
1001223e:	fb01 2213 	mls	r2, r1, r3, r2
        break;
10012242:	e7df      	b.n	10012204 <MXC_UART_RevB_SetFrequency+0x44>
}
10012244:	f06f 0002 	mvn.w	r0, #2
10012248:	4770      	bx	lr
1001224a:	bf00      	nop
1001224c:	40042000 	.word	0x40042000
10012250:	20001950 	.word	0x20001950
10012254:	047868c0 	.word	0x047868c0

10012258 <MXC_UART_RevB_GetFrequency>:

int MXC_UART_RevB_GetFrequency(mxc_uart_revb_regs_t *uart)
{
    int periphClock = 0;

    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
10012258:	4b1c      	ldr	r3, [pc, #112]	@ (100122cc <MXC_UART_RevB_GetFrequency+0x74>)
1001225a:	4298      	cmp	r0, r3
1001225c:	d00b      	beq.n	10012276 <MXC_UART_RevB_GetFrequency+0x1e>
1001225e:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10012262:	4298      	cmp	r0, r3
10012264:	d007      	beq.n	10012276 <MXC_UART_RevB_GetFrequency+0x1e>
10012266:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
1001226a:	4298      	cmp	r0, r3
1001226c:	d003      	beq.n	10012276 <MXC_UART_RevB_GetFrequency+0x1e>
1001226e:	f503 3375 	add.w	r3, r3, #250880	@ 0x3d400
10012272:	4298      	cmp	r0, r3
10012274:	d122      	bne.n	100122bc <MXC_UART_RevB_GetFrequency+0x64>
        return E_BAD_PARAM;
    }

    if ((uart->ctrl & MXC_F_UART_REVB_CTRL_BCLKSRC) ==
10012276:	6803      	ldr	r3, [r0, #0]
10012278:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
1001227c:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
10012280:	d017      	beq.n	100122b2 <MXC_UART_RevB_GetFrequency+0x5a>
        MXC_S_UART_REVB_CTRL_BCLKSRC_EXTERNAL_CLOCK) {
        periphClock = UART_EXTCLK_FREQ;
    } else if ((uart->ctrl & MXC_F_UART_REVB_CTRL_BCLKSRC) ==
10012282:	6803      	ldr	r3, [r0, #0]
10012284:	f413 3f40 	tst.w	r3, #196608	@ 0x30000
10012288:	d00c      	beq.n	100122a4 <MXC_UART_RevB_GetFrequency+0x4c>
               MXC_S_UART_REVB_CTRL_BCLKSRC_PERIPHERAL_CLOCK) {
        periphClock = PeripheralClock;
    } else if ((uart->ctrl & MXC_F_UART_REVB_CTRL_BCLKSRC) == MXC_S_UART_REVB_CTRL_BCLKSRC_CLK2) {
1001228a:	6803      	ldr	r3, [r0, #0]
1001228c:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
10012290:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
10012294:	bf08      	it	eq
10012296:	f44f 03e1 	moveq.w	r3, #7372800	@ 0x708000
1001229a:	d112      	bne.n	100122c2 <MXC_UART_RevB_GetFrequency+0x6a>
#endif
    } else {
        return E_BAD_PARAM;
    }

    return (periphClock / uart->clkdiv);
1001229c:	6900      	ldr	r0, [r0, #16]
1001229e:	fbb3 f0f0 	udiv	r0, r3, r0
100122a2:	4770      	bx	lr
        periphClock = PeripheralClock;
100122a4:	4b0a      	ldr	r3, [pc, #40]	@ (100122d0 <MXC_UART_RevB_GetFrequency+0x78>)
    return (periphClock / uart->clkdiv);
100122a6:	6900      	ldr	r0, [r0, #16]
        periphClock = PeripheralClock;
100122a8:	681b      	ldr	r3, [r3, #0]
100122aa:	085b      	lsrs	r3, r3, #1
    return (periphClock / uart->clkdiv);
100122ac:	fbb3 f0f0 	udiv	r0, r3, r0
100122b0:	4770      	bx	lr
100122b2:	4b08      	ldr	r3, [pc, #32]	@ (100122d4 <MXC_UART_RevB_GetFrequency+0x7c>)
100122b4:	6900      	ldr	r0, [r0, #16]
100122b6:	fbb3 f0f0 	udiv	r0, r3, r0
100122ba:	4770      	bx	lr
        return E_BAD_PARAM;
100122bc:	f06f 0002 	mvn.w	r0, #2
}
100122c0:	4770      	bx	lr
    } else if ((uart->ctrl & MXC_F_UART_REVB_CTRL_BCLKSRC) == MXC_S_UART_REVB_CTRL_BCLKSRC_CLK3) {
100122c2:	6803      	ldr	r3, [r0, #0]
        return E_BAD_PARAM;
100122c4:	f06f 0002 	mvn.w	r0, #2
        return E_BAD_PARAM;
100122c8:	4770      	bx	lr
100122ca:	bf00      	nop
100122cc:	40042000 	.word	0x40042000
100122d0:	20001950 	.word	0x20001950
100122d4:	047868c0 	.word	0x047868c0

100122d8 <MXC_UART_RevB_SetDataSize>:

int MXC_UART_RevB_SetDataSize(mxc_uart_revb_regs_t *uart, int dataSize)
{
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
100122d8:	4a0e      	ldr	r2, [pc, #56]	@ (10012314 <MXC_UART_RevB_SetDataSize+0x3c>)
100122da:	4290      	cmp	r0, r2
{
100122dc:	4603      	mov	r3, r0
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
100122de:	d00b      	beq.n	100122f8 <MXC_UART_RevB_SetDataSize+0x20>
100122e0:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
100122e4:	4290      	cmp	r0, r2
100122e6:	d007      	beq.n	100122f8 <MXC_UART_RevB_SetDataSize+0x20>
100122e8:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
100122ec:	4290      	cmp	r0, r2
100122ee:	d003      	beq.n	100122f8 <MXC_UART_RevB_SetDataSize+0x20>
100122f0:	f502 3275 	add.w	r2, r2, #250880	@ 0x3d400
100122f4:	4290      	cmp	r0, r2
100122f6:	d10a      	bne.n	1001230e <MXC_UART_RevB_SetDataSize+0x36>
        return E_BAD_PARAM;
    }

    if (dataSize < 5 || dataSize > 8) {
100122f8:	3905      	subs	r1, #5
100122fa:	2903      	cmp	r1, #3
100122fc:	d807      	bhi.n	1001230e <MXC_UART_RevB_SetDataSize+0x36>
        return E_BAD_PARAM;
    }

    dataSize = (dataSize - 5) << MXC_F_UART_REVB_CTRL_CHAR_SIZE_POS;

    MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_CHAR_SIZE, dataSize);
100122fe:	681a      	ldr	r2, [r3, #0]
10012300:	f422 6240 	bic.w	r2, r2, #3072	@ 0xc00
10012304:	ea42 2281 	orr.w	r2, r2, r1, lsl #10

    return E_NO_ERROR;
10012308:	2000      	movs	r0, #0
    MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_CHAR_SIZE, dataSize);
1001230a:	601a      	str	r2, [r3, #0]
    return E_NO_ERROR;
1001230c:	4770      	bx	lr
        return E_BAD_PARAM;
1001230e:	f06f 0002 	mvn.w	r0, #2
}
10012312:	4770      	bx	lr
10012314:	40042000 	.word	0x40042000

10012318 <MXC_UART_RevB_SetStopBits>:

int MXC_UART_RevB_SetStopBits(mxc_uart_revb_regs_t *uart, mxc_uart_stop_t stopBits)
{
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
10012318:	4b10      	ldr	r3, [pc, #64]	@ (1001235c <MXC_UART_RevB_SetStopBits+0x44>)
1001231a:	4298      	cmp	r0, r3
1001231c:	d00b      	beq.n	10012336 <MXC_UART_RevB_SetStopBits+0x1e>
1001231e:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10012322:	4298      	cmp	r0, r3
10012324:	d007      	beq.n	10012336 <MXC_UART_RevB_SetStopBits+0x1e>
10012326:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
1001232a:	4298      	cmp	r0, r3
1001232c:	d003      	beq.n	10012336 <MXC_UART_RevB_SetStopBits+0x1e>
1001232e:	f503 3375 	add.w	r3, r3, #250880	@ 0x3d400
10012332:	4298      	cmp	r0, r3
10012334:	d108      	bne.n	10012348 <MXC_UART_RevB_SetStopBits+0x30>
        return E_BAD_PARAM;
    }

    switch (stopBits) {
10012336:	b151      	cbz	r1, 1001234e <MXC_UART_RevB_SetStopBits+0x36>
10012338:	2901      	cmp	r1, #1
1001233a:	d105      	bne.n	10012348 <MXC_UART_RevB_SetStopBits+0x30>
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_STOPBITS,
                     0 << MXC_F_UART_REVB_CTRL_STOPBITS_POS);
        break;

    case MXC_UART_STOP_2:
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_STOPBITS,
1001233c:	6803      	ldr	r3, [r0, #0]
1001233e:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
10012342:	6003      	str	r3, [r0, #0]
    default:
        return E_BAD_PARAM;
        break;
    }

    return E_NO_ERROR;
10012344:	2000      	movs	r0, #0
10012346:	4770      	bx	lr
10012348:	f06f 0002 	mvn.w	r0, #2
}
1001234c:	4770      	bx	lr
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_STOPBITS,
1001234e:	6803      	ldr	r3, [r0, #0]
10012350:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
10012354:	6003      	str	r3, [r0, #0]
    return E_NO_ERROR;
10012356:	2000      	movs	r0, #0
10012358:	4770      	bx	lr
1001235a:	bf00      	nop
1001235c:	40042000 	.word	0x40042000

10012360 <MXC_UART_RevB_SetParity>:

int MXC_UART_RevB_SetParity(mxc_uart_revb_regs_t *uart, mxc_uart_parity_t parity)
{
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
10012360:	4b29      	ldr	r3, [pc, #164]	@ (10012408 <MXC_UART_RevB_SetParity+0xa8>)
10012362:	4298      	cmp	r0, r3
10012364:	d00b      	beq.n	1001237e <MXC_UART_RevB_SetParity+0x1e>
10012366:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
1001236a:	4298      	cmp	r0, r3
1001236c:	d007      	beq.n	1001237e <MXC_UART_RevB_SetParity+0x1e>
1001236e:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10012372:	4298      	cmp	r0, r3
10012374:	d003      	beq.n	1001237e <MXC_UART_RevB_SetParity+0x1e>
10012376:	f503 3375 	add.w	r3, r3, #250880	@ 0x3d400
1001237a:	4298      	cmp	r0, r3
1001237c:	d141      	bne.n	10012402 <MXC_UART_RevB_SetParity+0xa2>
        return E_BAD_PARAM;
    }

    switch (parity) {
1001237e:	2904      	cmp	r1, #4
10012380:	d83f      	bhi.n	10012402 <MXC_UART_RevB_SetParity+0xa2>
10012382:	e8df f001 	tbb	[pc, r1]
10012386:	1711      	.short	0x1711
10012388:	3124      	.short	0x3124
1001238a:	03          	.byte	0x03
1001238b:	00          	.byte	0x00
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EO, 1 << MXC_F_UART_REVB_CTRL_PAR_EO_POS);
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_MD, 0 << MXC_F_UART_REVB_CTRL_PAR_MD_POS);
        break;

    case MXC_UART_PARITY_ODD_1:
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EN, 1 << MXC_F_UART_REVB_CTRL_PAR_EN_POS);
1001238c:	6803      	ldr	r3, [r0, #0]
1001238e:	f043 0310 	orr.w	r3, r3, #16
10012392:	6003      	str	r3, [r0, #0]
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EO, 1 << MXC_F_UART_REVB_CTRL_PAR_EO_POS);
10012394:	6803      	ldr	r3, [r0, #0]
10012396:	f043 0320 	orr.w	r3, r3, #32
1001239a:	6003      	str	r3, [r0, #0]
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_MD, 1 << MXC_F_UART_REVB_CTRL_PAR_MD_POS);
1001239c:	6803      	ldr	r3, [r0, #0]
1001239e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
100123a2:	6003      	str	r3, [r0, #0]
    default:
        return E_BAD_PARAM;
        break;
    }

    return E_NO_ERROR;
100123a4:	2000      	movs	r0, #0
100123a6:	4770      	bx	lr
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EN, 0 << MXC_F_UART_REVB_CTRL_PAR_EN_POS);
100123a8:	6803      	ldr	r3, [r0, #0]
100123aa:	f023 0310 	bic.w	r3, r3, #16
100123ae:	6003      	str	r3, [r0, #0]
    return E_NO_ERROR;
100123b0:	2000      	movs	r0, #0
100123b2:	4770      	bx	lr
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EN, 1 << MXC_F_UART_REVB_CTRL_PAR_EN_POS);
100123b4:	6803      	ldr	r3, [r0, #0]
100123b6:	f043 0310 	orr.w	r3, r3, #16
100123ba:	6003      	str	r3, [r0, #0]
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EO, 0 << MXC_F_UART_REVB_CTRL_PAR_EO_POS);
100123bc:	6803      	ldr	r3, [r0, #0]
100123be:	f023 0320 	bic.w	r3, r3, #32
100123c2:	6003      	str	r3, [r0, #0]
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_MD, 0 << MXC_F_UART_REVB_CTRL_PAR_MD_POS);
100123c4:	6803      	ldr	r3, [r0, #0]
100123c6:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
100123ca:	6003      	str	r3, [r0, #0]
        break;
100123cc:	e7ea      	b.n	100123a4 <MXC_UART_RevB_SetParity+0x44>
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EN, 1 << MXC_F_UART_REVB_CTRL_PAR_EN_POS);
100123ce:	6803      	ldr	r3, [r0, #0]
100123d0:	f043 0310 	orr.w	r3, r3, #16
100123d4:	6003      	str	r3, [r0, #0]
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EO, 0 << MXC_F_UART_REVB_CTRL_PAR_EO_POS);
100123d6:	6803      	ldr	r3, [r0, #0]
100123d8:	f023 0320 	bic.w	r3, r3, #32
100123dc:	6003      	str	r3, [r0, #0]
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_MD, 1 << MXC_F_UART_REVB_CTRL_PAR_MD_POS);
100123de:	6803      	ldr	r3, [r0, #0]
100123e0:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
100123e4:	6003      	str	r3, [r0, #0]
        break;
100123e6:	e7dd      	b.n	100123a4 <MXC_UART_RevB_SetParity+0x44>
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EN, 1 << MXC_F_UART_REVB_CTRL_PAR_EN_POS);
100123e8:	6803      	ldr	r3, [r0, #0]
100123ea:	f043 0310 	orr.w	r3, r3, #16
100123ee:	6003      	str	r3, [r0, #0]
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EO, 1 << MXC_F_UART_REVB_CTRL_PAR_EO_POS);
100123f0:	6803      	ldr	r3, [r0, #0]
100123f2:	f043 0320 	orr.w	r3, r3, #32
100123f6:	6003      	str	r3, [r0, #0]
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_MD, 0 << MXC_F_UART_REVB_CTRL_PAR_MD_POS);
100123f8:	6803      	ldr	r3, [r0, #0]
100123fa:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
100123fe:	6003      	str	r3, [r0, #0]
        break;
10012400:	e7d0      	b.n	100123a4 <MXC_UART_RevB_SetParity+0x44>
    switch (parity) {
10012402:	f06f 0002 	mvn.w	r0, #2
}
10012406:	4770      	bx	lr
10012408:	40042000 	.word	0x40042000

1001240c <MXC_UART_RevB_ReadCharacterRaw>:
    return E_NO_ERROR;
}

int MXC_UART_RevB_ReadCharacterRaw(mxc_uart_revb_regs_t *uart)
{
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
1001240c:	4b0c      	ldr	r3, [pc, #48]	@ (10012440 <MXC_UART_RevB_ReadCharacterRaw+0x34>)
1001240e:	4298      	cmp	r0, r3
10012410:	d00b      	beq.n	1001242a <MXC_UART_RevB_ReadCharacterRaw+0x1e>
10012412:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10012416:	4298      	cmp	r0, r3
10012418:	d007      	beq.n	1001242a <MXC_UART_RevB_ReadCharacterRaw+0x1e>
1001241a:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
1001241e:	4298      	cmp	r0, r3
10012420:	d003      	beq.n	1001242a <MXC_UART_RevB_ReadCharacterRaw+0x1e>
10012422:	f503 3375 	add.w	r3, r3, #250880	@ 0x3d400
10012426:	4298      	cmp	r0, r3
10012428:	d104      	bne.n	10012434 <MXC_UART_RevB_ReadCharacterRaw+0x28>
        return E_BAD_PARAM;
    }

    if (uart->status & MXC_F_UART_REVB_STATUS_RX_EM) {
1001242a:	6843      	ldr	r3, [r0, #4]
1001242c:	06db      	lsls	r3, r3, #27
1001242e:	d404      	bmi.n	1001243a <MXC_UART_RevB_ReadCharacterRaw+0x2e>
        return E_UNDERFLOW;
    }

    return uart->fifo;
10012430:	6a00      	ldr	r0, [r0, #32]
10012432:	4770      	bx	lr
        return E_BAD_PARAM;
10012434:	f06f 0002 	mvn.w	r0, #2
10012438:	4770      	bx	lr
        return E_UNDERFLOW;
1001243a:	f06f 000c 	mvn.w	r0, #12
}
1001243e:	4770      	bx	lr
10012440:	40042000 	.word	0x40042000

10012444 <MXC_UART_RevB_WriteCharacterRaw>:

int MXC_UART_RevB_WriteCharacterRaw(mxc_uart_revb_regs_t *uart, uint8_t character)
{
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
10012444:	4a0d      	ldr	r2, [pc, #52]	@ (1001247c <MXC_UART_RevB_WriteCharacterRaw+0x38>)
10012446:	4290      	cmp	r0, r2
{
10012448:	4603      	mov	r3, r0
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
1001244a:	d00b      	beq.n	10012464 <MXC_UART_RevB_WriteCharacterRaw+0x20>
1001244c:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
10012450:	4290      	cmp	r0, r2
10012452:	d007      	beq.n	10012464 <MXC_UART_RevB_WriteCharacterRaw+0x20>
10012454:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
10012458:	4290      	cmp	r0, r2
1001245a:	d003      	beq.n	10012464 <MXC_UART_RevB_WriteCharacterRaw+0x20>
1001245c:	f502 3275 	add.w	r2, r2, #250880	@ 0x3d400
10012460:	4290      	cmp	r0, r2
10012462:	d105      	bne.n	10012470 <MXC_UART_RevB_WriteCharacterRaw+0x2c>
        return E_BAD_PARAM;
    }

    // Require the TX FIFO to be empty, so that we write out the expected character
    // Return error if the FIFO is full
    if (uart->status & MXC_F_UART_REVB_STATUS_TX_FULL) {
10012464:	6858      	ldr	r0, [r3, #4]
10012466:	f010 0080 	ands.w	r0, r0, #128	@ 0x80
1001246a:	d104      	bne.n	10012476 <MXC_UART_RevB_WriteCharacterRaw+0x32>
        return E_OVERFLOW;
    }

    uart->fifo = character;
1001246c:	6219      	str	r1, [r3, #32]

    return E_NO_ERROR;
1001246e:	4770      	bx	lr
        return E_BAD_PARAM;
10012470:	f06f 0002 	mvn.w	r0, #2
10012474:	4770      	bx	lr
        return E_OVERFLOW;
10012476:	f06f 000b 	mvn.w	r0, #11
}
1001247a:	4770      	bx	lr
1001247c:	40042000 	.word	0x40042000

10012480 <MXC_UART_RevB_GetRXFIFOAvailable>:
    return read;
}

unsigned int MXC_UART_RevB_GetRXFIFOAvailable(mxc_uart_revb_regs_t *uart)
{
    return (uart->status & MXC_F_UART_REVB_STATUS_RX_LVL) >> MXC_F_UART_REVB_STATUS_RX_LVL_POS;
10012480:	6840      	ldr	r0, [r0, #4]
}
10012482:	f3c0 2003 	ubfx	r0, r0, #8, #4
10012486:	4770      	bx	lr

10012488 <MXC_UART_RevB_GetTXFIFOAvailable>:
    return written;
}

unsigned int MXC_UART_RevB_GetTXFIFOAvailable(mxc_uart_revb_regs_t *uart)
{
    int txCnt = (uart->status & MXC_F_UART_REVB_STATUS_TX_LVL) >> MXC_F_UART_REVB_STATUS_TX_LVL_POS;
10012488:	6840      	ldr	r0, [r0, #4]
1001248a:	f3c0 3003 	ubfx	r0, r0, #12, #4
    return MXC_UART_FIFO_DEPTH - txCnt;
}
1001248e:	f1c0 0008 	rsb	r0, r0, #8
10012492:	4770      	bx	lr

10012494 <MXC_UART_RevB_SetRXThreshold>:
    return E_NO_ERROR;
}

int MXC_UART_RevB_SetRXThreshold(mxc_uart_revb_regs_t *uart, unsigned int numBytes)
{
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
10012494:	4a0e      	ldr	r2, [pc, #56]	@ (100124d0 <MXC_UART_RevB_SetRXThreshold+0x3c>)
10012496:	4290      	cmp	r0, r2
{
10012498:	4603      	mov	r3, r0
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
1001249a:	d00b      	beq.n	100124b4 <MXC_UART_RevB_SetRXThreshold+0x20>
1001249c:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
100124a0:	4290      	cmp	r0, r2
100124a2:	d007      	beq.n	100124b4 <MXC_UART_RevB_SetRXThreshold+0x20>
100124a4:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
100124a8:	4290      	cmp	r0, r2
100124aa:	d003      	beq.n	100124b4 <MXC_UART_RevB_SetRXThreshold+0x20>
100124ac:	f502 3275 	add.w	r2, r2, #250880	@ 0x3d400
100124b0:	4290      	cmp	r0, r2
100124b2:	d109      	bne.n	100124c8 <MXC_UART_RevB_SetRXThreshold+0x34>
        return E_BAD_PARAM;
    }

    if (numBytes < 1 || numBytes > MXC_UART_FIFO_DEPTH) {
100124b4:	1e4a      	subs	r2, r1, #1
100124b6:	2a07      	cmp	r2, #7
100124b8:	d806      	bhi.n	100124c8 <MXC_UART_RevB_SetRXThreshold+0x34>
        return E_BAD_PARAM;
    }

    numBytes <<= MXC_F_UART_REVB_CTRL_RX_THD_VAL_POS;
    MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_RX_THD_VAL, numBytes);
100124ba:	681a      	ldr	r2, [r3, #0]
100124bc:	f022 020f 	bic.w	r2, r2, #15
100124c0:	4311      	orrs	r1, r2

    return E_NO_ERROR;
100124c2:	2000      	movs	r0, #0
    MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_RX_THD_VAL, numBytes);
100124c4:	6019      	str	r1, [r3, #0]
    return E_NO_ERROR;
100124c6:	4770      	bx	lr
        return E_BAD_PARAM;
100124c8:	f06f 0002 	mvn.w	r0, #2
}
100124cc:	4770      	bx	lr
100124ce:	bf00      	nop
100124d0:	40042000 	.word	0x40042000

100124d4 <MXC_GPIO_Common_Init>:
static void *cbparam[MXC_CFG_GPIO_INSTANCES][MXC_CFG_GPIO_PINS_PORT];
static uint8_t initialized = 0;

/* **** Functions **** */
int MXC_GPIO_Common_Init(uint32_t portmask)
{
100124d4:	b510      	push	{r4, lr}
    if (!initialized) {
100124d6:	4c06      	ldr	r4, [pc, #24]	@ (100124f0 <MXC_GPIO_Common_Init+0x1c>)
100124d8:	7821      	ldrb	r1, [r4, #0]
100124da:	b931      	cbnz	r1, 100124ea <MXC_GPIO_Common_Init+0x16>
        int i, j;

        for (i = 0; i < MXC_CFG_GPIO_INSTANCES; i++) {
            // Initialize call back arrays
            for (j = 0; j < MXC_CFG_GPIO_PINS_PORT; j++) {
                callback[i][j] = NULL;
100124dc:	4805      	ldr	r0, [pc, #20]	@ (100124f4 <MXC_GPIO_Common_Init+0x20>)
100124de:	f44f 7200 	mov.w	r2, #512	@ 0x200
100124e2:	f002 fa11 	bl	10014908 <memset>
            }
        }

        initialized = 1;
100124e6:	2301      	movs	r3, #1
100124e8:	7023      	strb	r3, [r4, #0]
    }

    return E_NO_ERROR;
}
100124ea:	2000      	movs	r0, #0
100124ec:	bd10      	pop	{r4, pc}
100124ee:	bf00      	nop
100124f0:	20001238 	.word	0x20001238
100124f4:	2000143c 	.word	0x2000143c

100124f8 <MXC_GPIO_Common_Handler>:
void MXC_GPIO_Common_Handler(unsigned int port)
{
    uint32_t stat;
    unsigned int pin;

    MXC_ASSERT(port < MXC_CFG_GPIO_INSTANCES);
100124f8:	2803      	cmp	r0, #3
{
100124fa:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
100124fc:	4607      	mov	r7, r0
    MXC_ASSERT(port < MXC_CFG_GPIO_INSTANCES);
100124fe:	d81d      	bhi.n	1001253c <MXC_GPIO_Common_Handler+0x44>

    mxc_gpio_regs_t *gpio = MXC_GPIO_GET_GPIO(port);
10012500:	bb18      	cbnz	r0, 1001254a <MXC_GPIO_Common_Handler+0x52>
10012502:	4d14      	ldr	r5, [pc, #80]	@ (10012554 <MXC_GPIO_Common_Handler+0x5c>)

    stat = MXC_GPIO_GetFlags(gpio);
10012504:	4628      	mov	r0, r5
10012506:	f7ff f949 	bl	1001179c <MXC_GPIO_GetFlags>
1001250a:	4604      	mov	r4, r0
    MXC_GPIO_ClearFlags(gpio, stat);
1001250c:	4601      	mov	r1, r0
1001250e:	4628      	mov	r0, r5
10012510:	f7ff f938 	bl	10011784 <MXC_GPIO_ClearFlags>

    pin = 0;

    while (stat) {
10012514:	b18c      	cbz	r4, 1001253a <MXC_GPIO_Common_Handler+0x42>
10012516:	4e10      	ldr	r6, [pc, #64]	@ (10012558 <MXC_GPIO_Common_Handler+0x60>)
10012518:	4d10      	ldr	r5, [pc, #64]	@ (1001255c <MXC_GPIO_Common_Handler+0x64>)
1001251a:	eb06 16c7 	add.w	r6, r6, r7, lsl #7
1001251e:	eb05 15c7 	add.w	r5, r5, r7, lsl #7
        if (stat & 1) {
10012522:	07e3      	lsls	r3, r4, #31
10012524:	d503      	bpl.n	1001252e <MXC_GPIO_Common_Handler+0x36>
            if (callback[port][pin]) {
10012526:	682b      	ldr	r3, [r5, #0]
10012528:	b10b      	cbz	r3, 1001252e <MXC_GPIO_Common_Handler+0x36>
                callback[port][pin](cbparam[port][pin]);
1001252a:	6830      	ldr	r0, [r6, #0]
1001252c:	4798      	blx	r3
    while (stat) {
1001252e:	0864      	lsrs	r4, r4, #1
10012530:	f106 0604 	add.w	r6, r6, #4
10012534:	f105 0504 	add.w	r5, r5, #4
10012538:	d1f3      	bne.n	10012522 <MXC_GPIO_Common_Handler+0x2a>
        }

        pin++;
        stat >>= 1;
    }
}
1001253a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    MXC_ASSERT(port < MXC_CFG_GPIO_INSTANCES);
1001253c:	4908      	ldr	r1, [pc, #32]	@ (10012560 <MXC_GPIO_Common_Handler+0x68>)
1001253e:	4809      	ldr	r0, [pc, #36]	@ (10012564 <MXC_GPIO_Common_Handler+0x6c>)
10012540:	225a      	movs	r2, #90	@ 0x5a
10012542:	f7fe fb99 	bl	10010c78 <mxc_assert>
10012546:	2500      	movs	r5, #0
10012548:	e7dc      	b.n	10012504 <MXC_GPIO_Common_Handler+0xc>
1001254a:	4b07      	ldr	r3, [pc, #28]	@ (10012568 <MXC_GPIO_Common_Handler+0x70>)
1001254c:	1e42      	subs	r2, r0, #1
1001254e:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
10012552:	e7d7      	b.n	10012504 <MXC_GPIO_Common_Handler+0xc>
10012554:	40008000 	.word	0x40008000
10012558:	2000123c 	.word	0x2000123c
1001255c:	2000143c 	.word	0x2000143c
10012560:	1001d8f4 	.word	0x1001d8f4
10012564:	1001d944 	.word	0x1001d944
10012568:	1001d964 	.word	0x1001d964

1001256c <strncpy>:
1001256c:	ea40 0301 	orr.w	r3, r0, r1
10012570:	079b      	lsls	r3, r3, #30
10012572:	b510      	push	{r4, lr}
10012574:	d101      	bne.n	1001257a <strncpy+0xe>
10012576:	2a03      	cmp	r2, #3
10012578:	d817      	bhi.n	100125aa <strncpy+0x3e>
1001257a:	4684      	mov	ip, r0
1001257c:	f101 3eff 	add.w	lr, r1, #4294967295	@ 0xffffffff
10012580:	e007      	b.n	10012592 <strncpy+0x26>
10012582:	f81e 1f01 	ldrb.w	r1, [lr, #1]!
10012586:	f803 1b01 	strb.w	r1, [r3], #1
1001258a:	1e54      	subs	r4, r2, #1
1001258c:	b129      	cbz	r1, 1001259a <strncpy+0x2e>
1001258e:	469c      	mov	ip, r3
10012590:	4622      	mov	r2, r4
10012592:	4663      	mov	r3, ip
10012594:	2a00      	cmp	r2, #0
10012596:	d1f4      	bne.n	10012582 <strncpy+0x16>
10012598:	bd10      	pop	{r4, pc}
1001259a:	4494      	add	ip, r2
1001259c:	2c00      	cmp	r4, #0
1001259e:	d0fb      	beq.n	10012598 <strncpy+0x2c>
100125a0:	f803 1b01 	strb.w	r1, [r3], #1
100125a4:	4563      	cmp	r3, ip
100125a6:	d1fb      	bne.n	100125a0 <strncpy+0x34>
100125a8:	bd10      	pop	{r4, pc}
100125aa:	468e      	mov	lr, r1
100125ac:	4684      	mov	ip, r0
100125ae:	f8de 4000 	ldr.w	r4, [lr]
100125b2:	f1a4 3301 	sub.w	r3, r4, #16843009	@ 0x1010101
100125b6:	ea23 0304 	bic.w	r3, r3, r4
100125ba:	f013 3f80 	tst.w	r3, #2155905152	@ 0x80808080
100125be:	4671      	mov	r1, lr
100125c0:	f10e 0e04 	add.w	lr, lr, #4
100125c4:	d1da      	bne.n	1001257c <strncpy+0x10>
100125c6:	3a04      	subs	r2, #4
100125c8:	2a03      	cmp	r2, #3
100125ca:	f84c 4b04 	str.w	r4, [ip], #4
100125ce:	d8ee      	bhi.n	100125ae <strncpy+0x42>
100125d0:	4671      	mov	r1, lr
100125d2:	e7d3      	b.n	1001257c <strncpy+0x10>

100125d4 <sprintf>:
100125d4:	b40e      	push	{r1, r2, r3}
100125d6:	b510      	push	{r4, lr}
100125d8:	b09d      	sub	sp, #116	@ 0x74
100125da:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
100125de:	ab1f      	add	r3, sp, #124	@ 0x7c
100125e0:	9104      	str	r1, [sp, #16]
100125e2:	9107      	str	r1, [sp, #28]
100125e4:	4909      	ldr	r1, [pc, #36]	@ (1001260c <sprintf+0x38>)
100125e6:	f853 2b04 	ldr.w	r2, [r3], #4
100125ea:	9002      	str	r0, [sp, #8]
100125ec:	9006      	str	r0, [sp, #24]
100125ee:	4c08      	ldr	r4, [pc, #32]	@ (10012610 <sprintf+0x3c>)
100125f0:	6808      	ldr	r0, [r1, #0]
100125f2:	9301      	str	r3, [sp, #4]
100125f4:	a902      	add	r1, sp, #8
100125f6:	9405      	str	r4, [sp, #20]
100125f8:	f000 f872 	bl	100126e0 <_svfprintf_r>
100125fc:	9b02      	ldr	r3, [sp, #8]
100125fe:	2200      	movs	r2, #0
10012600:	701a      	strb	r2, [r3, #0]
10012602:	b01d      	add	sp, #116	@ 0x74
10012604:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
10012608:	b003      	add	sp, #12
1001260a:	4770      	bx	lr
1001260c:	200005c8 	.word	0x200005c8
10012610:	ffff0208 	.word	0xffff0208

10012614 <__sread>:
10012614:	b510      	push	{r4, lr}
10012616:	460c      	mov	r4, r1
10012618:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
1001261c:	f004 f95c 	bl	100168d8 <_read_r>
10012620:	2800      	cmp	r0, #0
10012622:	db03      	blt.n	1001262c <__sread+0x18>
10012624:	6d23      	ldr	r3, [r4, #80]	@ 0x50
10012626:	4403      	add	r3, r0
10012628:	6523      	str	r3, [r4, #80]	@ 0x50
1001262a:	bd10      	pop	{r4, pc}
1001262c:	89a3      	ldrh	r3, [r4, #12]
1001262e:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
10012632:	81a3      	strh	r3, [r4, #12]
10012634:	bd10      	pop	{r4, pc}
10012636:	bf00      	nop

10012638 <__swrite>:
10012638:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
1001263c:	460c      	mov	r4, r1
1001263e:	f9b1 100c 	ldrsh.w	r1, [r1, #12]
10012642:	461f      	mov	r7, r3
10012644:	05cb      	lsls	r3, r1, #23
10012646:	4605      	mov	r5, r0
10012648:	4616      	mov	r6, r2
1001264a:	d40b      	bmi.n	10012664 <__swrite+0x2c>
1001264c:	f421 5180 	bic.w	r1, r1, #4096	@ 0x1000
10012650:	81a1      	strh	r1, [r4, #12]
10012652:	463b      	mov	r3, r7
10012654:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
10012658:	4632      	mov	r2, r6
1001265a:	4628      	mov	r0, r5
1001265c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
10012660:	f000 b820 	b.w	100126a4 <_write_r>
10012664:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
10012668:	2302      	movs	r3, #2
1001266a:	2200      	movs	r2, #0
1001266c:	f004 f91e 	bl	100168ac <_lseek_r>
10012670:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
10012674:	e7ea      	b.n	1001264c <__swrite+0x14>
10012676:	bf00      	nop

10012678 <__sseek>:
10012678:	b510      	push	{r4, lr}
1001267a:	460c      	mov	r4, r1
1001267c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
10012680:	f004 f914 	bl	100168ac <_lseek_r>
10012684:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10012688:	1c42      	adds	r2, r0, #1
1001268a:	bf0e      	itee	eq
1001268c:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
10012690:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
10012694:	6520      	strne	r0, [r4, #80]	@ 0x50
10012696:	81a3      	strh	r3, [r4, #12]
10012698:	bd10      	pop	{r4, pc}
1001269a:	bf00      	nop

1001269c <__sclose>:
1001269c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
100126a0:	f003 baa4 	b.w	10015bec <_close_r>

100126a4 <_write_r>:
100126a4:	b538      	push	{r3, r4, r5, lr}
100126a6:	460c      	mov	r4, r1
100126a8:	4d08      	ldr	r5, [pc, #32]	@ (100126cc <_write_r+0x28>)
100126aa:	4684      	mov	ip, r0
100126ac:	4611      	mov	r1, r2
100126ae:	4620      	mov	r0, r4
100126b0:	461a      	mov	r2, r3
100126b2:	2300      	movs	r3, #0
100126b4:	602b      	str	r3, [r5, #0]
100126b6:	4664      	mov	r4, ip
100126b8:	f7fe fb5e 	bl	10010d78 <_write>
100126bc:	1c43      	adds	r3, r0, #1
100126be:	d000      	beq.n	100126c2 <_write_r+0x1e>
100126c0:	bd38      	pop	{r3, r4, r5, pc}
100126c2:	682b      	ldr	r3, [r5, #0]
100126c4:	2b00      	cmp	r3, #0
100126c6:	d0fb      	beq.n	100126c0 <_write_r+0x1c>
100126c8:	6023      	str	r3, [r4, #0]
100126ca:	bd38      	pop	{r3, r4, r5, pc}
100126cc:	20001680 	.word	0x20001680

100126d0 <__errno>:
100126d0:	4b01      	ldr	r3, [pc, #4]	@ (100126d8 <__errno+0x8>)
100126d2:	6818      	ldr	r0, [r3, #0]
100126d4:	4770      	bx	lr
100126d6:	bf00      	nop
100126d8:	200005c8 	.word	0x200005c8
100126dc:	00000000 	.word	0x00000000

100126e0 <_svfprintf_r>:
100126e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
100126e4:	b0df      	sub	sp, #380	@ 0x17c
100126e6:	460c      	mov	r4, r1
100126e8:	9109      	str	r1, [sp, #36]	@ 0x24
100126ea:	4691      	mov	r9, r2
100126ec:	930d      	str	r3, [sp, #52]	@ 0x34
100126ee:	4683      	mov	fp, r0
100126f0:	f002 f9cc 	bl	10014a8c <_localeconv_r>
100126f4:	6803      	ldr	r3, [r0, #0]
100126f6:	931a      	str	r3, [sp, #104]	@ 0x68
100126f8:	4618      	mov	r0, r3
100126fa:	f003 fd21 	bl	10016140 <strlen>
100126fe:	2208      	movs	r2, #8
10012700:	9018      	str	r0, [sp, #96]	@ 0x60
10012702:	2100      	movs	r1, #0
10012704:	a82e      	add	r0, sp, #184	@ 0xb8
10012706:	f002 f8ff 	bl	10014908 <memset>
1001270a:	89a3      	ldrh	r3, [r4, #12]
1001270c:	061a      	lsls	r2, r3, #24
1001270e:	d503      	bpl.n	10012718 <_svfprintf_r+0x38>
10012710:	6923      	ldr	r3, [r4, #16]
10012712:	2b00      	cmp	r3, #0
10012714:	f000 8790 	beq.w	10013638 <_svfprintf_r+0xf58>
10012718:	ed9f 7b7f 	vldr	d7, [pc, #508]	@ 10012918 <_svfprintf_r+0x238>
1001271c:	2300      	movs	r3, #0
1001271e:	e9cd 3333 	strd	r3, r3, [sp, #204]	@ 0xcc
10012722:	e9cd 331b 	strd	r3, r3, [sp, #108]	@ 0x6c
10012726:	e9cd 331d 	strd	r3, r3, [sp, #116]	@ 0x74
1001272a:	ed8d 7b16 	vstr	d7, [sp, #88]	@ 0x58
1001272e:	aa35      	add	r2, sp, #212	@ 0xd4
10012730:	9313      	str	r3, [sp, #76]	@ 0x4c
10012732:	9232      	str	r2, [sp, #200]	@ 0xc8
10012734:	4690      	mov	r8, r2
10012736:	9319      	str	r3, [sp, #100]	@ 0x64
10012738:	930a      	str	r3, [sp, #40]	@ 0x28
1001273a:	f8cd b01c 	str.w	fp, [sp, #28]
1001273e:	464d      	mov	r5, r9
10012740:	9f07      	ldr	r7, [sp, #28]
10012742:	462e      	mov	r6, r5
10012744:	4b76      	ldr	r3, [pc, #472]	@ (10012920 <_svfprintf_r+0x240>)
10012746:	f8d3 40e4 	ldr.w	r4, [r3, #228]	@ 0xe4
1001274a:	f002 f999 	bl	10014a80 <__locale_mb_cur_max>
1001274e:	4603      	mov	r3, r0
10012750:	a82e      	add	r0, sp, #184	@ 0xb8
10012752:	9000      	str	r0, [sp, #0]
10012754:	4632      	mov	r2, r6
10012756:	a92a      	add	r1, sp, #168	@ 0xa8
10012758:	4638      	mov	r0, r7
1001275a:	47a0      	blx	r4
1001275c:	2800      	cmp	r0, #0
1001275e:	f000 80a9 	beq.w	100128b4 <_svfprintf_r+0x1d4>
10012762:	f2c0 809f 	blt.w	100128a4 <_svfprintf_r+0x1c4>
10012766:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
10012768:	2a25      	cmp	r2, #37	@ 0x25
1001276a:	4603      	mov	r3, r0
1001276c:	d001      	beq.n	10012772 <_svfprintf_r+0x92>
1001276e:	441e      	add	r6, r3
10012770:	e7e8      	b.n	10012744 <_svfprintf_r+0x64>
10012772:	1b77      	subs	r7, r6, r5
10012774:	4604      	mov	r4, r0
10012776:	f040 80a0 	bne.w	100128ba <_svfprintf_r+0x1da>
1001277a:	2300      	movs	r3, #0
1001277c:	f88d 309f 	strb.w	r3, [sp, #159]	@ 0x9f
10012780:	4699      	mov	r9, r3
10012782:	930b      	str	r3, [sp, #44]	@ 0x2c
10012784:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
10012788:	7873      	ldrb	r3, [r6, #1]
1001278a:	9208      	str	r2, [sp, #32]
1001278c:	1c74      	adds	r4, r6, #1
1001278e:	3401      	adds	r4, #1
10012790:	f1a3 0220 	sub.w	r2, r3, #32
10012794:	2a5a      	cmp	r2, #90	@ 0x5a
10012796:	f200 80c5 	bhi.w	10012924 <_svfprintf_r+0x244>
1001279a:	e8df f012 	tbh	[pc, r2, lsl #1]
1001279e:	02ee      	.short	0x02ee
100127a0:	00c300c3 	.word	0x00c300c3
100127a4:	00c302ea 	.word	0x00c302ea
100127a8:	00c300c3 	.word	0x00c300c3
100127ac:	00c3006a 	.word	0x00c3006a
100127b0:	025100c3 	.word	0x025100c3
100127b4:	00c30260 	.word	0x00c30260
100127b8:	02fc025c 	.word	0x02fc025c
100127bc:	02f800c3 	.word	0x02f800c3
100127c0:	005b005b 	.word	0x005b005b
100127c4:	005b005b 	.word	0x005b005b
100127c8:	005b005b 	.word	0x005b005b
100127cc:	005b005b 	.word	0x005b005b
100127d0:	00c3005b 	.word	0x00c3005b
100127d4:	00c300c3 	.word	0x00c300c3
100127d8:	00c300c3 	.word	0x00c300c3
100127dc:	00c300c3 	.word	0x00c300c3
100127e0:	00c30144 	.word	0x00c30144
100127e4:	031601d0 	.word	0x031601d0
100127e8:	01440144 	.word	0x01440144
100127ec:	00c30144 	.word	0x00c30144
100127f0:	00c300c3 	.word	0x00c300c3
100127f4:	02e600c3 	.word	0x02e600c3
100127f8:	00c300c3 	.word	0x00c300c3
100127fc:	00c30265 	.word	0x00c30265
10012800:	00c300c3 	.word	0x00c300c3
10012804:	00c301fa 	.word	0x00c301fa
10012808:	00c302d3 	.word	0x00c302d3
1001280c:	070e00c3 	.word	0x070e00c3
10012810:	00c300c3 	.word	0x00c300c3
10012814:	00c300c3 	.word	0x00c300c3
10012818:	00c300c3 	.word	0x00c300c3
1001281c:	00c300c3 	.word	0x00c300c3
10012820:	00c30144 	.word	0x00c30144
10012824:	022c01d0 	.word	0x022c01d0
10012828:	01440144 	.word	0x01440144
1001282c:	02960144 	.word	0x02960144
10012830:	007f022c 	.word	0x007f022c
10012834:	02af00c3 	.word	0x02af00c3
10012838:	02a000c3 	.word	0x02a000c3
1001283c:	02c10703 	.word	0x02c10703
10012840:	00c3007f 	.word	0x00c3007f
10012844:	007d01fa 	.word	0x007d01fa
10012848:	00c30709 	.word	0x00c30709
1001284c:	073200c3 	.word	0x073200c3
10012850:	007d00c3 	.word	0x007d00c3
10012854:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
10012858:	2100      	movs	r1, #0
1001285a:	f814 3b01 	ldrb.w	r3, [r4], #1
1001285e:	eb01 0181 	add.w	r1, r1, r1, lsl #2
10012862:	eb02 0141 	add.w	r1, r2, r1, lsl #1
10012866:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
1001286a:	2a09      	cmp	r2, #9
1001286c:	d9f5      	bls.n	1001285a <_svfprintf_r+0x17a>
1001286e:	910b      	str	r1, [sp, #44]	@ 0x2c
10012870:	e78e      	b.n	10012790 <_svfprintf_r+0xb0>
10012872:	9f07      	ldr	r7, [sp, #28]
10012874:	4638      	mov	r0, r7
10012876:	f002 f909 	bl	10014a8c <_localeconv_r>
1001287a:	6843      	ldr	r3, [r0, #4]
1001287c:	931d      	str	r3, [sp, #116]	@ 0x74
1001287e:	4618      	mov	r0, r3
10012880:	f003 fc5e 	bl	10016140 <strlen>
10012884:	901e      	str	r0, [sp, #120]	@ 0x78
10012886:	4606      	mov	r6, r0
10012888:	4638      	mov	r0, r7
1001288a:	f002 f8ff 	bl	10014a8c <_localeconv_r>
1001288e:	6883      	ldr	r3, [r0, #8]
10012890:	931b      	str	r3, [sp, #108]	@ 0x6c
10012892:	2e00      	cmp	r6, #0
10012894:	f040 861e 	bne.w	100134d4 <_svfprintf_r+0xdf4>
10012898:	7823      	ldrb	r3, [r4, #0]
1001289a:	e778      	b.n	1001278e <_svfprintf_r+0xae>
1001289c:	7823      	ldrb	r3, [r4, #0]
1001289e:	f049 0920 	orr.w	r9, r9, #32
100128a2:	e774      	b.n	1001278e <_svfprintf_r+0xae>
100128a4:	2208      	movs	r2, #8
100128a6:	2100      	movs	r1, #0
100128a8:	a82e      	add	r0, sp, #184	@ 0xb8
100128aa:	f002 f82d 	bl	10014908 <memset>
100128ae:	2301      	movs	r3, #1
100128b0:	441e      	add	r6, r3
100128b2:	e747      	b.n	10012744 <_svfprintf_r+0x64>
100128b4:	1b77      	subs	r7, r6, r5
100128b6:	4604      	mov	r4, r0
100128b8:	d011      	beq.n	100128de <_svfprintf_r+0x1fe>
100128ba:	9b34      	ldr	r3, [sp, #208]	@ 0xd0
100128bc:	443b      	add	r3, r7
100128be:	9334      	str	r3, [sp, #208]	@ 0xd0
100128c0:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
100128c2:	3301      	adds	r3, #1
100128c4:	2b07      	cmp	r3, #7
100128c6:	e9c8 5700 	strd	r5, r7, [r8]
100128ca:	9333      	str	r3, [sp, #204]	@ 0xcc
100128cc:	dc18      	bgt.n	10012900 <_svfprintf_r+0x220>
100128ce:	f108 0808 	add.w	r8, r8, #8
100128d2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
100128d4:	443b      	add	r3, r7
100128d6:	930a      	str	r3, [sp, #40]	@ 0x28
100128d8:	2c00      	cmp	r4, #0
100128da:	f47f af4e 	bne.w	1001277a <_svfprintf_r+0x9a>
100128de:	9b34      	ldr	r3, [sp, #208]	@ 0xd0
100128e0:	f8dd b01c 	ldr.w	fp, [sp, #28]
100128e4:	2b00      	cmp	r3, #0
100128e6:	f041 81f3 	bne.w	10013cd0 <_svfprintf_r+0x15f0>
100128ea:	9b09      	ldr	r3, [sp, #36]	@ 0x24
100128ec:	899b      	ldrh	r3, [r3, #12]
100128ee:	f003 0340 	and.w	r3, r3, #64	@ 0x40
100128f2:	2b00      	cmp	r3, #0
100128f4:	f041 83c3 	bne.w	1001407e <_svfprintf_r+0x199e>
100128f8:	980a      	ldr	r0, [sp, #40]	@ 0x28
100128fa:	b05f      	add	sp, #380	@ 0x17c
100128fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10012900:	9909      	ldr	r1, [sp, #36]	@ 0x24
10012902:	9807      	ldr	r0, [sp, #28]
10012904:	aa32      	add	r2, sp, #200	@ 0xc8
10012906:	f004 f9c1 	bl	10016c8c <__ssprint_r>
1001290a:	2800      	cmp	r0, #0
1001290c:	d1ed      	bne.n	100128ea <_svfprintf_r+0x20a>
1001290e:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10012912:	e7de      	b.n	100128d2 <_svfprintf_r+0x1f2>
10012914:	f3af 8000 	nop.w
	...
10012920:	2000045c 	.word	0x2000045c
10012924:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10012928:	2b00      	cmp	r3, #0
1001292a:	d0d8      	beq.n	100128de <_svfprintf_r+0x1fe>
1001292c:	2200      	movs	r2, #0
1001292e:	f88d 3114 	strb.w	r3, [sp, #276]	@ 0x114
10012932:	2301      	movs	r3, #1
10012934:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
10012938:	9306      	str	r3, [sp, #24]
1001293a:	920c      	str	r2, [sp, #48]	@ 0x30
1001293c:	469b      	mov	fp, r3
1001293e:	9208      	str	r2, [sp, #32]
10012940:	9214      	str	r2, [sp, #80]	@ 0x50
10012942:	9210      	str	r2, [sp, #64]	@ 0x40
10012944:	9212      	str	r2, [sp, #72]	@ 0x48
10012946:	ad45      	add	r5, sp, #276	@ 0x114
10012948:	f019 0302 	ands.w	r3, r9, #2
1001294c:	d002      	beq.n	10012954 <_svfprintf_r+0x274>
1001294e:	9906      	ldr	r1, [sp, #24]
10012950:	3102      	adds	r1, #2
10012952:	9106      	str	r1, [sp, #24]
10012954:	f019 0784 	ands.w	r7, r9, #132	@ 0x84
10012958:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001295a:	d105      	bne.n	10012968 <_svfprintf_r+0x288>
1001295c:	990b      	ldr	r1, [sp, #44]	@ 0x2c
1001295e:	9806      	ldr	r0, [sp, #24]
10012960:	1a0e      	subs	r6, r1, r0
10012962:	2e00      	cmp	r6, #0
10012964:	f300 80aa 	bgt.w	10012abc <_svfprintf_r+0x3dc>
10012968:	b182      	cbz	r2, 1001298c <_svfprintf_r+0x2ac>
1001296a:	2201      	movs	r2, #1
1001296c:	f8c8 2004 	str.w	r2, [r8, #4]
10012970:	9a33      	ldr	r2, [sp, #204]	@ 0xcc
10012972:	3201      	adds	r2, #1
10012974:	3401      	adds	r4, #1
10012976:	f10d 019f 	add.w	r1, sp, #159	@ 0x9f
1001297a:	2a07      	cmp	r2, #7
1001297c:	9434      	str	r4, [sp, #208]	@ 0xd0
1001297e:	9233      	str	r2, [sp, #204]	@ 0xcc
10012980:	f8c8 1000 	str.w	r1, [r8]
10012984:	f300 8405 	bgt.w	10013192 <_svfprintf_r+0xab2>
10012988:	f108 0808 	add.w	r8, r8, #8
1001298c:	b183      	cbz	r3, 100129b0 <_svfprintf_r+0x2d0>
1001298e:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10012990:	aa28      	add	r2, sp, #160	@ 0xa0
10012992:	3301      	adds	r3, #1
10012994:	3402      	adds	r4, #2
10012996:	f8c8 2000 	str.w	r2, [r8]
1001299a:	2b07      	cmp	r3, #7
1001299c:	f04f 0202 	mov.w	r2, #2
100129a0:	9434      	str	r4, [sp, #208]	@ 0xd0
100129a2:	9333      	str	r3, [sp, #204]	@ 0xcc
100129a4:	f8c8 2004 	str.w	r2, [r8, #4]
100129a8:	f300 83e7 	bgt.w	1001317a <_svfprintf_r+0xa9a>
100129ac:	f108 0808 	add.w	r8, r8, #8
100129b0:	2f80      	cmp	r7, #128	@ 0x80
100129b2:	f000 82c0 	beq.w	10012f36 <_svfprintf_r+0x856>
100129b6:	9b08      	ldr	r3, [sp, #32]
100129b8:	eba3 060b 	sub.w	r6, r3, fp
100129bc:	2e00      	cmp	r6, #0
100129be:	f300 82ff 	bgt.w	10012fc0 <_svfprintf_r+0x8e0>
100129c2:	f419 7f80 	tst.w	r9, #256	@ 0x100
100129c6:	f040 8219 	bne.w	10012dfc <_svfprintf_r+0x71c>
100129ca:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
100129cc:	f8c8 5000 	str.w	r5, [r8]
100129d0:	3301      	adds	r3, #1
100129d2:	445c      	add	r4, fp
100129d4:	2b07      	cmp	r3, #7
100129d6:	f8c8 b004 	str.w	fp, [r8, #4]
100129da:	9434      	str	r4, [sp, #208]	@ 0xd0
100129dc:	9333      	str	r3, [sp, #204]	@ 0xcc
100129de:	f300 836c 	bgt.w	100130ba <_svfprintf_r+0x9da>
100129e2:	f108 0808 	add.w	r8, r8, #8
100129e6:	f019 0f04 	tst.w	r9, #4
100129ea:	d005      	beq.n	100129f8 <_svfprintf_r+0x318>
100129ec:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
100129ee:	9a06      	ldr	r2, [sp, #24]
100129f0:	1a9d      	subs	r5, r3, r2
100129f2:	2d00      	cmp	r5, #0
100129f4:	f300 83dc 	bgt.w	100131b0 <_svfprintf_r+0xad0>
100129f8:	e9dd 320a 	ldrd	r3, r2, [sp, #40]	@ 0x28
100129fc:	9906      	ldr	r1, [sp, #24]
100129fe:	428a      	cmp	r2, r1
10012a00:	bfac      	ite	ge
10012a02:	189b      	addge	r3, r3, r2
10012a04:	185b      	addlt	r3, r3, r1
10012a06:	930a      	str	r3, [sp, #40]	@ 0x28
10012a08:	2c00      	cmp	r4, #0
10012a0a:	f040 8318 	bne.w	1001303e <_svfprintf_r+0x95e>
10012a0e:	2300      	movs	r3, #0
10012a10:	9333      	str	r3, [sp, #204]	@ 0xcc
10012a12:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
10012a14:	b11b      	cbz	r3, 10012a1e <_svfprintf_r+0x33e>
10012a16:	990c      	ldr	r1, [sp, #48]	@ 0x30
10012a18:	9807      	ldr	r0, [sp, #28]
10012a1a:	f003 fe33 	bl	10016684 <_free_r>
10012a1e:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10012a22:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
10012a24:	e68c      	b.n	10012740 <_svfprintf_r+0x60>
10012a26:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10012a2a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10012a2c:	3307      	adds	r3, #7
10012a2e:	f023 0307 	bic.w	r3, r3, #7
10012a32:	ecb3 7b02 	vldmia	r3!, {d7}
10012a36:	ec57 6b17 	vmov	r6, r7, d7
10012a3a:	930d      	str	r3, [sp, #52]	@ 0x34
10012a3c:	f027 4300 	bic.w	r3, r7, #2147483648	@ 0x80000000
10012a40:	9323      	str	r3, [sp, #140]	@ 0x8c
10012a42:	ed8d 7a22 	vstr	s14, [sp, #136]	@ 0x88
10012a46:	e9dd ab22 	ldrd	sl, fp, [sp, #136]	@ 0x88
10012a4a:	4bb1      	ldr	r3, [pc, #708]	@ (10012d10 <_svfprintf_r+0x630>)
10012a4c:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
10012a50:	4650      	mov	r0, sl
10012a52:	4659      	mov	r1, fp
10012a54:	ed8d 7b16 	vstr	d7, [sp, #88]	@ 0x58
10012a58:	f008 fbc4 	bl	1001b1e4 <__aeabi_dcmpun>
10012a5c:	2800      	cmp	r0, #0
10012a5e:	f040 8546 	bne.w	100134ee <_svfprintf_r+0xe0e>
10012a62:	4bab      	ldr	r3, [pc, #684]	@ (10012d10 <_svfprintf_r+0x630>)
10012a64:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
10012a68:	4650      	mov	r0, sl
10012a6a:	4659      	mov	r1, fp
10012a6c:	f008 fb9c 	bl	1001b1a8 <__aeabi_dcmple>
10012a70:	2800      	cmp	r0, #0
10012a72:	f040 853c 	bne.w	100134ee <_svfprintf_r+0xe0e>
10012a76:	2200      	movs	r2, #0
10012a78:	2300      	movs	r3, #0
10012a7a:	4630      	mov	r0, r6
10012a7c:	4639      	mov	r1, r7
10012a7e:	f008 fb89 	bl	1001b194 <__aeabi_dcmplt>
10012a82:	2800      	cmp	r0, #0
10012a84:	f041 8051 	bne.w	10013b2a <_svfprintf_r+0x144a>
10012a88:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
10012a8c:	4da1      	ldr	r5, [pc, #644]	@ (10012d14 <_svfprintf_r+0x634>)
10012a8e:	4ba2      	ldr	r3, [pc, #648]	@ (10012d18 <_svfprintf_r+0x638>)
10012a90:	f029 0980 	bic.w	r9, r9, #128	@ 0x80
10012a94:	990e      	ldr	r1, [sp, #56]	@ 0x38
10012a96:	2947      	cmp	r1, #71	@ 0x47
10012a98:	bfc8      	it	gt
10012a9a:	461d      	movgt	r5, r3
10012a9c:	2300      	movs	r3, #0
10012a9e:	2103      	movs	r1, #3
10012aa0:	930c      	str	r3, [sp, #48]	@ 0x30
10012aa2:	9106      	str	r1, [sp, #24]
10012aa4:	468b      	mov	fp, r1
10012aa6:	9308      	str	r3, [sp, #32]
10012aa8:	9314      	str	r3, [sp, #80]	@ 0x50
10012aaa:	9310      	str	r3, [sp, #64]	@ 0x40
10012aac:	9312      	str	r3, [sp, #72]	@ 0x48
10012aae:	2a00      	cmp	r2, #0
10012ab0:	f43f af4a 	beq.w	10012948 <_svfprintf_r+0x268>
10012ab4:	9b06      	ldr	r3, [sp, #24]
10012ab6:	3301      	adds	r3, #1
10012ab8:	9306      	str	r3, [sp, #24]
10012aba:	e745      	b.n	10012948 <_svfprintf_r+0x268>
10012abc:	2e10      	cmp	r6, #16
10012abe:	9a33      	ldr	r2, [sp, #204]	@ 0xcc
10012ac0:	f341 8276 	ble.w	10013fb0 <_svfprintf_r+0x18d0>
10012ac4:	4895      	ldr	r0, [pc, #596]	@ (10012d1c <_svfprintf_r+0x63c>)
10012ac6:	9521      	str	r5, [sp, #132]	@ 0x84
10012ac8:	e9cd 371f 	strd	r3, r7, [sp, #124]	@ 0x7c
10012acc:	4621      	mov	r1, r4
10012ace:	9d09      	ldr	r5, [sp, #36]	@ 0x24
10012ad0:	9c07      	ldr	r4, [sp, #28]
10012ad2:	9015      	str	r0, [sp, #84]	@ 0x54
10012ad4:	f04f 0a10 	mov.w	sl, #16
10012ad8:	4607      	mov	r7, r0
10012ada:	e004      	b.n	10012ae6 <_svfprintf_r+0x406>
10012adc:	3e10      	subs	r6, #16
10012ade:	2e10      	cmp	r6, #16
10012ae0:	f108 0808 	add.w	r8, r8, #8
10012ae4:	dd16      	ble.n	10012b14 <_svfprintf_r+0x434>
10012ae6:	3201      	adds	r2, #1
10012ae8:	3110      	adds	r1, #16
10012aea:	2a07      	cmp	r2, #7
10012aec:	e9c8 7a00 	strd	r7, sl, [r8]
10012af0:	e9cd 2133 	strd	r2, r1, [sp, #204]	@ 0xcc
10012af4:	ddf2      	ble.n	10012adc <_svfprintf_r+0x3fc>
10012af6:	aa32      	add	r2, sp, #200	@ 0xc8
10012af8:	4629      	mov	r1, r5
10012afa:	4620      	mov	r0, r4
10012afc:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10012b00:	f004 f8c4 	bl	10016c8c <__ssprint_r>
10012b04:	2800      	cmp	r0, #0
10012b06:	f040 86f0 	bne.w	100138ea <_svfprintf_r+0x120a>
10012b0a:	3e10      	subs	r6, #16
10012b0c:	2e10      	cmp	r6, #16
10012b0e:	e9dd 2133 	ldrd	r2, r1, [sp, #204]	@ 0xcc
10012b12:	dce8      	bgt.n	10012ae6 <_svfprintf_r+0x406>
10012b14:	e9dd 371f 	ldrd	r3, r7, [sp, #124]	@ 0x7c
10012b18:	9d21      	ldr	r5, [sp, #132]	@ 0x84
10012b1a:	460c      	mov	r4, r1
10012b1c:	3201      	adds	r2, #1
10012b1e:	9915      	ldr	r1, [sp, #84]	@ 0x54
10012b20:	f8c8 1000 	str.w	r1, [r8]
10012b24:	4434      	add	r4, r6
10012b26:	2a07      	cmp	r2, #7
10012b28:	e9cd 2433 	strd	r2, r4, [sp, #204]	@ 0xcc
10012b2c:	f8c8 6004 	str.w	r6, [r8, #4]
10012b30:	f300 86ca 	bgt.w	100138c8 <_svfprintf_r+0x11e8>
10012b34:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
10012b38:	f108 0808 	add.w	r8, r8, #8
10012b3c:	e714      	b.n	10012968 <_svfprintf_r+0x288>
10012b3e:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
10012b40:	2b43      	cmp	r3, #67	@ 0x43
10012b42:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10012b46:	f102 0404 	add.w	r4, r2, #4
10012b4a:	d003      	beq.n	10012b54 <_svfprintf_r+0x474>
10012b4c:	f019 0f10 	tst.w	r9, #16
10012b50:	f000 855c 	beq.w	1001360c <_svfprintf_r+0xf2c>
10012b54:	2208      	movs	r2, #8
10012b56:	2100      	movs	r1, #0
10012b58:	a830      	add	r0, sp, #192	@ 0xc0
10012b5a:	f001 fed5 	bl	10014908 <memset>
10012b5e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10012b60:	9807      	ldr	r0, [sp, #28]
10012b62:	681a      	ldr	r2, [r3, #0]
10012b64:	ad45      	add	r5, sp, #276	@ 0x114
10012b66:	ab30      	add	r3, sp, #192	@ 0xc0
10012b68:	4629      	mov	r1, r5
10012b6a:	f001 ff1f 	bl	100149ac <_wcrtomb_r>
10012b6e:	f1b0 3fff 	cmp.w	r0, #4294967295	@ 0xffffffff
10012b72:	4683      	mov	fp, r0
10012b74:	f001 827e 	beq.w	10014074 <_svfprintf_r+0x1994>
10012b78:	ea20 73e0 	bic.w	r3, r0, r0, asr #31
10012b7c:	9306      	str	r3, [sp, #24]
10012b7e:	2200      	movs	r2, #0
10012b80:	940d      	str	r4, [sp, #52]	@ 0x34
10012b82:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
10012b86:	920c      	str	r2, [sp, #48]	@ 0x30
10012b88:	9208      	str	r2, [sp, #32]
10012b8a:	9214      	str	r2, [sp, #80]	@ 0x50
10012b8c:	9210      	str	r2, [sp, #64]	@ 0x40
10012b8e:	9212      	str	r2, [sp, #72]	@ 0x48
10012b90:	e6da      	b.n	10012948 <_svfprintf_r+0x268>
10012b92:	9e0d      	ldr	r6, [sp, #52]	@ 0x34
10012b94:	f856 5b04 	ldr.w	r5, [r6], #4
10012b98:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10012b9c:	2300      	movs	r3, #0
10012b9e:	f88d 309f 	strb.w	r3, [sp, #159]	@ 0x9f
10012ba2:	2d00      	cmp	r5, #0
10012ba4:	f000 8557 	beq.w	10013656 <_svfprintf_r+0xf76>
10012ba8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10012baa:	2b53      	cmp	r3, #83	@ 0x53
10012bac:	f000 86b9 	beq.w	10013922 <_svfprintf_r+0x1242>
10012bb0:	f019 0310 	ands.w	r3, r9, #16
10012bb4:	9312      	str	r3, [sp, #72]	@ 0x48
10012bb6:	f040 86b4 	bne.w	10013922 <_svfprintf_r+0x1242>
10012bba:	9b08      	ldr	r3, [sp, #32]
10012bbc:	1c5a      	adds	r2, r3, #1
10012bbe:	f001 8092 	beq.w	10013ce6 <_svfprintf_r+0x1606>
10012bc2:	9912      	ldr	r1, [sp, #72]	@ 0x48
10012bc4:	461a      	mov	r2, r3
10012bc6:	4628      	mov	r0, r5
10012bc8:	f003 f9ba 	bl	10015f40 <memchr>
10012bcc:	900c      	str	r0, [sp, #48]	@ 0x30
10012bce:	2800      	cmp	r0, #0
10012bd0:	f001 82ed 	beq.w	100141ae <_svfprintf_r+0x1ace>
10012bd4:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
10012bd6:	960d      	str	r6, [sp, #52]	@ 0x34
10012bd8:	eba3 0b05 	sub.w	fp, r3, r5
10012bdc:	9b12      	ldr	r3, [sp, #72]	@ 0x48
10012bde:	9308      	str	r3, [sp, #32]
10012be0:	ea2b 71eb 	bic.w	r1, fp, fp, asr #31
10012be4:	9314      	str	r3, [sp, #80]	@ 0x50
10012be6:	9310      	str	r3, [sp, #64]	@ 0x40
10012be8:	930c      	str	r3, [sp, #48]	@ 0x30
10012bea:	2373      	movs	r3, #115	@ 0x73
10012bec:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
10012bf0:	9106      	str	r1, [sp, #24]
10012bf2:	930e      	str	r3, [sp, #56]	@ 0x38
10012bf4:	e75b      	b.n	10012aae <_svfprintf_r+0x3ce>
10012bf6:	f019 0f20 	tst.w	r9, #32
10012bfa:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10012bfe:	f000 80ec 	beq.w	10012dda <_svfprintf_r+0x6fa>
10012c02:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10012c04:	3307      	adds	r3, #7
10012c06:	f023 0307 	bic.w	r3, r3, #7
10012c0a:	461a      	mov	r2, r3
10012c0c:	6859      	ldr	r1, [r3, #4]
10012c0e:	f852 3b08 	ldr.w	r3, [r2], #8
10012c12:	920d      	str	r2, [sp, #52]	@ 0x34
10012c14:	460a      	mov	r2, r1
10012c16:	2900      	cmp	r1, #0
10012c18:	f2c0 8419 	blt.w	1001344e <_svfprintf_r+0xd6e>
10012c1c:	9908      	ldr	r1, [sp, #32]
10012c1e:	3101      	adds	r1, #1
10012c20:	f000 829c 	beq.w	1001315c <_svfprintf_r+0xa7c>
10012c24:	ea53 0102 	orrs.w	r1, r3, r2
10012c28:	f029 0480 	bic.w	r4, r9, #128	@ 0x80
10012c2c:	f040 8297 	bne.w	1001315e <_svfprintf_r+0xa7e>
10012c30:	9a08      	ldr	r2, [sp, #32]
10012c32:	2a00      	cmp	r2, #0
10012c34:	f040 8298 	bne.w	10013168 <_svfprintf_r+0xa88>
10012c38:	46a1      	mov	r9, r4
10012c3a:	4693      	mov	fp, r2
10012c3c:	ad5e      	add	r5, sp, #376	@ 0x178
10012c3e:	e151      	b.n	10012ee4 <_svfprintf_r+0x804>
10012c40:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10012c42:	f853 2b04 	ldr.w	r2, [r3], #4
10012c46:	920b      	str	r2, [sp, #44]	@ 0x2c
10012c48:	2a00      	cmp	r2, #0
10012c4a:	f280 8424 	bge.w	10013496 <_svfprintf_r+0xdb6>
10012c4e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
10012c50:	930d      	str	r3, [sp, #52]	@ 0x34
10012c52:	4252      	negs	r2, r2
10012c54:	920b      	str	r2, [sp, #44]	@ 0x2c
10012c56:	7823      	ldrb	r3, [r4, #0]
10012c58:	f049 0904 	orr.w	r9, r9, #4
10012c5c:	e597      	b.n	1001278e <_svfprintf_r+0xae>
10012c5e:	232b      	movs	r3, #43	@ 0x2b
10012c60:	f88d 309f 	strb.w	r3, [sp, #159]	@ 0x9f
10012c64:	7823      	ldrb	r3, [r4, #0]
10012c66:	e592      	b.n	1001278e <_svfprintf_r+0xae>
10012c68:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10012c6c:	f049 0910 	orr.w	r9, r9, #16
10012c70:	f019 0220 	ands.w	r2, r9, #32
10012c74:	f000 83b4 	beq.w	100133e0 <_svfprintf_r+0xd00>
10012c78:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10012c7a:	3307      	adds	r3, #7
10012c7c:	f023 0307 	bic.w	r3, r3, #7
10012c80:	4619      	mov	r1, r3
10012c82:	685a      	ldr	r2, [r3, #4]
10012c84:	f851 3b08 	ldr.w	r3, [r1], #8
10012c88:	910d      	str	r1, [sp, #52]	@ 0x34
10012c8a:	f429 6480 	bic.w	r4, r9, #1024	@ 0x400
10012c8e:	2100      	movs	r1, #0
10012c90:	2000      	movs	r0, #0
10012c92:	9d08      	ldr	r5, [sp, #32]
10012c94:	f88d 009f 	strb.w	r0, [sp, #159]	@ 0x9f
10012c98:	1c6f      	adds	r7, r5, #1
10012c9a:	f000 810c 	beq.w	10012eb6 <_svfprintf_r+0x7d6>
10012c9e:	ea53 0002 	orrs.w	r0, r3, r2
10012ca2:	f024 0980 	bic.w	r9, r4, #128	@ 0x80
10012ca6:	f040 8105 	bne.w	10012eb4 <_svfprintf_r+0x7d4>
10012caa:	2d00      	cmp	r5, #0
10012cac:	f040 8627 	bne.w	100138fe <_svfprintf_r+0x121e>
10012cb0:	2900      	cmp	r1, #0
10012cb2:	f040 83c8 	bne.w	10013446 <_svfprintf_r+0xd66>
10012cb6:	f014 0b01 	ands.w	fp, r4, #1
10012cba:	f000 83f0 	beq.w	1001349e <_svfprintf_r+0xdbe>
10012cbe:	2330      	movs	r3, #48	@ 0x30
10012cc0:	f88d 3177 	strb.w	r3, [sp, #375]	@ 0x177
10012cc4:	f20d 1577 	addw	r5, sp, #375	@ 0x177
10012cc8:	e10c      	b.n	10012ee4 <_svfprintf_r+0x804>
10012cca:	7823      	ldrb	r3, [r4, #0]
10012ccc:	2b68      	cmp	r3, #104	@ 0x68
10012cce:	bf03      	ittte	eq
10012cd0:	7863      	ldrbeq	r3, [r4, #1]
10012cd2:	f449 7900 	orreq.w	r9, r9, #512	@ 0x200
10012cd6:	3401      	addeq	r4, #1
10012cd8:	f049 0940 	orrne.w	r9, r9, #64	@ 0x40
10012cdc:	e557      	b.n	1001278e <_svfprintf_r+0xae>
10012cde:	f019 0f20 	tst.w	r9, #32
10012ce2:	940f      	str	r4, [sp, #60]	@ 0x3c
10012ce4:	f000 83e5 	beq.w	100134b2 <_svfprintf_r+0xdd2>
10012ce8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10012cea:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
10012cec:	681b      	ldr	r3, [r3, #0]
10012cee:	601a      	str	r2, [r3, #0]
10012cf0:	17d2      	asrs	r2, r2, #31
10012cf2:	605a      	str	r2, [r3, #4]
10012cf4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10012cf6:	3304      	adds	r3, #4
10012cf8:	930d      	str	r3, [sp, #52]	@ 0x34
10012cfa:	e692      	b.n	10012a22 <_svfprintf_r+0x342>
10012cfc:	7823      	ldrb	r3, [r4, #0]
10012cfe:	2b6c      	cmp	r3, #108	@ 0x6c
10012d00:	bf03      	ittte	eq
10012d02:	7863      	ldrbeq	r3, [r4, #1]
10012d04:	f049 0920 	orreq.w	r9, r9, #32
10012d08:	3401      	addeq	r4, #1
10012d0a:	f049 0910 	orrne.w	r9, r9, #16
10012d0e:	e53e      	b.n	1001278e <_svfprintf_r+0xae>
10012d10:	7fefffff 	.word	0x7fefffff
10012d14:	1001d970 	.word	0x1001d970
10012d18:	1001d974 	.word	0x1001d974
10012d1c:	1001d9c4 	.word	0x1001d9c4
10012d20:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
10012d22:	940f      	str	r4, [sp, #60]	@ 0x3c
10012d24:	f852 3b04 	ldr.w	r3, [r2], #4
10012d28:	920d      	str	r2, [sp, #52]	@ 0x34
10012d2a:	f647 0230 	movw	r2, #30768	@ 0x7830
10012d2e:	f8ad 20a0 	strh.w	r2, [sp, #160]	@ 0xa0
10012d32:	2078      	movs	r0, #120	@ 0x78
10012d34:	4aa8      	ldr	r2, [pc, #672]	@ (10012fd8 <_svfprintf_r+0x8f8>)
10012d36:	9219      	str	r2, [sp, #100]	@ 0x64
10012d38:	f049 0402 	orr.w	r4, r9, #2
10012d3c:	2200      	movs	r2, #0
10012d3e:	2102      	movs	r1, #2
10012d40:	900e      	str	r0, [sp, #56]	@ 0x38
10012d42:	e7a5      	b.n	10012c90 <_svfprintf_r+0x5b0>
10012d44:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10012d48:	f049 0410 	orr.w	r4, r9, #16
10012d4c:	f014 0220 	ands.w	r2, r4, #32
10012d50:	f000 8355 	beq.w	100133fe <_svfprintf_r+0xd1e>
10012d54:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10012d56:	3307      	adds	r3, #7
10012d58:	f023 0307 	bic.w	r3, r3, #7
10012d5c:	4619      	mov	r1, r3
10012d5e:	685a      	ldr	r2, [r3, #4]
10012d60:	f851 3b08 	ldr.w	r3, [r1], #8
10012d64:	910d      	str	r1, [sp, #52]	@ 0x34
10012d66:	2101      	movs	r1, #1
10012d68:	e792      	b.n	10012c90 <_svfprintf_r+0x5b0>
10012d6a:	7823      	ldrb	r3, [r4, #0]
10012d6c:	f049 0908 	orr.w	r9, r9, #8
10012d70:	e50d      	b.n	1001278e <_svfprintf_r+0xae>
10012d72:	7823      	ldrb	r3, [r4, #0]
10012d74:	f049 0901 	orr.w	r9, r9, #1
10012d78:	e509      	b.n	1001278e <_svfprintf_r+0xae>
10012d7a:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
10012d7e:	7823      	ldrb	r3, [r4, #0]
10012d80:	2a00      	cmp	r2, #0
10012d82:	f47f ad04 	bne.w	1001278e <_svfprintf_r+0xae>
10012d86:	2220      	movs	r2, #32
10012d88:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
10012d8c:	e4ff      	b.n	1001278e <_svfprintf_r+0xae>
10012d8e:	7823      	ldrb	r3, [r4, #0]
10012d90:	f049 0980 	orr.w	r9, r9, #128	@ 0x80
10012d94:	e4fb      	b.n	1001278e <_svfprintf_r+0xae>
10012d96:	4621      	mov	r1, r4
10012d98:	f811 3b01 	ldrb.w	r3, [r1], #1
10012d9c:	2b2a      	cmp	r3, #42	@ 0x2a
10012d9e:	f001 8229 	beq.w	100141f4 <_svfprintf_r+0x1b14>
10012da2:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
10012da6:	2a09      	cmp	r2, #9
10012da8:	460c      	mov	r4, r1
10012daa:	bf98      	it	ls
10012dac:	2100      	movls	r1, #0
10012dae:	f201 8130 	bhi.w	10014012 <_svfprintf_r+0x1932>
10012db2:	f814 3b01 	ldrb.w	r3, [r4], #1
10012db6:	eb01 0181 	add.w	r1, r1, r1, lsl #2
10012dba:	eb02 0141 	add.w	r1, r2, r1, lsl #1
10012dbe:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
10012dc2:	2a09      	cmp	r2, #9
10012dc4:	d9f5      	bls.n	10012db2 <_svfprintf_r+0x6d2>
10012dc6:	9108      	str	r1, [sp, #32]
10012dc8:	e4e2      	b.n	10012790 <_svfprintf_r+0xb0>
10012dca:	f049 0910 	orr.w	r9, r9, #16
10012dce:	f019 0f20 	tst.w	r9, #32
10012dd2:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10012dd6:	f47f af14 	bne.w	10012c02 <_svfprintf_r+0x522>
10012dda:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
10012ddc:	f019 0f10 	tst.w	r9, #16
10012de0:	f852 3b04 	ldr.w	r3, [r2], #4
10012de4:	920d      	str	r2, [sp, #52]	@ 0x34
10012de6:	f040 8360 	bne.w	100134aa <_svfprintf_r+0xdca>
10012dea:	f019 0f40 	tst.w	r9, #64	@ 0x40
10012dee:	f000 8358 	beq.w	100134a2 <_svfprintf_r+0xdc2>
10012df2:	f343 32c0 	sbfx	r2, r3, #15, #1
10012df6:	4611      	mov	r1, r2
10012df8:	b21b      	sxth	r3, r3
10012dfa:	e70c      	b.n	10012c16 <_svfprintf_r+0x536>
10012dfc:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10012dfe:	2b65      	cmp	r3, #101	@ 0x65
10012e00:	f340 8166 	ble.w	100130d0 <_svfprintf_r+0x9f0>
10012e04:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	@ 0x58
10012e08:	2200      	movs	r2, #0
10012e0a:	2300      	movs	r3, #0
10012e0c:	f008 f9b8 	bl	1001b180 <__aeabi_dcmpeq>
10012e10:	2800      	cmp	r0, #0
10012e12:	f000 8211 	beq.w	10013238 <_svfprintf_r+0xb58>
10012e16:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10012e18:	4a70      	ldr	r2, [pc, #448]	@ (10012fdc <_svfprintf_r+0x8fc>)
10012e1a:	f8c8 2000 	str.w	r2, [r8]
10012e1e:	3301      	adds	r3, #1
10012e20:	3401      	adds	r4, #1
10012e22:	2201      	movs	r2, #1
10012e24:	2b07      	cmp	r3, #7
10012e26:	9434      	str	r4, [sp, #208]	@ 0xd0
10012e28:	9333      	str	r3, [sp, #204]	@ 0xcc
10012e2a:	f8c8 2004 	str.w	r2, [r8, #4]
10012e2e:	f300 856b 	bgt.w	10013908 <_svfprintf_r+0x1228>
10012e32:	f108 0808 	add.w	r8, r8, #8
10012e36:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
10012e38:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
10012e3a:	4293      	cmp	r3, r2
10012e3c:	f280 8326 	bge.w	1001348c <_svfprintf_r+0xdac>
10012e40:	9b18      	ldr	r3, [sp, #96]	@ 0x60
10012e42:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
10012e44:	441c      	add	r4, r3
10012e46:	e9c8 2300 	strd	r2, r3, [r8]
10012e4a:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10012e4c:	9434      	str	r4, [sp, #208]	@ 0xd0
10012e4e:	3301      	adds	r3, #1
10012e50:	2b07      	cmp	r3, #7
10012e52:	9333      	str	r3, [sp, #204]	@ 0xcc
10012e54:	f300 83e4 	bgt.w	10013620 <_svfprintf_r+0xf40>
10012e58:	f108 0808 	add.w	r8, r8, #8
10012e5c:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
10012e5e:	1e5d      	subs	r5, r3, #1
10012e60:	2d00      	cmp	r5, #0
10012e62:	f77f adc0 	ble.w	100129e6 <_svfprintf_r+0x306>
10012e66:	2d10      	cmp	r5, #16
10012e68:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10012e6a:	f340 85ad 	ble.w	100139c8 <_svfprintf_r+0x12e8>
10012e6e:	4f5c      	ldr	r7, [pc, #368]	@ (10012fe0 <_svfprintf_r+0x900>)
10012e70:	f8dd b01c 	ldr.w	fp, [sp, #28]
10012e74:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
10012e78:	9715      	str	r7, [sp, #84]	@ 0x54
10012e7a:	2610      	movs	r6, #16
10012e7c:	e005      	b.n	10012e8a <_svfprintf_r+0x7aa>
10012e7e:	f108 0808 	add.w	r8, r8, #8
10012e82:	3d10      	subs	r5, #16
10012e84:	2d10      	cmp	r5, #16
10012e86:	f340 85a1 	ble.w	100139cc <_svfprintf_r+0x12ec>
10012e8a:	3301      	adds	r3, #1
10012e8c:	3410      	adds	r4, #16
10012e8e:	2b07      	cmp	r3, #7
10012e90:	e9c8 7600 	strd	r7, r6, [r8]
10012e94:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10012e98:	ddf1      	ble.n	10012e7e <_svfprintf_r+0x79e>
10012e9a:	aa32      	add	r2, sp, #200	@ 0xc8
10012e9c:	4651      	mov	r1, sl
10012e9e:	4658      	mov	r0, fp
10012ea0:	f003 fef4 	bl	10016c8c <__ssprint_r>
10012ea4:	2800      	cmp	r0, #0
10012ea6:	f040 82c0 	bne.w	1001342a <_svfprintf_r+0xd4a>
10012eaa:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
10012eae:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10012eb2:	e7e6      	b.n	10012e82 <_svfprintf_r+0x7a2>
10012eb4:	464c      	mov	r4, r9
10012eb6:	2901      	cmp	r1, #1
10012eb8:	f000 8151 	beq.w	1001315e <_svfprintf_r+0xa7e>
10012ebc:	2902      	cmp	r1, #2
10012ebe:	ad5e      	add	r5, sp, #376	@ 0x178
10012ec0:	d11e      	bne.n	10012f00 <_svfprintf_r+0x820>
10012ec2:	9819      	ldr	r0, [sp, #100]	@ 0x64
10012ec4:	f003 010f 	and.w	r1, r3, #15
10012ec8:	091b      	lsrs	r3, r3, #4
10012eca:	5c41      	ldrb	r1, [r0, r1]
10012ecc:	f805 1d01 	strb.w	r1, [r5, #-1]!
10012ed0:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
10012ed4:	0912      	lsrs	r2, r2, #4
10012ed6:	ea53 0102 	orrs.w	r1, r3, r2
10012eda:	d1f3      	bne.n	10012ec4 <_svfprintf_r+0x7e4>
10012edc:	ab5e      	add	r3, sp, #376	@ 0x178
10012ede:	46a1      	mov	r9, r4
10012ee0:	eba3 0b05 	sub.w	fp, r3, r5
10012ee4:	9908      	ldr	r1, [sp, #32]
10012ee6:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
10012eea:	4559      	cmp	r1, fp
10012eec:	f04f 0300 	mov.w	r3, #0
10012ef0:	bfb8      	it	lt
10012ef2:	4659      	movlt	r1, fp
10012ef4:	930c      	str	r3, [sp, #48]	@ 0x30
10012ef6:	9106      	str	r1, [sp, #24]
10012ef8:	9314      	str	r3, [sp, #80]	@ 0x50
10012efa:	9310      	str	r3, [sp, #64]	@ 0x40
10012efc:	9312      	str	r3, [sp, #72]	@ 0x48
10012efe:	e5d6      	b.n	10012aae <_svfprintf_r+0x3ce>
10012f00:	f003 0107 	and.w	r1, r3, #7
10012f04:	08db      	lsrs	r3, r3, #3
10012f06:	ea43 7342 	orr.w	r3, r3, r2, lsl #29
10012f0a:	08d2      	lsrs	r2, r2, #3
10012f0c:	3130      	adds	r1, #48	@ 0x30
10012f0e:	ea53 0602 	orrs.w	r6, r3, r2
10012f12:	4628      	mov	r0, r5
10012f14:	f805 1d01 	strb.w	r1, [r5, #-1]!
10012f18:	d1f2      	bne.n	10012f00 <_svfprintf_r+0x820>
10012f1a:	07e6      	lsls	r6, r4, #31
10012f1c:	d5de      	bpl.n	10012edc <_svfprintf_r+0x7fc>
10012f1e:	2930      	cmp	r1, #48	@ 0x30
10012f20:	d0dc      	beq.n	10012edc <_svfprintf_r+0x7fc>
10012f22:	2330      	movs	r3, #48	@ 0x30
10012f24:	3802      	subs	r0, #2
10012f26:	f805 3c01 	strb.w	r3, [r5, #-1]
10012f2a:	ab5e      	add	r3, sp, #376	@ 0x178
10012f2c:	46a1      	mov	r9, r4
10012f2e:	eba3 0b00 	sub.w	fp, r3, r0
10012f32:	4605      	mov	r5, r0
10012f34:	e7d6      	b.n	10012ee4 <_svfprintf_r+0x804>
10012f36:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
10012f38:	9a06      	ldr	r2, [sp, #24]
10012f3a:	1a9e      	subs	r6, r3, r2
10012f3c:	2e00      	cmp	r6, #0
10012f3e:	f77f ad3a 	ble.w	100129b6 <_svfprintf_r+0x2d6>
10012f42:	2e10      	cmp	r6, #16
10012f44:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10012f46:	f341 809f 	ble.w	10014088 <_svfprintf_r+0x19a8>
10012f4a:	4825      	ldr	r0, [pc, #148]	@ (10012fe0 <_svfprintf_r+0x900>)
10012f4c:	f8dd a01c 	ldr.w	sl, [sp, #28]
10012f50:	9015      	str	r0, [sp, #84]	@ 0x54
10012f52:	4621      	mov	r1, r4
10012f54:	2710      	movs	r7, #16
10012f56:	461a      	mov	r2, r3
10012f58:	4604      	mov	r4, r0
10012f5a:	e004      	b.n	10012f66 <_svfprintf_r+0x886>
10012f5c:	3e10      	subs	r6, #16
10012f5e:	2e10      	cmp	r6, #16
10012f60:	f108 0808 	add.w	r8, r8, #8
10012f64:	dd16      	ble.n	10012f94 <_svfprintf_r+0x8b4>
10012f66:	3201      	adds	r2, #1
10012f68:	3110      	adds	r1, #16
10012f6a:	2a07      	cmp	r2, #7
10012f6c:	e9c8 4700 	strd	r4, r7, [r8]
10012f70:	e9cd 2133 	strd	r2, r1, [sp, #204]	@ 0xcc
10012f74:	ddf2      	ble.n	10012f5c <_svfprintf_r+0x87c>
10012f76:	9909      	ldr	r1, [sp, #36]	@ 0x24
10012f78:	aa32      	add	r2, sp, #200	@ 0xc8
10012f7a:	4650      	mov	r0, sl
10012f7c:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10012f80:	f003 fe84 	bl	10016c8c <__ssprint_r>
10012f84:	2800      	cmp	r0, #0
10012f86:	f040 84b2 	bne.w	100138ee <_svfprintf_r+0x120e>
10012f8a:	3e10      	subs	r6, #16
10012f8c:	2e10      	cmp	r6, #16
10012f8e:	e9dd 2133 	ldrd	r2, r1, [sp, #204]	@ 0xcc
10012f92:	dce8      	bgt.n	10012f66 <_svfprintf_r+0x886>
10012f94:	460c      	mov	r4, r1
10012f96:	4613      	mov	r3, r2
10012f98:	3301      	adds	r3, #1
10012f9a:	9a15      	ldr	r2, [sp, #84]	@ 0x54
10012f9c:	f8c8 2000 	str.w	r2, [r8]
10012fa0:	4434      	add	r4, r6
10012fa2:	2b07      	cmp	r3, #7
10012fa4:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10012fa8:	f8c8 6004 	str.w	r6, [r8, #4]
10012fac:	f300 851c 	bgt.w	100139e8 <_svfprintf_r+0x1308>
10012fb0:	9b08      	ldr	r3, [sp, #32]
10012fb2:	eba3 060b 	sub.w	r6, r3, fp
10012fb6:	2e00      	cmp	r6, #0
10012fb8:	f108 0808 	add.w	r8, r8, #8
10012fbc:	f77f ad01 	ble.w	100129c2 <_svfprintf_r+0x2e2>
10012fc0:	4a07      	ldr	r2, [pc, #28]	@ (10012fe0 <_svfprintf_r+0x900>)
10012fc2:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10012fc4:	9215      	str	r2, [sp, #84]	@ 0x54
10012fc6:	2e10      	cmp	r6, #16
10012fc8:	dd2a      	ble.n	10013020 <_svfprintf_r+0x940>
10012fca:	4622      	mov	r2, r4
10012fcc:	9f07      	ldr	r7, [sp, #28]
10012fce:	9c09      	ldr	r4, [sp, #36]	@ 0x24
10012fd0:	f04f 0a10 	mov.w	sl, #16
10012fd4:	e00b      	b.n	10012fee <_svfprintf_r+0x90e>
10012fd6:	bf00      	nop
10012fd8:	1001d980 	.word	0x1001d980
10012fdc:	1001d9b0 	.word	0x1001d9b0
10012fe0:	1001d9b4 	.word	0x1001d9b4
10012fe4:	3e10      	subs	r6, #16
10012fe6:	2e10      	cmp	r6, #16
10012fe8:	f108 0808 	add.w	r8, r8, #8
10012fec:	dd17      	ble.n	1001301e <_svfprintf_r+0x93e>
10012fee:	3301      	adds	r3, #1
10012ff0:	498e      	ldr	r1, [pc, #568]	@ (1001322c <_svfprintf_r+0xb4c>)
10012ff2:	3210      	adds	r2, #16
10012ff4:	2b07      	cmp	r3, #7
10012ff6:	e9c8 1a00 	strd	r1, sl, [r8]
10012ffa:	e9cd 3233 	strd	r3, r2, [sp, #204]	@ 0xcc
10012ffe:	ddf1      	ble.n	10012fe4 <_svfprintf_r+0x904>
10013000:	aa32      	add	r2, sp, #200	@ 0xc8
10013002:	4621      	mov	r1, r4
10013004:	4638      	mov	r0, r7
10013006:	f003 fe41 	bl	10016c8c <__ssprint_r>
1001300a:	2800      	cmp	r0, #0
1001300c:	f040 820c 	bne.w	10013428 <_svfprintf_r+0xd48>
10013010:	3e10      	subs	r6, #16
10013012:	2e10      	cmp	r6, #16
10013014:	e9dd 3233 	ldrd	r3, r2, [sp, #204]	@ 0xcc
10013018:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001301c:	dce7      	bgt.n	10012fee <_svfprintf_r+0x90e>
1001301e:	4614      	mov	r4, r2
10013020:	3301      	adds	r3, #1
10013022:	9a15      	ldr	r2, [sp, #84]	@ 0x54
10013024:	f8c8 2000 	str.w	r2, [r8]
10013028:	4434      	add	r4, r6
1001302a:	2b07      	cmp	r3, #7
1001302c:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10013030:	f8c8 6004 	str.w	r6, [r8, #4]
10013034:	f300 81c7 	bgt.w	100133c6 <_svfprintf_r+0xce6>
10013038:	f108 0808 	add.w	r8, r8, #8
1001303c:	e4c1      	b.n	100129c2 <_svfprintf_r+0x2e2>
1001303e:	9909      	ldr	r1, [sp, #36]	@ 0x24
10013040:	9807      	ldr	r0, [sp, #28]
10013042:	aa32      	add	r2, sp, #200	@ 0xc8
10013044:	f003 fe22 	bl	10016c8c <__ssprint_r>
10013048:	2800      	cmp	r0, #0
1001304a:	f43f ace0 	beq.w	10012a0e <_svfprintf_r+0x32e>
1001304e:	f8dd b01c 	ldr.w	fp, [sp, #28]
10013052:	e1ea      	b.n	1001342a <_svfprintf_r+0xd4a>
10013054:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10013056:	4976      	ldr	r1, [pc, #472]	@ (10013230 <_svfprintf_r+0xb50>)
10013058:	f8c8 1000 	str.w	r1, [r8]
1001305c:	3301      	adds	r3, #1
1001305e:	3401      	adds	r4, #1
10013060:	2101      	movs	r1, #1
10013062:	2b07      	cmp	r3, #7
10013064:	9434      	str	r4, [sp, #208]	@ 0xd0
10013066:	9333      	str	r3, [sp, #204]	@ 0xcc
10013068:	f8c8 1004 	str.w	r1, [r8, #4]
1001306c:	f300 8573 	bgt.w	10013b56 <_svfprintf_r+0x1476>
10013070:	f108 0808 	add.w	r8, r8, #8
10013074:	2a00      	cmp	r2, #0
10013076:	f040 84e5 	bne.w	10013a44 <_svfprintf_r+0x1364>
1001307a:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
1001307c:	f009 0301 	and.w	r3, r9, #1
10013080:	4313      	orrs	r3, r2
10013082:	f43f acb0 	beq.w	100129e6 <_svfprintf_r+0x306>
10013086:	9b18      	ldr	r3, [sp, #96]	@ 0x60
10013088:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
1001308a:	441c      	add	r4, r3
1001308c:	e9c8 2300 	strd	r2, r3, [r8]
10013090:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10013092:	9434      	str	r4, [sp, #208]	@ 0xd0
10013094:	3301      	adds	r3, #1
10013096:	2b07      	cmp	r3, #7
10013098:	9333      	str	r3, [sp, #204]	@ 0xcc
1001309a:	f300 8643 	bgt.w	10013d24 <_svfprintf_r+0x1644>
1001309e:	f108 0808 	add.w	r8, r8, #8
100130a2:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
100130a4:	f8c8 5000 	str.w	r5, [r8]
100130a8:	3301      	adds	r3, #1
100130aa:	4414      	add	r4, r2
100130ac:	2b07      	cmp	r3, #7
100130ae:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
100130b2:	f8c8 2004 	str.w	r2, [r8, #4]
100130b6:	f77f ac94 	ble.w	100129e2 <_svfprintf_r+0x302>
100130ba:	9909      	ldr	r1, [sp, #36]	@ 0x24
100130bc:	9807      	ldr	r0, [sp, #28]
100130be:	aa32      	add	r2, sp, #200	@ 0xc8
100130c0:	f003 fde4 	bl	10016c8c <__ssprint_r>
100130c4:	2800      	cmp	r0, #0
100130c6:	d1c2      	bne.n	1001304e <_svfprintf_r+0x96e>
100130c8:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
100130ca:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
100130ce:	e48a      	b.n	100129e6 <_svfprintf_r+0x306>
100130d0:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
100130d2:	9e33      	ldr	r6, [sp, #204]	@ 0xcc
100130d4:	2b01      	cmp	r3, #1
100130d6:	f104 0401 	add.w	r4, r4, #1
100130da:	f106 0601 	add.w	r6, r6, #1
100130de:	f108 0708 	add.w	r7, r8, #8
100130e2:	f340 8129 	ble.w	10013338 <_svfprintf_r+0xc58>
100130e6:	2301      	movs	r3, #1
100130e8:	2e07      	cmp	r6, #7
100130ea:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
100130ee:	f8c8 5000 	str.w	r5, [r8]
100130f2:	f8c8 3004 	str.w	r3, [r8, #4]
100130f6:	f300 81b1 	bgt.w	1001345c <_svfprintf_r+0xd7c>
100130fa:	9b18      	ldr	r3, [sp, #96]	@ 0x60
100130fc:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
100130fe:	3601      	adds	r6, #1
10013100:	441c      	add	r4, r3
10013102:	2e07      	cmp	r6, #7
10013104:	e9c7 2300 	strd	r2, r3, [r7]
10013108:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
1001310c:	f300 81b2 	bgt.w	10013474 <_svfprintf_r+0xd94>
10013110:	3708      	adds	r7, #8
10013112:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
10013114:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	@ 0x58
10013118:	f103 38ff 	add.w	r8, r3, #4294967295	@ 0xffffffff
1001311c:	2200      	movs	r2, #0
1001311e:	2300      	movs	r3, #0
10013120:	f008 f82e 	bl	1001b180 <__aeabi_dcmpeq>
10013124:	2800      	cmp	r0, #0
10013126:	f040 8121 	bne.w	1001336c <_svfprintf_r+0xc8c>
1001312a:	3601      	adds	r6, #1
1001312c:	3501      	adds	r5, #1
1001312e:	4444      	add	r4, r8
10013130:	2e07      	cmp	r6, #7
10013132:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
10013136:	603d      	str	r5, [r7, #0]
10013138:	f8c7 8004 	str.w	r8, [r7, #4]
1001313c:	f300 810a 	bgt.w	10013354 <_svfprintf_r+0xc74>
10013140:	3708      	adds	r7, #8
10013142:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
10013144:	607b      	str	r3, [r7, #4]
10013146:	3601      	adds	r6, #1
10013148:	441c      	add	r4, r3
1001314a:	2e07      	cmp	r6, #7
1001314c:	ab2c      	add	r3, sp, #176	@ 0xb0
1001314e:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
10013152:	603b      	str	r3, [r7, #0]
10013154:	dcb1      	bgt.n	100130ba <_svfprintf_r+0x9da>
10013156:	f107 0808 	add.w	r8, r7, #8
1001315a:	e444      	b.n	100129e6 <_svfprintf_r+0x306>
1001315c:	464c      	mov	r4, r9
1001315e:	2b0a      	cmp	r3, #10
10013160:	f172 0100 	sbcs.w	r1, r2, #0
10013164:	f080 8353 	bcs.w	1001380e <_svfprintf_r+0x112e>
10013168:	3330      	adds	r3, #48	@ 0x30
1001316a:	f88d 3177 	strb.w	r3, [sp, #375]	@ 0x177
1001316e:	46a1      	mov	r9, r4
10013170:	f04f 0b01 	mov.w	fp, #1
10013174:	f20d 1577 	addw	r5, sp, #375	@ 0x177
10013178:	e6b4      	b.n	10012ee4 <_svfprintf_r+0x804>
1001317a:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001317c:	9807      	ldr	r0, [sp, #28]
1001317e:	aa32      	add	r2, sp, #200	@ 0xc8
10013180:	f003 fd84 	bl	10016c8c <__ssprint_r>
10013184:	2800      	cmp	r0, #0
10013186:	f47f af62 	bne.w	1001304e <_svfprintf_r+0x96e>
1001318a:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001318c:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10013190:	e40e      	b.n	100129b0 <_svfprintf_r+0x2d0>
10013192:	9909      	ldr	r1, [sp, #36]	@ 0x24
10013194:	9807      	ldr	r0, [sp, #28]
10013196:	9315      	str	r3, [sp, #84]	@ 0x54
10013198:	aa32      	add	r2, sp, #200	@ 0xc8
1001319a:	f003 fd77 	bl	10016c8c <__ssprint_r>
1001319e:	2800      	cmp	r0, #0
100131a0:	f47f af55 	bne.w	1001304e <_svfprintf_r+0x96e>
100131a4:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
100131a6:	9b15      	ldr	r3, [sp, #84]	@ 0x54
100131a8:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
100131ac:	f7ff bbee 	b.w	1001298c <_svfprintf_r+0x2ac>
100131b0:	2d10      	cmp	r5, #16
100131b2:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
100131b4:	f340 8731 	ble.w	1001401a <_svfprintf_r+0x193a>
100131b8:	4f1e      	ldr	r7, [pc, #120]	@ (10013234 <_svfprintf_r+0xb54>)
100131ba:	f8dd 901c 	ldr.w	r9, [sp, #28]
100131be:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
100131c2:	9715      	str	r7, [sp, #84]	@ 0x54
100131c4:	2610      	movs	r6, #16
100131c6:	e004      	b.n	100131d2 <_svfprintf_r+0xaf2>
100131c8:	3d10      	subs	r5, #16
100131ca:	2d10      	cmp	r5, #16
100131cc:	f108 0808 	add.w	r8, r8, #8
100131d0:	dd16      	ble.n	10013200 <_svfprintf_r+0xb20>
100131d2:	3301      	adds	r3, #1
100131d4:	3410      	adds	r4, #16
100131d6:	2b07      	cmp	r3, #7
100131d8:	e9c8 7600 	strd	r7, r6, [r8]
100131dc:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
100131e0:	ddf2      	ble.n	100131c8 <_svfprintf_r+0xae8>
100131e2:	aa32      	add	r2, sp, #200	@ 0xc8
100131e4:	4651      	mov	r1, sl
100131e6:	4648      	mov	r0, r9
100131e8:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
100131ec:	f003 fd4e 	bl	10016c8c <__ssprint_r>
100131f0:	2800      	cmp	r0, #0
100131f2:	f040 83e7 	bne.w	100139c4 <_svfprintf_r+0x12e4>
100131f6:	3d10      	subs	r5, #16
100131f8:	2d10      	cmp	r5, #16
100131fa:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
100131fe:	dce8      	bgt.n	100131d2 <_svfprintf_r+0xaf2>
10013200:	3301      	adds	r3, #1
10013202:	9a15      	ldr	r2, [sp, #84]	@ 0x54
10013204:	442c      	add	r4, r5
10013206:	2b07      	cmp	r3, #7
10013208:	e9c8 2500 	strd	r2, r5, [r8]
1001320c:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10013210:	f77f abf2 	ble.w	100129f8 <_svfprintf_r+0x318>
10013214:	9909      	ldr	r1, [sp, #36]	@ 0x24
10013216:	9807      	ldr	r0, [sp, #28]
10013218:	aa32      	add	r2, sp, #200	@ 0xc8
1001321a:	f003 fd37 	bl	10016c8c <__ssprint_r>
1001321e:	2800      	cmp	r0, #0
10013220:	f47f af15 	bne.w	1001304e <_svfprintf_r+0x96e>
10013224:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10013226:	f7ff bbe7 	b.w	100129f8 <_svfprintf_r+0x318>
1001322a:	bf00      	nop
1001322c:	1001d9b4 	.word	0x1001d9b4
10013230:	1001d9b0 	.word	0x1001d9b0
10013234:	1001d9c4 	.word	0x1001d9c4
10013238:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
1001323a:	2a00      	cmp	r2, #0
1001323c:	f77f af0a 	ble.w	10013054 <_svfprintf_r+0x974>
10013240:	e9dd 7312 	ldrd	r7, r3, [sp, #72]	@ 0x48
10013244:	429f      	cmp	r7, r3
10013246:	bfa8      	it	ge
10013248:	461f      	movge	r7, r3
1001324a:	2f00      	cmp	r7, #0
1001324c:	eb05 0b03 	add.w	fp, r5, r3
10013250:	dd0b      	ble.n	1001326a <_svfprintf_r+0xb8a>
10013252:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10013254:	3301      	adds	r3, #1
10013256:	443c      	add	r4, r7
10013258:	2b07      	cmp	r3, #7
1001325a:	e9c8 5700 	strd	r5, r7, [r8]
1001325e:	9434      	str	r4, [sp, #208]	@ 0xd0
10013260:	9333      	str	r3, [sp, #204]	@ 0xcc
10013262:	f300 8640 	bgt.w	10013ee6 <_svfprintf_r+0x1806>
10013266:	f108 0808 	add.w	r8, r8, #8
1001326a:	9e12      	ldr	r6, [sp, #72]	@ 0x48
1001326c:	2f00      	cmp	r7, #0
1001326e:	bfa8      	it	ge
10013270:	1bf6      	subge	r6, r6, r7
10013272:	2e00      	cmp	r6, #0
10013274:	f300 8200 	bgt.w	10013678 <_svfprintf_r+0xf98>
10013278:	9b12      	ldr	r3, [sp, #72]	@ 0x48
1001327a:	f419 6f80 	tst.w	r9, #1024	@ 0x400
1001327e:	442b      	add	r3, r5
10013280:	469a      	mov	sl, r3
10013282:	f040 8221 	bne.w	100136c8 <_svfprintf_r+0xfe8>
10013286:	9d29      	ldr	r5, [sp, #164]	@ 0xa4
10013288:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
1001328a:	429d      	cmp	r5, r3
1001328c:	db03      	blt.n	10013296 <_svfprintf_r+0xbb6>
1001328e:	f019 0f01 	tst.w	r9, #1
10013292:	f000 846e 	beq.w	10013b72 <_svfprintf_r+0x1492>
10013296:	9b18      	ldr	r3, [sp, #96]	@ 0x60
10013298:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
1001329a:	441c      	add	r4, r3
1001329c:	e9c8 2300 	strd	r2, r3, [r8]
100132a0:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
100132a2:	9434      	str	r4, [sp, #208]	@ 0xd0
100132a4:	3301      	adds	r3, #1
100132a6:	2b07      	cmp	r3, #7
100132a8:	9333      	str	r3, [sp, #204]	@ 0xcc
100132aa:	f300 8673 	bgt.w	10013f94 <_svfprintf_r+0x18b4>
100132ae:	f108 0808 	add.w	r8, r8, #8
100132b2:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
100132b4:	ebab 060a 	sub.w	r6, fp, sl
100132b8:	1b5d      	subs	r5, r3, r5
100132ba:	42ae      	cmp	r6, r5
100132bc:	bfa8      	it	ge
100132be:	462e      	movge	r6, r5
100132c0:	2e00      	cmp	r6, #0
100132c2:	dd0d      	ble.n	100132e0 <_svfprintf_r+0xc00>
100132c4:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
100132c6:	f8c8 a000 	str.w	sl, [r8]
100132ca:	3301      	adds	r3, #1
100132cc:	4434      	add	r4, r6
100132ce:	2b07      	cmp	r3, #7
100132d0:	f8c8 6004 	str.w	r6, [r8, #4]
100132d4:	9434      	str	r4, [sp, #208]	@ 0xd0
100132d6:	9333      	str	r3, [sp, #204]	@ 0xcc
100132d8:	f300 866e 	bgt.w	10013fb8 <_svfprintf_r+0x18d8>
100132dc:	f108 0808 	add.w	r8, r8, #8
100132e0:	2e00      	cmp	r6, #0
100132e2:	bfa8      	it	ge
100132e4:	1bad      	subge	r5, r5, r6
100132e6:	2d00      	cmp	r5, #0
100132e8:	f77f ab7d 	ble.w	100129e6 <_svfprintf_r+0x306>
100132ec:	2d10      	cmp	r5, #16
100132ee:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
100132f0:	f340 836a 	ble.w	100139c8 <_svfprintf_r+0x12e8>
100132f4:	4fad      	ldr	r7, [pc, #692]	@ (100135ac <_svfprintf_r+0xecc>)
100132f6:	f8dd b01c 	ldr.w	fp, [sp, #28]
100132fa:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
100132fe:	9715      	str	r7, [sp, #84]	@ 0x54
10013300:	2610      	movs	r6, #16
10013302:	e005      	b.n	10013310 <_svfprintf_r+0xc30>
10013304:	f108 0808 	add.w	r8, r8, #8
10013308:	3d10      	subs	r5, #16
1001330a:	2d10      	cmp	r5, #16
1001330c:	f340 835e 	ble.w	100139cc <_svfprintf_r+0x12ec>
10013310:	3301      	adds	r3, #1
10013312:	3410      	adds	r4, #16
10013314:	2b07      	cmp	r3, #7
10013316:	e9c8 7600 	strd	r7, r6, [r8]
1001331a:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
1001331e:	ddf1      	ble.n	10013304 <_svfprintf_r+0xc24>
10013320:	aa32      	add	r2, sp, #200	@ 0xc8
10013322:	4651      	mov	r1, sl
10013324:	4658      	mov	r0, fp
10013326:	f003 fcb1 	bl	10016c8c <__ssprint_r>
1001332a:	2800      	cmp	r0, #0
1001332c:	d17d      	bne.n	1001342a <_svfprintf_r+0xd4a>
1001332e:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
10013332:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10013336:	e7e7      	b.n	10013308 <_svfprintf_r+0xc28>
10013338:	f019 0f01 	tst.w	r9, #1
1001333c:	f47f aed3 	bne.w	100130e6 <_svfprintf_r+0xa06>
10013340:	2301      	movs	r3, #1
10013342:	2e07      	cmp	r6, #7
10013344:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
10013348:	f8c8 5000 	str.w	r5, [r8]
1001334c:	f8c8 3004 	str.w	r3, [r8, #4]
10013350:	f77f aef7 	ble.w	10013142 <_svfprintf_r+0xa62>
10013354:	9909      	ldr	r1, [sp, #36]	@ 0x24
10013356:	9807      	ldr	r0, [sp, #28]
10013358:	aa32      	add	r2, sp, #200	@ 0xc8
1001335a:	f003 fc97 	bl	10016c8c <__ssprint_r>
1001335e:	2800      	cmp	r0, #0
10013360:	f47f ae75 	bne.w	1001304e <_svfprintf_r+0x96e>
10013364:	e9dd 6433 	ldrd	r6, r4, [sp, #204]	@ 0xcc
10013368:	af35      	add	r7, sp, #212	@ 0xd4
1001336a:	e6ea      	b.n	10013142 <_svfprintf_r+0xa62>
1001336c:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
1001336e:	2b01      	cmp	r3, #1
10013370:	f77f aee7 	ble.w	10013142 <_svfprintf_r+0xa62>
10013374:	2b11      	cmp	r3, #17
10013376:	4b8d      	ldr	r3, [pc, #564]	@ (100135ac <_svfprintf_r+0xecc>)
10013378:	9315      	str	r3, [sp, #84]	@ 0x54
1001337a:	f340 8357 	ble.w	10013a2c <_svfprintf_r+0x134c>
1001337e:	f8cd 9020 	str.w	r9, [sp, #32]
10013382:	f8dd a01c 	ldr.w	sl, [sp, #28]
10013386:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
1001338a:	2510      	movs	r5, #16
1001338c:	4699      	mov	r9, r3
1001338e:	e006      	b.n	1001339e <_svfprintf_r+0xcbe>
10013390:	3708      	adds	r7, #8
10013392:	f1a8 0810 	sub.w	r8, r8, #16
10013396:	f1b8 0f10 	cmp.w	r8, #16
1001339a:	f340 8345 	ble.w	10013a28 <_svfprintf_r+0x1348>
1001339e:	3601      	adds	r6, #1
100133a0:	3410      	adds	r4, #16
100133a2:	2e07      	cmp	r6, #7
100133a4:	e9c7 9500 	strd	r9, r5, [r7]
100133a8:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
100133ac:	ddf0      	ble.n	10013390 <_svfprintf_r+0xcb0>
100133ae:	aa32      	add	r2, sp, #200	@ 0xc8
100133b0:	4659      	mov	r1, fp
100133b2:	4650      	mov	r0, sl
100133b4:	f003 fc6a 	bl	10016c8c <__ssprint_r>
100133b8:	2800      	cmp	r0, #0
100133ba:	f040 8298 	bne.w	100138ee <_svfprintf_r+0x120e>
100133be:	e9dd 6433 	ldrd	r6, r4, [sp, #204]	@ 0xcc
100133c2:	af35      	add	r7, sp, #212	@ 0xd4
100133c4:	e7e5      	b.n	10013392 <_svfprintf_r+0xcb2>
100133c6:	9909      	ldr	r1, [sp, #36]	@ 0x24
100133c8:	9807      	ldr	r0, [sp, #28]
100133ca:	aa32      	add	r2, sp, #200	@ 0xc8
100133cc:	f003 fc5e 	bl	10016c8c <__ssprint_r>
100133d0:	2800      	cmp	r0, #0
100133d2:	f47f ae3c 	bne.w	1001304e <_svfprintf_r+0x96e>
100133d6:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
100133d8:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
100133dc:	f7ff baf1 	b.w	100129c2 <_svfprintf_r+0x2e2>
100133e0:	990d      	ldr	r1, [sp, #52]	@ 0x34
100133e2:	f851 3b04 	ldr.w	r3, [r1], #4
100133e6:	910d      	str	r1, [sp, #52]	@ 0x34
100133e8:	f019 0110 	ands.w	r1, r9, #16
100133ec:	f47f ac4d 	bne.w	10012c8a <_svfprintf_r+0x5aa>
100133f0:	f019 0040 	ands.w	r0, r9, #64	@ 0x40
100133f4:	f000 8362 	beq.w	10013abc <_svfprintf_r+0x13dc>
100133f8:	b29b      	uxth	r3, r3
100133fa:	460a      	mov	r2, r1
100133fc:	e445      	b.n	10012c8a <_svfprintf_r+0x5aa>
100133fe:	990d      	ldr	r1, [sp, #52]	@ 0x34
10013400:	f851 3b04 	ldr.w	r3, [r1], #4
10013404:	910d      	str	r1, [sp, #52]	@ 0x34
10013406:	f014 0110 	ands.w	r1, r4, #16
1001340a:	d10b      	bne.n	10013424 <_svfprintf_r+0xd44>
1001340c:	f014 0040 	ands.w	r0, r4, #64	@ 0x40
10013410:	d003      	beq.n	1001341a <_svfprintf_r+0xd3a>
10013412:	460a      	mov	r2, r1
10013414:	b29b      	uxth	r3, r3
10013416:	2101      	movs	r1, #1
10013418:	e43a      	b.n	10012c90 <_svfprintf_r+0x5b0>
1001341a:	f414 7200 	ands.w	r2, r4, #512	@ 0x200
1001341e:	bf1c      	itt	ne
10013420:	b2db      	uxtbne	r3, r3
10013422:	4602      	movne	r2, r0
10013424:	2101      	movs	r1, #1
10013426:	e433      	b.n	10012c90 <_svfprintf_r+0x5b0>
10013428:	46bb      	mov	fp, r7
1001342a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
1001342c:	2b00      	cmp	r3, #0
1001342e:	f43f aa5c 	beq.w	100128ea <_svfprintf_r+0x20a>
10013432:	990c      	ldr	r1, [sp, #48]	@ 0x30
10013434:	4658      	mov	r0, fp
10013436:	f003 f925 	bl	10016684 <_free_r>
1001343a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1001343c:	899b      	ldrh	r3, [r3, #12]
1001343e:	f003 0340 	and.w	r3, r3, #64	@ 0x40
10013442:	f7ff ba56 	b.w	100128f2 <_svfprintf_r+0x212>
10013446:	f8dd b020 	ldr.w	fp, [sp, #32]
1001344a:	ad5e      	add	r5, sp, #376	@ 0x178
1001344c:	e54a      	b.n	10012ee4 <_svfprintf_r+0x804>
1001344e:	425b      	negs	r3, r3
10013450:	eb62 0242 	sbc.w	r2, r2, r2, lsl #1
10013454:	464c      	mov	r4, r9
10013456:	202d      	movs	r0, #45	@ 0x2d
10013458:	2101      	movs	r1, #1
1001345a:	e41a      	b.n	10012c92 <_svfprintf_r+0x5b2>
1001345c:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001345e:	9807      	ldr	r0, [sp, #28]
10013460:	aa32      	add	r2, sp, #200	@ 0xc8
10013462:	f003 fc13 	bl	10016c8c <__ssprint_r>
10013466:	2800      	cmp	r0, #0
10013468:	f47f adf1 	bne.w	1001304e <_svfprintf_r+0x96e>
1001346c:	e9dd 6433 	ldrd	r6, r4, [sp, #204]	@ 0xcc
10013470:	af35      	add	r7, sp, #212	@ 0xd4
10013472:	e642      	b.n	100130fa <_svfprintf_r+0xa1a>
10013474:	9909      	ldr	r1, [sp, #36]	@ 0x24
10013476:	9807      	ldr	r0, [sp, #28]
10013478:	aa32      	add	r2, sp, #200	@ 0xc8
1001347a:	f003 fc07 	bl	10016c8c <__ssprint_r>
1001347e:	2800      	cmp	r0, #0
10013480:	f47f ade5 	bne.w	1001304e <_svfprintf_r+0x96e>
10013484:	e9dd 6433 	ldrd	r6, r4, [sp, #204]	@ 0xcc
10013488:	af35      	add	r7, sp, #212	@ 0xd4
1001348a:	e642      	b.n	10013112 <_svfprintf_r+0xa32>
1001348c:	f019 0f01 	tst.w	r9, #1
10013490:	f43f aaa9 	beq.w	100129e6 <_svfprintf_r+0x306>
10013494:	e4d4      	b.n	10012e40 <_svfprintf_r+0x760>
10013496:	930d      	str	r3, [sp, #52]	@ 0x34
10013498:	7823      	ldrb	r3, [r4, #0]
1001349a:	f7ff b978 	b.w	1001278e <_svfprintf_r+0xae>
1001349e:	ad5e      	add	r5, sp, #376	@ 0x178
100134a0:	e520      	b.n	10012ee4 <_svfprintf_r+0x804>
100134a2:	f419 7f00 	tst.w	r9, #512	@ 0x200
100134a6:	f040 8373 	bne.w	10013b90 <_svfprintf_r+0x14b0>
100134aa:	17da      	asrs	r2, r3, #31
100134ac:	4611      	mov	r1, r2
100134ae:	f7ff bbb2 	b.w	10012c16 <_svfprintf_r+0x536>
100134b2:	f019 0f10 	tst.w	r9, #16
100134b6:	f040 82b1 	bne.w	10013a1c <_svfprintf_r+0x133c>
100134ba:	f019 0f40 	tst.w	r9, #64	@ 0x40
100134be:	f040 8361 	bne.w	10013b84 <_svfprintf_r+0x14a4>
100134c2:	f419 7f00 	tst.w	r9, #512	@ 0x200
100134c6:	f000 82a9 	beq.w	10013a1c <_svfprintf_r+0x133c>
100134ca:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
100134cc:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
100134ce:	681b      	ldr	r3, [r3, #0]
100134d0:	701a      	strb	r2, [r3, #0]
100134d2:	e40f      	b.n	10012cf4 <_svfprintf_r+0x614>
100134d4:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
100134d6:	7823      	ldrb	r3, [r4, #0]
100134d8:	2a00      	cmp	r2, #0
100134da:	f43f a958 	beq.w	1001278e <_svfprintf_r+0xae>
100134de:	7812      	ldrb	r2, [r2, #0]
100134e0:	2a00      	cmp	r2, #0
100134e2:	f43f a954 	beq.w	1001278e <_svfprintf_r+0xae>
100134e6:	f449 6980 	orr.w	r9, r9, #1024	@ 0x400
100134ea:	f7ff b950 	b.w	1001278e <_svfprintf_r+0xae>
100134ee:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	@ 0x58
100134f2:	4602      	mov	r2, r0
100134f4:	460b      	mov	r3, r1
100134f6:	f007 fe75 	bl	1001b1e4 <__aeabi_dcmpun>
100134fa:	2800      	cmp	r0, #0
100134fc:	f040 860d 	bne.w	1001411a <_svfprintf_r+0x1a3a>
10013500:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10013502:	2b61      	cmp	r3, #97	@ 0x61
10013504:	f000 8504 	beq.w	10013f10 <_svfprintf_r+0x1830>
10013508:	2b41      	cmp	r3, #65	@ 0x41
1001350a:	f000 8580 	beq.w	1001400e <_svfprintf_r+0x192e>
1001350e:	9b08      	ldr	r3, [sp, #32]
10013510:	3301      	adds	r3, #1
10013512:	f000 8415 	beq.w	10013d40 <_svfprintf_r+0x1660>
10013516:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10013518:	f023 0320 	bic.w	r3, r3, #32
1001351c:	2b47      	cmp	r3, #71	@ 0x47
1001351e:	d104      	bne.n	1001352a <_svfprintf_r+0xe4a>
10013520:	9b08      	ldr	r3, [sp, #32]
10013522:	2b00      	cmp	r3, #0
10013524:	bf08      	it	eq
10013526:	2301      	moveq	r3, #1
10013528:	9308      	str	r3, [sp, #32]
1001352a:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	@ 0x58
1001352e:	f449 7280 	orr.w	r2, r9, #256	@ 0x100
10013532:	2900      	cmp	r1, #0
10013534:	9215      	str	r2, [sp, #84]	@ 0x54
10013536:	f8cd 9018 	str.w	r9, [sp, #24]
1001353a:	f04f 0300 	mov.w	r3, #0
1001353e:	f2c0 851f 	blt.w	10013f80 <_svfprintf_r+0x18a0>
10013542:	e9cd 0124 	strd	r0, r1, [sp, #144]	@ 0x90
10013546:	931f      	str	r3, [sp, #124]	@ 0x7c
10013548:	930c      	str	r3, [sp, #48]	@ 0x30
1001354a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001354c:	3b41      	subs	r3, #65	@ 0x41
1001354e:	2b25      	cmp	r3, #37	@ 0x25
10013550:	f200 8326 	bhi.w	10013ba0 <_svfprintf_r+0x14c0>
10013554:	e8df f013 	tbh	[pc, r3, lsl #1]
10013558:	032403ff 	.word	0x032403ff
1001355c:	03240324 	.word	0x03240324
10013560:	03fc03f8 	.word	0x03fc03f8
10013564:	03240324 	.word	0x03240324
10013568:	03240324 	.word	0x03240324
1001356c:	03240324 	.word	0x03240324
10013570:	03240324 	.word	0x03240324
10013574:	03240324 	.word	0x03240324
10013578:	03240324 	.word	0x03240324
1001357c:	03240324 	.word	0x03240324
10013580:	03240324 	.word	0x03240324
10013584:	03240324 	.word	0x03240324
10013588:	03240324 	.word	0x03240324
1001358c:	03240324 	.word	0x03240324
10013590:	03240324 	.word	0x03240324
10013594:	03240324 	.word	0x03240324
10013598:	03240324 	.word	0x03240324
1001359c:	03240324 	.word	0x03240324
100135a0:	03fc03f8 	.word	0x03fc03f8
100135a4:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
100135a8:	f7ff bb62 	b.w	10012c70 <_svfprintf_r+0x590>
100135ac:	1001d9b4 	.word	0x1001d9b4
100135b0:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
100135b4:	464c      	mov	r4, r9
100135b6:	f7ff bbc9 	b.w	10012d4c <_svfprintf_r+0x66c>
100135ba:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
100135be:	4bbd      	ldr	r3, [pc, #756]	@ (100138b4 <_svfprintf_r+0x11d4>)
100135c0:	9319      	str	r3, [sp, #100]	@ 0x64
100135c2:	f019 0220 	ands.w	r2, r9, #32
100135c6:	f000 8108 	beq.w	100137da <_svfprintf_r+0x10fa>
100135ca:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
100135cc:	3307      	adds	r3, #7
100135ce:	f023 0307 	bic.w	r3, r3, #7
100135d2:	4619      	mov	r1, r3
100135d4:	685a      	ldr	r2, [r3, #4]
100135d6:	f851 3b08 	ldr.w	r3, [r1], #8
100135da:	910d      	str	r1, [sp, #52]	@ 0x34
100135dc:	f019 0f01 	tst.w	r9, #1
100135e0:	d00a      	beq.n	100135f8 <_svfprintf_r+0xf18>
100135e2:	ea53 0102 	orrs.w	r1, r3, r2
100135e6:	d007      	beq.n	100135f8 <_svfprintf_r+0xf18>
100135e8:	990e      	ldr	r1, [sp, #56]	@ 0x38
100135ea:	f88d 10a1 	strb.w	r1, [sp, #161]	@ 0xa1
100135ee:	2130      	movs	r1, #48	@ 0x30
100135f0:	f049 0902 	orr.w	r9, r9, #2
100135f4:	f88d 10a0 	strb.w	r1, [sp, #160]	@ 0xa0
100135f8:	f429 6480 	bic.w	r4, r9, #1024	@ 0x400
100135fc:	2102      	movs	r1, #2
100135fe:	f7ff bb47 	b.w	10012c90 <_svfprintf_r+0x5b0>
10013602:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10013606:	4bac      	ldr	r3, [pc, #688]	@ (100138b8 <_svfprintf_r+0x11d8>)
10013608:	9319      	str	r3, [sp, #100]	@ 0x64
1001360a:	e7da      	b.n	100135c2 <_svfprintf_r+0xee2>
1001360c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
1001360e:	681b      	ldr	r3, [r3, #0]
10013610:	f88d 3114 	strb.w	r3, [sp, #276]	@ 0x114
10013614:	2301      	movs	r3, #1
10013616:	9306      	str	r3, [sp, #24]
10013618:	469b      	mov	fp, r3
1001361a:	ad45      	add	r5, sp, #276	@ 0x114
1001361c:	f7ff baaf 	b.w	10012b7e <_svfprintf_r+0x49e>
10013620:	9909      	ldr	r1, [sp, #36]	@ 0x24
10013622:	9807      	ldr	r0, [sp, #28]
10013624:	aa32      	add	r2, sp, #200	@ 0xc8
10013626:	f003 fb31 	bl	10016c8c <__ssprint_r>
1001362a:	2800      	cmp	r0, #0
1001362c:	f47f ad0f 	bne.w	1001304e <_svfprintf_r+0x96e>
10013630:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10013632:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10013636:	e411      	b.n	10012e5c <_svfprintf_r+0x77c>
10013638:	2140      	movs	r1, #64	@ 0x40
1001363a:	4658      	mov	r0, fp
1001363c:	f000 fe20 	bl	10014280 <_malloc_r>
10013640:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10013642:	6018      	str	r0, [r3, #0]
10013644:	6118      	str	r0, [r3, #16]
10013646:	2800      	cmp	r0, #0
10013648:	f000 8610 	beq.w	1001426c <_svfprintf_r+0x1b8c>
1001364c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
1001364e:	2340      	movs	r3, #64	@ 0x40
10013650:	6153      	str	r3, [r2, #20]
10013652:	f7ff b861 	b.w	10012718 <_svfprintf_r+0x38>
10013656:	9b08      	ldr	r3, [sp, #32]
10013658:	950c      	str	r5, [sp, #48]	@ 0x30
1001365a:	2b06      	cmp	r3, #6
1001365c:	4629      	mov	r1, r5
1001365e:	bf28      	it	cs
10013660:	2306      	movcs	r3, #6
10013662:	9508      	str	r5, [sp, #32]
10013664:	462a      	mov	r2, r5
10013666:	9306      	str	r3, [sp, #24]
10013668:	4d94      	ldr	r5, [pc, #592]	@ (100138bc <_svfprintf_r+0x11dc>)
1001366a:	960d      	str	r6, [sp, #52]	@ 0x34
1001366c:	469b      	mov	fp, r3
1001366e:	9114      	str	r1, [sp, #80]	@ 0x50
10013670:	9110      	str	r1, [sp, #64]	@ 0x40
10013672:	9112      	str	r1, [sp, #72]	@ 0x48
10013674:	f7ff ba1b 	b.w	10012aae <_svfprintf_r+0x3ce>
10013678:	2e10      	cmp	r6, #16
1001367a:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001367c:	f340 85e7 	ble.w	1001424e <_svfprintf_r+0x1b6e>
10013680:	488f      	ldr	r0, [pc, #572]	@ (100138c0 <_svfprintf_r+0x11e0>)
10013682:	f8dd a01c 	ldr.w	sl, [sp, #28]
10013686:	9015      	str	r0, [sp, #84]	@ 0x54
10013688:	4642      	mov	r2, r8
1001368a:	4621      	mov	r1, r4
1001368c:	46a8      	mov	r8, r5
1001368e:	9c09      	ldr	r4, [sp, #36]	@ 0x24
10013690:	2710      	movs	r7, #16
10013692:	4605      	mov	r5, r0
10013694:	e004      	b.n	100136a0 <_svfprintf_r+0xfc0>
10013696:	3208      	adds	r2, #8
10013698:	3e10      	subs	r6, #16
1001369a:	2e10      	cmp	r6, #16
1001369c:	f340 8223 	ble.w	10013ae6 <_svfprintf_r+0x1406>
100136a0:	3301      	adds	r3, #1
100136a2:	3110      	adds	r1, #16
100136a4:	2b07      	cmp	r3, #7
100136a6:	e9c2 5700 	strd	r5, r7, [r2]
100136aa:	e9cd 3133 	strd	r3, r1, [sp, #204]	@ 0xcc
100136ae:	ddf2      	ble.n	10013696 <_svfprintf_r+0xfb6>
100136b0:	aa32      	add	r2, sp, #200	@ 0xc8
100136b2:	4621      	mov	r1, r4
100136b4:	4650      	mov	r0, sl
100136b6:	f003 fae9 	bl	10016c8c <__ssprint_r>
100136ba:	2800      	cmp	r0, #0
100136bc:	f040 8117 	bne.w	100138ee <_svfprintf_r+0x120e>
100136c0:	e9dd 3133 	ldrd	r3, r1, [sp, #204]	@ 0xcc
100136c4:	aa35      	add	r2, sp, #212	@ 0xd4
100136c6:	e7e7      	b.n	10013698 <_svfprintf_r+0xfb8>
100136c8:	4621      	mov	r1, r4
100136ca:	461c      	mov	r4, r3
100136cc:	9b10      	ldr	r3, [sp, #64]	@ 0x40
100136ce:	f8cd b020 	str.w	fp, [sp, #32]
100136d2:	f8cd 9038 	str.w	r9, [sp, #56]	@ 0x38
100136d6:	4642      	mov	r2, r8
100136d8:	4f79      	ldr	r7, [pc, #484]	@ (100138c0 <_svfprintf_r+0x11e0>)
100136da:	f8dd 9050 	ldr.w	r9, [sp, #80]	@ 0x50
100136de:	f8dd 8078 	ldr.w	r8, [sp, #120]	@ 0x78
100136e2:	f8dd a06c 	ldr.w	sl, [sp, #108]	@ 0x6c
100136e6:	f8dd b01c 	ldr.w	fp, [sp, #28]
100136ea:	b383      	cbz	r3, 1001374e <_svfprintf_r+0x106e>
100136ec:	f1b9 0f00 	cmp.w	r9, #0
100136f0:	f000 80ff 	beq.w	100138f2 <_svfprintf_r+0x1212>
100136f4:	f109 39ff 	add.w	r9, r9, #4294967295	@ 0xffffffff
100136f8:	9833      	ldr	r0, [sp, #204]	@ 0xcc
100136fa:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
100136fc:	3001      	adds	r0, #1
100136fe:	4441      	add	r1, r8
10013700:	2807      	cmp	r0, #7
10013702:	e9c2 3800 	strd	r3, r8, [r2]
10013706:	9134      	str	r1, [sp, #208]	@ 0xd0
10013708:	9033      	str	r0, [sp, #204]	@ 0xcc
1001370a:	dc75      	bgt.n	100137f8 <_svfprintf_r+0x1118>
1001370c:	3208      	adds	r2, #8
1001370e:	9b08      	ldr	r3, [sp, #32]
10013710:	f89a 0000 	ldrb.w	r0, [sl]
10013714:	1b1e      	subs	r6, r3, r4
10013716:	4286      	cmp	r6, r0
10013718:	bfa8      	it	ge
1001371a:	4606      	movge	r6, r0
1001371c:	2e00      	cmp	r6, #0
1001371e:	dd0c      	ble.n	1001373a <_svfprintf_r+0x105a>
10013720:	9833      	ldr	r0, [sp, #204]	@ 0xcc
10013722:	3001      	adds	r0, #1
10013724:	4431      	add	r1, r6
10013726:	2807      	cmp	r0, #7
10013728:	e9c2 4600 	strd	r4, r6, [r2]
1001372c:	9134      	str	r1, [sp, #208]	@ 0xd0
1001372e:	9033      	str	r0, [sp, #204]	@ 0xcc
10013730:	f300 8167 	bgt.w	10013a02 <_svfprintf_r+0x1322>
10013734:	f89a 0000 	ldrb.w	r0, [sl]
10013738:	3208      	adds	r2, #8
1001373a:	2e00      	cmp	r6, #0
1001373c:	bfac      	ite	ge
1001373e:	1b85      	subge	r5, r0, r6
10013740:	4605      	movlt	r5, r0
10013742:	2d00      	cmp	r5, #0
10013744:	dc13      	bgt.n	1001376e <_svfprintf_r+0x108e>
10013746:	4404      	add	r4, r0
10013748:	9b10      	ldr	r3, [sp, #64]	@ 0x40
1001374a:	2b00      	cmp	r3, #0
1001374c:	d1ce      	bne.n	100136ec <_svfprintf_r+0x100c>
1001374e:	f1b9 0f00 	cmp.w	r9, #0
10013752:	d1cf      	bne.n	100136f4 <_svfprintf_r+0x1014>
10013754:	f8dd b020 	ldr.w	fp, [sp, #32]
10013758:	f8cd a06c 	str.w	sl, [sp, #108]	@ 0x6c
1001375c:	46a2      	mov	sl, r4
1001375e:	45da      	cmp	sl, fp
10013760:	f8dd 9038 	ldr.w	r9, [sp, #56]	@ 0x38
10013764:	4690      	mov	r8, r2
10013766:	460c      	mov	r4, r1
10013768:	bf28      	it	cs
1001376a:	46da      	movcs	sl, fp
1001376c:	e58b      	b.n	10013286 <_svfprintf_r+0xba6>
1001376e:	2d10      	cmp	r5, #16
10013770:	9833      	ldr	r0, [sp, #204]	@ 0xcc
10013772:	f340 853c 	ble.w	100141ee <_svfprintf_r+0x1b0e>
10013776:	4623      	mov	r3, r4
10013778:	463e      	mov	r6, r7
1001377a:	462c      	mov	r4, r5
1001377c:	461d      	mov	r5, r3
1001377e:	e004      	b.n	1001378a <_svfprintf_r+0x10aa>
10013780:	3c10      	subs	r4, #16
10013782:	2c10      	cmp	r4, #16
10013784:	f102 0208 	add.w	r2, r2, #8
10013788:	dd16      	ble.n	100137b8 <_svfprintf_r+0x10d8>
1001378a:	3001      	adds	r0, #1
1001378c:	3110      	adds	r1, #16
1001378e:	2310      	movs	r3, #16
10013790:	2807      	cmp	r0, #7
10013792:	e9cd 0133 	strd	r0, r1, [sp, #204]	@ 0xcc
10013796:	6017      	str	r7, [r2, #0]
10013798:	6053      	str	r3, [r2, #4]
1001379a:	ddf1      	ble.n	10013780 <_svfprintf_r+0x10a0>
1001379c:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001379e:	aa32      	add	r2, sp, #200	@ 0xc8
100137a0:	4658      	mov	r0, fp
100137a2:	f003 fa73 	bl	10016c8c <__ssprint_r>
100137a6:	2800      	cmp	r0, #0
100137a8:	f47f ae3f 	bne.w	1001342a <_svfprintf_r+0xd4a>
100137ac:	3c10      	subs	r4, #16
100137ae:	2c10      	cmp	r4, #16
100137b0:	e9dd 0133 	ldrd	r0, r1, [sp, #204]	@ 0xcc
100137b4:	aa35      	add	r2, sp, #212	@ 0xd4
100137b6:	dce8      	bgt.n	1001378a <_svfprintf_r+0x10aa>
100137b8:	462b      	mov	r3, r5
100137ba:	4625      	mov	r5, r4
100137bc:	461c      	mov	r4, r3
100137be:	3001      	adds	r0, #1
100137c0:	4429      	add	r1, r5
100137c2:	2807      	cmp	r0, #7
100137c4:	e9cd 0133 	strd	r0, r1, [sp, #204]	@ 0xcc
100137c8:	6016      	str	r6, [r2, #0]
100137ca:	6055      	str	r5, [r2, #4]
100137cc:	f300 837d 	bgt.w	10013eca <_svfprintf_r+0x17ea>
100137d0:	f89a 0000 	ldrb.w	r0, [sl]
100137d4:	3208      	adds	r2, #8
100137d6:	4404      	add	r4, r0
100137d8:	e7b6      	b.n	10013748 <_svfprintf_r+0x1068>
100137da:	990d      	ldr	r1, [sp, #52]	@ 0x34
100137dc:	f851 3b04 	ldr.w	r3, [r1], #4
100137e0:	910d      	str	r1, [sp, #52]	@ 0x34
100137e2:	f019 0110 	ands.w	r1, r9, #16
100137e6:	f47f aef9 	bne.w	100135dc <_svfprintf_r+0xefc>
100137ea:	f019 0040 	ands.w	r0, r9, #64	@ 0x40
100137ee:	f000 815f 	beq.w	10013ab0 <_svfprintf_r+0x13d0>
100137f2:	b29b      	uxth	r3, r3
100137f4:	460a      	mov	r2, r1
100137f6:	e6f1      	b.n	100135dc <_svfprintf_r+0xefc>
100137f8:	9909      	ldr	r1, [sp, #36]	@ 0x24
100137fa:	aa32      	add	r2, sp, #200	@ 0xc8
100137fc:	4658      	mov	r0, fp
100137fe:	f003 fa45 	bl	10016c8c <__ssprint_r>
10013802:	2800      	cmp	r0, #0
10013804:	f47f ae11 	bne.w	1001342a <_svfprintf_r+0xd4a>
10013808:	9934      	ldr	r1, [sp, #208]	@ 0xd0
1001380a:	aa35      	add	r2, sp, #212	@ 0xd4
1001380c:	e77f      	b.n	1001370e <_svfprintf_r+0x102e>
1001380e:	f404 6b80 	and.w	fp, r4, #1024	@ 0x400
10013812:	2100      	movs	r1, #0
10013814:	f8cd 8030 	str.w	r8, [sp, #48]	@ 0x30
10013818:	f8df 90a8 	ldr.w	r9, [pc, #168]	@ 100138c4 <_svfprintf_r+0x11e4>
1001381c:	f8dd 806c 	ldr.w	r8, [sp, #108]	@ 0x6c
10013820:	9406      	str	r4, [sp, #24]
10013822:	ad5e      	add	r5, sp, #376	@ 0x178
10013824:	f04f 3acc 	mov.w	sl, #3435973836	@ 0xcccccccc
10013828:	2705      	movs	r7, #5
1001382a:	468c      	mov	ip, r1
1001382c:	465e      	mov	r6, fp
1001382e:	e005      	b.n	1001383c <_svfprintf_r+0x115c>
10013830:	2b0a      	cmp	r3, #10
10013832:	f172 0200 	sbcs.w	r2, r2, #0
10013836:	d333      	bcc.n	100138a0 <_svfprintf_r+0x11c0>
10013838:	465b      	mov	r3, fp
1001383a:	4622      	mov	r2, r4
1001383c:	1899      	adds	r1, r3, r2
1001383e:	f141 0100 	adc.w	r1, r1, #0
10013842:	fba9 0401 	umull	r0, r4, r9, r1
10013846:	f024 0003 	bic.w	r0, r4, #3
1001384a:	eb00 0094 	add.w	r0, r0, r4, lsr #2
1001384e:	1a09      	subs	r1, r1, r0
10013850:	1a58      	subs	r0, r3, r1
10013852:	f162 0e00 	sbc.w	lr, r2, #0
10013856:	fb0a f400 	mul.w	r4, sl, r0
1001385a:	fba0 b009 	umull	fp, r0, r0, r9
1001385e:	fb09 440e 	mla	r4, r9, lr, r4
10013862:	f00b 0e01 	and.w	lr, fp, #1
10013866:	4404      	add	r4, r0
10013868:	fbae 0e07 	umull	r0, lr, lr, r7
1001386c:	1840      	adds	r0, r0, r1
1001386e:	ea4f 0b5b 	mov.w	fp, fp, lsr #1
10013872:	3030      	adds	r0, #48	@ 0x30
10013874:	f805 0c01 	strb.w	r0, [r5, #-1]
10013878:	ea4b 7bc4 	orr.w	fp, fp, r4, lsl #31
1001387c:	f10c 0c01 	add.w	ip, ip, #1
10013880:	3d01      	subs	r5, #1
10013882:	0864      	lsrs	r4, r4, #1
10013884:	2e00      	cmp	r6, #0
10013886:	d0d3      	beq.n	10013830 <_svfprintf_r+0x1150>
10013888:	f898 1000 	ldrb.w	r1, [r8]
1001388c:	458c      	cmp	ip, r1
1001388e:	d1cf      	bne.n	10013830 <_svfprintf_r+0x1150>
10013890:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
10013894:	d0cc      	beq.n	10013830 <_svfprintf_r+0x1150>
10013896:	2b0a      	cmp	r3, #10
10013898:	f172 0200 	sbcs.w	r2, r2, #0
1001389c:	f080 8136 	bcs.w	10013b0c <_svfprintf_r+0x142c>
100138a0:	f8cd 806c 	str.w	r8, [sp, #108]	@ 0x6c
100138a4:	9c06      	ldr	r4, [sp, #24]
100138a6:	f8dd 8030 	ldr.w	r8, [sp, #48]	@ 0x30
100138aa:	f8cd c04c 	str.w	ip, [sp, #76]	@ 0x4c
100138ae:	f7ff bb15 	b.w	10012edc <_svfprintf_r+0x7fc>
100138b2:	bf00      	nop
100138b4:	1001d994 	.word	0x1001d994
100138b8:	1001d980 	.word	0x1001d980
100138bc:	1001d9a8 	.word	0x1001d9a8
100138c0:	1001d9b4 	.word	0x1001d9b4
100138c4:	cccccccd 	.word	0xcccccccd
100138c8:	9909      	ldr	r1, [sp, #36]	@ 0x24
100138ca:	9807      	ldr	r0, [sp, #28]
100138cc:	9315      	str	r3, [sp, #84]	@ 0x54
100138ce:	aa32      	add	r2, sp, #200	@ 0xc8
100138d0:	f003 f9dc 	bl	10016c8c <__ssprint_r>
100138d4:	2800      	cmp	r0, #0
100138d6:	f47f abba 	bne.w	1001304e <_svfprintf_r+0x96e>
100138da:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
100138de:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
100138e0:	9b15      	ldr	r3, [sp, #84]	@ 0x54
100138e2:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
100138e6:	f7ff b83f 	b.w	10012968 <_svfprintf_r+0x288>
100138ea:	46a3      	mov	fp, r4
100138ec:	e59d      	b.n	1001342a <_svfprintf_r+0xd4a>
100138ee:	46d3      	mov	fp, sl
100138f0:	e59b      	b.n	1001342a <_svfprintf_r+0xd4a>
100138f2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
100138f4:	3b01      	subs	r3, #1
100138f6:	f10a 3aff 	add.w	sl, sl, #4294967295	@ 0xffffffff
100138fa:	9310      	str	r3, [sp, #64]	@ 0x40
100138fc:	e6fc      	b.n	100136f8 <_svfprintf_r+0x1018>
100138fe:	2901      	cmp	r1, #1
10013900:	464c      	mov	r4, r9
10013902:	f47f aadb 	bne.w	10012ebc <_svfprintf_r+0x7dc>
10013906:	e42f      	b.n	10013168 <_svfprintf_r+0xa88>
10013908:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001390a:	9807      	ldr	r0, [sp, #28]
1001390c:	aa32      	add	r2, sp, #200	@ 0xc8
1001390e:	f003 f9bd 	bl	10016c8c <__ssprint_r>
10013912:	2800      	cmp	r0, #0
10013914:	f47f ab9b 	bne.w	1001304e <_svfprintf_r+0x96e>
10013918:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001391a:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001391e:	f7ff ba8a 	b.w	10012e36 <_svfprintf_r+0x756>
10013922:	af30      	add	r7, sp, #192	@ 0xc0
10013924:	2208      	movs	r2, #8
10013926:	2100      	movs	r1, #0
10013928:	4638      	mov	r0, r7
1001392a:	952b      	str	r5, [sp, #172]	@ 0xac
1001392c:	f000 ffec 	bl	10014908 <memset>
10013930:	9b08      	ldr	r3, [sp, #32]
10013932:	1c58      	adds	r0, r3, #1
10013934:	f000 80c9 	beq.w	10013aca <_svfprintf_r+0x13ea>
10013938:	2400      	movs	r4, #0
1001393a:	f8cd 9018 	str.w	r9, [sp, #24]
1001393e:	46a3      	mov	fp, r4
10013940:	f8dd 901c 	ldr.w	r9, [sp, #28]
10013944:	469a      	mov	sl, r3
10013946:	e00c      	b.n	10013962 <_svfprintf_r+0x1282>
10013948:	a945      	add	r1, sp, #276	@ 0x114
1001394a:	4648      	mov	r0, r9
1001394c:	f001 f82e 	bl	100149ac <_wcrtomb_r>
10013950:	1c41      	adds	r1, r0, #1
10013952:	4458      	add	r0, fp
10013954:	f000 838e 	beq.w	10014074 <_svfprintf_r+0x1994>
10013958:	4550      	cmp	r0, sl
1001395a:	dc08      	bgt.n	1001396e <_svfprintf_r+0x128e>
1001395c:	f000 8441 	beq.w	100141e2 <_svfprintf_r+0x1b02>
10013960:	4683      	mov	fp, r0
10013962:	9a2b      	ldr	r2, [sp, #172]	@ 0xac
10013964:	5912      	ldr	r2, [r2, r4]
10013966:	463b      	mov	r3, r7
10013968:	3404      	adds	r4, #4
1001396a:	2a00      	cmp	r2, #0
1001396c:	d1ec      	bne.n	10013948 <_svfprintf_r+0x1268>
1001396e:	f8dd 9018 	ldr.w	r9, [sp, #24]
10013972:	f1bb 0f00 	cmp.w	fp, #0
10013976:	f000 80dd 	beq.w	10013b34 <_svfprintf_r+0x1454>
1001397a:	f1bb 0f63 	cmp.w	fp, #99	@ 0x63
1001397e:	f300 81b9 	bgt.w	10013cf4 <_svfprintf_r+0x1614>
10013982:	2300      	movs	r3, #0
10013984:	930c      	str	r3, [sp, #48]	@ 0x30
10013986:	ad45      	add	r5, sp, #276	@ 0x114
10013988:	2208      	movs	r2, #8
1001398a:	2100      	movs	r1, #0
1001398c:	4638      	mov	r0, r7
1001398e:	f000 ffbb 	bl	10014908 <memset>
10013992:	9807      	ldr	r0, [sp, #28]
10013994:	9700      	str	r7, [sp, #0]
10013996:	465b      	mov	r3, fp
10013998:	aa2b      	add	r2, sp, #172	@ 0xac
1001399a:	4629      	mov	r1, r5
1001399c:	f001 f962 	bl	10014c64 <_wcsrtombs_r>
100139a0:	4583      	cmp	fp, r0
100139a2:	f040 845a 	bne.w	1001425a <_svfprintf_r+0x1b7a>
100139a6:	2300      	movs	r3, #0
100139a8:	f805 300b 	strb.w	r3, [r5, fp]
100139ac:	ea2b 71eb 	bic.w	r1, fp, fp, asr #31
100139b0:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
100139b4:	960d      	str	r6, [sp, #52]	@ 0x34
100139b6:	9308      	str	r3, [sp, #32]
100139b8:	9106      	str	r1, [sp, #24]
100139ba:	9314      	str	r3, [sp, #80]	@ 0x50
100139bc:	9310      	str	r3, [sp, #64]	@ 0x40
100139be:	9312      	str	r3, [sp, #72]	@ 0x48
100139c0:	f7ff b875 	b.w	10012aae <_svfprintf_r+0x3ce>
100139c4:	46cb      	mov	fp, r9
100139c6:	e530      	b.n	1001342a <_svfprintf_r+0xd4a>
100139c8:	4a74      	ldr	r2, [pc, #464]	@ (10013b9c <_svfprintf_r+0x14bc>)
100139ca:	9215      	str	r2, [sp, #84]	@ 0x54
100139cc:	3301      	adds	r3, #1
100139ce:	9a15      	ldr	r2, [sp, #84]	@ 0x54
100139d0:	f8c8 2000 	str.w	r2, [r8]
100139d4:	442c      	add	r4, r5
100139d6:	2b07      	cmp	r3, #7
100139d8:	f8c8 5004 	str.w	r5, [r8, #4]
100139dc:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
100139e0:	f77e afff 	ble.w	100129e2 <_svfprintf_r+0x302>
100139e4:	f7ff bb69 	b.w	100130ba <_svfprintf_r+0x9da>
100139e8:	9909      	ldr	r1, [sp, #36]	@ 0x24
100139ea:	9807      	ldr	r0, [sp, #28]
100139ec:	aa32      	add	r2, sp, #200	@ 0xc8
100139ee:	f003 f94d 	bl	10016c8c <__ssprint_r>
100139f2:	2800      	cmp	r0, #0
100139f4:	f47f ab2b 	bne.w	1001304e <_svfprintf_r+0x96e>
100139f8:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
100139fa:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
100139fe:	f7fe bfda 	b.w	100129b6 <_svfprintf_r+0x2d6>
10013a02:	9909      	ldr	r1, [sp, #36]	@ 0x24
10013a04:	aa32      	add	r2, sp, #200	@ 0xc8
10013a06:	4658      	mov	r0, fp
10013a08:	f003 f940 	bl	10016c8c <__ssprint_r>
10013a0c:	2800      	cmp	r0, #0
10013a0e:	f47f ad0c 	bne.w	1001342a <_svfprintf_r+0xd4a>
10013a12:	f89a 0000 	ldrb.w	r0, [sl]
10013a16:	9934      	ldr	r1, [sp, #208]	@ 0xd0
10013a18:	aa35      	add	r2, sp, #212	@ 0xd4
10013a1a:	e68e      	b.n	1001373a <_svfprintf_r+0x105a>
10013a1c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10013a1e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
10013a20:	681b      	ldr	r3, [r3, #0]
10013a22:	601a      	str	r2, [r3, #0]
10013a24:	f7ff b966 	b.w	10012cf4 <_svfprintf_r+0x614>
10013a28:	f8dd 9020 	ldr.w	r9, [sp, #32]
10013a2c:	9b15      	ldr	r3, [sp, #84]	@ 0x54
10013a2e:	603b      	str	r3, [r7, #0]
10013a30:	3601      	adds	r6, #1
10013a32:	4444      	add	r4, r8
10013a34:	2e07      	cmp	r6, #7
10013a36:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
10013a3a:	f8c7 8004 	str.w	r8, [r7, #4]
10013a3e:	f77f ab7f 	ble.w	10013140 <_svfprintf_r+0xa60>
10013a42:	e487      	b.n	10013354 <_svfprintf_r+0xc74>
10013a44:	9b18      	ldr	r3, [sp, #96]	@ 0x60
10013a46:	991a      	ldr	r1, [sp, #104]	@ 0x68
10013a48:	441c      	add	r4, r3
10013a4a:	e9c8 1300 	strd	r1, r3, [r8]
10013a4e:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10013a50:	9434      	str	r4, [sp, #208]	@ 0xd0
10013a52:	3301      	adds	r3, #1
10013a54:	2b07      	cmp	r3, #7
10013a56:	9333      	str	r3, [sp, #204]	@ 0xcc
10013a58:	f300 8164 	bgt.w	10013d24 <_svfprintf_r+0x1644>
10013a5c:	f108 0808 	add.w	r8, r8, #8
10013a60:	2a00      	cmp	r2, #0
10013a62:	f6bf ab1e 	bge.w	100130a2 <_svfprintf_r+0x9c2>
10013a66:	4256      	negs	r6, r2
10013a68:	3210      	adds	r2, #16
10013a6a:	4a4c      	ldr	r2, [pc, #304]	@ (10013b9c <_svfprintf_r+0x14bc>)
10013a6c:	9215      	str	r2, [sp, #84]	@ 0x54
10013a6e:	f280 82e7 	bge.w	10014040 <_svfprintf_r+0x1960>
10013a72:	46aa      	mov	sl, r5
10013a74:	2710      	movs	r7, #16
10013a76:	4615      	mov	r5, r2
10013a78:	e005      	b.n	10013a86 <_svfprintf_r+0x13a6>
10013a7a:	f108 0808 	add.w	r8, r8, #8
10013a7e:	3e10      	subs	r6, #16
10013a80:	2e10      	cmp	r6, #16
10013a82:	f340 82dc 	ble.w	1001403e <_svfprintf_r+0x195e>
10013a86:	3301      	adds	r3, #1
10013a88:	3410      	adds	r4, #16
10013a8a:	2b07      	cmp	r3, #7
10013a8c:	e9c8 5700 	strd	r5, r7, [r8]
10013a90:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10013a94:	ddf1      	ble.n	10013a7a <_svfprintf_r+0x139a>
10013a96:	9909      	ldr	r1, [sp, #36]	@ 0x24
10013a98:	9807      	ldr	r0, [sp, #28]
10013a9a:	aa32      	add	r2, sp, #200	@ 0xc8
10013a9c:	f003 f8f6 	bl	10016c8c <__ssprint_r>
10013aa0:	2800      	cmp	r0, #0
10013aa2:	f47f aad4 	bne.w	1001304e <_svfprintf_r+0x96e>
10013aa6:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
10013aaa:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10013aae:	e7e6      	b.n	10013a7e <_svfprintf_r+0x139e>
10013ab0:	f419 7200 	ands.w	r2, r9, #512	@ 0x200
10013ab4:	bf1c      	itt	ne
10013ab6:	b2db      	uxtbne	r3, r3
10013ab8:	4602      	movne	r2, r0
10013aba:	e58f      	b.n	100135dc <_svfprintf_r+0xefc>
10013abc:	f419 7200 	ands.w	r2, r9, #512	@ 0x200
10013ac0:	bf1c      	itt	ne
10013ac2:	b2db      	uxtbne	r3, r3
10013ac4:	4602      	movne	r2, r0
10013ac6:	f7ff b8e0 	b.w	10012c8a <_svfprintf_r+0x5aa>
10013aca:	2300      	movs	r3, #0
10013acc:	9807      	ldr	r0, [sp, #28]
10013ace:	9700      	str	r7, [sp, #0]
10013ad0:	aa2b      	add	r2, sp, #172	@ 0xac
10013ad2:	4619      	mov	r1, r3
10013ad4:	f001 f8c6 	bl	10014c64 <_wcsrtombs_r>
10013ad8:	f1b0 3fff 	cmp.w	r0, #4294967295	@ 0xffffffff
10013adc:	4683      	mov	fp, r0
10013ade:	f000 82c9 	beq.w	10014074 <_svfprintf_r+0x1994>
10013ae2:	952b      	str	r5, [sp, #172]	@ 0xac
10013ae4:	e745      	b.n	10013972 <_svfprintf_r+0x1292>
10013ae6:	4645      	mov	r5, r8
10013ae8:	460c      	mov	r4, r1
10013aea:	4690      	mov	r8, r2
10013aec:	3301      	adds	r3, #1
10013aee:	9a15      	ldr	r2, [sp, #84]	@ 0x54
10013af0:	f8c8 2000 	str.w	r2, [r8]
10013af4:	4434      	add	r4, r6
10013af6:	2b07      	cmp	r3, #7
10013af8:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10013afc:	f8c8 6004 	str.w	r6, [r8, #4]
10013b00:	f300 8103 	bgt.w	10013d0a <_svfprintf_r+0x162a>
10013b04:	f108 0808 	add.w	r8, r8, #8
10013b08:	f7ff bbb6 	b.w	10013278 <_svfprintf_r+0xb98>
10013b0c:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
10013b0e:	991d      	ldr	r1, [sp, #116]	@ 0x74
10013b10:	1aed      	subs	r5, r5, r3
10013b12:	461a      	mov	r2, r3
10013b14:	4628      	mov	r0, r5
10013b16:	f7fe fd29 	bl	1001256c <strncpy>
10013b1a:	f898 3001 	ldrb.w	r3, [r8, #1]
10013b1e:	b10b      	cbz	r3, 10013b24 <_svfprintf_r+0x1444>
10013b20:	f108 0801 	add.w	r8, r8, #1
10013b24:	f04f 0c00 	mov.w	ip, #0
10013b28:	e686      	b.n	10013838 <_svfprintf_r+0x1158>
10013b2a:	222d      	movs	r2, #45	@ 0x2d
10013b2c:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
10013b30:	f7fe bfac 	b.w	10012a8c <_svfprintf_r+0x3ac>
10013b34:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
10013b38:	960d      	str	r6, [sp, #52]	@ 0x34
10013b3a:	f8cd b018 	str.w	fp, [sp, #24]
10013b3e:	f8cd b020 	str.w	fp, [sp, #32]
10013b42:	f8cd b050 	str.w	fp, [sp, #80]	@ 0x50
10013b46:	f8cd b040 	str.w	fp, [sp, #64]	@ 0x40
10013b4a:	f8cd b048 	str.w	fp, [sp, #72]	@ 0x48
10013b4e:	f8cd b030 	str.w	fp, [sp, #48]	@ 0x30
10013b52:	f7fe bfac 	b.w	10012aae <_svfprintf_r+0x3ce>
10013b56:	9909      	ldr	r1, [sp, #36]	@ 0x24
10013b58:	9807      	ldr	r0, [sp, #28]
10013b5a:	aa32      	add	r2, sp, #200	@ 0xc8
10013b5c:	f003 f896 	bl	10016c8c <__ssprint_r>
10013b60:	2800      	cmp	r0, #0
10013b62:	f47f aa74 	bne.w	1001304e <_svfprintf_r+0x96e>
10013b66:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
10013b68:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10013b6a:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10013b6e:	f7ff ba81 	b.w	10013074 <_svfprintf_r+0x994>
10013b72:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
10013b74:	ebab 060a 	sub.w	r6, fp, sl
10013b78:	1b5d      	subs	r5, r3, r5
10013b7a:	42ae      	cmp	r6, r5
10013b7c:	bfa8      	it	ge
10013b7e:	462e      	movge	r6, r5
10013b80:	f7ff bbae 	b.w	100132e0 <_svfprintf_r+0xc00>
10013b84:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10013b86:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
10013b88:	681b      	ldr	r3, [r3, #0]
10013b8a:	801a      	strh	r2, [r3, #0]
10013b8c:	f7ff b8b2 	b.w	10012cf4 <_svfprintf_r+0x614>
10013b90:	f343 12c0 	sbfx	r2, r3, #7, #1
10013b94:	4611      	mov	r1, r2
10013b96:	b25b      	sxtb	r3, r3
10013b98:	f7ff b83d 	b.w	10012c16 <_svfprintf_r+0x536>
10013b9c:	1001d9b4 	.word	0x1001d9b4
10013ba0:	9e08      	ldr	r6, [sp, #32]
10013ba2:	2302      	movs	r3, #2
10013ba4:	e9cd 3600 	strd	r3, r6, [sp]
10013ba8:	ab30      	add	r3, sp, #192	@ 0xc0
10013baa:	9304      	str	r3, [sp, #16]
10013bac:	ab2b      	add	r3, sp, #172	@ 0xac
10013bae:	9303      	str	r3, [sp, #12]
10013bb0:	ab29      	add	r3, sp, #164	@ 0xa4
10013bb2:	9302      	str	r3, [sp, #8]
10013bb4:	9807      	ldr	r0, [sp, #28]
10013bb6:	e9dd 2324 	ldrd	r2, r3, [sp, #144]	@ 0x90
10013bba:	f001 f8f5 	bl	10014da8 <_dtoa_r>
10013bbe:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10013bc0:	2b67      	cmp	r3, #103	@ 0x67
10013bc2:	4605      	mov	r5, r0
10013bc4:	f000 813b 	beq.w	10013e3e <_svfprintf_r+0x175e>
10013bc8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10013bca:	2b47      	cmp	r3, #71	@ 0x47
10013bcc:	f000 8137 	beq.w	10013e3e <_svfprintf_r+0x175e>
10013bd0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10013bd2:	f023 0720 	bic.w	r7, r3, #32
10013bd6:	2f46      	cmp	r7, #70	@ 0x46
10013bd8:	eb00 0406 	add.w	r4, r0, r6
10013bdc:	d105      	bne.n	10013bea <_svfprintf_r+0x150a>
10013bde:	7803      	ldrb	r3, [r0, #0]
10013be0:	2b30      	cmp	r3, #48	@ 0x30
10013be2:	f000 82f1 	beq.w	100141c8 <_svfprintf_r+0x1ae8>
10013be6:	9e29      	ldr	r6, [sp, #164]	@ 0xa4
10013be8:	4434      	add	r4, r6
10013bea:	e9dd 0124 	ldrd	r0, r1, [sp, #144]	@ 0x90
10013bee:	2200      	movs	r2, #0
10013bf0:	2300      	movs	r3, #0
10013bf2:	f007 fac5 	bl	1001b180 <__aeabi_dcmpeq>
10013bf6:	2800      	cmp	r0, #0
10013bf8:	f000 813f 	beq.w	10013e7a <_svfprintf_r+0x179a>
10013bfc:	4623      	mov	r3, r4
10013bfe:	1b5b      	subs	r3, r3, r5
10013c00:	9313      	str	r3, [sp, #76]	@ 0x4c
10013c02:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
10013c04:	9212      	str	r2, [sp, #72]	@ 0x48
10013c06:	2f47      	cmp	r7, #71	@ 0x47
10013c08:	f000 8121 	beq.w	10013e4e <_svfprintf_r+0x176e>
10013c0c:	2f46      	cmp	r7, #70	@ 0x46
10013c0e:	f000 81e3 	beq.w	10013fd8 <_svfprintf_r+0x18f8>
10013c12:	990e      	ldr	r1, [sp, #56]	@ 0x38
10013c14:	1e53      	subs	r3, r2, #1
10013c16:	2961      	cmp	r1, #97	@ 0x61
10013c18:	9329      	str	r3, [sp, #164]	@ 0xa4
10013c1a:	f000 8316 	beq.w	1001424a <_svfprintf_r+0x1b6a>
10013c1e:	2941      	cmp	r1, #65	@ 0x41
10013c20:	f040 8120 	bne.w	10013e64 <_svfprintf_r+0x1784>
10013c24:	2150      	movs	r1, #80	@ 0x50
10013c26:	2001      	movs	r0, #1
10013c28:	2b00      	cmp	r3, #0
10013c2a:	bfb6      	itet	lt
10013c2c:	f1c2 0301 	rsblt	r3, r2, #1
10013c30:	222b      	movge	r2, #43	@ 0x2b
10013c32:	222d      	movlt	r2, #45	@ 0x2d
10013c34:	2b09      	cmp	r3, #9
10013c36:	f88d 10b0 	strb.w	r1, [sp, #176]	@ 0xb0
10013c3a:	f88d 20b1 	strb.w	r2, [sp, #177]	@ 0xb1
10013c3e:	f340 8227 	ble.w	10014090 <_svfprintf_r+0x19b0>
10013c42:	f10d 04c7 	add.w	r4, sp, #199	@ 0xc7
10013c46:	4eae      	ldr	r6, [pc, #696]	@ (10013f00 <_svfprintf_r+0x1820>)
10013c48:	4622      	mov	r2, r4
10013c4a:	4610      	mov	r0, r2
10013c4c:	fba6 1203 	umull	r1, r2, r6, r3
10013c50:	08d2      	lsrs	r2, r2, #3
10013c52:	eb02 0182 	add.w	r1, r2, r2, lsl #2
10013c56:	eba3 0141 	sub.w	r1, r3, r1, lsl #1
10013c5a:	3130      	adds	r1, #48	@ 0x30
10013c5c:	f800 1c01 	strb.w	r1, [r0, #-1]
10013c60:	4619      	mov	r1, r3
10013c62:	2963      	cmp	r1, #99	@ 0x63
10013c64:	4613      	mov	r3, r2
10013c66:	f100 32ff 	add.w	r2, r0, #4294967295	@ 0xffffffff
10013c6a:	dcee      	bgt.n	10013c4a <_svfprintf_r+0x156a>
10013c6c:	3330      	adds	r3, #48	@ 0x30
10013c6e:	f802 3c01 	strb.w	r3, [r2, #-1]
10013c72:	1e83      	subs	r3, r0, #2
10013c74:	42a3      	cmp	r3, r4
10013c76:	f080 82ed 	bcs.w	10014254 <_svfprintf_r+0x1b74>
10013c7a:	f10d 02b1 	add.w	r2, sp, #177	@ 0xb1
10013c7e:	f813 1b01 	ldrb.w	r1, [r3], #1
10013c82:	f802 1f01 	strb.w	r1, [r2, #1]!
10013c86:	42a3      	cmp	r3, r4
10013c88:	d1f9      	bne.n	10013c7e <_svfprintf_r+0x159e>
10013c8a:	ab5e      	add	r3, sp, #376	@ 0x178
10013c8c:	1a18      	subs	r0, r3, r0
10013c8e:	f1a0 03ad 	sub.w	r3, r0, #173	@ 0xad
10013c92:	931c      	str	r3, [sp, #112]	@ 0x70
10013c94:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
10013c96:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
10013c98:	2b01      	cmp	r3, #1
10013c9a:	eb03 0b02 	add.w	fp, r3, r2
10013c9e:	f340 822a 	ble.w	100140f6 <_svfprintf_r+0x1a16>
10013ca2:	9b18      	ldr	r3, [sp, #96]	@ 0x60
10013ca4:	449b      	add	fp, r3
10013ca6:	9b06      	ldr	r3, [sp, #24]
10013ca8:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
10013cac:	f443 7980 	orr.w	r9, r3, #256	@ 0x100
10013cb0:	ea2b 72eb 	bic.w	r2, fp, fp, asr #31
10013cb4:	2300      	movs	r3, #0
10013cb6:	9314      	str	r3, [sp, #80]	@ 0x50
10013cb8:	9206      	str	r2, [sp, #24]
10013cba:	9310      	str	r3, [sp, #64]	@ 0x40
10013cbc:	9312      	str	r3, [sp, #72]	@ 0x48
10013cbe:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
10013cc0:	2b00      	cmp	r3, #0
10013cc2:	f040 80d3 	bne.w	10013e6c <_svfprintf_r+0x178c>
10013cc6:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
10013cca:	9308      	str	r3, [sp, #32]
10013ccc:	f7fe beef 	b.w	10012aae <_svfprintf_r+0x3ce>
10013cd0:	9c09      	ldr	r4, [sp, #36]	@ 0x24
10013cd2:	aa32      	add	r2, sp, #200	@ 0xc8
10013cd4:	4621      	mov	r1, r4
10013cd6:	4658      	mov	r0, fp
10013cd8:	f002 ffd8 	bl	10016c8c <__ssprint_r>
10013cdc:	89a3      	ldrh	r3, [r4, #12]
10013cde:	f003 0340 	and.w	r3, r3, #64	@ 0x40
10013ce2:	f7fe be06 	b.w	100128f2 <_svfprintf_r+0x212>
10013ce6:	4628      	mov	r0, r5
10013ce8:	960d      	str	r6, [sp, #52]	@ 0x34
10013cea:	f002 fa29 	bl	10016140 <strlen>
10013cee:	4683      	mov	fp, r0
10013cf0:	f7fe bf74 	b.w	10012bdc <_svfprintf_r+0x4fc>
10013cf4:	9807      	ldr	r0, [sp, #28]
10013cf6:	f10b 0101 	add.w	r1, fp, #1
10013cfa:	f000 fac1 	bl	10014280 <_malloc_r>
10013cfe:	4605      	mov	r5, r0
10013d00:	2800      	cmp	r0, #0
10013d02:	f000 81b7 	beq.w	10014074 <_svfprintf_r+0x1994>
10013d06:	900c      	str	r0, [sp, #48]	@ 0x30
10013d08:	e63e      	b.n	10013988 <_svfprintf_r+0x12a8>
10013d0a:	9909      	ldr	r1, [sp, #36]	@ 0x24
10013d0c:	9807      	ldr	r0, [sp, #28]
10013d0e:	aa32      	add	r2, sp, #200	@ 0xc8
10013d10:	f002 ffbc 	bl	10016c8c <__ssprint_r>
10013d14:	2800      	cmp	r0, #0
10013d16:	f47f a99a 	bne.w	1001304e <_svfprintf_r+0x96e>
10013d1a:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10013d1c:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10013d20:	f7ff baaa 	b.w	10013278 <_svfprintf_r+0xb98>
10013d24:	9909      	ldr	r1, [sp, #36]	@ 0x24
10013d26:	9807      	ldr	r0, [sp, #28]
10013d28:	aa32      	add	r2, sp, #200	@ 0xc8
10013d2a:	f002 ffaf 	bl	10016c8c <__ssprint_r>
10013d2e:	2800      	cmp	r0, #0
10013d30:	f47f a98d 	bne.w	1001304e <_svfprintf_r+0x96e>
10013d34:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
10013d38:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
10013d3a:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10013d3e:	e68f      	b.n	10013a60 <_svfprintf_r+0x1380>
10013d40:	2306      	movs	r3, #6
10013d42:	9308      	str	r3, [sp, #32]
10013d44:	f7ff bbf1 	b.w	1001352a <_svfprintf_r+0xe4a>
10013d48:	9b08      	ldr	r3, [sp, #32]
10013d4a:	1c5e      	adds	r6, r3, #1
10013d4c:	2302      	movs	r3, #2
10013d4e:	e729      	b.n	10013ba4 <_svfprintf_r+0x14c4>
10013d50:	9e08      	ldr	r6, [sp, #32]
10013d52:	2303      	movs	r3, #3
10013d54:	e726      	b.n	10013ba4 <_svfprintf_r+0x14c4>
10013d56:	aa29      	add	r2, sp, #164	@ 0xa4
10013d58:	e9dd 0124 	ldrd	r0, r1, [sp, #144]	@ 0x90
10013d5c:	f002 fa5c 	bl	10016218 <frexp>
10013d60:	2200      	movs	r2, #0
10013d62:	f04f 537f 	mov.w	r3, #1069547520	@ 0x3fc00000
10013d66:	f006 ffa3 	bl	1001acb0 <__aeabi_dmul>
10013d6a:	4602      	mov	r2, r0
10013d6c:	460b      	mov	r3, r1
10013d6e:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
10013d72:	2200      	movs	r2, #0
10013d74:	2300      	movs	r3, #0
10013d76:	f007 fa03 	bl	1001b180 <__aeabi_dcmpeq>
10013d7a:	2800      	cmp	r0, #0
10013d7c:	f040 81c0 	bne.w	10014100 <_svfprintf_r+0x1a20>
10013d80:	4b60      	ldr	r3, [pc, #384]	@ (10013f04 <_svfprintf_r+0x1824>)
10013d82:	9312      	str	r3, [sp, #72]	@ 0x48
10013d84:	9b08      	ldr	r3, [sp, #32]
10013d86:	f8cd 804c 	str.w	r8, [sp, #76]	@ 0x4c
10013d8a:	f103 39ff 	add.w	r9, r3, #4294967295	@ 0xffffffff
10013d8e:	462e      	mov	r6, r5
10013d90:	9514      	str	r5, [sp, #80]	@ 0x50
10013d92:	f8dd b048 	ldr.w	fp, [sp, #72]	@ 0x48
10013d96:	464d      	mov	r5, r9
10013d98:	e9dd 8910 	ldrd	r8, r9, [sp, #64]	@ 0x40
10013d9c:	e005      	b.n	10013daa <_svfprintf_r+0x16ca>
10013d9e:	2200      	movs	r2, #0
10013da0:	2300      	movs	r3, #0
10013da2:	f007 f9ed 	bl	1001b180 <__aeabi_dcmpeq>
10013da6:	b9f0      	cbnz	r0, 10013de6 <_svfprintf_r+0x1706>
10013da8:	463d      	mov	r5, r7
10013daa:	4b57      	ldr	r3, [pc, #348]	@ (10013f08 <_svfprintf_r+0x1828>)
10013dac:	2200      	movs	r2, #0
10013dae:	4640      	mov	r0, r8
10013db0:	4649      	mov	r1, r9
10013db2:	f006 ff7d 	bl	1001acb0 <__aeabi_dmul>
10013db6:	4689      	mov	r9, r1
10013db8:	4680      	mov	r8, r0
10013dba:	f007 fa29 	bl	1001b210 <__aeabi_d2iz>
10013dbe:	4604      	mov	r4, r0
10013dc0:	f006 ff0c 	bl	1001abdc <__aeabi_i2d>
10013dc4:	460b      	mov	r3, r1
10013dc6:	4602      	mov	r2, r0
10013dc8:	4649      	mov	r1, r9
10013dca:	4640      	mov	r0, r8
10013dcc:	f006 fdb8 	bl	1001a940 <__aeabi_dsub>
10013dd0:	f81b 3004 	ldrb.w	r3, [fp, r4]
10013dd4:	46b2      	mov	sl, r6
10013dd6:	f806 3b01 	strb.w	r3, [r6], #1
10013dda:	1c6b      	adds	r3, r5, #1
10013ddc:	f105 37ff 	add.w	r7, r5, #4294967295	@ 0xffffffff
10013de0:	4680      	mov	r8, r0
10013de2:	4689      	mov	r9, r1
10013de4:	d1db      	bne.n	10013d9e <_svfprintf_r+0x16be>
10013de6:	46cb      	mov	fp, r9
10013de8:	4657      	mov	r7, sl
10013dea:	46c2      	mov	sl, r8
10013dec:	4b47      	ldr	r3, [pc, #284]	@ (10013f0c <_svfprintf_r+0x182c>)
10013dee:	f8dd 804c 	ldr.w	r8, [sp, #76]	@ 0x4c
10013df2:	2200      	movs	r2, #0
10013df4:	4650      	mov	r0, sl
10013df6:	4659      	mov	r1, fp
10013df8:	46a9      	mov	r9, r5
10013dfa:	9d14      	ldr	r5, [sp, #80]	@ 0x50
10013dfc:	f007 f9e8 	bl	1001b1d0 <__aeabi_dcmpgt>
10013e00:	2800      	cmp	r0, #0
10013e02:	f040 8153 	bne.w	100140ac <_svfprintf_r+0x19cc>
10013e06:	4b41      	ldr	r3, [pc, #260]	@ (10013f0c <_svfprintf_r+0x182c>)
10013e08:	4650      	mov	r0, sl
10013e0a:	4659      	mov	r1, fp
10013e0c:	2200      	movs	r2, #0
10013e0e:	f007 f9b7 	bl	1001b180 <__aeabi_dcmpeq>
10013e12:	b110      	cbz	r0, 10013e1a <_svfprintf_r+0x173a>
10013e14:	07e2      	lsls	r2, r4, #31
10013e16:	f100 8149 	bmi.w	100140ac <_svfprintf_r+0x19cc>
10013e1a:	f1b9 0f00 	cmp.w	r9, #0
10013e1e:	f2c0 815f 	blt.w	100140e0 <_svfprintf_r+0x1a00>
10013e22:	f109 0301 	add.w	r3, r9, #1
10013e26:	4433      	add	r3, r6
10013e28:	2230      	movs	r2, #48	@ 0x30
10013e2a:	f806 2b01 	strb.w	r2, [r6], #1
10013e2e:	42b3      	cmp	r3, r6
10013e30:	d1fb      	bne.n	10013e2a <_svfprintf_r+0x174a>
10013e32:	1b5b      	subs	r3, r3, r5
10013e34:	9313      	str	r3, [sp, #76]	@ 0x4c
10013e36:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10013e38:	f023 0720 	bic.w	r7, r3, #32
10013e3c:	e6e1      	b.n	10013c02 <_svfprintf_r+0x1522>
10013e3e:	9b06      	ldr	r3, [sp, #24]
10013e40:	07db      	lsls	r3, r3, #31
10013e42:	f100 80f9 	bmi.w	10014038 <_svfprintf_r+0x1958>
10013e46:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
10013e48:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
10013e4a:	1b5b      	subs	r3, r3, r5
10013e4c:	9313      	str	r3, [sp, #76]	@ 0x4c
10013e4e:	1cd3      	adds	r3, r2, #3
10013e50:	9212      	str	r2, [sp, #72]	@ 0x48
10013e52:	db02      	blt.n	10013e5a <_svfprintf_r+0x177a>
10013e54:	9b08      	ldr	r3, [sp, #32]
10013e56:	4293      	cmp	r3, r2
10013e58:	da1b      	bge.n	10013e92 <_svfprintf_r+0x17b2>
10013e5a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10013e5c:	3b02      	subs	r3, #2
10013e5e:	930e      	str	r3, [sp, #56]	@ 0x38
10013e60:	1e53      	subs	r3, r2, #1
10013e62:	9329      	str	r3, [sp, #164]	@ 0xa4
10013e64:	f89d 1038 	ldrb.w	r1, [sp, #56]	@ 0x38
10013e68:	2000      	movs	r0, #0
10013e6a:	e6dd      	b.n	10013c28 <_svfprintf_r+0x1548>
10013e6c:	222d      	movs	r2, #45	@ 0x2d
10013e6e:	2300      	movs	r3, #0
10013e70:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
10013e74:	9308      	str	r3, [sp, #32]
10013e76:	f7fe be1d 	b.w	10012ab4 <_svfprintf_r+0x3d4>
10013e7a:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
10013e7c:	42a3      	cmp	r3, r4
10013e7e:	f4bf aebe 	bcs.w	10013bfe <_svfprintf_r+0x151e>
10013e82:	2130      	movs	r1, #48	@ 0x30
10013e84:	1c5a      	adds	r2, r3, #1
10013e86:	9230      	str	r2, [sp, #192]	@ 0xc0
10013e88:	7019      	strb	r1, [r3, #0]
10013e8a:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
10013e8c:	429c      	cmp	r4, r3
10013e8e:	d8f9      	bhi.n	10013e84 <_svfprintf_r+0x17a4>
10013e90:	e6b5      	b.n	10013bfe <_svfprintf_r+0x151e>
10013e92:	9913      	ldr	r1, [sp, #76]	@ 0x4c
10013e94:	428a      	cmp	r2, r1
10013e96:	f2c0 80c4 	blt.w	10014022 <_svfprintf_r+0x1942>
10013e9a:	9b06      	ldr	r3, [sp, #24]
10013e9c:	07de      	lsls	r6, r3, #31
10013e9e:	f140 8184 	bpl.w	100141aa <_svfprintf_r+0x1aca>
10013ea2:	9b18      	ldr	r3, [sp, #96]	@ 0x60
10013ea4:	eb02 0b03 	add.w	fp, r2, r3
10013ea8:	9b06      	ldr	r3, [sp, #24]
10013eaa:	055c      	lsls	r4, r3, #21
10013eac:	d502      	bpl.n	10013eb4 <_svfprintf_r+0x17d4>
10013eae:	2a00      	cmp	r2, #0
10013eb0:	f300 814d 	bgt.w	1001414e <_svfprintf_r+0x1a6e>
10013eb4:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
10013eb8:	9306      	str	r3, [sp, #24]
10013eba:	f8dd 9054 	ldr.w	r9, [sp, #84]	@ 0x54
10013ebe:	2367      	movs	r3, #103	@ 0x67
10013ec0:	930e      	str	r3, [sp, #56]	@ 0x38
10013ec2:	2300      	movs	r3, #0
10013ec4:	9314      	str	r3, [sp, #80]	@ 0x50
10013ec6:	9310      	str	r3, [sp, #64]	@ 0x40
10013ec8:	e6f9      	b.n	10013cbe <_svfprintf_r+0x15de>
10013eca:	9909      	ldr	r1, [sp, #36]	@ 0x24
10013ecc:	aa32      	add	r2, sp, #200	@ 0xc8
10013ece:	4658      	mov	r0, fp
10013ed0:	f002 fedc 	bl	10016c8c <__ssprint_r>
10013ed4:	2800      	cmp	r0, #0
10013ed6:	f47f aaa8 	bne.w	1001342a <_svfprintf_r+0xd4a>
10013eda:	f89a 0000 	ldrb.w	r0, [sl]
10013ede:	9934      	ldr	r1, [sp, #208]	@ 0xd0
10013ee0:	aa35      	add	r2, sp, #212	@ 0xd4
10013ee2:	4404      	add	r4, r0
10013ee4:	e430      	b.n	10013748 <_svfprintf_r+0x1068>
10013ee6:	9909      	ldr	r1, [sp, #36]	@ 0x24
10013ee8:	9807      	ldr	r0, [sp, #28]
10013eea:	aa32      	add	r2, sp, #200	@ 0xc8
10013eec:	f002 fece 	bl	10016c8c <__ssprint_r>
10013ef0:	2800      	cmp	r0, #0
10013ef2:	f47f a8ac 	bne.w	1001304e <_svfprintf_r+0x96e>
10013ef6:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10013ef8:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10013efc:	f7ff b9b5 	b.w	1001326a <_svfprintf_r+0xb8a>
10013f00:	cccccccd 	.word	0xcccccccd
10013f04:	1001d994 	.word	0x1001d994
10013f08:	40300000 	.word	0x40300000
10013f0c:	3fe00000 	.word	0x3fe00000
10013f10:	2378      	movs	r3, #120	@ 0x78
10013f12:	f88d 30a1 	strb.w	r3, [sp, #161]	@ 0xa1
10013f16:	2330      	movs	r3, #48	@ 0x30
10013f18:	f88d 30a0 	strb.w	r3, [sp, #160]	@ 0xa0
10013f1c:	f049 0302 	orr.w	r3, r9, #2
10013f20:	9306      	str	r3, [sp, #24]
10013f22:	9b08      	ldr	r3, [sp, #32]
10013f24:	2b63      	cmp	r3, #99	@ 0x63
10013f26:	f300 80dd 	bgt.w	100140e4 <_svfprintf_r+0x1a04>
10013f2a:	2300      	movs	r3, #0
10013f2c:	930c      	str	r3, [sp, #48]	@ 0x30
10013f2e:	ad45      	add	r5, sp, #276	@ 0x114
10013f30:	f449 7381 	orr.w	r3, r9, #258	@ 0x102
10013f34:	9315      	str	r3, [sp, #84]	@ 0x54
10013f36:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
10013f38:	2b00      	cmp	r3, #0
10013f3a:	db22      	blt.n	10013f82 <_svfprintf_r+0x18a2>
10013f3c:	ed9d 7b16 	vldr	d7, [sp, #88]	@ 0x58
10013f40:	ed8d 7b24 	vstr	d7, [sp, #144]	@ 0x90
10013f44:	2300      	movs	r3, #0
10013f46:	931f      	str	r3, [sp, #124]	@ 0x7c
10013f48:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10013f4a:	2b61      	cmp	r3, #97	@ 0x61
10013f4c:	f47f aafd 	bne.w	1001354a <_svfprintf_r+0xe6a>
10013f50:	aa29      	add	r2, sp, #164	@ 0xa4
10013f52:	e9dd 0124 	ldrd	r0, r1, [sp, #144]	@ 0x90
10013f56:	f002 f95f 	bl	10016218 <frexp>
10013f5a:	2200      	movs	r2, #0
10013f5c:	f04f 537f 	mov.w	r3, #1069547520	@ 0x3fc00000
10013f60:	f006 fea6 	bl	1001acb0 <__aeabi_dmul>
10013f64:	4602      	mov	r2, r0
10013f66:	460b      	mov	r3, r1
10013f68:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
10013f6c:	2200      	movs	r2, #0
10013f6e:	2300      	movs	r3, #0
10013f70:	f007 f906 	bl	1001b180 <__aeabi_dcmpeq>
10013f74:	2800      	cmp	r0, #0
10013f76:	f040 80c3 	bne.w	10014100 <_svfprintf_r+0x1a20>
10013f7a:	4ba8      	ldr	r3, [pc, #672]	@ (1001421c <_svfprintf_r+0x1b3c>)
10013f7c:	9312      	str	r3, [sp, #72]	@ 0x48
10013f7e:	e701      	b.n	10013d84 <_svfprintf_r+0x16a4>
10013f80:	930c      	str	r3, [sp, #48]	@ 0x30
10013f82:	e9dd 1216 	ldrd	r1, r2, [sp, #88]	@ 0x58
10013f86:	f102 4300 	add.w	r3, r2, #2147483648	@ 0x80000000
10013f8a:	9325      	str	r3, [sp, #148]	@ 0x94
10013f8c:	232d      	movs	r3, #45	@ 0x2d
10013f8e:	9124      	str	r1, [sp, #144]	@ 0x90
10013f90:	931f      	str	r3, [sp, #124]	@ 0x7c
10013f92:	e7d9      	b.n	10013f48 <_svfprintf_r+0x1868>
10013f94:	9909      	ldr	r1, [sp, #36]	@ 0x24
10013f96:	9807      	ldr	r0, [sp, #28]
10013f98:	aa32      	add	r2, sp, #200	@ 0xc8
10013f9a:	f002 fe77 	bl	10016c8c <__ssprint_r>
10013f9e:	2800      	cmp	r0, #0
10013fa0:	f47f a855 	bne.w	1001304e <_svfprintf_r+0x96e>
10013fa4:	9d29      	ldr	r5, [sp, #164]	@ 0xa4
10013fa6:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10013fa8:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10013fac:	f7ff b981 	b.w	100132b2 <_svfprintf_r+0xbd2>
10013fb0:	499b      	ldr	r1, [pc, #620]	@ (10014220 <_svfprintf_r+0x1b40>)
10013fb2:	9115      	str	r1, [sp, #84]	@ 0x54
10013fb4:	f7fe bdb2 	b.w	10012b1c <_svfprintf_r+0x43c>
10013fb8:	9909      	ldr	r1, [sp, #36]	@ 0x24
10013fba:	9807      	ldr	r0, [sp, #28]
10013fbc:	aa32      	add	r2, sp, #200	@ 0xc8
10013fbe:	f002 fe65 	bl	10016c8c <__ssprint_r>
10013fc2:	2800      	cmp	r0, #0
10013fc4:	f47f a843 	bne.w	1001304e <_svfprintf_r+0x96e>
10013fc8:	9d29      	ldr	r5, [sp, #164]	@ 0xa4
10013fca:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
10013fcc:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10013fce:	1b5d      	subs	r5, r3, r5
10013fd0:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10013fd4:	f7ff b984 	b.w	100132e0 <_svfprintf_r+0xc00>
10013fd8:	9b06      	ldr	r3, [sp, #24]
10013fda:	9912      	ldr	r1, [sp, #72]	@ 0x48
10013fdc:	9a08      	ldr	r2, [sp, #32]
10013fde:	f003 0301 	and.w	r3, r3, #1
10013fe2:	2900      	cmp	r1, #0
10013fe4:	ea43 0302 	orr.w	r3, r3, r2
10013fe8:	f340 810f 	ble.w	1001420a <_svfprintf_r+0x1b2a>
10013fec:	2b00      	cmp	r3, #0
10013fee:	f040 80d5 	bne.w	1001419c <_svfprintf_r+0x1abc>
10013ff2:	2366      	movs	r3, #102	@ 0x66
10013ff4:	f8dd b048 	ldr.w	fp, [sp, #72]	@ 0x48
10013ff8:	930e      	str	r3, [sp, #56]	@ 0x38
10013ffa:	9b06      	ldr	r3, [sp, #24]
10013ffc:	055a      	lsls	r2, r3, #21
10013ffe:	f100 80a8 	bmi.w	10014152 <_svfprintf_r+0x1a72>
10014002:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
10014006:	f8dd 9054 	ldr.w	r9, [sp, #84]	@ 0x54
1001400a:	9306      	str	r3, [sp, #24]
1001400c:	e759      	b.n	10013ec2 <_svfprintf_r+0x17e2>
1001400e:	2358      	movs	r3, #88	@ 0x58
10014010:	e77f      	b.n	10013f12 <_svfprintf_r+0x1832>
10014012:	2200      	movs	r2, #0
10014014:	9208      	str	r2, [sp, #32]
10014016:	f7fe bbbb 	b.w	10012790 <_svfprintf_r+0xb0>
1001401a:	4a81      	ldr	r2, [pc, #516]	@ (10014220 <_svfprintf_r+0x1b40>)
1001401c:	9215      	str	r2, [sp, #84]	@ 0x54
1001401e:	f7ff b8ef 	b.w	10013200 <_svfprintf_r+0xb20>
10014022:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
10014024:	9a18      	ldr	r2, [sp, #96]	@ 0x60
10014026:	eb03 0b02 	add.w	fp, r3, r2
1001402a:	9b12      	ldr	r3, [sp, #72]	@ 0x48
1001402c:	2b00      	cmp	r3, #0
1001402e:	f340 8083 	ble.w	10014138 <_svfprintf_r+0x1a58>
10014032:	2367      	movs	r3, #103	@ 0x67
10014034:	930e      	str	r3, [sp, #56]	@ 0x38
10014036:	e7e0      	b.n	10013ffa <_svfprintf_r+0x191a>
10014038:	19ac      	adds	r4, r5, r6
1001403a:	2747      	movs	r7, #71	@ 0x47
1001403c:	e5d5      	b.n	10013bea <_svfprintf_r+0x150a>
1001403e:	4655      	mov	r5, sl
10014040:	3301      	adds	r3, #1
10014042:	9a15      	ldr	r2, [sp, #84]	@ 0x54
10014044:	f8c8 2000 	str.w	r2, [r8]
10014048:	4434      	add	r4, r6
1001404a:	2b07      	cmp	r3, #7
1001404c:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10014050:	f8c8 6004 	str.w	r6, [r8, #4]
10014054:	f77f a823 	ble.w	1001309e <_svfprintf_r+0x9be>
10014058:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001405a:	9807      	ldr	r0, [sp, #28]
1001405c:	aa32      	add	r2, sp, #200	@ 0xc8
1001405e:	f002 fe15 	bl	10016c8c <__ssprint_r>
10014062:	2800      	cmp	r0, #0
10014064:	f47e aff3 	bne.w	1001304e <_svfprintf_r+0x96e>
10014068:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
1001406c:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10014070:	f7ff b817 	b.w	100130a2 <_svfprintf_r+0x9c2>
10014074:	9a09      	ldr	r2, [sp, #36]	@ 0x24
10014076:	8993      	ldrh	r3, [r2, #12]
10014078:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
1001407c:	8193      	strh	r3, [r2, #12]
1001407e:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
10014082:	930a      	str	r3, [sp, #40]	@ 0x28
10014084:	f7fe bc38 	b.w	100128f8 <_svfprintf_r+0x218>
10014088:	4a66      	ldr	r2, [pc, #408]	@ (10014224 <_svfprintf_r+0x1b44>)
1001408a:	9215      	str	r2, [sp, #84]	@ 0x54
1001408c:	f7fe bf84 	b.w	10012f98 <_svfprintf_r+0x8b8>
10014090:	2800      	cmp	r0, #0
10014092:	d13f      	bne.n	10014114 <_svfprintf_r+0x1a34>
10014094:	2230      	movs	r2, #48	@ 0x30
10014096:	f88d 20b2 	strb.w	r2, [sp, #178]	@ 0xb2
1001409a:	f10d 02b3 	add.w	r2, sp, #179	@ 0xb3
1001409e:	3330      	adds	r3, #48	@ 0x30
100140a0:	f802 3b01 	strb.w	r3, [r2], #1
100140a4:	ab2c      	add	r3, sp, #176	@ 0xb0
100140a6:	1ad3      	subs	r3, r2, r3
100140a8:	931c      	str	r3, [sp, #112]	@ 0x70
100140aa:	e5f3      	b.n	10013c94 <_svfprintf_r+0x15b4>
100140ac:	9b12      	ldr	r3, [sp, #72]	@ 0x48
100140ae:	9730      	str	r7, [sp, #192]	@ 0xc0
100140b0:	7bd9      	ldrb	r1, [r3, #15]
100140b2:	f816 2c01 	ldrb.w	r2, [r6, #-1]
100140b6:	428a      	cmp	r2, r1
100140b8:	4633      	mov	r3, r6
100140ba:	d109      	bne.n	100140d0 <_svfprintf_r+0x19f0>
100140bc:	2030      	movs	r0, #48	@ 0x30
100140be:	f803 0c01 	strb.w	r0, [r3, #-1]
100140c2:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
100140c4:	1e5a      	subs	r2, r3, #1
100140c6:	9230      	str	r2, [sp, #192]	@ 0xc0
100140c8:	f813 2c01 	ldrb.w	r2, [r3, #-1]
100140cc:	4291      	cmp	r1, r2
100140ce:	d0f6      	beq.n	100140be <_svfprintf_r+0x19de>
100140d0:	2a39      	cmp	r2, #57	@ 0x39
100140d2:	bf0b      	itete	eq
100140d4:	9a12      	ldreq	r2, [sp, #72]	@ 0x48
100140d6:	3201      	addne	r2, #1
100140d8:	7a92      	ldrbeq	r2, [r2, #10]
100140da:	b2d2      	uxtbne	r2, r2
100140dc:	f803 2c01 	strb.w	r2, [r3, #-1]
100140e0:	4633      	mov	r3, r6
100140e2:	e6a6      	b.n	10013e32 <_svfprintf_r+0x1752>
100140e4:	9807      	ldr	r0, [sp, #28]
100140e6:	1c59      	adds	r1, r3, #1
100140e8:	f000 f8ca 	bl	10014280 <_malloc_r>
100140ec:	4605      	mov	r5, r0
100140ee:	2800      	cmp	r0, #0
100140f0:	d0c0      	beq.n	10014074 <_svfprintf_r+0x1994>
100140f2:	900c      	str	r0, [sp, #48]	@ 0x30
100140f4:	e71c      	b.n	10013f30 <_svfprintf_r+0x1850>
100140f6:	9b06      	ldr	r3, [sp, #24]
100140f8:	07df      	lsls	r7, r3, #31
100140fa:	f57f add4 	bpl.w	10013ca6 <_svfprintf_r+0x15c6>
100140fe:	e5d0      	b.n	10013ca2 <_svfprintf_r+0x15c2>
10014100:	4b49      	ldr	r3, [pc, #292]	@ (10014228 <_svfprintf_r+0x1b48>)
10014102:	4a46      	ldr	r2, [pc, #280]	@ (1001421c <_svfprintf_r+0x1b3c>)
10014104:	990e      	ldr	r1, [sp, #56]	@ 0x38
10014106:	2961      	cmp	r1, #97	@ 0x61
10014108:	bf18      	it	ne
1001410a:	461a      	movne	r2, r3
1001410c:	2301      	movs	r3, #1
1001410e:	9212      	str	r2, [sp, #72]	@ 0x48
10014110:	9329      	str	r3, [sp, #164]	@ 0xa4
10014112:	e637      	b.n	10013d84 <_svfprintf_r+0x16a4>
10014114:	f10d 02b2 	add.w	r2, sp, #178	@ 0xb2
10014118:	e7c1      	b.n	1001409e <_svfprintf_r+0x19be>
1001411a:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
1001411c:	4d43      	ldr	r5, [pc, #268]	@ (1001422c <_svfprintf_r+0x1b4c>)
1001411e:	2b00      	cmp	r3, #0
10014120:	bfb4      	ite	lt
10014122:	222d      	movlt	r2, #45	@ 0x2d
10014124:	f89d 209f 	ldrbge.w	r2, [sp, #159]	@ 0x9f
10014128:	4b41      	ldr	r3, [pc, #260]	@ (10014230 <_svfprintf_r+0x1b50>)
1001412a:	bfb8      	it	lt
1001412c:	f88d 209f 	strblt.w	r2, [sp, #159]	@ 0x9f
10014130:	f029 0980 	bic.w	r9, r9, #128	@ 0x80
10014134:	f7fe bcae 	b.w	10012a94 <_svfprintf_r+0x3b4>
10014138:	f1c3 0301 	rsb	r3, r3, #1
1001413c:	449b      	add	fp, r3
1001413e:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
10014142:	9306      	str	r3, [sp, #24]
10014144:	2367      	movs	r3, #103	@ 0x67
10014146:	f8dd 9054 	ldr.w	r9, [sp, #84]	@ 0x54
1001414a:	930e      	str	r3, [sp, #56]	@ 0x38
1001414c:	e6b9      	b.n	10013ec2 <_svfprintf_r+0x17e2>
1001414e:	2367      	movs	r3, #103	@ 0x67
10014150:	930e      	str	r3, [sp, #56]	@ 0x38
10014152:	991b      	ldr	r1, [sp, #108]	@ 0x6c
10014154:	780b      	ldrb	r3, [r1, #0]
10014156:	2bff      	cmp	r3, #255	@ 0xff
10014158:	f000 808c 	beq.w	10014274 <_svfprintf_r+0x1b94>
1001415c:	2400      	movs	r4, #0
1001415e:	9a12      	ldr	r2, [sp, #72]	@ 0x48
10014160:	4620      	mov	r0, r4
10014162:	e003      	b.n	1001416c <_svfprintf_r+0x1a8c>
10014164:	3001      	adds	r0, #1
10014166:	3101      	adds	r1, #1
10014168:	2bff      	cmp	r3, #255	@ 0xff
1001416a:	d008      	beq.n	1001417e <_svfprintf_r+0x1a9e>
1001416c:	4293      	cmp	r3, r2
1001416e:	da06      	bge.n	1001417e <_svfprintf_r+0x1a9e>
10014170:	1ad2      	subs	r2, r2, r3
10014172:	784b      	ldrb	r3, [r1, #1]
10014174:	2b00      	cmp	r3, #0
10014176:	d1f5      	bne.n	10014164 <_svfprintf_r+0x1a84>
10014178:	780b      	ldrb	r3, [r1, #0]
1001417a:	3401      	adds	r4, #1
1001417c:	e7f4      	b.n	10014168 <_svfprintf_r+0x1a88>
1001417e:	911b      	str	r1, [sp, #108]	@ 0x6c
10014180:	9010      	str	r0, [sp, #64]	@ 0x40
10014182:	9414      	str	r4, [sp, #80]	@ 0x50
10014184:	9212      	str	r2, [sp, #72]	@ 0x48
10014186:	e9dd 3914 	ldrd	r3, r9, [sp, #80]	@ 0x50
1001418a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
1001418c:	4413      	add	r3, r2
1001418e:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
10014190:	fb02 bb03 	mla	fp, r2, r3, fp
10014194:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
10014198:	9306      	str	r3, [sp, #24]
1001419a:	e590      	b.n	10013cbe <_svfprintf_r+0x15de>
1001419c:	9b18      	ldr	r3, [sp, #96]	@ 0x60
1001419e:	18cf      	adds	r7, r1, r3
100141a0:	443a      	add	r2, r7
100141a2:	2366      	movs	r3, #102	@ 0x66
100141a4:	4693      	mov	fp, r2
100141a6:	930e      	str	r3, [sp, #56]	@ 0x38
100141a8:	e727      	b.n	10013ffa <_svfprintf_r+0x191a>
100141aa:	4693      	mov	fp, r2
100141ac:	e67c      	b.n	10013ea8 <_svfprintf_r+0x17c8>
100141ae:	9b08      	ldr	r3, [sp, #32]
100141b0:	9306      	str	r3, [sp, #24]
100141b2:	469b      	mov	fp, r3
100141b4:	2373      	movs	r3, #115	@ 0x73
100141b6:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
100141ba:	960d      	str	r6, [sp, #52]	@ 0x34
100141bc:	9008      	str	r0, [sp, #32]
100141be:	9014      	str	r0, [sp, #80]	@ 0x50
100141c0:	9010      	str	r0, [sp, #64]	@ 0x40
100141c2:	930e      	str	r3, [sp, #56]	@ 0x38
100141c4:	f7fe bc73 	b.w	10012aae <_svfprintf_r+0x3ce>
100141c8:	e9dd 0124 	ldrd	r0, r1, [sp, #144]	@ 0x90
100141cc:	2200      	movs	r2, #0
100141ce:	2300      	movs	r3, #0
100141d0:	f006 ffd6 	bl	1001b180 <__aeabi_dcmpeq>
100141d4:	2800      	cmp	r0, #0
100141d6:	f47f ad06 	bne.w	10013be6 <_svfprintf_r+0x1506>
100141da:	f1c6 0601 	rsb	r6, r6, #1
100141de:	9629      	str	r6, [sp, #164]	@ 0xa4
100141e0:	e502      	b.n	10013be8 <_svfprintf_r+0x1508>
100141e2:	f8dd 9018 	ldr.w	r9, [sp, #24]
100141e6:	f8dd b020 	ldr.w	fp, [sp, #32]
100141ea:	f7ff bbc2 	b.w	10013972 <_svfprintf_r+0x1292>
100141ee:	4e0d      	ldr	r6, [pc, #52]	@ (10014224 <_svfprintf_r+0x1b44>)
100141f0:	f7ff bae5 	b.w	100137be <_svfprintf_r+0x10de>
100141f4:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
100141f6:	7863      	ldrb	r3, [r4, #1]
100141f8:	460c      	mov	r4, r1
100141fa:	f852 1b04 	ldr.w	r1, [r2], #4
100141fe:	920d      	str	r2, [sp, #52]	@ 0x34
10014200:	ea41 71e1 	orr.w	r1, r1, r1, asr #31
10014204:	9108      	str	r1, [sp, #32]
10014206:	f7fe bac2 	b.w	1001278e <_svfprintf_r+0xae>
1001420a:	f8dd 9054 	ldr.w	r9, [sp, #84]	@ 0x54
1001420e:	b98b      	cbnz	r3, 10014234 <_svfprintf_r+0x1b54>
10014210:	2301      	movs	r3, #1
10014212:	2266      	movs	r2, #102	@ 0x66
10014214:	9306      	str	r3, [sp, #24]
10014216:	920e      	str	r2, [sp, #56]	@ 0x38
10014218:	469b      	mov	fp, r3
1001421a:	e652      	b.n	10013ec2 <_svfprintf_r+0x17e2>
1001421c:	1001d980 	.word	0x1001d980
10014220:	1001d9c4 	.word	0x1001d9c4
10014224:	1001d9b4 	.word	0x1001d9b4
10014228:	1001d994 	.word	0x1001d994
1001422c:	1001d978 	.word	0x1001d978
10014230:	1001d97c 	.word	0x1001d97c
10014234:	9b18      	ldr	r3, [sp, #96]	@ 0x60
10014236:	1c5f      	adds	r7, r3, #1
10014238:	9b08      	ldr	r3, [sp, #32]
1001423a:	443b      	add	r3, r7
1001423c:	469b      	mov	fp, r3
1001423e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
10014242:	9306      	str	r3, [sp, #24]
10014244:	2366      	movs	r3, #102	@ 0x66
10014246:	930e      	str	r3, [sp, #56]	@ 0x38
10014248:	e63b      	b.n	10013ec2 <_svfprintf_r+0x17e2>
1001424a:	2170      	movs	r1, #112	@ 0x70
1001424c:	e4eb      	b.n	10013c26 <_svfprintf_r+0x1546>
1001424e:	4a0b      	ldr	r2, [pc, #44]	@ (1001427c <_svfprintf_r+0x1b9c>)
10014250:	9215      	str	r2, [sp, #84]	@ 0x54
10014252:	e44b      	b.n	10013aec <_svfprintf_r+0x140c>
10014254:	2302      	movs	r3, #2
10014256:	931c      	str	r3, [sp, #112]	@ 0x70
10014258:	e51c      	b.n	10013c94 <_svfprintf_r+0x15b4>
1001425a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
1001425c:	f8dd b01c 	ldr.w	fp, [sp, #28]
10014260:	8993      	ldrh	r3, [r2, #12]
10014262:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10014266:	8193      	strh	r3, [r2, #12]
10014268:	f7ff b8df 	b.w	1001342a <_svfprintf_r+0xd4a>
1001426c:	230c      	movs	r3, #12
1001426e:	f8cb 3000 	str.w	r3, [fp]
10014272:	e704      	b.n	1001407e <_svfprintf_r+0x199e>
10014274:	2300      	movs	r3, #0
10014276:	9314      	str	r3, [sp, #80]	@ 0x50
10014278:	9310      	str	r3, [sp, #64]	@ 0x40
1001427a:	e784      	b.n	10014186 <_svfprintf_r+0x1aa6>
1001427c:	1001d9b4 	.word	0x1001d9b4

10014280 <_malloc_r>:
10014280:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10014284:	f101 050b 	add.w	r5, r1, #11
10014288:	2d16      	cmp	r5, #22
1001428a:	b085      	sub	sp, #20
1001428c:	4606      	mov	r6, r0
1001428e:	d824      	bhi.n	100142da <_malloc_r+0x5a>
10014290:	2910      	cmp	r1, #16
10014292:	f200 80b1 	bhi.w	100143f8 <_malloc_r+0x178>
10014296:	f000 fcd3 	bl	10014c40 <__malloc_lock>
1001429a:	2510      	movs	r5, #16
1001429c:	2318      	movs	r3, #24
1001429e:	f04f 0c02 	mov.w	ip, #2
100142a2:	4fba      	ldr	r7, [pc, #744]	@ (1001458c <_malloc_r+0x30c>)
100142a4:	443b      	add	r3, r7
100142a6:	f1a3 0208 	sub.w	r2, r3, #8
100142aa:	685c      	ldr	r4, [r3, #4]
100142ac:	4294      	cmp	r4, r2
100142ae:	f000 8122 	beq.w	100144f6 <_malloc_r+0x276>
100142b2:	6863      	ldr	r3, [r4, #4]
100142b4:	68e2      	ldr	r2, [r4, #12]
100142b6:	68a1      	ldr	r1, [r4, #8]
100142b8:	f023 0303 	bic.w	r3, r3, #3
100142bc:	60ca      	str	r2, [r1, #12]
100142be:	4423      	add	r3, r4
100142c0:	4630      	mov	r0, r6
100142c2:	6091      	str	r1, [r2, #8]
100142c4:	685a      	ldr	r2, [r3, #4]
100142c6:	f042 0201 	orr.w	r2, r2, #1
100142ca:	605a      	str	r2, [r3, #4]
100142cc:	3408      	adds	r4, #8
100142ce:	f000 fcbd 	bl	10014c4c <__malloc_unlock>
100142d2:	4620      	mov	r0, r4
100142d4:	b005      	add	sp, #20
100142d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
100142da:	f035 0507 	bics.w	r5, r5, #7
100142de:	f100 808b 	bmi.w	100143f8 <_malloc_r+0x178>
100142e2:	42a9      	cmp	r1, r5
100142e4:	f200 8088 	bhi.w	100143f8 <_malloc_r+0x178>
100142e8:	f000 fcaa 	bl	10014c40 <__malloc_lock>
100142ec:	f5b5 7ffc 	cmp.w	r5, #504	@ 0x1f8
100142f0:	f0c0 8173 	bcc.w	100145da <_malloc_r+0x35a>
100142f4:	0a6b      	lsrs	r3, r5, #9
100142f6:	f000 8083 	beq.w	10014400 <_malloc_r+0x180>
100142fa:	2b04      	cmp	r3, #4
100142fc:	f200 8122 	bhi.w	10014544 <_malloc_r+0x2c4>
10014300:	09ab      	lsrs	r3, r5, #6
10014302:	f103 0c39 	add.w	ip, r3, #57	@ 0x39
10014306:	f103 0e38 	add.w	lr, r3, #56	@ 0x38
1001430a:	ea4f 03cc 	mov.w	r3, ip, lsl #3
1001430e:	4f9f      	ldr	r7, [pc, #636]	@ (1001458c <_malloc_r+0x30c>)
10014310:	443b      	add	r3, r7
10014312:	f1a3 0008 	sub.w	r0, r3, #8
10014316:	685c      	ldr	r4, [r3, #4]
10014318:	42a0      	cmp	r0, r4
1001431a:	d107      	bne.n	1001432c <_malloc_r+0xac>
1001431c:	e00d      	b.n	1001433a <_malloc_r+0xba>
1001431e:	2a00      	cmp	r2, #0
10014320:	68e1      	ldr	r1, [r4, #12]
10014322:	f280 80e2 	bge.w	100144ea <_malloc_r+0x26a>
10014326:	4288      	cmp	r0, r1
10014328:	d007      	beq.n	1001433a <_malloc_r+0xba>
1001432a:	460c      	mov	r4, r1
1001432c:	6863      	ldr	r3, [r4, #4]
1001432e:	f023 0303 	bic.w	r3, r3, #3
10014332:	1b5a      	subs	r2, r3, r5
10014334:	2a0f      	cmp	r2, #15
10014336:	ddf2      	ble.n	1001431e <_malloc_r+0x9e>
10014338:	46f4      	mov	ip, lr
1001433a:	f8df 8264 	ldr.w	r8, [pc, #612]	@ 100145a0 <_malloc_r+0x320>
1001433e:	693c      	ldr	r4, [r7, #16]
10014340:	4544      	cmp	r4, r8
10014342:	f000 80bf 	beq.w	100144c4 <_malloc_r+0x244>
10014346:	6863      	ldr	r3, [r4, #4]
10014348:	f023 0903 	bic.w	r9, r3, #3
1001434c:	eba9 0305 	sub.w	r3, r9, r5
10014350:	2b0f      	cmp	r3, #15
10014352:	f300 8147 	bgt.w	100145e4 <_malloc_r+0x364>
10014356:	2b00      	cmp	r3, #0
10014358:	e9c7 8804 	strd	r8, r8, [r7, #16]
1001435c:	f280 8131 	bge.w	100145c2 <_malloc_r+0x342>
10014360:	f5b9 7f00 	cmp.w	r9, #512	@ 0x200
10014364:	f8d7 e004 	ldr.w	lr, [r7, #4]
10014368:	f080 80cc 	bcs.w	10014504 <_malloc_r+0x284>
1001436c:	ea4f 01d9 	mov.w	r1, r9, lsr #3
10014370:	3101      	adds	r1, #1
10014372:	ea4f 1959 	mov.w	r9, r9, lsr #5
10014376:	2301      	movs	r3, #1
10014378:	fa03 f309 	lsl.w	r3, r3, r9
1001437c:	f857 2031 	ldr.w	r2, [r7, r1, lsl #3]
10014380:	60a2      	str	r2, [r4, #8]
10014382:	ea4e 0e03 	orr.w	lr, lr, r3
10014386:	eb07 03c1 	add.w	r3, r7, r1, lsl #3
1001438a:	3b08      	subs	r3, #8
1001438c:	60e3      	str	r3, [r4, #12]
1001438e:	f8c7 e004 	str.w	lr, [r7, #4]
10014392:	f847 4031 	str.w	r4, [r7, r1, lsl #3]
10014396:	60d4      	str	r4, [r2, #12]
10014398:	ea4f 03ac 	mov.w	r3, ip, asr #2
1001439c:	2001      	movs	r0, #1
1001439e:	4098      	lsls	r0, r3
100143a0:	4570      	cmp	r0, lr
100143a2:	d834      	bhi.n	1001440e <_malloc_r+0x18e>
100143a4:	ea10 0f0e 	tst.w	r0, lr
100143a8:	d107      	bne.n	100143ba <_malloc_r+0x13a>
100143aa:	f02c 0c03 	bic.w	ip, ip, #3
100143ae:	0040      	lsls	r0, r0, #1
100143b0:	ea10 0f0e 	tst.w	r0, lr
100143b4:	f10c 0c04 	add.w	ip, ip, #4
100143b8:	d0f9      	beq.n	100143ae <_malloc_r+0x12e>
100143ba:	eb07 0acc 	add.w	sl, r7, ip, lsl #3
100143be:	4652      	mov	r2, sl
100143c0:	46e1      	mov	r9, ip
100143c2:	68d1      	ldr	r1, [r2, #12]
100143c4:	e00e      	b.n	100143e4 <_malloc_r+0x164>
100143c6:	684b      	ldr	r3, [r1, #4]
100143c8:	f023 0303 	bic.w	r3, r3, #3
100143cc:	eba3 0e05 	sub.w	lr, r3, r5
100143d0:	f1be 0f0f 	cmp.w	lr, #15
100143d4:	460c      	mov	r4, r1
100143d6:	68c9      	ldr	r1, [r1, #12]
100143d8:	f300 80c1 	bgt.w	1001455e <_malloc_r+0x2de>
100143dc:	f1be 0f00 	cmp.w	lr, #0
100143e0:	f280 80e2 	bge.w	100145a8 <_malloc_r+0x328>
100143e4:	428a      	cmp	r2, r1
100143e6:	d1ee      	bne.n	100143c6 <_malloc_r+0x146>
100143e8:	f109 0901 	add.w	r9, r9, #1
100143ec:	f019 0f03 	tst.w	r9, #3
100143f0:	f102 0208 	add.w	r2, r2, #8
100143f4:	d1e5      	bne.n	100143c2 <_malloc_r+0x142>
100143f6:	e121      	b.n	1001463c <_malloc_r+0x3bc>
100143f8:	230c      	movs	r3, #12
100143fa:	6033      	str	r3, [r6, #0]
100143fc:	2400      	movs	r4, #0
100143fe:	e768      	b.n	100142d2 <_malloc_r+0x52>
10014400:	f44f 7300 	mov.w	r3, #512	@ 0x200
10014404:	f04f 0c40 	mov.w	ip, #64	@ 0x40
10014408:	f04f 0e3f 	mov.w	lr, #63	@ 0x3f
1001440c:	e77f      	b.n	1001430e <_malloc_r+0x8e>
1001440e:	68bc      	ldr	r4, [r7, #8]
10014410:	6863      	ldr	r3, [r4, #4]
10014412:	f023 0903 	bic.w	r9, r3, #3
10014416:	45a9      	cmp	r9, r5
10014418:	d303      	bcc.n	10014422 <_malloc_r+0x1a2>
1001441a:	eba9 0305 	sub.w	r3, r9, r5
1001441e:	2b0f      	cmp	r3, #15
10014420:	dc53      	bgt.n	100144ca <_malloc_r+0x24a>
10014422:	4b5b      	ldr	r3, [pc, #364]	@ (10014590 <_malloc_r+0x310>)
10014424:	f8df b17c 	ldr.w	fp, [pc, #380]	@ 100145a4 <_malloc_r+0x324>
10014428:	681b      	ldr	r3, [r3, #0]
1001442a:	2008      	movs	r0, #8
1001442c:	f103 0810 	add.w	r8, r3, #16
10014430:	f000 fb90 	bl	10014b54 <sysconf>
10014434:	f8db 3000 	ldr.w	r3, [fp]
10014438:	9001      	str	r0, [sp, #4]
1001443a:	3301      	adds	r3, #1
1001443c:	44a8      	add	r8, r5
1001443e:	eb04 0209 	add.w	r2, r4, r9
10014442:	d005      	beq.n	10014450 <_malloc_r+0x1d0>
10014444:	f108 38ff 	add.w	r8, r8, #4294967295	@ 0xffffffff
10014448:	4480      	add	r8, r0
1001444a:	4243      	negs	r3, r0
1001444c:	ea03 0808 	and.w	r8, r3, r8
10014450:	4641      	mov	r1, r8
10014452:	4630      	mov	r0, r6
10014454:	9202      	str	r2, [sp, #8]
10014456:	f002 fa63 	bl	10016920 <_sbrk_r>
1001445a:	f1b0 3fff 	cmp.w	r0, #4294967295	@ 0xffffffff
1001445e:	9a02      	ldr	r2, [sp, #8]
10014460:	4682      	mov	sl, r0
10014462:	f000 80dc 	beq.w	1001461e <_malloc_r+0x39e>
10014466:	4282      	cmp	r2, r0
10014468:	f200 80d7 	bhi.w	1001461a <_malloc_r+0x39a>
1001446c:	4b49      	ldr	r3, [pc, #292]	@ (10014594 <_malloc_r+0x314>)
1001446e:	9901      	ldr	r1, [sp, #4]
10014470:	6818      	ldr	r0, [r3, #0]
10014472:	4440      	add	r0, r8
10014474:	f101 31ff 	add.w	r1, r1, #4294967295	@ 0xffffffff
10014478:	6018      	str	r0, [r3, #0]
1001447a:	4684      	mov	ip, r0
1001447c:	f040 80fc 	bne.w	10014678 <_malloc_r+0x3f8>
10014480:	ea1a 0f01 	tst.w	sl, r1
10014484:	f040 80f8 	bne.w	10014678 <_malloc_r+0x3f8>
10014488:	f8d7 a008 	ldr.w	sl, [r7, #8]
1001448c:	44c8      	add	r8, r9
1001448e:	f048 0201 	orr.w	r2, r8, #1
10014492:	f8ca 2004 	str.w	r2, [sl, #4]
10014496:	4b40      	ldr	r3, [pc, #256]	@ (10014598 <_malloc_r+0x318>)
10014498:	6819      	ldr	r1, [r3, #0]
1001449a:	4281      	cmp	r1, r0
1001449c:	bf38      	it	cc
1001449e:	6018      	strcc	r0, [r3, #0]
100144a0:	4b3e      	ldr	r3, [pc, #248]	@ (1001459c <_malloc_r+0x31c>)
100144a2:	6819      	ldr	r1, [r3, #0]
100144a4:	4281      	cmp	r1, r0
100144a6:	bf38      	it	cc
100144a8:	6018      	strcc	r0, [r3, #0]
100144aa:	4654      	mov	r4, sl
100144ac:	f022 0803 	bic.w	r8, r2, #3
100144b0:	45a8      	cmp	r8, r5
100144b2:	eba8 0305 	sub.w	r3, r8, r5
100144b6:	d301      	bcc.n	100144bc <_malloc_r+0x23c>
100144b8:	2b0f      	cmp	r3, #15
100144ba:	dc06      	bgt.n	100144ca <_malloc_r+0x24a>
100144bc:	4630      	mov	r0, r6
100144be:	f000 fbc5 	bl	10014c4c <__malloc_unlock>
100144c2:	e79b      	b.n	100143fc <_malloc_r+0x17c>
100144c4:	f8d7 e004 	ldr.w	lr, [r7, #4]
100144c8:	e766      	b.n	10014398 <_malloc_r+0x118>
100144ca:	1962      	adds	r2, r4, r5
100144cc:	f043 0301 	orr.w	r3, r3, #1
100144d0:	f045 0501 	orr.w	r5, r5, #1
100144d4:	6065      	str	r5, [r4, #4]
100144d6:	4630      	mov	r0, r6
100144d8:	60ba      	str	r2, [r7, #8]
100144da:	6053      	str	r3, [r2, #4]
100144dc:	f000 fbb6 	bl	10014c4c <__malloc_unlock>
100144e0:	3408      	adds	r4, #8
100144e2:	4620      	mov	r0, r4
100144e4:	b005      	add	sp, #20
100144e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
100144ea:	68a2      	ldr	r2, [r4, #8]
100144ec:	4423      	add	r3, r4
100144ee:	60d1      	str	r1, [r2, #12]
100144f0:	4630      	mov	r0, r6
100144f2:	608a      	str	r2, [r1, #8]
100144f4:	e6e6      	b.n	100142c4 <_malloc_r+0x44>
100144f6:	68dc      	ldr	r4, [r3, #12]
100144f8:	42a3      	cmp	r3, r4
100144fa:	f47f aeda 	bne.w	100142b2 <_malloc_r+0x32>
100144fe:	f10c 0c02 	add.w	ip, ip, #2
10014502:	e71a      	b.n	1001433a <_malloc_r+0xba>
10014504:	f5b9 6f20 	cmp.w	r9, #2560	@ 0xa00
10014508:	ea4f 2259 	mov.w	r2, r9, lsr #9
1001450c:	d37e      	bcc.n	1001460c <_malloc_r+0x38c>
1001450e:	2a14      	cmp	r2, #20
10014510:	f200 8115 	bhi.w	1001473e <_malloc_r+0x4be>
10014514:	f102 035c 	add.w	r3, r2, #92	@ 0x5c
10014518:	00db      	lsls	r3, r3, #3
1001451a:	325b      	adds	r2, #91	@ 0x5b
1001451c:	18f9      	adds	r1, r7, r3
1001451e:	58fb      	ldr	r3, [r7, r3]
10014520:	3908      	subs	r1, #8
10014522:	4299      	cmp	r1, r3
10014524:	d103      	bne.n	1001452e <_malloc_r+0x2ae>
10014526:	e0f0      	b.n	1001470a <_malloc_r+0x48a>
10014528:	689b      	ldr	r3, [r3, #8]
1001452a:	4299      	cmp	r1, r3
1001452c:	d004      	beq.n	10014538 <_malloc_r+0x2b8>
1001452e:	685a      	ldr	r2, [r3, #4]
10014530:	f022 0203 	bic.w	r2, r2, #3
10014534:	454a      	cmp	r2, r9
10014536:	d8f7      	bhi.n	10014528 <_malloc_r+0x2a8>
10014538:	68d9      	ldr	r1, [r3, #12]
1001453a:	e9c4 3102 	strd	r3, r1, [r4, #8]
1001453e:	608c      	str	r4, [r1, #8]
10014540:	60dc      	str	r4, [r3, #12]
10014542:	e729      	b.n	10014398 <_malloc_r+0x118>
10014544:	2b14      	cmp	r3, #20
10014546:	d96d      	bls.n	10014624 <_malloc_r+0x3a4>
10014548:	2b54      	cmp	r3, #84	@ 0x54
1001454a:	f200 8101 	bhi.w	10014750 <_malloc_r+0x4d0>
1001454e:	0b2b      	lsrs	r3, r5, #12
10014550:	f103 0c6f 	add.w	ip, r3, #111	@ 0x6f
10014554:	f103 0e6e 	add.w	lr, r3, #110	@ 0x6e
10014558:	ea4f 03cc 	mov.w	r3, ip, lsl #3
1001455c:	e6d7      	b.n	1001430e <_malloc_r+0x8e>
1001455e:	4630      	mov	r0, r6
10014560:	68a6      	ldr	r6, [r4, #8]
10014562:	1962      	adds	r2, r4, r5
10014564:	f045 0501 	orr.w	r5, r5, #1
10014568:	6065      	str	r5, [r4, #4]
1001456a:	60f1      	str	r1, [r6, #12]
1001456c:	608e      	str	r6, [r1, #8]
1001456e:	f04e 0101 	orr.w	r1, lr, #1
10014572:	e9c7 2204 	strd	r2, r2, [r7, #16]
10014576:	f8c2 8008 	str.w	r8, [r2, #8]
1001457a:	f8c2 800c 	str.w	r8, [r2, #12]
1001457e:	6051      	str	r1, [r2, #4]
10014580:	f844 e003 	str.w	lr, [r4, r3]
10014584:	f000 fb62 	bl	10014c4c <__malloc_unlock>
10014588:	3408      	adds	r4, #8
1001458a:	e6a2      	b.n	100142d2 <_malloc_r+0x52>
1001458c:	20000050 	.word	0x20000050
10014590:	2000166c 	.word	0x2000166c
10014594:	2000163c 	.word	0x2000163c
10014598:	20001668 	.word	0x20001668
1001459c:	20001664 	.word	0x20001664
100145a0:	20000058 	.word	0x20000058
100145a4:	20000048 	.word	0x20000048
100145a8:	4423      	add	r3, r4
100145aa:	4630      	mov	r0, r6
100145ac:	685a      	ldr	r2, [r3, #4]
100145ae:	f042 0201 	orr.w	r2, r2, #1
100145b2:	605a      	str	r2, [r3, #4]
100145b4:	f854 3f08 	ldr.w	r3, [r4, #8]!
100145b8:	60d9      	str	r1, [r3, #12]
100145ba:	608b      	str	r3, [r1, #8]
100145bc:	f000 fb46 	bl	10014c4c <__malloc_unlock>
100145c0:	e687      	b.n	100142d2 <_malloc_r+0x52>
100145c2:	44a1      	add	r9, r4
100145c4:	4630      	mov	r0, r6
100145c6:	f8d9 3004 	ldr.w	r3, [r9, #4]
100145ca:	f043 0301 	orr.w	r3, r3, #1
100145ce:	f8c9 3004 	str.w	r3, [r9, #4]
100145d2:	3408      	adds	r4, #8
100145d4:	f000 fb3a 	bl	10014c4c <__malloc_unlock>
100145d8:	e67b      	b.n	100142d2 <_malloc_r+0x52>
100145da:	ea4f 0cd5 	mov.w	ip, r5, lsr #3
100145de:	f105 0308 	add.w	r3, r5, #8
100145e2:	e65e      	b.n	100142a2 <_malloc_r+0x22>
100145e4:	1962      	adds	r2, r4, r5
100145e6:	f043 0101 	orr.w	r1, r3, #1
100145ea:	f045 0501 	orr.w	r5, r5, #1
100145ee:	6065      	str	r5, [r4, #4]
100145f0:	4630      	mov	r0, r6
100145f2:	e9c7 2204 	strd	r2, r2, [r7, #16]
100145f6:	f8c2 8008 	str.w	r8, [r2, #8]
100145fa:	f8c2 800c 	str.w	r8, [r2, #12]
100145fe:	6051      	str	r1, [r2, #4]
10014600:	f844 3009 	str.w	r3, [r4, r9]
10014604:	f000 fb22 	bl	10014c4c <__malloc_unlock>
10014608:	3408      	adds	r4, #8
1001460a:	e662      	b.n	100142d2 <_malloc_r+0x52>
1001460c:	ea4f 1299 	mov.w	r2, r9, lsr #6
10014610:	f102 0339 	add.w	r3, r2, #57	@ 0x39
10014614:	00db      	lsls	r3, r3, #3
10014616:	3238      	adds	r2, #56	@ 0x38
10014618:	e780      	b.n	1001451c <_malloc_r+0x29c>
1001461a:	42bc      	cmp	r4, r7
1001461c:	d024      	beq.n	10014668 <_malloc_r+0x3e8>
1001461e:	68bc      	ldr	r4, [r7, #8]
10014620:	6862      	ldr	r2, [r4, #4]
10014622:	e743      	b.n	100144ac <_malloc_r+0x22c>
10014624:	f103 0c5c 	add.w	ip, r3, #92	@ 0x5c
10014628:	f103 0e5b 	add.w	lr, r3, #91	@ 0x5b
1001462c:	ea4f 03cc 	mov.w	r3, ip, lsl #3
10014630:	e66d      	b.n	1001430e <_malloc_r+0x8e>
10014632:	f85a 3908 	ldr.w	r3, [sl], #-8
10014636:	4553      	cmp	r3, sl
10014638:	f040 80d8 	bne.w	100147ec <_malloc_r+0x56c>
1001463c:	f01c 0f03 	tst.w	ip, #3
10014640:	f10c 3cff 	add.w	ip, ip, #4294967295	@ 0xffffffff
10014644:	d1f5      	bne.n	10014632 <_malloc_r+0x3b2>
10014646:	687b      	ldr	r3, [r7, #4]
10014648:	ea23 0300 	bic.w	r3, r3, r0
1001464c:	607b      	str	r3, [r7, #4]
1001464e:	0040      	lsls	r0, r0, #1
10014650:	4298      	cmp	r0, r3
10014652:	f63f aedc 	bhi.w	1001440e <_malloc_r+0x18e>
10014656:	b918      	cbnz	r0, 10014660 <_malloc_r+0x3e0>
10014658:	e6d9      	b.n	1001440e <_malloc_r+0x18e>
1001465a:	0040      	lsls	r0, r0, #1
1001465c:	f109 0904 	add.w	r9, r9, #4
10014660:	4218      	tst	r0, r3
10014662:	d0fa      	beq.n	1001465a <_malloc_r+0x3da>
10014664:	46cc      	mov	ip, r9
10014666:	e6a8      	b.n	100143ba <_malloc_r+0x13a>
10014668:	4b61      	ldr	r3, [pc, #388]	@ (100147f0 <_malloc_r+0x570>)
1001466a:	9901      	ldr	r1, [sp, #4]
1001466c:	6818      	ldr	r0, [r3, #0]
1001466e:	eb08 0c00 	add.w	ip, r8, r0
10014672:	3901      	subs	r1, #1
10014674:	f8c3 c000 	str.w	ip, [r3]
10014678:	f8db 0000 	ldr.w	r0, [fp]
1001467c:	3001      	adds	r0, #1
1001467e:	bf1b      	ittet	ne
10014680:	ebaa 0202 	subne.w	r2, sl, r2
10014684:	4462      	addne	r2, ip
10014686:	f8cb a000 	streq.w	sl, [fp]
1001468a:	601a      	strne	r2, [r3, #0]
1001468c:	f01a 0207 	ands.w	r2, sl, #7
10014690:	e9cd 2302 	strd	r2, r3, [sp, #8]
10014694:	d042      	beq.n	1001471c <_malloc_r+0x49c>
10014696:	f1c2 0208 	rsb	r2, r2, #8
1001469a:	9b01      	ldr	r3, [sp, #4]
1001469c:	4492      	add	sl, r2
1001469e:	44d0      	add	r8, sl
100146a0:	4413      	add	r3, r2
100146a2:	ea08 0001 	and.w	r0, r8, r1
100146a6:	1a1a      	subs	r2, r3, r0
100146a8:	ea02 0b01 	and.w	fp, r2, r1
100146ac:	4659      	mov	r1, fp
100146ae:	4630      	mov	r0, r6
100146b0:	f002 f936 	bl	10016920 <_sbrk_r>
100146b4:	1c42      	adds	r2, r0, #1
100146b6:	9b03      	ldr	r3, [sp, #12]
100146b8:	d07a      	beq.n	100147b0 <_malloc_r+0x530>
100146ba:	eba0 000a 	sub.w	r0, r0, sl
100146be:	eb00 080b 	add.w	r8, r0, fp
100146c2:	6818      	ldr	r0, [r3, #0]
100146c4:	f8c7 a008 	str.w	sl, [r7, #8]
100146c8:	f048 0201 	orr.w	r2, r8, #1
100146cc:	4458      	add	r0, fp
100146ce:	42bc      	cmp	r4, r7
100146d0:	f8ca 2004 	str.w	r2, [sl, #4]
100146d4:	6018      	str	r0, [r3, #0]
100146d6:	f43f aede 	beq.w	10014496 <_malloc_r+0x216>
100146da:	f1b9 0f0f 	cmp.w	r9, #15
100146de:	d942      	bls.n	10014766 <_malloc_r+0x4e6>
100146e0:	6861      	ldr	r1, [r4, #4]
100146e2:	f1a9 020c 	sub.w	r2, r9, #12
100146e6:	f022 0207 	bic.w	r2, r2, #7
100146ea:	f001 0101 	and.w	r1, r1, #1
100146ee:	4311      	orrs	r1, r2
100146f0:	6061      	str	r1, [r4, #4]
100146f2:	18a1      	adds	r1, r4, r2
100146f4:	f04f 0c05 	mov.w	ip, #5
100146f8:	2a0f      	cmp	r2, #15
100146fa:	f8c1 c004 	str.w	ip, [r1, #4]
100146fe:	f8c1 c008 	str.w	ip, [r1, #8]
10014702:	d84a      	bhi.n	1001479a <_malloc_r+0x51a>
10014704:	f8da 2004 	ldr.w	r2, [sl, #4]
10014708:	e6c5      	b.n	10014496 <_malloc_r+0x216>
1001470a:	1092      	asrs	r2, r2, #2
1001470c:	2001      	movs	r0, #1
1001470e:	fa00 f202 	lsl.w	r2, r0, r2
10014712:	ea4e 0e02 	orr.w	lr, lr, r2
10014716:	f8c7 e004 	str.w	lr, [r7, #4]
1001471a:	e70e      	b.n	1001453a <_malloc_r+0x2ba>
1001471c:	9b01      	ldr	r3, [sp, #4]
1001471e:	eb0a 0208 	add.w	r2, sl, r8
10014722:	400a      	ands	r2, r1
10014724:	1a9a      	subs	r2, r3, r2
10014726:	ea02 0b01 	and.w	fp, r2, r1
1001472a:	4659      	mov	r1, fp
1001472c:	4630      	mov	r0, r6
1001472e:	f002 f8f7 	bl	10016920 <_sbrk_r>
10014732:	1c43      	adds	r3, r0, #1
10014734:	9b03      	ldr	r3, [sp, #12]
10014736:	d1c0      	bne.n	100146ba <_malloc_r+0x43a>
10014738:	f8dd b008 	ldr.w	fp, [sp, #8]
1001473c:	e7c1      	b.n	100146c2 <_malloc_r+0x442>
1001473e:	2a54      	cmp	r2, #84	@ 0x54
10014740:	d815      	bhi.n	1001476e <_malloc_r+0x4ee>
10014742:	ea4f 3219 	mov.w	r2, r9, lsr #12
10014746:	f102 036f 	add.w	r3, r2, #111	@ 0x6f
1001474a:	00db      	lsls	r3, r3, #3
1001474c:	326e      	adds	r2, #110	@ 0x6e
1001474e:	e6e5      	b.n	1001451c <_malloc_r+0x29c>
10014750:	f5b3 7faa 	cmp.w	r3, #340	@ 0x154
10014754:	d815      	bhi.n	10014782 <_malloc_r+0x502>
10014756:	0beb      	lsrs	r3, r5, #15
10014758:	f103 0c78 	add.w	ip, r3, #120	@ 0x78
1001475c:	f103 0e77 	add.w	lr, r3, #119	@ 0x77
10014760:	ea4f 03cc 	mov.w	r3, ip, lsl #3
10014764:	e5d3      	b.n	1001430e <_malloc_r+0x8e>
10014766:	2301      	movs	r3, #1
10014768:	f8ca 3004 	str.w	r3, [sl, #4]
1001476c:	e6a6      	b.n	100144bc <_malloc_r+0x23c>
1001476e:	f5b2 7faa 	cmp.w	r2, #340	@ 0x154
10014772:	d825      	bhi.n	100147c0 <_malloc_r+0x540>
10014774:	ea4f 32d9 	mov.w	r2, r9, lsr #15
10014778:	f102 0378 	add.w	r3, r2, #120	@ 0x78
1001477c:	00db      	lsls	r3, r3, #3
1001477e:	3277      	adds	r2, #119	@ 0x77
10014780:	e6cc      	b.n	1001451c <_malloc_r+0x29c>
10014782:	f240 5254 	movw	r2, #1364	@ 0x554
10014786:	4293      	cmp	r3, r2
10014788:	d825      	bhi.n	100147d6 <_malloc_r+0x556>
1001478a:	0cab      	lsrs	r3, r5, #18
1001478c:	f103 0c7d 	add.w	ip, r3, #125	@ 0x7d
10014790:	f103 0e7c 	add.w	lr, r3, #124	@ 0x7c
10014794:	ea4f 03cc 	mov.w	r3, ip, lsl #3
10014798:	e5b9      	b.n	1001430e <_malloc_r+0x8e>
1001479a:	4630      	mov	r0, r6
1001479c:	f104 0108 	add.w	r1, r4, #8
100147a0:	9301      	str	r3, [sp, #4]
100147a2:	f001 ff6f 	bl	10016684 <_free_r>
100147a6:	9b01      	ldr	r3, [sp, #4]
100147a8:	f8d7 a008 	ldr.w	sl, [r7, #8]
100147ac:	6818      	ldr	r0, [r3, #0]
100147ae:	e7a9      	b.n	10014704 <_malloc_r+0x484>
100147b0:	9a02      	ldr	r2, [sp, #8]
100147b2:	3a08      	subs	r2, #8
100147b4:	4490      	add	r8, r2
100147b6:	eba8 080a 	sub.w	r8, r8, sl
100147ba:	f04f 0b00 	mov.w	fp, #0
100147be:	e780      	b.n	100146c2 <_malloc_r+0x442>
100147c0:	f240 5354 	movw	r3, #1364	@ 0x554
100147c4:	429a      	cmp	r2, r3
100147c6:	d80d      	bhi.n	100147e4 <_malloc_r+0x564>
100147c8:	ea4f 4299 	mov.w	r2, r9, lsr #18
100147cc:	f102 037d 	add.w	r3, r2, #125	@ 0x7d
100147d0:	00db      	lsls	r3, r3, #3
100147d2:	327c      	adds	r2, #124	@ 0x7c
100147d4:	e6a2      	b.n	1001451c <_malloc_r+0x29c>
100147d6:	f44f 737e 	mov.w	r3, #1016	@ 0x3f8
100147da:	f04f 0c7f 	mov.w	ip, #127	@ 0x7f
100147de:	f04f 0e7e 	mov.w	lr, #126	@ 0x7e
100147e2:	e594      	b.n	1001430e <_malloc_r+0x8e>
100147e4:	f44f 737e 	mov.w	r3, #1016	@ 0x3f8
100147e8:	227e      	movs	r2, #126	@ 0x7e
100147ea:	e697      	b.n	1001451c <_malloc_r+0x29c>
100147ec:	687b      	ldr	r3, [r7, #4]
100147ee:	e72e      	b.n	1001464e <_malloc_r+0x3ce>
100147f0:	2000163c 	.word	0x2000163c

100147f4 <register_fini>:
100147f4:	4b02      	ldr	r3, [pc, #8]	@ (10014800 <register_fini+0xc>)
100147f6:	b113      	cbz	r3, 100147fe <register_fini+0xa>
100147f8:	4802      	ldr	r0, [pc, #8]	@ (10014804 <register_fini+0x10>)
100147fa:	f000 ba2d 	b.w	10014c58 <atexit>
100147fe:	4770      	bx	lr
10014800:	00000000 	.word	0x00000000
10014804:	10014a49 	.word	0x10014a49

10014808 <memmove>:
10014808:	4288      	cmp	r0, r1
1001480a:	d90e      	bls.n	1001482a <memmove+0x22>
1001480c:	188b      	adds	r3, r1, r2
1001480e:	4283      	cmp	r3, r0
10014810:	d90b      	bls.n	1001482a <memmove+0x22>
10014812:	eb00 0c02 	add.w	ip, r0, r2
10014816:	2a00      	cmp	r2, #0
10014818:	d06e      	beq.n	100148f8 <memmove+0xf0>
1001481a:	4662      	mov	r2, ip
1001481c:	f813 cd01 	ldrb.w	ip, [r3, #-1]!
10014820:	f802 cd01 	strb.w	ip, [r2, #-1]!
10014824:	4299      	cmp	r1, r3
10014826:	d1f9      	bne.n	1001481c <memmove+0x14>
10014828:	4770      	bx	lr
1001482a:	2a0f      	cmp	r2, #15
1001482c:	d80f      	bhi.n	1001484e <memmove+0x46>
1001482e:	4603      	mov	r3, r0
10014830:	f102 3cff 	add.w	ip, r2, #4294967295	@ 0xffffffff
10014834:	2a00      	cmp	r2, #0
10014836:	d05f      	beq.n	100148f8 <memmove+0xf0>
10014838:	f10c 0c01 	add.w	ip, ip, #1
1001483c:	3b01      	subs	r3, #1
1001483e:	448c      	add	ip, r1
10014840:	f811 2b01 	ldrb.w	r2, [r1], #1
10014844:	f803 2f01 	strb.w	r2, [r3, #1]!
10014848:	4561      	cmp	r1, ip
1001484a:	d1f9      	bne.n	10014840 <memmove+0x38>
1001484c:	4770      	bx	lr
1001484e:	ea40 0301 	orr.w	r3, r0, r1
10014852:	079b      	lsls	r3, r3, #30
10014854:	d151      	bne.n	100148fa <memmove+0xf2>
10014856:	f1a2 0310 	sub.w	r3, r2, #16
1001485a:	b570      	push	{r4, r5, r6, lr}
1001485c:	f101 0c20 	add.w	ip, r1, #32
10014860:	f023 050f 	bic.w	r5, r3, #15
10014864:	f101 0e10 	add.w	lr, r1, #16
10014868:	f100 0410 	add.w	r4, r0, #16
1001486c:	44ac      	add	ip, r5
1001486e:	091b      	lsrs	r3, r3, #4
10014870:	f85e 5c10 	ldr.w	r5, [lr, #-16]
10014874:	f844 5c10 	str.w	r5, [r4, #-16]
10014878:	f85e 5c0c 	ldr.w	r5, [lr, #-12]
1001487c:	f844 5c0c 	str.w	r5, [r4, #-12]
10014880:	f85e 5c08 	ldr.w	r5, [lr, #-8]
10014884:	f844 5c08 	str.w	r5, [r4, #-8]
10014888:	f85e 5c04 	ldr.w	r5, [lr, #-4]
1001488c:	f844 5c04 	str.w	r5, [r4, #-4]
10014890:	f10e 0e10 	add.w	lr, lr, #16
10014894:	45e6      	cmp	lr, ip
10014896:	f104 0410 	add.w	r4, r4, #16
1001489a:	d1e9      	bne.n	10014870 <memmove+0x68>
1001489c:	3301      	adds	r3, #1
1001489e:	f012 0f0c 	tst.w	r2, #12
100148a2:	eb01 1103 	add.w	r1, r1, r3, lsl #4
100148a6:	f002 040f 	and.w	r4, r2, #15
100148aa:	eb00 1303 	add.w	r3, r0, r3, lsl #4
100148ae:	d028      	beq.n	10014902 <memmove+0xfa>
100148b0:	3c04      	subs	r4, #4
100148b2:	f024 0603 	bic.w	r6, r4, #3
100148b6:	ea4f 0c94 	mov.w	ip, r4, lsr #2
100148ba:	441e      	add	r6, r3
100148bc:	1f1c      	subs	r4, r3, #4
100148be:	468e      	mov	lr, r1
100148c0:	f85e 5b04 	ldr.w	r5, [lr], #4
100148c4:	f844 5f04 	str.w	r5, [r4, #4]!
100148c8:	42b4      	cmp	r4, r6
100148ca:	d1f9      	bne.n	100148c0 <memmove+0xb8>
100148cc:	f10c 0401 	add.w	r4, ip, #1
100148d0:	f002 0203 	and.w	r2, r2, #3
100148d4:	eb03 0384 	add.w	r3, r3, r4, lsl #2
100148d8:	eb01 0184 	add.w	r1, r1, r4, lsl #2
100148dc:	f102 3cff 	add.w	ip, r2, #4294967295	@ 0xffffffff
100148e0:	b14a      	cbz	r2, 100148f6 <memmove+0xee>
100148e2:	f10c 0c01 	add.w	ip, ip, #1
100148e6:	3b01      	subs	r3, #1
100148e8:	448c      	add	ip, r1
100148ea:	f811 2b01 	ldrb.w	r2, [r1], #1
100148ee:	f803 2f01 	strb.w	r2, [r3, #1]!
100148f2:	4561      	cmp	r1, ip
100148f4:	d1f9      	bne.n	100148ea <memmove+0xe2>
100148f6:	bd70      	pop	{r4, r5, r6, pc}
100148f8:	4770      	bx	lr
100148fa:	f102 3cff 	add.w	ip, r2, #4294967295	@ 0xffffffff
100148fe:	4603      	mov	r3, r0
10014900:	e79a      	b.n	10014838 <memmove+0x30>
10014902:	4622      	mov	r2, r4
10014904:	e7ea      	b.n	100148dc <memmove+0xd4>
10014906:	bf00      	nop

10014908 <memset>:
10014908:	0783      	lsls	r3, r0, #30
1001490a:	b530      	push	{r4, r5, lr}
1001490c:	d047      	beq.n	1001499e <memset+0x96>
1001490e:	1e54      	subs	r4, r2, #1
10014910:	2a00      	cmp	r2, #0
10014912:	d03e      	beq.n	10014992 <memset+0x8a>
10014914:	b2ca      	uxtb	r2, r1
10014916:	4603      	mov	r3, r0
10014918:	e001      	b.n	1001491e <memset+0x16>
1001491a:	3c01      	subs	r4, #1
1001491c:	d339      	bcc.n	10014992 <memset+0x8a>
1001491e:	f803 2b01 	strb.w	r2, [r3], #1
10014922:	079d      	lsls	r5, r3, #30
10014924:	d1f9      	bne.n	1001491a <memset+0x12>
10014926:	2c03      	cmp	r4, #3
10014928:	d92c      	bls.n	10014984 <memset+0x7c>
1001492a:	b2cd      	uxtb	r5, r1
1001492c:	eb05 2505 	add.w	r5, r5, r5, lsl #8
10014930:	2c0f      	cmp	r4, #15
10014932:	eb05 4505 	add.w	r5, r5, r5, lsl #16
10014936:	d935      	bls.n	100149a4 <memset+0x9c>
10014938:	f1a4 0210 	sub.w	r2, r4, #16
1001493c:	f022 0c0f 	bic.w	ip, r2, #15
10014940:	f103 0e10 	add.w	lr, r3, #16
10014944:	44e6      	add	lr, ip
10014946:	ea4f 1c12 	mov.w	ip, r2, lsr #4
1001494a:	461a      	mov	r2, r3
1001494c:	6015      	str	r5, [r2, #0]
1001494e:	6055      	str	r5, [r2, #4]
10014950:	6095      	str	r5, [r2, #8]
10014952:	60d5      	str	r5, [r2, #12]
10014954:	3210      	adds	r2, #16
10014956:	4572      	cmp	r2, lr
10014958:	d1f8      	bne.n	1001494c <memset+0x44>
1001495a:	f10c 0201 	add.w	r2, ip, #1
1001495e:	f014 0f0c 	tst.w	r4, #12
10014962:	eb03 1202 	add.w	r2, r3, r2, lsl #4
10014966:	f004 0c0f 	and.w	ip, r4, #15
1001496a:	d013      	beq.n	10014994 <memset+0x8c>
1001496c:	f1ac 0304 	sub.w	r3, ip, #4
10014970:	f023 0303 	bic.w	r3, r3, #3
10014974:	3304      	adds	r3, #4
10014976:	4413      	add	r3, r2
10014978:	f842 5b04 	str.w	r5, [r2], #4
1001497c:	429a      	cmp	r2, r3
1001497e:	d1fb      	bne.n	10014978 <memset+0x70>
10014980:	f00c 0403 	and.w	r4, ip, #3
10014984:	b12c      	cbz	r4, 10014992 <memset+0x8a>
10014986:	b2c9      	uxtb	r1, r1
10014988:	441c      	add	r4, r3
1001498a:	f803 1b01 	strb.w	r1, [r3], #1
1001498e:	429c      	cmp	r4, r3
10014990:	d1fb      	bne.n	1001498a <memset+0x82>
10014992:	bd30      	pop	{r4, r5, pc}
10014994:	4664      	mov	r4, ip
10014996:	4613      	mov	r3, r2
10014998:	2c00      	cmp	r4, #0
1001499a:	d1f4      	bne.n	10014986 <memset+0x7e>
1001499c:	e7f9      	b.n	10014992 <memset+0x8a>
1001499e:	4603      	mov	r3, r0
100149a0:	4614      	mov	r4, r2
100149a2:	e7c0      	b.n	10014926 <memset+0x1e>
100149a4:	461a      	mov	r2, r3
100149a6:	46a4      	mov	ip, r4
100149a8:	e7e0      	b.n	1001496c <memset+0x64>
100149aa:	bf00      	nop

100149ac <_wcrtomb_r>:
100149ac:	b570      	push	{r4, r5, r6, lr}
100149ae:	4605      	mov	r5, r0
100149b0:	b084      	sub	sp, #16
100149b2:	b15b      	cbz	r3, 100149cc <_wcrtomb_r+0x20>
100149b4:	461c      	mov	r4, r3
100149b6:	4b0f      	ldr	r3, [pc, #60]	@ (100149f4 <_wcrtomb_r+0x48>)
100149b8:	f8d3 60e0 	ldr.w	r6, [r3, #224]	@ 0xe0
100149bc:	4623      	mov	r3, r4
100149be:	b169      	cbz	r1, 100149dc <_wcrtomb_r+0x30>
100149c0:	4628      	mov	r0, r5
100149c2:	47b0      	blx	r6
100149c4:	1c43      	adds	r3, r0, #1
100149c6:	d00f      	beq.n	100149e8 <_wcrtomb_r+0x3c>
100149c8:	b004      	add	sp, #16
100149ca:	bd70      	pop	{r4, r5, r6, pc}
100149cc:	4b09      	ldr	r3, [pc, #36]	@ (100149f4 <_wcrtomb_r+0x48>)
100149ce:	f500 7482 	add.w	r4, r0, #260	@ 0x104
100149d2:	f8d3 60e0 	ldr.w	r6, [r3, #224]	@ 0xe0
100149d6:	4623      	mov	r3, r4
100149d8:	2900      	cmp	r1, #0
100149da:	d1f1      	bne.n	100149c0 <_wcrtomb_r+0x14>
100149dc:	460a      	mov	r2, r1
100149de:	4628      	mov	r0, r5
100149e0:	a901      	add	r1, sp, #4
100149e2:	47b0      	blx	r6
100149e4:	1c43      	adds	r3, r0, #1
100149e6:	d1ef      	bne.n	100149c8 <_wcrtomb_r+0x1c>
100149e8:	2200      	movs	r2, #0
100149ea:	238a      	movs	r3, #138	@ 0x8a
100149ec:	6022      	str	r2, [r4, #0]
100149ee:	602b      	str	r3, [r5, #0]
100149f0:	b004      	add	sp, #16
100149f2:	bd70      	pop	{r4, r5, r6, pc}
100149f4:	2000045c 	.word	0x2000045c

100149f8 <__libc_init_array>:
100149f8:	b570      	push	{r4, r5, r6, lr}
100149fa:	4b0f      	ldr	r3, [pc, #60]	@ (10014a38 <__libc_init_array+0x40>)
100149fc:	4d0f      	ldr	r5, [pc, #60]	@ (10014a3c <__libc_init_array+0x44>)
100149fe:	42ab      	cmp	r3, r5
10014a00:	eba3 0605 	sub.w	r6, r3, r5
10014a04:	d007      	beq.n	10014a16 <__libc_init_array+0x1e>
10014a06:	10b6      	asrs	r6, r6, #2
10014a08:	2400      	movs	r4, #0
10014a0a:	f855 3b04 	ldr.w	r3, [r5], #4
10014a0e:	3401      	adds	r4, #1
10014a10:	4798      	blx	r3
10014a12:	42a6      	cmp	r6, r4
10014a14:	d8f9      	bhi.n	10014a0a <__libc_init_array+0x12>
10014a16:	f009 f9af 	bl	1001dd78 <_init>
10014a1a:	4d09      	ldr	r5, [pc, #36]	@ (10014a40 <__libc_init_array+0x48>)
10014a1c:	4b09      	ldr	r3, [pc, #36]	@ (10014a44 <__libc_init_array+0x4c>)
10014a1e:	1b5e      	subs	r6, r3, r5
10014a20:	42ab      	cmp	r3, r5
10014a22:	ea4f 06a6 	mov.w	r6, r6, asr #2
10014a26:	d006      	beq.n	10014a36 <__libc_init_array+0x3e>
10014a28:	2400      	movs	r4, #0
10014a2a:	f855 3b04 	ldr.w	r3, [r5], #4
10014a2e:	3401      	adds	r4, #1
10014a30:	4798      	blx	r3
10014a32:	42a6      	cmp	r6, r4
10014a34:	d8f9      	bhi.n	10014a2a <__libc_init_array+0x32>
10014a36:	bd70      	pop	{r4, r5, r6, pc}
10014a38:	200006fc 	.word	0x200006fc
10014a3c:	200006fc 	.word	0x200006fc
10014a40:	200006fc 	.word	0x200006fc
10014a44:	20000704 	.word	0x20000704

10014a48 <__libc_fini_array>:
10014a48:	b538      	push	{r3, r4, r5, lr}
10014a4a:	4d07      	ldr	r5, [pc, #28]	@ (10014a68 <__libc_fini_array+0x20>)
10014a4c:	4c07      	ldr	r4, [pc, #28]	@ (10014a6c <__libc_fini_array+0x24>)
10014a4e:	1b2c      	subs	r4, r5, r4
10014a50:	10a4      	asrs	r4, r4, #2
10014a52:	d005      	beq.n	10014a60 <__libc_fini_array+0x18>
10014a54:	3c01      	subs	r4, #1
10014a56:	f855 3d04 	ldr.w	r3, [r5, #-4]!
10014a5a:	4798      	blx	r3
10014a5c:	2c00      	cmp	r4, #0
10014a5e:	d1f9      	bne.n	10014a54 <__libc_fini_array+0xc>
10014a60:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
10014a64:	f009 b98e 	b.w	1001dd84 <_fini>
10014a68:	20000708 	.word	0x20000708
10014a6c:	20000704 	.word	0x20000704

10014a70 <__retarget_lock_init_recursive>:
10014a70:	4770      	bx	lr
10014a72:	bf00      	nop

10014a74 <__retarget_lock_close_recursive>:
10014a74:	4770      	bx	lr
10014a76:	bf00      	nop

10014a78 <__retarget_lock_acquire_recursive>:
10014a78:	4770      	bx	lr
10014a7a:	bf00      	nop

10014a7c <__retarget_lock_release_recursive>:
10014a7c:	4770      	bx	lr
10014a7e:	bf00      	nop

10014a80 <__locale_mb_cur_max>:
10014a80:	4b01      	ldr	r3, [pc, #4]	@ (10014a88 <__locale_mb_cur_max+0x8>)
10014a82:	f893 0128 	ldrb.w	r0, [r3, #296]	@ 0x128
10014a86:	4770      	bx	lr
10014a88:	2000045c 	.word	0x2000045c

10014a8c <_localeconv_r>:
10014a8c:	4800      	ldr	r0, [pc, #0]	@ (10014a90 <_localeconv_r+0x4>)
10014a8e:	4770      	bx	lr
10014a90:	2000054c 	.word	0x2000054c

10014a94 <_fclose_r>:
10014a94:	b570      	push	{r4, r5, r6, lr}
10014a96:	2900      	cmp	r1, #0
10014a98:	d03f      	beq.n	10014b1a <_fclose_r+0x86>
10014a9a:	4605      	mov	r5, r0
10014a9c:	460c      	mov	r4, r1
10014a9e:	b110      	cbz	r0, 10014aa6 <_fclose_r+0x12>
10014aa0:	6b43      	ldr	r3, [r0, #52]	@ 0x34
10014aa2:	2b00      	cmp	r3, #0
10014aa4:	d03c      	beq.n	10014b20 <_fclose_r+0x8c>
10014aa6:	6e63      	ldr	r3, [r4, #100]	@ 0x64
10014aa8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
10014aac:	07de      	lsls	r6, r3, #31
10014aae:	d432      	bmi.n	10014b16 <_fclose_r+0x82>
10014ab0:	0590      	lsls	r0, r2, #22
10014ab2:	d538      	bpl.n	10014b26 <_fclose_r+0x92>
10014ab4:	4621      	mov	r1, r4
10014ab6:	4628      	mov	r0, r5
10014ab8:	f001 f8aa 	bl	10015c10 <__sflush_r>
10014abc:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
10014abe:	4606      	mov	r6, r0
10014ac0:	b133      	cbz	r3, 10014ad0 <_fclose_r+0x3c>
10014ac2:	69e1      	ldr	r1, [r4, #28]
10014ac4:	4628      	mov	r0, r5
10014ac6:	4798      	blx	r3
10014ac8:	2800      	cmp	r0, #0
10014aca:	bfb8      	it	lt
10014acc:	f04f 36ff 	movlt.w	r6, #4294967295	@ 0xffffffff
10014ad0:	89a3      	ldrh	r3, [r4, #12]
10014ad2:	061a      	lsls	r2, r3, #24
10014ad4:	d439      	bmi.n	10014b4a <_fclose_r+0xb6>
10014ad6:	6b21      	ldr	r1, [r4, #48]	@ 0x30
10014ad8:	b141      	cbz	r1, 10014aec <_fclose_r+0x58>
10014ada:	f104 0340 	add.w	r3, r4, #64	@ 0x40
10014ade:	4299      	cmp	r1, r3
10014ae0:	d002      	beq.n	10014ae8 <_fclose_r+0x54>
10014ae2:	4628      	mov	r0, r5
10014ae4:	f001 fdce 	bl	10016684 <_free_r>
10014ae8:	2300      	movs	r3, #0
10014aea:	6323      	str	r3, [r4, #48]	@ 0x30
10014aec:	6c61      	ldr	r1, [r4, #68]	@ 0x44
10014aee:	b121      	cbz	r1, 10014afa <_fclose_r+0x66>
10014af0:	4628      	mov	r0, r5
10014af2:	f001 fdc7 	bl	10016684 <_free_r>
10014af6:	2300      	movs	r3, #0
10014af8:	6463      	str	r3, [r4, #68]	@ 0x44
10014afa:	f001 fa11 	bl	10015f20 <__sfp_lock_acquire>
10014afe:	6e63      	ldr	r3, [r4, #100]	@ 0x64
10014b00:	2200      	movs	r2, #0
10014b02:	07db      	lsls	r3, r3, #31
10014b04:	81a2      	strh	r2, [r4, #12]
10014b06:	d51c      	bpl.n	10014b42 <_fclose_r+0xae>
10014b08:	6da0      	ldr	r0, [r4, #88]	@ 0x58
10014b0a:	f7ff ffb3 	bl	10014a74 <__retarget_lock_close_recursive>
10014b0e:	f001 fa0d 	bl	10015f2c <__sfp_lock_release>
10014b12:	4630      	mov	r0, r6
10014b14:	bd70      	pop	{r4, r5, r6, pc}
10014b16:	2a00      	cmp	r2, #0
10014b18:	d1cc      	bne.n	10014ab4 <_fclose_r+0x20>
10014b1a:	2600      	movs	r6, #0
10014b1c:	4630      	mov	r0, r6
10014b1e:	bd70      	pop	{r4, r5, r6, pc}
10014b20:	f001 f9e0 	bl	10015ee4 <__sinit>
10014b24:	e7bf      	b.n	10014aa6 <_fclose_r+0x12>
10014b26:	6da0      	ldr	r0, [r4, #88]	@ 0x58
10014b28:	f7ff ffa6 	bl	10014a78 <__retarget_lock_acquire_recursive>
10014b2c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10014b30:	2b00      	cmp	r3, #0
10014b32:	d1bf      	bne.n	10014ab4 <_fclose_r+0x20>
10014b34:	6e63      	ldr	r3, [r4, #100]	@ 0x64
10014b36:	07d9      	lsls	r1, r3, #31
10014b38:	d4ef      	bmi.n	10014b1a <_fclose_r+0x86>
10014b3a:	6da0      	ldr	r0, [r4, #88]	@ 0x58
10014b3c:	f7ff ff9e 	bl	10014a7c <__retarget_lock_release_recursive>
10014b40:	e7eb      	b.n	10014b1a <_fclose_r+0x86>
10014b42:	6da0      	ldr	r0, [r4, #88]	@ 0x58
10014b44:	f7ff ff9a 	bl	10014a7c <__retarget_lock_release_recursive>
10014b48:	e7de      	b.n	10014b08 <_fclose_r+0x74>
10014b4a:	6921      	ldr	r1, [r4, #16]
10014b4c:	4628      	mov	r0, r5
10014b4e:	f001 fd99 	bl	10016684 <_free_r>
10014b52:	e7c0      	b.n	10014ad6 <_fclose_r+0x42>

10014b54 <sysconf>:
10014b54:	2808      	cmp	r0, #8
10014b56:	d102      	bne.n	10014b5e <sysconf+0xa>
10014b58:	f44f 5080 	mov.w	r0, #4096	@ 0x1000
10014b5c:	4770      	bx	lr
10014b5e:	b508      	push	{r3, lr}
10014b60:	f7fd fdb6 	bl	100126d0 <__errno>
10014b64:	2316      	movs	r3, #22
10014b66:	6003      	str	r3, [r0, #0]
10014b68:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10014b6c:	bd08      	pop	{r3, pc}
10014b6e:	bf00      	nop

10014b70 <printf>:
10014b70:	b40f      	push	{r0, r1, r2, r3}
10014b72:	b500      	push	{lr}
10014b74:	4907      	ldr	r1, [pc, #28]	@ (10014b94 <printf+0x24>)
10014b76:	b083      	sub	sp, #12
10014b78:	ab04      	add	r3, sp, #16
10014b7a:	6808      	ldr	r0, [r1, #0]
10014b7c:	f853 2b04 	ldr.w	r2, [r3], #4
10014b80:	6881      	ldr	r1, [r0, #8]
10014b82:	9301      	str	r3, [sp, #4]
10014b84:	f002 f908 	bl	10016d98 <_vfprintf_r>
10014b88:	b003      	add	sp, #12
10014b8a:	f85d eb04 	ldr.w	lr, [sp], #4
10014b8e:	b004      	add	sp, #16
10014b90:	4770      	bx	lr
10014b92:	bf00      	nop
10014b94:	200005c8 	.word	0x200005c8

10014b98 <_puts_r>:
10014b98:	b570      	push	{r4, r5, r6, lr}
10014b9a:	4605      	mov	r5, r0
10014b9c:	b088      	sub	sp, #32
10014b9e:	4608      	mov	r0, r1
10014ba0:	460c      	mov	r4, r1
10014ba2:	f001 facd 	bl	10016140 <strlen>
10014ba6:	4e21      	ldr	r6, [pc, #132]	@ (10014c2c <_puts_r+0x94>)
10014ba8:	6b6a      	ldr	r2, [r5, #52]	@ 0x34
10014baa:	9005      	str	r0, [sp, #20]
10014bac:	2101      	movs	r1, #1
10014bae:	1843      	adds	r3, r0, r1
10014bb0:	e9cd 6106 	strd	r6, r1, [sp, #24]
10014bb4:	a804      	add	r0, sp, #16
10014bb6:	2102      	movs	r1, #2
10014bb8:	9404      	str	r4, [sp, #16]
10014bba:	9303      	str	r3, [sp, #12]
10014bbc:	68ac      	ldr	r4, [r5, #8]
10014bbe:	9001      	str	r0, [sp, #4]
10014bc0:	9102      	str	r1, [sp, #8]
10014bc2:	2a00      	cmp	r2, #0
10014bc4:	d02e      	beq.n	10014c24 <_puts_r+0x8c>
10014bc6:	6e62      	ldr	r2, [r4, #100]	@ 0x64
10014bc8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10014bcc:	07d6      	lsls	r6, r2, #31
10014bce:	d401      	bmi.n	10014bd4 <_puts_r+0x3c>
10014bd0:	0598      	lsls	r0, r3, #22
10014bd2:	d521      	bpl.n	10014c18 <_puts_r+0x80>
10014bd4:	0499      	lsls	r1, r3, #18
10014bd6:	d406      	bmi.n	10014be6 <_puts_r+0x4e>
10014bd8:	6e62      	ldr	r2, [r4, #100]	@ 0x64
10014bda:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
10014bde:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
10014be2:	81a3      	strh	r3, [r4, #12]
10014be4:	6662      	str	r2, [r4, #100]	@ 0x64
10014be6:	4628      	mov	r0, r5
10014be8:	aa01      	add	r2, sp, #4
10014bea:	4621      	mov	r1, r4
10014bec:	f001 feaa 	bl	10016944 <__sfvwrite_r>
10014bf0:	6e63      	ldr	r3, [r4, #100]	@ 0x64
10014bf2:	2800      	cmp	r0, #0
10014bf4:	bf0c      	ite	eq
10014bf6:	250a      	moveq	r5, #10
10014bf8:	f04f 35ff 	movne.w	r5, #4294967295	@ 0xffffffff
10014bfc:	07da      	lsls	r2, r3, #31
10014bfe:	d402      	bmi.n	10014c06 <_puts_r+0x6e>
10014c00:	89a3      	ldrh	r3, [r4, #12]
10014c02:	059b      	lsls	r3, r3, #22
10014c04:	d502      	bpl.n	10014c0c <_puts_r+0x74>
10014c06:	4628      	mov	r0, r5
10014c08:	b008      	add	sp, #32
10014c0a:	bd70      	pop	{r4, r5, r6, pc}
10014c0c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
10014c0e:	f7ff ff35 	bl	10014a7c <__retarget_lock_release_recursive>
10014c12:	4628      	mov	r0, r5
10014c14:	b008      	add	sp, #32
10014c16:	bd70      	pop	{r4, r5, r6, pc}
10014c18:	6da0      	ldr	r0, [r4, #88]	@ 0x58
10014c1a:	f7ff ff2d 	bl	10014a78 <__retarget_lock_acquire_recursive>
10014c1e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10014c22:	e7d7      	b.n	10014bd4 <_puts_r+0x3c>
10014c24:	4628      	mov	r0, r5
10014c26:	f001 f95d 	bl	10015ee4 <__sinit>
10014c2a:	e7cc      	b.n	10014bc6 <_puts_r+0x2e>
10014c2c:	1001da18 	.word	0x1001da18

10014c30 <puts>:
10014c30:	4b02      	ldr	r3, [pc, #8]	@ (10014c3c <puts+0xc>)
10014c32:	4601      	mov	r1, r0
10014c34:	6818      	ldr	r0, [r3, #0]
10014c36:	f7ff bfaf 	b.w	10014b98 <_puts_r>
10014c3a:	bf00      	nop
10014c3c:	200005c8 	.word	0x200005c8

10014c40 <__malloc_lock>:
10014c40:	4801      	ldr	r0, [pc, #4]	@ (10014c48 <__malloc_lock+0x8>)
10014c42:	f7ff bf19 	b.w	10014a78 <__retarget_lock_acquire_recursive>
10014c46:	bf00      	nop
10014c48:	20001674 	.word	0x20001674

10014c4c <__malloc_unlock>:
10014c4c:	4801      	ldr	r0, [pc, #4]	@ (10014c54 <__malloc_unlock+0x8>)
10014c4e:	f7ff bf15 	b.w	10014a7c <__retarget_lock_release_recursive>
10014c52:	bf00      	nop
10014c54:	20001674 	.word	0x20001674

10014c58 <atexit>:
10014c58:	2300      	movs	r3, #0
10014c5a:	4601      	mov	r1, r0
10014c5c:	461a      	mov	r2, r3
10014c5e:	4618      	mov	r0, r3
10014c60:	f004 bf5e 	b.w	10019b20 <__register_exitproc>

10014c64 <_wcsrtombs_r>:
10014c64:	b510      	push	{r4, lr}
10014c66:	b082      	sub	sp, #8
10014c68:	9c04      	ldr	r4, [sp, #16]
10014c6a:	e9cd 3400 	strd	r3, r4, [sp]
10014c6e:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
10014c72:	f005 fd07 	bl	1001a684 <_wcsnrtombs_r>
10014c76:	b002      	add	sp, #8
10014c78:	bd10      	pop	{r4, pc}
10014c7a:	bf00      	nop

10014c7c <quorem>:
10014c7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10014c80:	6903      	ldr	r3, [r0, #16]
10014c82:	690c      	ldr	r4, [r1, #16]
10014c84:	42a3      	cmp	r3, r4
10014c86:	b083      	sub	sp, #12
10014c88:	f2c0 808a 	blt.w	10014da0 <quorem+0x124>
10014c8c:	3c01      	subs	r4, #1
10014c8e:	f101 0514 	add.w	r5, r1, #20
10014c92:	f100 0814 	add.w	r8, r0, #20
10014c96:	f855 3024 	ldr.w	r3, [r5, r4, lsl #2]
10014c9a:	f858 2024 	ldr.w	r2, [r8, r4, lsl #2]
10014c9e:	3301      	adds	r3, #1
10014ca0:	429a      	cmp	r2, r3
10014ca2:	468e      	mov	lr, r1
10014ca4:	4681      	mov	r9, r0
10014ca6:	ea4f 0184 	mov.w	r1, r4, lsl #2
10014caa:	eb05 0784 	add.w	r7, r5, r4, lsl #2
10014cae:	eb08 0a84 	add.w	sl, r8, r4, lsl #2
10014cb2:	fbb2 f6f3 	udiv	r6, r2, r3
10014cb6:	d33a      	bcc.n	10014d2e <quorem+0xb2>
10014cb8:	e9cd 1500 	strd	r1, r5, [sp]
10014cbc:	2200      	movs	r2, #0
10014cbe:	46ac      	mov	ip, r5
10014cc0:	4640      	mov	r0, r8
10014cc2:	4613      	mov	r3, r2
10014cc4:	f85c 1b04 	ldr.w	r1, [ip], #4
10014cc8:	6805      	ldr	r5, [r0, #0]
10014cca:	fa1f fb81 	uxth.w	fp, r1
10014cce:	fb06 220b 	mla	r2, r6, fp, r2
10014cd2:	0c09      	lsrs	r1, r1, #16
10014cd4:	ea4f 4b12 	mov.w	fp, r2, lsr #16
10014cd8:	fb06 bb01 	mla	fp, r6, r1, fp
10014cdc:	b292      	uxth	r2, r2
10014cde:	b2a9      	uxth	r1, r5
10014ce0:	1a89      	subs	r1, r1, r2
10014ce2:	4419      	add	r1, r3
10014ce4:	fa1f f38b 	uxth.w	r3, fp
10014ce8:	ebc3 4321 	rsb	r3, r3, r1, asr #16
10014cec:	eb03 4315 	add.w	r3, r3, r5, lsr #16
10014cf0:	b289      	uxth	r1, r1
10014cf2:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
10014cf6:	4567      	cmp	r7, ip
10014cf8:	f840 1b04 	str.w	r1, [r0], #4
10014cfc:	ea4f 421b 	mov.w	r2, fp, lsr #16
10014d00:	ea4f 4323 	mov.w	r3, r3, asr #16
10014d04:	d2de      	bcs.n	10014cc4 <quorem+0x48>
10014d06:	e9dd 1500 	ldrd	r1, r5, [sp]
10014d0a:	f858 3001 	ldr.w	r3, [r8, r1]
10014d0e:	b973      	cbnz	r3, 10014d2e <quorem+0xb2>
10014d10:	f1aa 0a04 	sub.w	sl, sl, #4
10014d14:	45d0      	cmp	r8, sl
10014d16:	d304      	bcc.n	10014d22 <quorem+0xa6>
10014d18:	e007      	b.n	10014d2a <quorem+0xae>
10014d1a:	45d0      	cmp	r8, sl
10014d1c:	f104 34ff 	add.w	r4, r4, #4294967295	@ 0xffffffff
10014d20:	d203      	bcs.n	10014d2a <quorem+0xae>
10014d22:	f85a 3904 	ldr.w	r3, [sl], #-4
10014d26:	2b00      	cmp	r3, #0
10014d28:	d0f7      	beq.n	10014d1a <quorem+0x9e>
10014d2a:	f8c9 4010 	str.w	r4, [r9, #16]
10014d2e:	4671      	mov	r1, lr
10014d30:	4648      	mov	r0, r9
10014d32:	f005 fac1 	bl	1001a2b8 <__mcmp>
10014d36:	2800      	cmp	r0, #0
10014d38:	db2e      	blt.n	10014d98 <quorem+0x11c>
10014d3a:	4641      	mov	r1, r8
10014d3c:	2200      	movs	r2, #0
10014d3e:	f855 0b04 	ldr.w	r0, [r5], #4
10014d42:	f8d1 c000 	ldr.w	ip, [r1]
10014d46:	fa1f fe80 	uxth.w	lr, r0
10014d4a:	fa1f f38c 	uxth.w	r3, ip
10014d4e:	eba3 030e 	sub.w	r3, r3, lr
10014d52:	4413      	add	r3, r2
10014d54:	0c02      	lsrs	r2, r0, #16
10014d56:	ebc2 4223 	rsb	r2, r2, r3, asr #16
10014d5a:	eb02 421c 	add.w	r2, r2, ip, lsr #16
10014d5e:	b29b      	uxth	r3, r3
10014d60:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
10014d64:	42af      	cmp	r7, r5
10014d66:	f841 3b04 	str.w	r3, [r1], #4
10014d6a:	ea4f 4222 	mov.w	r2, r2, asr #16
10014d6e:	d2e6      	bcs.n	10014d3e <quorem+0xc2>
10014d70:	f858 2024 	ldr.w	r2, [r8, r4, lsl #2]
10014d74:	eb08 0384 	add.w	r3, r8, r4, lsl #2
10014d78:	b96a      	cbnz	r2, 10014d96 <quorem+0x11a>
10014d7a:	3b04      	subs	r3, #4
10014d7c:	4598      	cmp	r8, r3
10014d7e:	d304      	bcc.n	10014d8a <quorem+0x10e>
10014d80:	e007      	b.n	10014d92 <quorem+0x116>
10014d82:	4598      	cmp	r8, r3
10014d84:	f104 34ff 	add.w	r4, r4, #4294967295	@ 0xffffffff
10014d88:	d203      	bcs.n	10014d92 <quorem+0x116>
10014d8a:	f853 2904 	ldr.w	r2, [r3], #-4
10014d8e:	2a00      	cmp	r2, #0
10014d90:	d0f7      	beq.n	10014d82 <quorem+0x106>
10014d92:	f8c9 4010 	str.w	r4, [r9, #16]
10014d96:	3601      	adds	r6, #1
10014d98:	4630      	mov	r0, r6
10014d9a:	b003      	add	sp, #12
10014d9c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10014da0:	2000      	movs	r0, #0
10014da2:	b003      	add	sp, #12
10014da4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

10014da8 <_dtoa_r>:
10014da8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10014dac:	6b81      	ldr	r1, [r0, #56]	@ 0x38
10014dae:	b09d      	sub	sp, #116	@ 0x74
10014db0:	4616      	mov	r6, r2
10014db2:	461f      	mov	r7, r3
10014db4:	e9cd 6704 	strd	r6, r7, [sp, #16]
10014db8:	9d29      	ldr	r5, [sp, #164]	@ 0xa4
10014dba:	9002      	str	r0, [sp, #8]
10014dbc:	b149      	cbz	r1, 10014dd2 <_dtoa_r+0x2a>
10014dbe:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
10014dc0:	604a      	str	r2, [r1, #4]
10014dc2:	2301      	movs	r3, #1
10014dc4:	4093      	lsls	r3, r2
10014dc6:	4604      	mov	r4, r0
10014dc8:	608b      	str	r3, [r1, #8]
10014dca:	f005 f813 	bl	10019df4 <_Bfree>
10014dce:	2300      	movs	r3, #0
10014dd0:	63a3      	str	r3, [r4, #56]	@ 0x38
10014dd2:	f1b7 0900 	subs.w	r9, r7, #0
10014dd6:	bfb4      	ite	lt
10014dd8:	2301      	movlt	r3, #1
10014dda:	2300      	movge	r3, #0
10014ddc:	602b      	str	r3, [r5, #0]
10014dde:	4b76      	ldr	r3, [pc, #472]	@ (10014fb8 <_dtoa_r+0x210>)
10014de0:	bfbc      	itt	lt
10014de2:	f029 4900 	biclt.w	r9, r9, #2147483648	@ 0x80000000
10014de6:	f8cd 9014 	strlt.w	r9, [sp, #20]
10014dea:	ea33 0309 	bics.w	r3, r3, r9
10014dee:	f000 80aa 	beq.w	10014f46 <_dtoa_r+0x19e>
10014df2:	ed9d 7b04 	vldr	d7, [sp, #16]
10014df6:	2200      	movs	r2, #0
10014df8:	ec51 0b17 	vmov	r0, r1, d7
10014dfc:	2300      	movs	r3, #0
10014dfe:	ed8d 7b06 	vstr	d7, [sp, #24]
10014e02:	f006 f9bd 	bl	1001b180 <__aeabi_dcmpeq>
10014e06:	4680      	mov	r8, r0
10014e08:	b168      	cbz	r0, 10014e26 <_dtoa_r+0x7e>
10014e0a:	9a28      	ldr	r2, [sp, #160]	@ 0xa0
10014e0c:	2301      	movs	r3, #1
10014e0e:	6013      	str	r3, [r2, #0]
10014e10:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
10014e12:	b113      	cbz	r3, 10014e1a <_dtoa_r+0x72>
10014e14:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
10014e16:	4b69      	ldr	r3, [pc, #420]	@ (10014fbc <_dtoa_r+0x214>)
10014e18:	6013      	str	r3, [r2, #0]
10014e1a:	4b69      	ldr	r3, [pc, #420]	@ (10014fc0 <_dtoa_r+0x218>)
10014e1c:	9303      	str	r3, [sp, #12]
10014e1e:	9803      	ldr	r0, [sp, #12]
10014e20:	b01d      	add	sp, #116	@ 0x74
10014e22:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10014e26:	ab1a      	add	r3, sp, #104	@ 0x68
10014e28:	9301      	str	r3, [sp, #4]
10014e2a:	ab1b      	add	r3, sp, #108	@ 0x6c
10014e2c:	9300      	str	r3, [sp, #0]
10014e2e:	9802      	ldr	r0, [sp, #8]
10014e30:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
10014e34:	f005 fb14 	bl	1001a460 <__d2b>
10014e38:	ea5f 5519 	movs.w	r5, r9, lsr #20
10014e3c:	4682      	mov	sl, r0
10014e3e:	f040 8098 	bne.w	10014f72 <_dtoa_r+0x1ca>
10014e42:	e9dd 851a 	ldrd	r8, r5, [sp, #104]	@ 0x68
10014e46:	4445      	add	r5, r8
10014e48:	f205 4332 	addw	r3, r5, #1074	@ 0x432
10014e4c:	2b20      	cmp	r3, #32
10014e4e:	f340 8381 	ble.w	10015554 <_dtoa_r+0x7ac>
10014e52:	f1c3 0340 	rsb	r3, r3, #64	@ 0x40
10014e56:	fa09 f903 	lsl.w	r9, r9, r3
10014e5a:	f205 4312 	addw	r3, r5, #1042	@ 0x412
10014e5e:	fa26 f303 	lsr.w	r3, r6, r3
10014e62:	ea49 0003 	orr.w	r0, r9, r3
10014e66:	f005 fea9 	bl	1001abbc <__aeabi_ui2d>
10014e6a:	2301      	movs	r3, #1
10014e6c:	3d01      	subs	r5, #1
10014e6e:	930f      	str	r3, [sp, #60]	@ 0x3c
10014e70:	f1a1 71f8 	sub.w	r1, r1, #32505856	@ 0x1f00000
10014e74:	4b53      	ldr	r3, [pc, #332]	@ (10014fc4 <_dtoa_r+0x21c>)
10014e76:	2200      	movs	r2, #0
10014e78:	f005 fd62 	bl	1001a940 <__aeabi_dsub>
10014e7c:	a348      	add	r3, pc, #288	@ (adr r3, 10014fa0 <_dtoa_r+0x1f8>)
10014e7e:	e9d3 2300 	ldrd	r2, r3, [r3]
10014e82:	f005 ff15 	bl	1001acb0 <__aeabi_dmul>
10014e86:	a348      	add	r3, pc, #288	@ (adr r3, 10014fa8 <_dtoa_r+0x200>)
10014e88:	e9d3 2300 	ldrd	r2, r3, [r3]
10014e8c:	f005 fd5a 	bl	1001a944 <__adddf3>
10014e90:	4606      	mov	r6, r0
10014e92:	4628      	mov	r0, r5
10014e94:	460f      	mov	r7, r1
10014e96:	f005 fea1 	bl	1001abdc <__aeabi_i2d>
10014e9a:	a345      	add	r3, pc, #276	@ (adr r3, 10014fb0 <_dtoa_r+0x208>)
10014e9c:	e9d3 2300 	ldrd	r2, r3, [r3]
10014ea0:	f005 ff06 	bl	1001acb0 <__aeabi_dmul>
10014ea4:	4602      	mov	r2, r0
10014ea6:	460b      	mov	r3, r1
10014ea8:	4630      	mov	r0, r6
10014eaa:	4639      	mov	r1, r7
10014eac:	f005 fd4a 	bl	1001a944 <__adddf3>
10014eb0:	4606      	mov	r6, r0
10014eb2:	460f      	mov	r7, r1
10014eb4:	f006 f9ac 	bl	1001b210 <__aeabi_d2iz>
10014eb8:	2200      	movs	r2, #0
10014eba:	4683      	mov	fp, r0
10014ebc:	2300      	movs	r3, #0
10014ebe:	4630      	mov	r0, r6
10014ec0:	4639      	mov	r1, r7
10014ec2:	f006 f967 	bl	1001b194 <__aeabi_dcmplt>
10014ec6:	2800      	cmp	r0, #0
10014ec8:	f040 8318 	bne.w	100154fc <_dtoa_r+0x754>
10014ecc:	eba8 0805 	sub.w	r8, r8, r5
10014ed0:	f1bb 0f16 	cmp.w	fp, #22
10014ed4:	f108 34ff 	add.w	r4, r8, #4294967295	@ 0xffffffff
10014ed8:	f200 818a 	bhi.w	100151f0 <_dtoa_r+0x448>
10014edc:	4d3a      	ldr	r5, [pc, #232]	@ (10014fc8 <_dtoa_r+0x220>)
10014ede:	eb05 05cb 	add.w	r5, r5, fp, lsl #3
10014ee2:	e9d5 2300 	ldrd	r2, r3, [r5]
10014ee6:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
10014eea:	f006 f953 	bl	1001b194 <__aeabi_dcmplt>
10014eee:	2800      	cmp	r0, #0
10014ef0:	d070      	beq.n	10014fd4 <_dtoa_r+0x22c>
10014ef2:	2300      	movs	r3, #0
10014ef4:	2c00      	cmp	r4, #0
10014ef6:	f10b 3bff 	add.w	fp, fp, #4294967295	@ 0xffffffff
10014efa:	930e      	str	r3, [sp, #56]	@ 0x38
10014efc:	f2c0 817d 	blt.w	100151fa <_dtoa_r+0x452>
10014f00:	2300      	movs	r3, #0
10014f02:	9309      	str	r3, [sp, #36]	@ 0x24
10014f04:	f1bb 0f00 	cmp.w	fp, #0
10014f08:	da6a      	bge.n	10014fe0 <_dtoa_r+0x238>
10014f0a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10014f0c:	eba3 030b 	sub.w	r3, r3, fp
10014f10:	9309      	str	r3, [sp, #36]	@ 0x24
10014f12:	f1cb 0300 	rsb	r3, fp, #0
10014f16:	e9cd b30c 	strd	fp, r3, [sp, #48]	@ 0x30
10014f1a:	9b26      	ldr	r3, [sp, #152]	@ 0x98
10014f1c:	2b09      	cmp	r3, #9
10014f1e:	f04f 0b00 	mov.w	fp, #0
10014f22:	d865      	bhi.n	10014ff0 <_dtoa_r+0x248>
10014f24:	2b05      	cmp	r3, #5
10014f26:	f340 831a 	ble.w	1001555e <_dtoa_r+0x7b6>
10014f2a:	3b04      	subs	r3, #4
10014f2c:	9326      	str	r3, [sp, #152]	@ 0x98
10014f2e:	2500      	movs	r5, #0
10014f30:	9b26      	ldr	r3, [sp, #152]	@ 0x98
10014f32:	3b02      	subs	r3, #2
10014f34:	2b03      	cmp	r3, #3
10014f36:	f200 8621 	bhi.w	10015b7c <_dtoa_r+0xdd4>
10014f3a:	e8df f013 	tbh	[pc, r3, lsl #1]
10014f3e:	045e      	.short	0x045e
10014f40:	0452045b 	.word	0x0452045b
10014f44:	0436      	.short	0x0436
10014f46:	9a28      	ldr	r2, [sp, #160]	@ 0xa0
10014f48:	f3c9 0913 	ubfx	r9, r9, #0, #20
10014f4c:	f242 730f 	movw	r3, #9999	@ 0x270f
10014f50:	ea59 0906 	orrs.w	r9, r9, r6
10014f54:	6013      	str	r3, [r2, #0]
10014f56:	d11c      	bne.n	10014f92 <_dtoa_r+0x1ea>
10014f58:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
10014f5a:	2b00      	cmp	r3, #0
10014f5c:	f000 8629 	beq.w	10015bb2 <_dtoa_r+0xe0a>
10014f60:	4b1a      	ldr	r3, [pc, #104]	@ (10014fcc <_dtoa_r+0x224>)
10014f62:	9303      	str	r3, [sp, #12]
10014f64:	3308      	adds	r3, #8
10014f66:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
10014f68:	9803      	ldr	r0, [sp, #12]
10014f6a:	6013      	str	r3, [r2, #0]
10014f6c:	b01d      	add	sp, #116	@ 0x74
10014f6e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10014f72:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
10014f76:	f3c2 0313 	ubfx	r3, r2, #0, #20
10014f7a:	4608      	mov	r0, r1
10014f7c:	f043 517f 	orr.w	r1, r3, #1069547520	@ 0x3fc00000
10014f80:	f8cd 803c 	str.w	r8, [sp, #60]	@ 0x3c
10014f84:	f2a5 35ff 	subw	r5, r5, #1023	@ 0x3ff
10014f88:	f8dd 8068 	ldr.w	r8, [sp, #104]	@ 0x68
10014f8c:	f441 1140 	orr.w	r1, r1, #3145728	@ 0x300000
10014f90:	e770      	b.n	10014e74 <_dtoa_r+0xcc>
10014f92:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
10014f94:	2b00      	cmp	r3, #0
10014f96:	f040 83e5 	bne.w	10015764 <_dtoa_r+0x9bc>
10014f9a:	4b0d      	ldr	r3, [pc, #52]	@ (10014fd0 <_dtoa_r+0x228>)
10014f9c:	9303      	str	r3, [sp, #12]
10014f9e:	e73e      	b.n	10014e1e <_dtoa_r+0x76>
10014fa0:	636f4361 	.word	0x636f4361
10014fa4:	3fd287a7 	.word	0x3fd287a7
10014fa8:	8b60c8b3 	.word	0x8b60c8b3
10014fac:	3fc68a28 	.word	0x3fc68a28
10014fb0:	509f79fb 	.word	0x509f79fb
10014fb4:	3fd34413 	.word	0x3fd34413
10014fb8:	7ff00000 	.word	0x7ff00000
10014fbc:	1001d9b1 	.word	0x1001d9b1
10014fc0:	1001d9b0 	.word	0x1001d9b0
10014fc4:	3ff80000 	.word	0x3ff80000
10014fc8:	1001dcb0 	.word	0x1001dcb0
10014fcc:	1001da1c 	.word	0x1001da1c
10014fd0:	1001da28 	.word	0x1001da28
10014fd4:	f1b8 0f00 	cmp.w	r8, #0
10014fd8:	f340 845e 	ble.w	10015898 <_dtoa_r+0xaf0>
10014fdc:	900e      	str	r0, [sp, #56]	@ 0x38
10014fde:	9009      	str	r0, [sp, #36]	@ 0x24
10014fe0:	2300      	movs	r3, #0
10014fe2:	930d      	str	r3, [sp, #52]	@ 0x34
10014fe4:	9b26      	ldr	r3, [sp, #152]	@ 0x98
10014fe6:	f8cd b030 	str.w	fp, [sp, #48]	@ 0x30
10014fea:	2b09      	cmp	r3, #9
10014fec:	445c      	add	r4, fp
10014fee:	d999      	bls.n	10014f24 <_dtoa_r+0x17c>
10014ff0:	2300      	movs	r3, #0
10014ff2:	e9cd 3326 	strd	r3, r3, [sp, #152]	@ 0x98
10014ff6:	2501      	movs	r5, #1
10014ff8:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
10014ffc:	950a      	str	r5, [sp, #40]	@ 0x28
10014ffe:	9308      	str	r3, [sp, #32]
10015000:	9b02      	ldr	r3, [sp, #8]
10015002:	2100      	movs	r1, #0
10015004:	63d9      	str	r1, [r3, #60]	@ 0x3c
10015006:	9b08      	ldr	r3, [sp, #32]
10015008:	9316      	str	r3, [sp, #88]	@ 0x58
1001500a:	9802      	ldr	r0, [sp, #8]
1001500c:	f004 fecc 	bl	10019da8 <_Balloc>
10015010:	9003      	str	r0, [sp, #12]
10015012:	2800      	cmp	r0, #0
10015014:	f000 85bb 	beq.w	10015b8e <_dtoa_r+0xde6>
10015018:	e9dd 3202 	ldrd	r3, r2, [sp, #8]
1001501c:	639a      	str	r2, [r3, #56]	@ 0x38
1001501e:	9b08      	ldr	r3, [sp, #32]
10015020:	2b0e      	cmp	r3, #14
10015022:	f200 8114 	bhi.w	1001524e <_dtoa_r+0x4a6>
10015026:	2d00      	cmp	r5, #0
10015028:	f000 8111 	beq.w	1001524e <_dtoa_r+0x4a6>
1001502c:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
1001502e:	2a00      	cmp	r2, #0
10015030:	f340 8439 	ble.w	100158a6 <_dtoa_r+0xafe>
10015034:	4db1      	ldr	r5, [pc, #708]	@ (100152fc <_dtoa_r+0x554>)
10015036:	f002 030f 	and.w	r3, r2, #15
1001503a:	eb05 03c3 	add.w	r3, r5, r3, lsl #3
1001503e:	1115      	asrs	r5, r2, #4
10015040:	05d2      	lsls	r2, r2, #23
10015042:	e9d3 8900 	ldrd	r8, r9, [r3]
10015046:	f140 83f9 	bpl.w	1001583c <_dtoa_r+0xa94>
1001504a:	4bad      	ldr	r3, [pc, #692]	@ (10015300 <_dtoa_r+0x558>)
1001504c:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
10015050:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
10015054:	f005 ff56 	bl	1001af04 <__aeabi_ddiv>
10015058:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
1001505c:	f005 050f 	and.w	r5, r5, #15
10015060:	2703      	movs	r7, #3
10015062:	b17d      	cbz	r5, 10015084 <_dtoa_r+0x2dc>
10015064:	4ea6      	ldr	r6, [pc, #664]	@ (10015300 <_dtoa_r+0x558>)
10015066:	07eb      	lsls	r3, r5, #31
10015068:	d508      	bpl.n	1001507c <_dtoa_r+0x2d4>
1001506a:	4640      	mov	r0, r8
1001506c:	4649      	mov	r1, r9
1001506e:	e9d6 2300 	ldrd	r2, r3, [r6]
10015072:	f005 fe1d 	bl	1001acb0 <__aeabi_dmul>
10015076:	3701      	adds	r7, #1
10015078:	4680      	mov	r8, r0
1001507a:	4689      	mov	r9, r1
1001507c:	106d      	asrs	r5, r5, #1
1001507e:	f106 0608 	add.w	r6, r6, #8
10015082:	d1f0      	bne.n	10015066 <_dtoa_r+0x2be>
10015084:	4642      	mov	r2, r8
10015086:	464b      	mov	r3, r9
10015088:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
1001508c:	f005 ff3a 	bl	1001af04 <__aeabi_ddiv>
10015090:	4680      	mov	r8, r0
10015092:	4689      	mov	r9, r1
10015094:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10015096:	b143      	cbz	r3, 100150aa <_dtoa_r+0x302>
10015098:	4b9a      	ldr	r3, [pc, #616]	@ (10015304 <_dtoa_r+0x55c>)
1001509a:	2200      	movs	r2, #0
1001509c:	4640      	mov	r0, r8
1001509e:	4649      	mov	r1, r9
100150a0:	f006 f878 	bl	1001b194 <__aeabi_dcmplt>
100150a4:	2800      	cmp	r0, #0
100150a6:	f040 84f0 	bne.w	10015a8a <_dtoa_r+0xce2>
100150aa:	4638      	mov	r0, r7
100150ac:	f005 fd96 	bl	1001abdc <__aeabi_i2d>
100150b0:	4642      	mov	r2, r8
100150b2:	464b      	mov	r3, r9
100150b4:	f005 fdfc 	bl	1001acb0 <__aeabi_dmul>
100150b8:	4b93      	ldr	r3, [pc, #588]	@ (10015308 <_dtoa_r+0x560>)
100150ba:	2200      	movs	r2, #0
100150bc:	f005 fc42 	bl	1001a944 <__adddf3>
100150c0:	9b08      	ldr	r3, [sp, #32]
100150c2:	4606      	mov	r6, r0
100150c4:	f1a1 7750 	sub.w	r7, r1, #54525952	@ 0x3400000
100150c8:	2b00      	cmp	r3, #0
100150ca:	f000 80a9 	beq.w	10015220 <_dtoa_r+0x478>
100150ce:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
100150d0:	9317      	str	r3, [sp, #92]	@ 0x5c
100150d2:	9b08      	ldr	r3, [sp, #32]
100150d4:	9310      	str	r3, [sp, #64]	@ 0x40
100150d6:	9b03      	ldr	r3, [sp, #12]
100150d8:	4d88      	ldr	r5, [pc, #544]	@ (100152fc <_dtoa_r+0x554>)
100150da:	4649      	mov	r1, r9
100150dc:	4640      	mov	r0, r8
100150de:	e9cd 6712 	strd	r6, r7, [sp, #72]	@ 0x48
100150e2:	1c5e      	adds	r6, r3, #1
100150e4:	f006 f894 	bl	1001b210 <__aeabi_d2iz>
100150e8:	9910      	ldr	r1, [sp, #64]	@ 0x40
100150ea:	eb05 03c1 	add.w	r3, r5, r1, lsl #3
100150ee:	ed13 7b02 	vldr	d7, [r3, #-8]
100150f2:	4607      	mov	r7, r0
100150f4:	ed8d 7b14 	vstr	d7, [sp, #80]	@ 0x50
100150f8:	f005 fd70 	bl	1001abdc <__aeabi_i2d>
100150fc:	4602      	mov	r2, r0
100150fe:	460b      	mov	r3, r1
10015100:	4640      	mov	r0, r8
10015102:	4649      	mov	r1, r9
10015104:	f005 fc1c 	bl	1001a940 <__aeabi_dsub>
10015108:	4689      	mov	r9, r1
1001510a:	990a      	ldr	r1, [sp, #40]	@ 0x28
1001510c:	3730      	adds	r7, #48	@ 0x30
1001510e:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	@ 0x50
10015112:	4680      	mov	r8, r0
10015114:	b2ff      	uxtb	r7, r7
10015116:	2900      	cmp	r1, #0
10015118:	f000 8452 	beq.w	100159c0 <_dtoa_r+0xc18>
1001511c:	497b      	ldr	r1, [pc, #492]	@ (1001530c <_dtoa_r+0x564>)
1001511e:	2000      	movs	r0, #0
10015120:	f005 fef0 	bl	1001af04 <__aeabi_ddiv>
10015124:	e9dd 2312 	ldrd	r2, r3, [sp, #72]	@ 0x48
10015128:	f005 fc0a 	bl	1001a940 <__aeabi_dsub>
1001512c:	9d03      	ldr	r5, [sp, #12]
1001512e:	4602      	mov	r2, r0
10015130:	460b      	mov	r3, r1
10015132:	e9cd 2312 	strd	r2, r3, [sp, #72]	@ 0x48
10015136:	702f      	strb	r7, [r5, #0]
10015138:	4642      	mov	r2, r8
1001513a:	464b      	mov	r3, r9
1001513c:	f006 f848 	bl	1001b1d0 <__aeabi_dcmpgt>
10015140:	2800      	cmp	r0, #0
10015142:	f040 8496 	bne.w	10015a72 <_dtoa_r+0xcca>
10015146:	e9cd b418 	strd	fp, r4, [sp, #96]	@ 0x60
1001514a:	f8cd a050 	str.w	sl, [sp, #80]	@ 0x50
1001514e:	9d10      	ldr	r5, [sp, #64]	@ 0x40
10015150:	e9dd ab12 	ldrd	sl, fp, [sp, #72]	@ 0x48
10015154:	2700      	movs	r7, #0
10015156:	e02a      	b.n	100151ae <_dtoa_r+0x406>
10015158:	3701      	adds	r7, #1
1001515a:	42af      	cmp	r7, r5
1001515c:	f280 84dd 	bge.w	10015b1a <_dtoa_r+0xd72>
10015160:	4b6b      	ldr	r3, [pc, #428]	@ (10015310 <_dtoa_r+0x568>)
10015162:	4650      	mov	r0, sl
10015164:	4659      	mov	r1, fp
10015166:	2200      	movs	r2, #0
10015168:	f005 fda2 	bl	1001acb0 <__aeabi_dmul>
1001516c:	4b68      	ldr	r3, [pc, #416]	@ (10015310 <_dtoa_r+0x568>)
1001516e:	2200      	movs	r2, #0
10015170:	4682      	mov	sl, r0
10015172:	468b      	mov	fp, r1
10015174:	4640      	mov	r0, r8
10015176:	4649      	mov	r1, r9
10015178:	f005 fd9a 	bl	1001acb0 <__aeabi_dmul>
1001517c:	4689      	mov	r9, r1
1001517e:	4680      	mov	r8, r0
10015180:	f006 f846 	bl	1001b210 <__aeabi_d2iz>
10015184:	4604      	mov	r4, r0
10015186:	f005 fd29 	bl	1001abdc <__aeabi_i2d>
1001518a:	4602      	mov	r2, r0
1001518c:	460b      	mov	r3, r1
1001518e:	4640      	mov	r0, r8
10015190:	4649      	mov	r1, r9
10015192:	f005 fbd5 	bl	1001a940 <__aeabi_dsub>
10015196:	3430      	adds	r4, #48	@ 0x30
10015198:	f806 4b01 	strb.w	r4, [r6], #1
1001519c:	4652      	mov	r2, sl
1001519e:	465b      	mov	r3, fp
100151a0:	4680      	mov	r8, r0
100151a2:	4689      	mov	r9, r1
100151a4:	f005 fff6 	bl	1001b194 <__aeabi_dcmplt>
100151a8:	2800      	cmp	r0, #0
100151aa:	f040 84b3 	bne.w	10015b14 <_dtoa_r+0xd6c>
100151ae:	4642      	mov	r2, r8
100151b0:	464b      	mov	r3, r9
100151b2:	4954      	ldr	r1, [pc, #336]	@ (10015304 <_dtoa_r+0x55c>)
100151b4:	2000      	movs	r0, #0
100151b6:	f005 fbc3 	bl	1001a940 <__aeabi_dsub>
100151ba:	4652      	mov	r2, sl
100151bc:	465b      	mov	r3, fp
100151be:	f005 ffe9 	bl	1001b194 <__aeabi_dcmplt>
100151c2:	2800      	cmp	r0, #0
100151c4:	d0c8      	beq.n	10015158 <_dtoa_r+0x3b0>
100151c6:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
100151c8:	f8dd a050 	ldr.w	sl, [sp, #80]	@ 0x50
100151cc:	9a03      	ldr	r2, [sp, #12]
100151ce:	4637      	mov	r7, r6
100151d0:	f103 0801 	add.w	r8, r3, #1
100151d4:	e002      	b.n	100151dc <_dtoa_r+0x434>
100151d6:	4297      	cmp	r7, r2
100151d8:	f000 847b 	beq.w	10015ad2 <_dtoa_r+0xd2a>
100151dc:	463e      	mov	r6, r7
100151de:	f817 3d01 	ldrb.w	r3, [r7, #-1]!
100151e2:	2b39      	cmp	r3, #57	@ 0x39
100151e4:	d0f7      	beq.n	100151d6 <_dtoa_r+0x42e>
100151e6:	3301      	adds	r3, #1
100151e8:	b2db      	uxtb	r3, r3
100151ea:	703b      	strb	r3, [r7, #0]
100151ec:	4645      	mov	r5, r8
100151ee:	e174      	b.n	100154da <_dtoa_r+0x732>
100151f0:	2301      	movs	r3, #1
100151f2:	2c00      	cmp	r4, #0
100151f4:	930e      	str	r3, [sp, #56]	@ 0x38
100151f6:	f6bf ae83 	bge.w	10014f00 <_dtoa_r+0x158>
100151fa:	f1c8 0301 	rsb	r3, r8, #1
100151fe:	9309      	str	r3, [sp, #36]	@ 0x24
10015200:	2400      	movs	r4, #0
10015202:	e67f      	b.n	10014f04 <_dtoa_r+0x15c>
10015204:	4638      	mov	r0, r7
10015206:	f005 fce9 	bl	1001abdc <__aeabi_i2d>
1001520a:	4642      	mov	r2, r8
1001520c:	464b      	mov	r3, r9
1001520e:	f005 fd4f 	bl	1001acb0 <__aeabi_dmul>
10015212:	4b3d      	ldr	r3, [pc, #244]	@ (10015308 <_dtoa_r+0x560>)
10015214:	2200      	movs	r2, #0
10015216:	f005 fb95 	bl	1001a944 <__adddf3>
1001521a:	4606      	mov	r6, r0
1001521c:	f1a1 7750 	sub.w	r7, r1, #54525952	@ 0x3400000
10015220:	4b3c      	ldr	r3, [pc, #240]	@ (10015314 <_dtoa_r+0x56c>)
10015222:	4640      	mov	r0, r8
10015224:	4649      	mov	r1, r9
10015226:	2200      	movs	r2, #0
10015228:	f005 fb8a 	bl	1001a940 <__aeabi_dsub>
1001522c:	4632      	mov	r2, r6
1001522e:	463b      	mov	r3, r7
10015230:	4680      	mov	r8, r0
10015232:	4689      	mov	r9, r1
10015234:	f005 ffcc 	bl	1001b1d0 <__aeabi_dcmpgt>
10015238:	2800      	cmp	r0, #0
1001523a:	f040 8459 	bne.w	10015af0 <_dtoa_r+0xd48>
1001523e:	4640      	mov	r0, r8
10015240:	4649      	mov	r1, r9
10015242:	4632      	mov	r2, r6
10015244:	f107 4300 	add.w	r3, r7, #2147483648	@ 0x80000000
10015248:	f005 ffa4 	bl	1001b194 <__aeabi_dcmplt>
1001524c:	bb28      	cbnz	r0, 1001529a <_dtoa_r+0x4f2>
1001524e:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
10015250:	2b00      	cmp	r3, #0
10015252:	f2c0 8091 	blt.w	10015378 <_dtoa_r+0x5d0>
10015256:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
10015258:	2a0e      	cmp	r2, #14
1001525a:	f300 808d 	bgt.w	10015378 <_dtoa_r+0x5d0>
1001525e:	4d27      	ldr	r5, [pc, #156]	@ (100152fc <_dtoa_r+0x554>)
10015260:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
10015262:	eb05 05c3 	add.w	r5, r5, r3, lsl #3
10015266:	ed95 7b00 	vldr	d7, [r5]
1001526a:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
1001526c:	2b00      	cmp	r3, #0
1001526e:	ed8d 7b04 	vstr	d7, [sp, #16]
10015272:	da19      	bge.n	100152a8 <_dtoa_r+0x500>
10015274:	9b08      	ldr	r3, [sp, #32]
10015276:	2b00      	cmp	r3, #0
10015278:	dc16      	bgt.n	100152a8 <_dtoa_r+0x500>
1001527a:	d10e      	bne.n	1001529a <_dtoa_r+0x4f2>
1001527c:	4b25      	ldr	r3, [pc, #148]	@ (10015314 <_dtoa_r+0x56c>)
1001527e:	2200      	movs	r2, #0
10015280:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
10015284:	f005 fd14 	bl	1001acb0 <__aeabi_dmul>
10015288:	4602      	mov	r2, r0
1001528a:	460b      	mov	r3, r1
1001528c:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
10015290:	f005 ff8a 	bl	1001b1a8 <__aeabi_dcmple>
10015294:	2800      	cmp	r0, #0
10015296:	f000 842b 	beq.w	10015af0 <_dtoa_r+0xd48>
1001529a:	f04f 0900 	mov.w	r9, #0
1001529e:	9e03      	ldr	r6, [sp, #12]
100152a0:	464f      	mov	r7, r9
100152a2:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
100152a4:	43dd      	mvns	r5, r3
100152a6:	e224      	b.n	100156f2 <_dtoa_r+0x94a>
100152a8:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
100152ac:	e9dd 8906 	ldrd	r8, r9, [sp, #24]
100152b0:	4622      	mov	r2, r4
100152b2:	462b      	mov	r3, r5
100152b4:	4640      	mov	r0, r8
100152b6:	4649      	mov	r1, r9
100152b8:	f005 fe24 	bl	1001af04 <__aeabi_ddiv>
100152bc:	f005 ffa8 	bl	1001b210 <__aeabi_d2iz>
100152c0:	4606      	mov	r6, r0
100152c2:	f005 fc8b 	bl	1001abdc <__aeabi_i2d>
100152c6:	4622      	mov	r2, r4
100152c8:	462b      	mov	r3, r5
100152ca:	f005 fcf1 	bl	1001acb0 <__aeabi_dmul>
100152ce:	9f03      	ldr	r7, [sp, #12]
100152d0:	460b      	mov	r3, r1
100152d2:	4602      	mov	r2, r0
100152d4:	4649      	mov	r1, r9
100152d6:	4640      	mov	r0, r8
100152d8:	f005 fb32 	bl	1001a940 <__aeabi_dsub>
100152dc:	f106 0330 	add.w	r3, r6, #48	@ 0x30
100152e0:	f807 3b01 	strb.w	r3, [r7], #1
100152e4:	9b08      	ldr	r3, [sp, #32]
100152e6:	2b01      	cmp	r3, #1
100152e8:	f000 8311 	beq.w	1001590e <_dtoa_r+0xb66>
100152ec:	2501      	movs	r5, #1
100152ee:	f8cd a018 	str.w	sl, [sp, #24]
100152f2:	4699      	mov	r9, r3
100152f4:	e9dd ab04 	ldrd	sl, fp, [sp, #16]
100152f8:	46a8      	mov	r8, r5
100152fa:	e02b      	b.n	10015354 <_dtoa_r+0x5ac>
100152fc:	1001dcb0 	.word	0x1001dcb0
10015300:	1001dc88 	.word	0x1001dc88
10015304:	3ff00000 	.word	0x3ff00000
10015308:	401c0000 	.word	0x401c0000
1001530c:	3fe00000 	.word	0x3fe00000
10015310:	40240000 	.word	0x40240000
10015314:	40140000 	.word	0x40140000
10015318:	4652      	mov	r2, sl
1001531a:	465b      	mov	r3, fp
1001531c:	4620      	mov	r0, r4
1001531e:	4629      	mov	r1, r5
10015320:	f005 fdf0 	bl	1001af04 <__aeabi_ddiv>
10015324:	f005 ff74 	bl	1001b210 <__aeabi_d2iz>
10015328:	4606      	mov	r6, r0
1001532a:	f005 fc57 	bl	1001abdc <__aeabi_i2d>
1001532e:	4652      	mov	r2, sl
10015330:	465b      	mov	r3, fp
10015332:	f005 fcbd 	bl	1001acb0 <__aeabi_dmul>
10015336:	f108 0801 	add.w	r8, r8, #1
1001533a:	460b      	mov	r3, r1
1001533c:	4602      	mov	r2, r0
1001533e:	4629      	mov	r1, r5
10015340:	4620      	mov	r0, r4
10015342:	f005 fafd 	bl	1001a940 <__aeabi_dsub>
10015346:	f106 0330 	add.w	r3, r6, #48	@ 0x30
1001534a:	45c8      	cmp	r8, r9
1001534c:	f807 3b01 	strb.w	r3, [r7], #1
10015350:	f000 82db 	beq.w	1001590a <_dtoa_r+0xb62>
10015354:	4bb9      	ldr	r3, [pc, #740]	@ (1001563c <_dtoa_r+0x894>)
10015356:	2200      	movs	r2, #0
10015358:	f005 fcaa 	bl	1001acb0 <__aeabi_dmul>
1001535c:	2200      	movs	r2, #0
1001535e:	2300      	movs	r3, #0
10015360:	4604      	mov	r4, r0
10015362:	460d      	mov	r5, r1
10015364:	f005 ff0c 	bl	1001b180 <__aeabi_dcmpeq>
10015368:	2800      	cmp	r0, #0
1001536a:	d0d5      	beq.n	10015318 <_dtoa_r+0x570>
1001536c:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
1001536e:	f8dd a018 	ldr.w	sl, [sp, #24]
10015372:	3501      	adds	r5, #1
10015374:	463e      	mov	r6, r7
10015376:	e0b0      	b.n	100154da <_dtoa_r+0x732>
10015378:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
1001537a:	2a00      	cmp	r2, #0
1001537c:	f040 80d2 	bne.w	10015524 <_dtoa_r+0x77c>
10015380:	2300      	movs	r3, #0
10015382:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
10015384:	9e09      	ldr	r6, [sp, #36]	@ 0x24
10015386:	930a      	str	r3, [sp, #40]	@ 0x28
10015388:	461f      	mov	r7, r3
1001538a:	b156      	cbz	r6, 100153a2 <_dtoa_r+0x5fa>
1001538c:	2c00      	cmp	r4, #0
1001538e:	dd08      	ble.n	100153a2 <_dtoa_r+0x5fa>
10015390:	42a6      	cmp	r6, r4
10015392:	9a09      	ldr	r2, [sp, #36]	@ 0x24
10015394:	4633      	mov	r3, r6
10015396:	bfa8      	it	ge
10015398:	4623      	movge	r3, r4
1001539a:	1ad2      	subs	r2, r2, r3
1001539c:	9209      	str	r2, [sp, #36]	@ 0x24
1001539e:	1af6      	subs	r6, r6, r3
100153a0:	1ae4      	subs	r4, r4, r3
100153a2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
100153a4:	b153      	cbz	r3, 100153bc <_dtoa_r+0x614>
100153a6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
100153a8:	b113      	cbz	r3, 100153b0 <_dtoa_r+0x608>
100153aa:	2d00      	cmp	r5, #0
100153ac:	f040 82e8 	bne.w	10015980 <_dtoa_r+0xbd8>
100153b0:	4651      	mov	r1, sl
100153b2:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
100153b4:	9802      	ldr	r0, [sp, #8]
100153b6:	f004 fead 	bl	1001a114 <__pow5mult>
100153ba:	4682      	mov	sl, r0
100153bc:	9802      	ldr	r0, [sp, #8]
100153be:	2101      	movs	r1, #1
100153c0:	f004 fdc4 	bl	10019f4c <__i2b>
100153c4:	4681      	mov	r9, r0
100153c6:	f1bb 0f00 	cmp.w	fp, #0
100153ca:	f040 81b6 	bne.w	1001573a <_dtoa_r+0x992>
100153ce:	9b26      	ldr	r3, [sp, #152]	@ 0x98
100153d0:	2b01      	cmp	r3, #1
100153d2:	f340 81cc 	ble.w	1001576e <_dtoa_r+0x9c6>
100153d6:	2001      	movs	r0, #1
100153d8:	4420      	add	r0, r4
100153da:	f010 001f 	ands.w	r0, r0, #31
100153de:	f000 809a 	beq.w	10015516 <_dtoa_r+0x76e>
100153e2:	f1c0 0320 	rsb	r3, r0, #32
100153e6:	2b04      	cmp	r3, #4
100153e8:	f340 81da 	ble.w	100157a0 <_dtoa_r+0x9f8>
100153ec:	9b09      	ldr	r3, [sp, #36]	@ 0x24
100153ee:	f1c0 001c 	rsb	r0, r0, #28
100153f2:	4403      	add	r3, r0
100153f4:	9309      	str	r3, [sp, #36]	@ 0x24
100153f6:	4406      	add	r6, r0
100153f8:	4404      	add	r4, r0
100153fa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
100153fc:	2b00      	cmp	r3, #0
100153fe:	dd05      	ble.n	1001540c <_dtoa_r+0x664>
10015400:	4651      	mov	r1, sl
10015402:	9802      	ldr	r0, [sp, #8]
10015404:	461a      	mov	r2, r3
10015406:	f004 fedf 	bl	1001a1c8 <__lshift>
1001540a:	4682      	mov	sl, r0
1001540c:	2c00      	cmp	r4, #0
1001540e:	dd05      	ble.n	1001541c <_dtoa_r+0x674>
10015410:	4649      	mov	r1, r9
10015412:	9802      	ldr	r0, [sp, #8]
10015414:	4622      	mov	r2, r4
10015416:	f004 fed7 	bl	1001a1c8 <__lshift>
1001541a:	4681      	mov	r9, r0
1001541c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001541e:	2b00      	cmp	r3, #0
10015420:	f040 8170 	bne.w	10015704 <_dtoa_r+0x95c>
10015424:	9b08      	ldr	r3, [sp, #32]
10015426:	2b00      	cmp	r3, #0
10015428:	f340 8148 	ble.w	100156bc <_dtoa_r+0x914>
1001542c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1001542e:	2b00      	cmp	r3, #0
10015430:	f040 80a4 	bne.w	1001557c <_dtoa_r+0x7d4>
10015434:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
10015436:	3501      	adds	r5, #1
10015438:	f8dd 800c 	ldr.w	r8, [sp, #12]
1001543c:	9c08      	ldr	r4, [sp, #32]
1001543e:	f8dd b008 	ldr.w	fp, [sp, #8]
10015442:	2601      	movs	r6, #1
10015444:	e007      	b.n	10015456 <_dtoa_r+0x6ae>
10015446:	4651      	mov	r1, sl
10015448:	2300      	movs	r3, #0
1001544a:	220a      	movs	r2, #10
1001544c:	4658      	mov	r0, fp
1001544e:	f004 fcdb 	bl	10019e08 <__multadd>
10015452:	3601      	adds	r6, #1
10015454:	4682      	mov	sl, r0
10015456:	4649      	mov	r1, r9
10015458:	4650      	mov	r0, sl
1001545a:	f7ff fc0f 	bl	10014c7c <quorem>
1001545e:	42a6      	cmp	r6, r4
10015460:	f100 0330 	add.w	r3, r0, #48	@ 0x30
10015464:	f808 3b01 	strb.w	r3, [r8], #1
10015468:	dbed      	blt.n	10015446 <_dtoa_r+0x69e>
1001546a:	9a08      	ldr	r2, [sp, #32]
1001546c:	2a00      	cmp	r2, #0
1001546e:	bfc8      	it	gt
10015470:	4616      	movgt	r6, r2
10015472:	9a03      	ldr	r2, [sp, #12]
10015474:	bfd8      	it	le
10015476:	2601      	movle	r6, #1
10015478:	eb02 0b06 	add.w	fp, r2, r6
1001547c:	2400      	movs	r4, #0
1001547e:	4651      	mov	r1, sl
10015480:	2201      	movs	r2, #1
10015482:	9802      	ldr	r0, [sp, #8]
10015484:	9304      	str	r3, [sp, #16]
10015486:	f004 fe9f 	bl	1001a1c8 <__lshift>
1001548a:	4649      	mov	r1, r9
1001548c:	4682      	mov	sl, r0
1001548e:	f004 ff13 	bl	1001a2b8 <__mcmp>
10015492:	2800      	cmp	r0, #0
10015494:	f340 81e3 	ble.w	1001585e <_dtoa_r+0xab6>
10015498:	9a03      	ldr	r2, [sp, #12]
1001549a:	e002      	b.n	100154a2 <_dtoa_r+0x6fa>
1001549c:	455a      	cmp	r2, fp
1001549e:	f000 81e9 	beq.w	10015874 <_dtoa_r+0xacc>
100154a2:	465e      	mov	r6, fp
100154a4:	f10b 3bff 	add.w	fp, fp, #4294967295	@ 0xffffffff
100154a8:	f816 3c01 	ldrb.w	r3, [r6, #-1]
100154ac:	2b39      	cmp	r3, #57	@ 0x39
100154ae:	d0f5      	beq.n	1001549c <_dtoa_r+0x6f4>
100154b0:	3301      	adds	r3, #1
100154b2:	f88b 3000 	strb.w	r3, [fp]
100154b6:	f8dd 8008 	ldr.w	r8, [sp, #8]
100154ba:	4649      	mov	r1, r9
100154bc:	4640      	mov	r0, r8
100154be:	f004 fc99 	bl	10019df4 <_Bfree>
100154c2:	b157      	cbz	r7, 100154da <_dtoa_r+0x732>
100154c4:	b12c      	cbz	r4, 100154d2 <_dtoa_r+0x72a>
100154c6:	42bc      	cmp	r4, r7
100154c8:	d003      	beq.n	100154d2 <_dtoa_r+0x72a>
100154ca:	4621      	mov	r1, r4
100154cc:	4640      	mov	r0, r8
100154ce:	f004 fc91 	bl	10019df4 <_Bfree>
100154d2:	9802      	ldr	r0, [sp, #8]
100154d4:	4639      	mov	r1, r7
100154d6:	f004 fc8d 	bl	10019df4 <_Bfree>
100154da:	9802      	ldr	r0, [sp, #8]
100154dc:	4651      	mov	r1, sl
100154de:	f004 fc89 	bl	10019df4 <_Bfree>
100154e2:	2300      	movs	r3, #0
100154e4:	7033      	strb	r3, [r6, #0]
100154e6:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
100154e8:	601d      	str	r5, [r3, #0]
100154ea:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
100154ec:	2b00      	cmp	r3, #0
100154ee:	f43f ac96 	beq.w	10014e1e <_dtoa_r+0x76>
100154f2:	9803      	ldr	r0, [sp, #12]
100154f4:	601e      	str	r6, [r3, #0]
100154f6:	b01d      	add	sp, #116	@ 0x74
100154f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
100154fc:	4658      	mov	r0, fp
100154fe:	f005 fb6d 	bl	1001abdc <__aeabi_i2d>
10015502:	4632      	mov	r2, r6
10015504:	463b      	mov	r3, r7
10015506:	f005 fe3b 	bl	1001b180 <__aeabi_dcmpeq>
1001550a:	2800      	cmp	r0, #0
1001550c:	f47f acde 	bne.w	10014ecc <_dtoa_r+0x124>
10015510:	f10b 3bff 	add.w	fp, fp, #4294967295	@ 0xffffffff
10015514:	e4da      	b.n	10014ecc <_dtoa_r+0x124>
10015516:	231c      	movs	r3, #28
10015518:	9a09      	ldr	r2, [sp, #36]	@ 0x24
1001551a:	441a      	add	r2, r3
1001551c:	9209      	str	r2, [sp, #36]	@ 0x24
1001551e:	441e      	add	r6, r3
10015520:	441c      	add	r4, r3
10015522:	e76a      	b.n	100153fa <_dtoa_r+0x652>
10015524:	9a26      	ldr	r2, [sp, #152]	@ 0x98
10015526:	2a01      	cmp	r2, #1
10015528:	f340 81a9 	ble.w	1001587e <_dtoa_r+0xad6>
1001552c:	9b08      	ldr	r3, [sp, #32]
1001552e:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
10015530:	1e5d      	subs	r5, r3, #1
10015532:	42aa      	cmp	r2, r5
10015534:	f2c0 816b 	blt.w	1001580e <_dtoa_r+0xa66>
10015538:	2b00      	cmp	r3, #0
1001553a:	eba2 0505 	sub.w	r5, r2, r5
1001553e:	f280 82dd 	bge.w	10015afc <_dtoa_r+0xd54>
10015542:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
10015546:	1a9e      	subs	r6, r3, r2
10015548:	9802      	ldr	r0, [sp, #8]
1001554a:	2101      	movs	r1, #1
1001554c:	f004 fcfe 	bl	10019f4c <__i2b>
10015550:	4607      	mov	r7, r0
10015552:	e71a      	b.n	1001538a <_dtoa_r+0x5e2>
10015554:	f1c3 0320 	rsb	r3, r3, #32
10015558:	fa06 f003 	lsl.w	r0, r6, r3
1001555c:	e483      	b.n	10014e66 <_dtoa_r+0xbe>
1001555e:	2501      	movs	r5, #1
10015560:	e4e6      	b.n	10014f30 <_dtoa_r+0x188>
10015562:	4639      	mov	r1, r7
10015564:	2300      	movs	r3, #0
10015566:	9802      	ldr	r0, [sp, #8]
10015568:	220a      	movs	r2, #10
1001556a:	f004 fc4d 	bl	10019e08 <__multadd>
1001556e:	9b16      	ldr	r3, [sp, #88]	@ 0x58
10015570:	2b00      	cmp	r3, #0
10015572:	4607      	mov	r7, r0
10015574:	f340 82ef 	ble.w	10015b56 <_dtoa_r+0xdae>
10015578:	950c      	str	r5, [sp, #48]	@ 0x30
1001557a:	9308      	str	r3, [sp, #32]
1001557c:	2e00      	cmp	r6, #0
1001557e:	f300 813f 	bgt.w	10015800 <_dtoa_r+0xa58>
10015582:	f1bb 0f00 	cmp.w	fp, #0
10015586:	f040 81df 	bne.w	10015948 <_dtoa_r+0xba0>
1001558a:	46b8      	mov	r8, r7
1001558c:	9e03      	ldr	r6, [sp, #12]
1001558e:	9c08      	ldr	r4, [sp, #32]
10015590:	1e73      	subs	r3, r6, #1
10015592:	441c      	add	r4, r3
10015594:	9b04      	ldr	r3, [sp, #16]
10015596:	940a      	str	r4, [sp, #40]	@ 0x28
10015598:	f003 0301 	and.w	r3, r3, #1
1001559c:	9c02      	ldr	r4, [sp, #8]
1001559e:	930d      	str	r3, [sp, #52]	@ 0x34
100155a0:	4649      	mov	r1, r9
100155a2:	4650      	mov	r0, sl
100155a4:	f7ff fb6a 	bl	10014c7c <quorem>
100155a8:	4639      	mov	r1, r7
100155aa:	4683      	mov	fp, r0
100155ac:	4650      	mov	r0, sl
100155ae:	f004 fe83 	bl	1001a2b8 <__mcmp>
100155b2:	4642      	mov	r2, r8
100155b4:	4649      	mov	r1, r9
100155b6:	4605      	mov	r5, r0
100155b8:	4620      	mov	r0, r4
100155ba:	f004 fe9f 	bl	1001a2fc <__mdiff>
100155be:	68c2      	ldr	r2, [r0, #12]
100155c0:	4601      	mov	r1, r0
100155c2:	f10b 0330 	add.w	r3, fp, #48	@ 0x30
100155c6:	2a00      	cmp	r2, #0
100155c8:	d13a      	bne.n	10015640 <_dtoa_r+0x898>
100155ca:	e9cd 0308 	strd	r0, r3, [sp, #32]
100155ce:	4650      	mov	r0, sl
100155d0:	f004 fe72 	bl	1001a2b8 <__mcmp>
100155d4:	9908      	ldr	r1, [sp, #32]
100155d6:	9006      	str	r0, [sp, #24]
100155d8:	4620      	mov	r0, r4
100155da:	f004 fc0b 	bl	10019df4 <_Bfree>
100155de:	9a06      	ldr	r2, [sp, #24]
100155e0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
100155e2:	2a00      	cmp	r2, #0
100155e4:	d15a      	bne.n	1001569c <_dtoa_r+0x8f4>
100155e6:	9a26      	ldr	r2, [sp, #152]	@ 0x98
100155e8:	b91a      	cbnz	r2, 100155f2 <_dtoa_r+0x84a>
100155ea:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
100155ec:	2a00      	cmp	r2, #0
100155ee:	f000 829a 	beq.w	10015b26 <_dtoa_r+0xd7e>
100155f2:	2d00      	cmp	r5, #0
100155f4:	db45      	blt.n	10015682 <_dtoa_r+0x8da>
100155f6:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
100155f8:	46b3      	mov	fp, r6
100155fa:	42b2      	cmp	r2, r6
100155fc:	f80b 3b01 	strb.w	r3, [fp], #1
10015600:	f000 81b9 	beq.w	10015976 <_dtoa_r+0xbce>
10015604:	4651      	mov	r1, sl
10015606:	2300      	movs	r3, #0
10015608:	220a      	movs	r2, #10
1001560a:	4620      	mov	r0, r4
1001560c:	f004 fbfc 	bl	10019e08 <__multadd>
10015610:	4547      	cmp	r7, r8
10015612:	4682      	mov	sl, r0
10015614:	4639      	mov	r1, r7
10015616:	f04f 0300 	mov.w	r3, #0
1001561a:	f04f 020a 	mov.w	r2, #10
1001561e:	4620      	mov	r0, r4
10015620:	d036      	beq.n	10015690 <_dtoa_r+0x8e8>
10015622:	f004 fbf1 	bl	10019e08 <__multadd>
10015626:	4641      	mov	r1, r8
10015628:	4607      	mov	r7, r0
1001562a:	2300      	movs	r3, #0
1001562c:	220a      	movs	r2, #10
1001562e:	4620      	mov	r0, r4
10015630:	f004 fbea 	bl	10019e08 <__multadd>
10015634:	465e      	mov	r6, fp
10015636:	4680      	mov	r8, r0
10015638:	e7b2      	b.n	100155a0 <_dtoa_r+0x7f8>
1001563a:	bf00      	nop
1001563c:	40240000 	.word	0x40240000
10015640:	9802      	ldr	r0, [sp, #8]
10015642:	9306      	str	r3, [sp, #24]
10015644:	f004 fbd6 	bl	10019df4 <_Bfree>
10015648:	2d00      	cmp	r5, #0
1001564a:	9b06      	ldr	r3, [sp, #24]
1001564c:	db06      	blt.n	1001565c <_dtoa_r+0x8b4>
1001564e:	9a04      	ldr	r2, [sp, #16]
10015650:	9926      	ldr	r1, [sp, #152]	@ 0x98
10015652:	f002 0201 	and.w	r2, r2, #1
10015656:	430d      	orrs	r5, r1
10015658:	432a      	orrs	r2, r5
1001565a:	d12a      	bne.n	100156b2 <_dtoa_r+0x90a>
1001565c:	4651      	mov	r1, sl
1001565e:	2201      	movs	r2, #1
10015660:	9802      	ldr	r0, [sp, #8]
10015662:	9304      	str	r3, [sp, #16]
10015664:	f004 fdb0 	bl	1001a1c8 <__lshift>
10015668:	4649      	mov	r1, r9
1001566a:	4682      	mov	sl, r0
1001566c:	f004 fe24 	bl	1001a2b8 <__mcmp>
10015670:	2800      	cmp	r0, #0
10015672:	9b04      	ldr	r3, [sp, #16]
10015674:	f340 80e8 	ble.w	10015848 <_dtoa_r+0xaa0>
10015678:	2b39      	cmp	r3, #57	@ 0x39
1001567a:	f000 822f 	beq.w	10015adc <_dtoa_r+0xd34>
1001567e:	f10b 0331 	add.w	r3, fp, #49	@ 0x31
10015682:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
10015684:	f806 3b01 	strb.w	r3, [r6], #1
10015688:	463c      	mov	r4, r7
1001568a:	3501      	adds	r5, #1
1001568c:	4647      	mov	r7, r8
1001568e:	e712      	b.n	100154b6 <_dtoa_r+0x70e>
10015690:	f004 fbba 	bl	10019e08 <__multadd>
10015694:	465e      	mov	r6, fp
10015696:	4607      	mov	r7, r0
10015698:	4680      	mov	r8, r0
1001569a:	e781      	b.n	100155a0 <_dtoa_r+0x7f8>
1001569c:	2d00      	cmp	r5, #0
1001569e:	f2c0 827d 	blt.w	10015b9c <_dtoa_r+0xdf4>
100156a2:	9926      	ldr	r1, [sp, #152]	@ 0x98
100156a4:	430d      	orrs	r5, r1
100156a6:	990d      	ldr	r1, [sp, #52]	@ 0x34
100156a8:	430d      	orrs	r5, r1
100156aa:	f000 8277 	beq.w	10015b9c <_dtoa_r+0xdf4>
100156ae:	2a00      	cmp	r2, #0
100156b0:	dda1      	ble.n	100155f6 <_dtoa_r+0x84e>
100156b2:	2b39      	cmp	r3, #57	@ 0x39
100156b4:	f000 8212 	beq.w	10015adc <_dtoa_r+0xd34>
100156b8:	3301      	adds	r3, #1
100156ba:	e7e2      	b.n	10015682 <_dtoa_r+0x8da>
100156bc:	9b26      	ldr	r3, [sp, #152]	@ 0x98
100156be:	2b02      	cmp	r3, #2
100156c0:	f77f aeb4 	ble.w	1001542c <_dtoa_r+0x684>
100156c4:	9b08      	ldr	r3, [sp, #32]
100156c6:	2b00      	cmp	r3, #0
100156c8:	f040 811d 	bne.w	10015906 <_dtoa_r+0xb5e>
100156cc:	4649      	mov	r1, r9
100156ce:	2205      	movs	r2, #5
100156d0:	9802      	ldr	r0, [sp, #8]
100156d2:	f004 fb99 	bl	10019e08 <__multadd>
100156d6:	4601      	mov	r1, r0
100156d8:	4681      	mov	r9, r0
100156da:	4650      	mov	r0, sl
100156dc:	f004 fdec 	bl	1001a2b8 <__mcmp>
100156e0:	2800      	cmp	r0, #0
100156e2:	f340 8110 	ble.w	10015906 <_dtoa_r+0xb5e>
100156e6:	9e03      	ldr	r6, [sp, #12]
100156e8:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
100156ea:	2331      	movs	r3, #49	@ 0x31
100156ec:	f806 3b01 	strb.w	r3, [r6], #1
100156f0:	3501      	adds	r5, #1
100156f2:	9802      	ldr	r0, [sp, #8]
100156f4:	4649      	mov	r1, r9
100156f6:	3501      	adds	r5, #1
100156f8:	f004 fb7c 	bl	10019df4 <_Bfree>
100156fc:	2f00      	cmp	r7, #0
100156fe:	f47f aee8 	bne.w	100154d2 <_dtoa_r+0x72a>
10015702:	e6ea      	b.n	100154da <_dtoa_r+0x732>
10015704:	4649      	mov	r1, r9
10015706:	4650      	mov	r0, sl
10015708:	f004 fdd6 	bl	1001a2b8 <__mcmp>
1001570c:	2800      	cmp	r0, #0
1001570e:	f6bf ae89 	bge.w	10015424 <_dtoa_r+0x67c>
10015712:	4651      	mov	r1, sl
10015714:	2300      	movs	r3, #0
10015716:	9802      	ldr	r0, [sp, #8]
10015718:	220a      	movs	r2, #10
1001571a:	f004 fb75 	bl	10019e08 <__multadd>
1001571e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
10015720:	1e5d      	subs	r5, r3, #1
10015722:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10015724:	4682      	mov	sl, r0
10015726:	2b00      	cmp	r3, #0
10015728:	f47f af1b 	bne.w	10015562 <_dtoa_r+0x7ba>
1001572c:	9b16      	ldr	r3, [sp, #88]	@ 0x58
1001572e:	2b00      	cmp	r3, #0
10015730:	f340 81ff 	ble.w	10015b32 <_dtoa_r+0xd8a>
10015734:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
10015736:	9308      	str	r3, [sp, #32]
10015738:	e67e      	b.n	10015438 <_dtoa_r+0x690>
1001573a:	4601      	mov	r1, r0
1001573c:	465a      	mov	r2, fp
1001573e:	9802      	ldr	r0, [sp, #8]
10015740:	f004 fce8 	bl	1001a114 <__pow5mult>
10015744:	9b26      	ldr	r3, [sp, #152]	@ 0x98
10015746:	2b01      	cmp	r3, #1
10015748:	4681      	mov	r9, r0
1001574a:	dd6c      	ble.n	10015826 <_dtoa_r+0xa7e>
1001574c:	f04f 0b00 	mov.w	fp, #0
10015750:	f8d9 3010 	ldr.w	r3, [r9, #16]
10015754:	eb09 0383 	add.w	r3, r9, r3, lsl #2
10015758:	6918      	ldr	r0, [r3, #16]
1001575a:	f004 fba5 	bl	10019ea8 <__hi0bits>
1001575e:	f1c0 0020 	rsb	r0, r0, #32
10015762:	e639      	b.n	100153d8 <_dtoa_r+0x630>
10015764:	4b92      	ldr	r3, [pc, #584]	@ (100159b0 <_dtoa_r+0xc08>)
10015766:	9303      	str	r3, [sp, #12]
10015768:	3303      	adds	r3, #3
1001576a:	f7ff bbfc 	b.w	10014f66 <_dtoa_r+0x1be>
1001576e:	9b04      	ldr	r3, [sp, #16]
10015770:	2b00      	cmp	r3, #0
10015772:	f47f ae30 	bne.w	100153d6 <_dtoa_r+0x62e>
10015776:	e9dd 1204 	ldrd	r1, r2, [sp, #16]
1001577a:	f3c2 0313 	ubfx	r3, r2, #0, #20
1001577e:	2b00      	cmp	r3, #0
10015780:	f47f ae29 	bne.w	100153d6 <_dtoa_r+0x62e>
10015784:	4b8b      	ldr	r3, [pc, #556]	@ (100159b4 <_dtoa_r+0xc0c>)
10015786:	4013      	ands	r3, r2
10015788:	b123      	cbz	r3, 10015794 <_dtoa_r+0x9ec>
1001578a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1001578c:	3301      	adds	r3, #1
1001578e:	9309      	str	r3, [sp, #36]	@ 0x24
10015790:	3401      	adds	r4, #1
10015792:	2301      	movs	r3, #1
10015794:	f1bb 0f00 	cmp.w	fp, #0
10015798:	f040 81ae 	bne.w	10015af8 <_dtoa_r+0xd50>
1001579c:	469b      	mov	fp, r3
1001579e:	e61a      	b.n	100153d6 <_dtoa_r+0x62e>
100157a0:	f43f ae2b 	beq.w	100153fa <_dtoa_r+0x652>
100157a4:	f1c0 033c 	rsb	r3, r0, #60	@ 0x3c
100157a8:	e6b6      	b.n	10015518 <_dtoa_r+0x770>
100157aa:	2301      	movs	r3, #1
100157ac:	930a      	str	r3, [sp, #40]	@ 0x28
100157ae:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
100157b0:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
100157b2:	4413      	add	r3, r2
100157b4:	9316      	str	r3, [sp, #88]	@ 0x58
100157b6:	3301      	adds	r3, #1
100157b8:	2b01      	cmp	r3, #1
100157ba:	461e      	mov	r6, r3
100157bc:	9308      	str	r3, [sp, #32]
100157be:	bfb8      	it	lt
100157c0:	2601      	movlt	r6, #1
100157c2:	2e17      	cmp	r6, #23
100157c4:	f340 81d5 	ble.w	10015b72 <_dtoa_r+0xdca>
100157c8:	2201      	movs	r2, #1
100157ca:	2304      	movs	r3, #4
100157cc:	005b      	lsls	r3, r3, #1
100157ce:	f103 0014 	add.w	r0, r3, #20
100157d2:	42b0      	cmp	r0, r6
100157d4:	4611      	mov	r1, r2
100157d6:	f102 0201 	add.w	r2, r2, #1
100157da:	d9f7      	bls.n	100157cc <_dtoa_r+0xa24>
100157dc:	9b02      	ldr	r3, [sp, #8]
100157de:	63d9      	str	r1, [r3, #60]	@ 0x3c
100157e0:	e413      	b.n	1001500a <_dtoa_r+0x262>
100157e2:	2301      	movs	r3, #1
100157e4:	930a      	str	r3, [sp, #40]	@ 0x28
100157e6:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
100157e8:	2b00      	cmp	r3, #0
100157ea:	dd33      	ble.n	10015854 <_dtoa_r+0xaac>
100157ec:	9316      	str	r3, [sp, #88]	@ 0x58
100157ee:	9308      	str	r3, [sp, #32]
100157f0:	461e      	mov	r6, r3
100157f2:	e7e6      	b.n	100157c2 <_dtoa_r+0xa1a>
100157f4:	2300      	movs	r3, #0
100157f6:	930a      	str	r3, [sp, #40]	@ 0x28
100157f8:	e7d9      	b.n	100157ae <_dtoa_r+0xa06>
100157fa:	2300      	movs	r3, #0
100157fc:	930a      	str	r3, [sp, #40]	@ 0x28
100157fe:	e7f2      	b.n	100157e6 <_dtoa_r+0xa3e>
10015800:	4639      	mov	r1, r7
10015802:	9802      	ldr	r0, [sp, #8]
10015804:	4632      	mov	r2, r6
10015806:	f004 fcdf 	bl	1001a1c8 <__lshift>
1001580a:	4607      	mov	r7, r0
1001580c:	e6b9      	b.n	10015582 <_dtoa_r+0x7da>
1001580e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10015810:	9a09      	ldr	r2, [sp, #36]	@ 0x24
10015812:	950d      	str	r5, [sp, #52]	@ 0x34
10015814:	1aeb      	subs	r3, r5, r3
10015816:	449b      	add	fp, r3
10015818:	9b08      	ldr	r3, [sp, #32]
1001581a:	4616      	mov	r6, r2
1001581c:	441a      	add	r2, r3
1001581e:	441c      	add	r4, r3
10015820:	9209      	str	r2, [sp, #36]	@ 0x24
10015822:	2500      	movs	r5, #0
10015824:	e690      	b.n	10015548 <_dtoa_r+0x7a0>
10015826:	9b04      	ldr	r3, [sp, #16]
10015828:	2b00      	cmp	r3, #0
1001582a:	d18f      	bne.n	1001574c <_dtoa_r+0x9a4>
1001582c:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
10015830:	f3c1 0313 	ubfx	r3, r1, #0, #20
10015834:	460a      	mov	r2, r1
10015836:	2b00      	cmp	r3, #0
10015838:	d188      	bne.n	1001574c <_dtoa_r+0x9a4>
1001583a:	e7a3      	b.n	10015784 <_dtoa_r+0x9dc>
1001583c:	ed9d 7b06 	vldr	d7, [sp, #24]
10015840:	2702      	movs	r7, #2
10015842:	ed8d 7b10 	vstr	d7, [sp, #64]	@ 0x40
10015846:	e40c      	b.n	10015062 <_dtoa_r+0x2ba>
10015848:	f47f af1b 	bne.w	10015682 <_dtoa_r+0x8da>
1001584c:	07da      	lsls	r2, r3, #31
1001584e:	f57f af18 	bpl.w	10015682 <_dtoa_r+0x8da>
10015852:	e711      	b.n	10015678 <_dtoa_r+0x8d0>
10015854:	2301      	movs	r3, #1
10015856:	9327      	str	r3, [sp, #156]	@ 0x9c
10015858:	9308      	str	r3, [sp, #32]
1001585a:	f7ff bbd1 	b.w	10015000 <_dtoa_r+0x258>
1001585e:	d103      	bne.n	10015868 <_dtoa_r+0xac0>
10015860:	9b04      	ldr	r3, [sp, #16]
10015862:	07db      	lsls	r3, r3, #31
10015864:	f53f ae18 	bmi.w	10015498 <_dtoa_r+0x6f0>
10015868:	465e      	mov	r6, fp
1001586a:	f81b 3d01 	ldrb.w	r3, [fp, #-1]!
1001586e:	2b30      	cmp	r3, #48	@ 0x30
10015870:	d0fa      	beq.n	10015868 <_dtoa_r+0xac0>
10015872:	e620      	b.n	100154b6 <_dtoa_r+0x70e>
10015874:	9a03      	ldr	r2, [sp, #12]
10015876:	2331      	movs	r3, #49	@ 0x31
10015878:	3501      	adds	r5, #1
1001587a:	7013      	strb	r3, [r2, #0]
1001587c:	e61b      	b.n	100154b6 <_dtoa_r+0x70e>
1001587e:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
10015880:	2a00      	cmp	r2, #0
10015882:	f000 80f9 	beq.w	10015a78 <_dtoa_r+0xcd0>
10015886:	f203 4333 	addw	r3, r3, #1075	@ 0x433
1001588a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
1001588c:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
1001588e:	4616      	mov	r6, r2
10015890:	441a      	add	r2, r3
10015892:	441c      	add	r4, r3
10015894:	9209      	str	r2, [sp, #36]	@ 0x24
10015896:	e657      	b.n	10015548 <_dtoa_r+0x7a0>
10015898:	f1c8 0301 	rsb	r3, r8, #1
1001589c:	4604      	mov	r4, r0
1001589e:	9309      	str	r3, [sp, #36]	@ 0x24
100158a0:	900e      	str	r0, [sp, #56]	@ 0x38
100158a2:	f7ff bb9d 	b.w	10014fe0 <_dtoa_r+0x238>
100158a6:	f000 80eb 	beq.w	10015a80 <_dtoa_r+0xcd8>
100158aa:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
100158ac:	4d42      	ldr	r5, [pc, #264]	@ (100159b8 <_dtoa_r+0xc10>)
100158ae:	425e      	negs	r6, r3
100158b0:	f006 030f 	and.w	r3, r6, #15
100158b4:	eb05 03c3 	add.w	r3, r5, r3, lsl #3
100158b8:	e9d3 2300 	ldrd	r2, r3, [r3]
100158bc:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
100158c0:	f005 f9f6 	bl	1001acb0 <__aeabi_dmul>
100158c4:	1135      	asrs	r5, r6, #4
100158c6:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
100158ca:	f000 814d 	beq.w	10015b68 <_dtoa_r+0xdc0>
100158ce:	4e3b      	ldr	r6, [pc, #236]	@ (100159bc <_dtoa_r+0xc14>)
100158d0:	2300      	movs	r3, #0
100158d2:	2702      	movs	r7, #2
100158d4:	4680      	mov	r8, r0
100158d6:	4689      	mov	r9, r1
100158d8:	07e8      	lsls	r0, r5, #31
100158da:	d509      	bpl.n	100158f0 <_dtoa_r+0xb48>
100158dc:	e9d6 2300 	ldrd	r2, r3, [r6]
100158e0:	4640      	mov	r0, r8
100158e2:	4649      	mov	r1, r9
100158e4:	f005 f9e4 	bl	1001acb0 <__aeabi_dmul>
100158e8:	3701      	adds	r7, #1
100158ea:	4680      	mov	r8, r0
100158ec:	4689      	mov	r9, r1
100158ee:	2301      	movs	r3, #1
100158f0:	106d      	asrs	r5, r5, #1
100158f2:	f106 0608 	add.w	r6, r6, #8
100158f6:	d1ef      	bne.n	100158d8 <_dtoa_r+0xb30>
100158f8:	2b00      	cmp	r3, #0
100158fa:	f47f abcb 	bne.w	10015094 <_dtoa_r+0x2ec>
100158fe:	e9dd 8910 	ldrd	r8, r9, [sp, #64]	@ 0x40
10015902:	f7ff bbc7 	b.w	10015094 <_dtoa_r+0x2ec>
10015906:	9e03      	ldr	r6, [sp, #12]
10015908:	e4cb      	b.n	100152a2 <_dtoa_r+0x4fa>
1001590a:	f8dd a018 	ldr.w	sl, [sp, #24]
1001590e:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
10015910:	4602      	mov	r2, r0
10015912:	460b      	mov	r3, r1
10015914:	f005 f816 	bl	1001a944 <__adddf3>
10015918:	4602      	mov	r2, r0
1001591a:	460b      	mov	r3, r1
1001591c:	e9cd 2306 	strd	r2, r3, [sp, #24]
10015920:	3501      	adds	r5, #1
10015922:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
10015926:	46a8      	mov	r8, r5
10015928:	f005 fc52 	bl	1001b1d0 <__aeabi_dcmpgt>
1001592c:	b940      	cbnz	r0, 10015940 <_dtoa_r+0xb98>
1001592e:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
10015932:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
10015936:	f005 fc23 	bl	1001b180 <__aeabi_dcmpeq>
1001593a:	b118      	cbz	r0, 10015944 <_dtoa_r+0xb9c>
1001593c:	07f1      	lsls	r1, r6, #31
1001593e:	d501      	bpl.n	10015944 <_dtoa_r+0xb9c>
10015940:	9a03      	ldr	r2, [sp, #12]
10015942:	e44b      	b.n	100151dc <_dtoa_r+0x434>
10015944:	463e      	mov	r6, r7
10015946:	e5c8      	b.n	100154da <_dtoa_r+0x732>
10015948:	6879      	ldr	r1, [r7, #4]
1001594a:	9802      	ldr	r0, [sp, #8]
1001594c:	f004 fa2c 	bl	10019da8 <_Balloc>
10015950:	4605      	mov	r5, r0
10015952:	2800      	cmp	r0, #0
10015954:	f000 8126 	beq.w	10015ba4 <_dtoa_r+0xdfc>
10015958:	693b      	ldr	r3, [r7, #16]
1001595a:	3302      	adds	r3, #2
1001595c:	009a      	lsls	r2, r3, #2
1001595e:	f107 010c 	add.w	r1, r7, #12
10015962:	300c      	adds	r0, #12
10015964:	f000 fb3c 	bl	10015fe0 <memcpy>
10015968:	9802      	ldr	r0, [sp, #8]
1001596a:	4629      	mov	r1, r5
1001596c:	2201      	movs	r2, #1
1001596e:	f004 fc2b 	bl	1001a1c8 <__lshift>
10015972:	4680      	mov	r8, r0
10015974:	e60a      	b.n	1001558c <_dtoa_r+0x7e4>
10015976:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
10015978:	463c      	mov	r4, r7
1001597a:	3501      	adds	r5, #1
1001597c:	4647      	mov	r7, r8
1001597e:	e57e      	b.n	1001547e <_dtoa_r+0x6d6>
10015980:	f8dd 8008 	ldr.w	r8, [sp, #8]
10015984:	4639      	mov	r1, r7
10015986:	462a      	mov	r2, r5
10015988:	4640      	mov	r0, r8
1001598a:	f004 fbc3 	bl	1001a114 <__pow5mult>
1001598e:	4652      	mov	r2, sl
10015990:	4601      	mov	r1, r0
10015992:	4607      	mov	r7, r0
10015994:	4640      	mov	r0, r8
10015996:	f004 fb07 	bl	10019fa8 <__multiply>
1001599a:	4651      	mov	r1, sl
1001599c:	4682      	mov	sl, r0
1001599e:	4640      	mov	r0, r8
100159a0:	f004 fa28 	bl	10019df4 <_Bfree>
100159a4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
100159a6:	1b5b      	subs	r3, r3, r5
100159a8:	930d      	str	r3, [sp, #52]	@ 0x34
100159aa:	f43f ad07 	beq.w	100153bc <_dtoa_r+0x614>
100159ae:	e4ff      	b.n	100153b0 <_dtoa_r+0x608>
100159b0:	1001da28 	.word	0x1001da28
100159b4:	7ff00000 	.word	0x7ff00000
100159b8:	1001dcb0 	.word	0x1001dcb0
100159bc:	1001dc88 	.word	0x1001dc88
100159c0:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	@ 0x48
100159c4:	f005 f974 	bl	1001acb0 <__aeabi_dmul>
100159c8:	9b03      	ldr	r3, [sp, #12]
100159ca:	701f      	strb	r7, [r3, #0]
100159cc:	9b10      	ldr	r3, [sp, #64]	@ 0x40
100159ce:	2b01      	cmp	r3, #1
100159d0:	e9cd 010a 	strd	r0, r1, [sp, #40]	@ 0x28
100159d4:	f000 80c6 	beq.w	10015b64 <_dtoa_r+0xdbc>
100159d8:	9f10      	ldr	r7, [sp, #64]	@ 0x40
100159da:	9b03      	ldr	r3, [sp, #12]
100159dc:	f8cd b03c 	str.w	fp, [sp, #60]	@ 0x3c
100159e0:	441f      	add	r7, r3
100159e2:	4b7c      	ldr	r3, [pc, #496]	@ (10015bd4 <_dtoa_r+0xe2c>)
100159e4:	2200      	movs	r2, #0
100159e6:	4640      	mov	r0, r8
100159e8:	4649      	mov	r1, r9
100159ea:	f005 f961 	bl	1001acb0 <__aeabi_dmul>
100159ee:	4689      	mov	r9, r1
100159f0:	4680      	mov	r8, r0
100159f2:	f005 fc0d 	bl	1001b210 <__aeabi_d2iz>
100159f6:	4683      	mov	fp, r0
100159f8:	f005 f8f0 	bl	1001abdc <__aeabi_i2d>
100159fc:	f10b 0b30 	add.w	fp, fp, #48	@ 0x30
10015a00:	4602      	mov	r2, r0
10015a02:	460b      	mov	r3, r1
10015a04:	4640      	mov	r0, r8
10015a06:	4649      	mov	r1, r9
10015a08:	f004 ff9a 	bl	1001a940 <__aeabi_dsub>
10015a0c:	f806 bb01 	strb.w	fp, [r6], #1
10015a10:	42b7      	cmp	r7, r6
10015a12:	4680      	mov	r8, r0
10015a14:	4689      	mov	r9, r1
10015a16:	d1e4      	bne.n	100159e2 <_dtoa_r+0xc3a>
10015a18:	f8dd b03c 	ldr.w	fp, [sp, #60]	@ 0x3c
10015a1c:	4b6e      	ldr	r3, [pc, #440]	@ (10015bd8 <_dtoa_r+0xe30>)
10015a1e:	2200      	movs	r2, #0
10015a20:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
10015a24:	f004 ff8e 	bl	1001a944 <__adddf3>
10015a28:	4602      	mov	r2, r0
10015a2a:	460b      	mov	r3, r1
10015a2c:	4640      	mov	r0, r8
10015a2e:	4649      	mov	r1, r9
10015a30:	f005 fbce 	bl	1001b1d0 <__aeabi_dcmpgt>
10015a34:	2800      	cmp	r0, #0
10015a36:	d167      	bne.n	10015b08 <_dtoa_r+0xd60>
10015a38:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	@ 0x28
10015a3c:	4966      	ldr	r1, [pc, #408]	@ (10015bd8 <_dtoa_r+0xe30>)
10015a3e:	2000      	movs	r0, #0
10015a40:	f004 ff7e 	bl	1001a940 <__aeabi_dsub>
10015a44:	4602      	mov	r2, r0
10015a46:	460b      	mov	r3, r1
10015a48:	4640      	mov	r0, r8
10015a4a:	4649      	mov	r1, r9
10015a4c:	f005 fba2 	bl	1001b194 <__aeabi_dcmplt>
10015a50:	b948      	cbnz	r0, 10015a66 <_dtoa_r+0xcbe>
10015a52:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
10015a54:	2b00      	cmp	r3, #0
10015a56:	f6ff ac93 	blt.w	10015380 <_dtoa_r+0x5d8>
10015a5a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
10015a5c:	2b0e      	cmp	r3, #14
10015a5e:	f73f ac8f 	bgt.w	10015380 <_dtoa_r+0x5d8>
10015a62:	f7ff bbfd 	b.w	10015260 <_dtoa_r+0x4b8>
10015a66:	463e      	mov	r6, r7
10015a68:	3f01      	subs	r7, #1
10015a6a:	f816 3c01 	ldrb.w	r3, [r6, #-1]
10015a6e:	2b30      	cmp	r3, #48	@ 0x30
10015a70:	d0f9      	beq.n	10015a66 <_dtoa_r+0xcbe>
10015a72:	9d17      	ldr	r5, [sp, #92]	@ 0x5c
10015a74:	3501      	adds	r5, #1
10015a76:	e530      	b.n	100154da <_dtoa_r+0x732>
10015a78:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
10015a7a:	f1c3 0336 	rsb	r3, r3, #54	@ 0x36
10015a7e:	e704      	b.n	1001588a <_dtoa_r+0xae2>
10015a80:	e9dd 8906 	ldrd	r8, r9, [sp, #24]
10015a84:	2702      	movs	r7, #2
10015a86:	f7ff bb05 	b.w	10015094 <_dtoa_r+0x2ec>
10015a8a:	9b08      	ldr	r3, [sp, #32]
10015a8c:	2b00      	cmp	r3, #0
10015a8e:	f43f abb9 	beq.w	10015204 <_dtoa_r+0x45c>
10015a92:	9b16      	ldr	r3, [sp, #88]	@ 0x58
10015a94:	2b00      	cmp	r3, #0
10015a96:	f77f abda 	ble.w	1001524e <_dtoa_r+0x4a6>
10015a9a:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
10015a9c:	9310      	str	r3, [sp, #64]	@ 0x40
10015a9e:	3a01      	subs	r2, #1
10015aa0:	4b4c      	ldr	r3, [pc, #304]	@ (10015bd4 <_dtoa_r+0xe2c>)
10015aa2:	9217      	str	r2, [sp, #92]	@ 0x5c
10015aa4:	4640      	mov	r0, r8
10015aa6:	2200      	movs	r2, #0
10015aa8:	4649      	mov	r1, r9
10015aaa:	f005 f901 	bl	1001acb0 <__aeabi_dmul>
10015aae:	4680      	mov	r8, r0
10015ab0:	4689      	mov	r9, r1
10015ab2:	1c78      	adds	r0, r7, #1
10015ab4:	f005 f892 	bl	1001abdc <__aeabi_i2d>
10015ab8:	4642      	mov	r2, r8
10015aba:	464b      	mov	r3, r9
10015abc:	f005 f8f8 	bl	1001acb0 <__aeabi_dmul>
10015ac0:	4b46      	ldr	r3, [pc, #280]	@ (10015bdc <_dtoa_r+0xe34>)
10015ac2:	2200      	movs	r2, #0
10015ac4:	f004 ff3e 	bl	1001a944 <__adddf3>
10015ac8:	4606      	mov	r6, r0
10015aca:	f1a1 7750 	sub.w	r7, r1, #54525952	@ 0x3400000
10015ace:	f7ff bb02 	b.w	100150d6 <_dtoa_r+0x32e>
10015ad2:	f108 0801 	add.w	r8, r8, #1
10015ad6:	2331      	movs	r3, #49	@ 0x31
10015ad8:	f7ff bb87 	b.w	100151ea <_dtoa_r+0x442>
10015adc:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
10015ade:	9a03      	ldr	r2, [sp, #12]
10015ae0:	46b3      	mov	fp, r6
10015ae2:	2339      	movs	r3, #57	@ 0x39
10015ae4:	463c      	mov	r4, r7
10015ae6:	f80b 3b01 	strb.w	r3, [fp], #1
10015aea:	3501      	adds	r5, #1
10015aec:	4647      	mov	r7, r8
10015aee:	e4d8      	b.n	100154a2 <_dtoa_r+0x6fa>
10015af0:	f04f 0900 	mov.w	r9, #0
10015af4:	464f      	mov	r7, r9
10015af6:	e5f6      	b.n	100156e6 <_dtoa_r+0x93e>
10015af8:	469b      	mov	fp, r3
10015afa:	e629      	b.n	10015750 <_dtoa_r+0x9a8>
10015afc:	9a09      	ldr	r2, [sp, #36]	@ 0x24
10015afe:	4616      	mov	r6, r2
10015b00:	441a      	add	r2, r3
10015b02:	441c      	add	r4, r3
10015b04:	9209      	str	r2, [sp, #36]	@ 0x24
10015b06:	e51f      	b.n	10015548 <_dtoa_r+0x7a0>
10015b08:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
10015b0a:	9a03      	ldr	r2, [sp, #12]
10015b0c:	f103 0801 	add.w	r8, r3, #1
10015b10:	f7ff bb64 	b.w	100151dc <_dtoa_r+0x434>
10015b14:	f8dd a050 	ldr.w	sl, [sp, #80]	@ 0x50
10015b18:	e7ab      	b.n	10015a72 <_dtoa_r+0xcca>
10015b1a:	e9dd b418 	ldrd	fp, r4, [sp, #96]	@ 0x60
10015b1e:	f8dd a050 	ldr.w	sl, [sp, #80]	@ 0x50
10015b22:	f7ff bb94 	b.w	1001524e <_dtoa_r+0x4a6>
10015b26:	2b39      	cmp	r3, #57	@ 0x39
10015b28:	d0d8      	beq.n	10015adc <_dtoa_r+0xd34>
10015b2a:	2d00      	cmp	r5, #0
10015b2c:	f73f ada7 	bgt.w	1001567e <_dtoa_r+0x8d6>
10015b30:	e5a7      	b.n	10015682 <_dtoa_r+0x8da>
10015b32:	9b26      	ldr	r3, [sp, #152]	@ 0x98
10015b34:	2b02      	cmp	r3, #2
10015b36:	dc0a      	bgt.n	10015b4e <_dtoa_r+0xda6>
10015b38:	9b16      	ldr	r3, [sp, #88]	@ 0x58
10015b3a:	9308      	str	r3, [sp, #32]
10015b3c:	4649      	mov	r1, r9
10015b3e:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
10015b40:	f7ff f89c 	bl	10014c7c <quorem>
10015b44:	9a03      	ldr	r2, [sp, #12]
10015b46:	f100 0330 	add.w	r3, r0, #48	@ 0x30
10015b4a:	7013      	strb	r3, [r2, #0]
10015b4c:	e48d      	b.n	1001546a <_dtoa_r+0x6c2>
10015b4e:	9b16      	ldr	r3, [sp, #88]	@ 0x58
10015b50:	9308      	str	r3, [sp, #32]
10015b52:	950c      	str	r5, [sp, #48]	@ 0x30
10015b54:	e5b6      	b.n	100156c4 <_dtoa_r+0x91c>
10015b56:	9b26      	ldr	r3, [sp, #152]	@ 0x98
10015b58:	2b02      	cmp	r3, #2
10015b5a:	dcf8      	bgt.n	10015b4e <_dtoa_r+0xda6>
10015b5c:	9b16      	ldr	r3, [sp, #88]	@ 0x58
10015b5e:	950c      	str	r5, [sp, #48]	@ 0x30
10015b60:	9308      	str	r3, [sp, #32]
10015b62:	e50b      	b.n	1001557c <_dtoa_r+0x7d4>
10015b64:	4637      	mov	r7, r6
10015b66:	e759      	b.n	10015a1c <_dtoa_r+0xc74>
10015b68:	e9dd 8910 	ldrd	r8, r9, [sp, #64]	@ 0x40
10015b6c:	2702      	movs	r7, #2
10015b6e:	f7ff ba91 	b.w	10015094 <_dtoa_r+0x2ec>
10015b72:	9b02      	ldr	r3, [sp, #8]
10015b74:	2100      	movs	r1, #0
10015b76:	63d9      	str	r1, [r3, #60]	@ 0x3c
10015b78:	f7ff ba47 	b.w	1001500a <_dtoa_r+0x262>
10015b7c:	9b02      	ldr	r3, [sp, #8]
10015b7e:	2500      	movs	r5, #0
10015b80:	63dd      	str	r5, [r3, #60]	@ 0x3c
10015b82:	4629      	mov	r1, r5
10015b84:	4618      	mov	r0, r3
10015b86:	f004 f90f 	bl	10019da8 <_Balloc>
10015b8a:	9003      	str	r0, [sp, #12]
10015b8c:	b9a8      	cbnz	r0, 10015bba <_dtoa_r+0xe12>
10015b8e:	4b14      	ldr	r3, [pc, #80]	@ (10015be0 <_dtoa_r+0xe38>)
10015b90:	4814      	ldr	r0, [pc, #80]	@ (10015be4 <_dtoa_r+0xe3c>)
10015b92:	2200      	movs	r2, #0
10015b94:	f240 11af 	movw	r1, #431	@ 0x1af
10015b98:	f004 f818 	bl	10019bcc <__assert_func>
10015b9c:	2a00      	cmp	r2, #0
10015b9e:	f77f ad70 	ble.w	10015682 <_dtoa_r+0x8da>
10015ba2:	e55b      	b.n	1001565c <_dtoa_r+0x8b4>
10015ba4:	4b0e      	ldr	r3, [pc, #56]	@ (10015be0 <_dtoa_r+0xe38>)
10015ba6:	480f      	ldr	r0, [pc, #60]	@ (10015be4 <_dtoa_r+0xe3c>)
10015ba8:	462a      	mov	r2, r5
10015baa:	f240 21ef 	movw	r1, #751	@ 0x2ef
10015bae:	f004 f80d 	bl	10019bcc <__assert_func>
10015bb2:	4b0d      	ldr	r3, [pc, #52]	@ (10015be8 <_dtoa_r+0xe40>)
10015bb4:	9303      	str	r3, [sp, #12]
10015bb6:	f7ff b932 	b.w	10014e1e <_dtoa_r+0x76>
10015bba:	e9dd 3202 	ldrd	r3, r2, [sp, #8]
10015bbe:	639a      	str	r2, [r3, #56]	@ 0x38
10015bc0:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
10015bc4:	2201      	movs	r2, #1
10015bc6:	9527      	str	r5, [sp, #156]	@ 0x9c
10015bc8:	9316      	str	r3, [sp, #88]	@ 0x58
10015bca:	920a      	str	r2, [sp, #40]	@ 0x28
10015bcc:	9308      	str	r3, [sp, #32]
10015bce:	f7ff bb3e 	b.w	1001524e <_dtoa_r+0x4a6>
10015bd2:	bf00      	nop
10015bd4:	40240000 	.word	0x40240000
10015bd8:	3fe00000 	.word	0x3fe00000
10015bdc:	401c0000 	.word	0x401c0000
10015be0:	1001da2c 	.word	0x1001da2c
10015be4:	1001da40 	.word	0x1001da40
10015be8:	1001da1c 	.word	0x1001da1c

10015bec <_close_r>:
10015bec:	b538      	push	{r3, r4, r5, lr}
10015bee:	4d07      	ldr	r5, [pc, #28]	@ (10015c0c <_close_r+0x20>)
10015bf0:	2200      	movs	r2, #0
10015bf2:	4604      	mov	r4, r0
10015bf4:	4608      	mov	r0, r1
10015bf6:	602a      	str	r2, [r5, #0]
10015bf8:	f7fb f886 	bl	10010d08 <_close>
10015bfc:	1c43      	adds	r3, r0, #1
10015bfe:	d000      	beq.n	10015c02 <_close_r+0x16>
10015c00:	bd38      	pop	{r3, r4, r5, pc}
10015c02:	682b      	ldr	r3, [r5, #0]
10015c04:	2b00      	cmp	r3, #0
10015c06:	d0fb      	beq.n	10015c00 <_close_r+0x14>
10015c08:	6023      	str	r3, [r4, #0]
10015c0a:	bd38      	pop	{r3, r4, r5, pc}
10015c0c:	20001680 	.word	0x20001680

10015c10 <__sflush_r>:
10015c10:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
10015c14:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
10015c18:	460c      	mov	r4, r1
10015c1a:	0711      	lsls	r1, r2, #28
10015c1c:	4680      	mov	r8, r0
10015c1e:	d44b      	bmi.n	10015cb8 <__sflush_r+0xa8>
10015c20:	6861      	ldr	r1, [r4, #4]
10015c22:	f442 6300 	orr.w	r3, r2, #2048	@ 0x800
10015c26:	2900      	cmp	r1, #0
10015c28:	81a3      	strh	r3, [r4, #12]
10015c2a:	dd60      	ble.n	10015cee <__sflush_r+0xde>
10015c2c:	6aa5      	ldr	r5, [r4, #40]	@ 0x28
10015c2e:	2d00      	cmp	r5, #0
10015c30:	d03f      	beq.n	10015cb2 <__sflush_r+0xa2>
10015c32:	2100      	movs	r1, #0
10015c34:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
10015c38:	f8d8 6000 	ldr.w	r6, [r8]
10015c3c:	f8c8 1000 	str.w	r1, [r8]
10015c40:	69e1      	ldr	r1, [r4, #28]
10015c42:	d161      	bne.n	10015d08 <__sflush_r+0xf8>
10015c44:	2301      	movs	r3, #1
10015c46:	4640      	mov	r0, r8
10015c48:	47a8      	blx	r5
10015c4a:	1c43      	adds	r3, r0, #1
10015c4c:	4602      	mov	r2, r0
10015c4e:	d06b      	beq.n	10015d28 <__sflush_r+0x118>
10015c50:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10015c54:	6aa5      	ldr	r5, [r4, #40]	@ 0x28
10015c56:	69e1      	ldr	r1, [r4, #28]
10015c58:	075f      	lsls	r7, r3, #29
10015c5a:	d505      	bpl.n	10015c68 <__sflush_r+0x58>
10015c5c:	6863      	ldr	r3, [r4, #4]
10015c5e:	1ad2      	subs	r2, r2, r3
10015c60:	6b23      	ldr	r3, [r4, #48]	@ 0x30
10015c62:	b10b      	cbz	r3, 10015c68 <__sflush_r+0x58>
10015c64:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
10015c66:	1ad2      	subs	r2, r2, r3
10015c68:	2300      	movs	r3, #0
10015c6a:	4640      	mov	r0, r8
10015c6c:	47a8      	blx	r5
10015c6e:	1c45      	adds	r5, r0, #1
10015c70:	d14c      	bne.n	10015d0c <__sflush_r+0xfc>
10015c72:	f8d8 1000 	ldr.w	r1, [r8]
10015c76:	291d      	cmp	r1, #29
10015c78:	d83d      	bhi.n	10015cf6 <__sflush_r+0xe6>
10015c7a:	4a32      	ldr	r2, [pc, #200]	@ (10015d44 <__sflush_r+0x134>)
10015c7c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10015c80:	410a      	asrs	r2, r1
10015c82:	f012 0201 	ands.w	r2, r2, #1
10015c86:	d138      	bne.n	10015cfa <__sflush_r+0xea>
10015c88:	6062      	str	r2, [r4, #4]
10015c8a:	6922      	ldr	r2, [r4, #16]
10015c8c:	6022      	str	r2, [r4, #0]
10015c8e:	f423 6200 	bic.w	r2, r3, #2048	@ 0x800
10015c92:	81a2      	strh	r2, [r4, #12]
10015c94:	04da      	lsls	r2, r3, #19
10015c96:	d452      	bmi.n	10015d3e <__sflush_r+0x12e>
10015c98:	6b21      	ldr	r1, [r4, #48]	@ 0x30
10015c9a:	f8c8 6000 	str.w	r6, [r8]
10015c9e:	b141      	cbz	r1, 10015cb2 <__sflush_r+0xa2>
10015ca0:	f104 0340 	add.w	r3, r4, #64	@ 0x40
10015ca4:	4299      	cmp	r1, r3
10015ca6:	d002      	beq.n	10015cae <__sflush_r+0x9e>
10015ca8:	4640      	mov	r0, r8
10015caa:	f000 fceb 	bl	10016684 <_free_r>
10015cae:	2300      	movs	r3, #0
10015cb0:	6323      	str	r3, [r4, #48]	@ 0x30
10015cb2:	2000      	movs	r0, #0
10015cb4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
10015cb8:	6926      	ldr	r6, [r4, #16]
10015cba:	2e00      	cmp	r6, #0
10015cbc:	d0f9      	beq.n	10015cb2 <__sflush_r+0xa2>
10015cbe:	6825      	ldr	r5, [r4, #0]
10015cc0:	6026      	str	r6, [r4, #0]
10015cc2:	0791      	lsls	r1, r2, #30
10015cc4:	bf0c      	ite	eq
10015cc6:	6963      	ldreq	r3, [r4, #20]
10015cc8:	2300      	movne	r3, #0
10015cca:	1bad      	subs	r5, r5, r6
10015ccc:	60a3      	str	r3, [r4, #8]
10015cce:	e00b      	b.n	10015ce8 <__sflush_r+0xd8>
10015cd0:	462b      	mov	r3, r5
10015cd2:	4632      	mov	r2, r6
10015cd4:	69e1      	ldr	r1, [r4, #28]
10015cd6:	6a67      	ldr	r7, [r4, #36]	@ 0x24
10015cd8:	4640      	mov	r0, r8
10015cda:	47b8      	blx	r7
10015cdc:	f1b0 0c00 	subs.w	ip, r0, #0
10015ce0:	eba5 050c 	sub.w	r5, r5, ip
10015ce4:	4466      	add	r6, ip
10015ce6:	dd06      	ble.n	10015cf6 <__sflush_r+0xe6>
10015ce8:	2d00      	cmp	r5, #0
10015cea:	dcf1      	bgt.n	10015cd0 <__sflush_r+0xc0>
10015cec:	e7e1      	b.n	10015cb2 <__sflush_r+0xa2>
10015cee:	6be1      	ldr	r1, [r4, #60]	@ 0x3c
10015cf0:	2900      	cmp	r1, #0
10015cf2:	dc9b      	bgt.n	10015c2c <__sflush_r+0x1c>
10015cf4:	e7dd      	b.n	10015cb2 <__sflush_r+0xa2>
10015cf6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10015cfa:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10015cfe:	81a3      	strh	r3, [r4, #12]
10015d00:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10015d04:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
10015d08:	6d22      	ldr	r2, [r4, #80]	@ 0x50
10015d0a:	e7a5      	b.n	10015c58 <__sflush_r+0x48>
10015d0c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10015d10:	6922      	ldr	r2, [r4, #16]
10015d12:	6022      	str	r2, [r4, #0]
10015d14:	f423 6200 	bic.w	r2, r3, #2048	@ 0x800
10015d18:	81a2      	strh	r2, [r4, #12]
10015d1a:	04db      	lsls	r3, r3, #19
10015d1c:	f04f 0200 	mov.w	r2, #0
10015d20:	6062      	str	r2, [r4, #4]
10015d22:	d5b9      	bpl.n	10015c98 <__sflush_r+0x88>
10015d24:	6520      	str	r0, [r4, #80]	@ 0x50
10015d26:	e7b7      	b.n	10015c98 <__sflush_r+0x88>
10015d28:	f8d8 3000 	ldr.w	r3, [r8]
10015d2c:	2b00      	cmp	r3, #0
10015d2e:	d08f      	beq.n	10015c50 <__sflush_r+0x40>
10015d30:	2b1d      	cmp	r3, #29
10015d32:	d001      	beq.n	10015d38 <__sflush_r+0x128>
10015d34:	2b16      	cmp	r3, #22
10015d36:	d1de      	bne.n	10015cf6 <__sflush_r+0xe6>
10015d38:	f8c8 6000 	str.w	r6, [r8]
10015d3c:	e7b9      	b.n	10015cb2 <__sflush_r+0xa2>
10015d3e:	2900      	cmp	r1, #0
10015d40:	d1aa      	bne.n	10015c98 <__sflush_r+0x88>
10015d42:	e7ef      	b.n	10015d24 <__sflush_r+0x114>
10015d44:	dfbffffe 	.word	0xdfbffffe

10015d48 <_fflush_r>:
10015d48:	b538      	push	{r3, r4, r5, lr}
10015d4a:	460c      	mov	r4, r1
10015d4c:	4605      	mov	r5, r0
10015d4e:	b108      	cbz	r0, 10015d54 <_fflush_r+0xc>
10015d50:	6b43      	ldr	r3, [r0, #52]	@ 0x34
10015d52:	b303      	cbz	r3, 10015d96 <_fflush_r+0x4e>
10015d54:	f9b4 000c 	ldrsh.w	r0, [r4, #12]
10015d58:	b188      	cbz	r0, 10015d7e <_fflush_r+0x36>
10015d5a:	6e63      	ldr	r3, [r4, #100]	@ 0x64
10015d5c:	07db      	lsls	r3, r3, #31
10015d5e:	d401      	bmi.n	10015d64 <_fflush_r+0x1c>
10015d60:	0581      	lsls	r1, r0, #22
10015d62:	d50f      	bpl.n	10015d84 <_fflush_r+0x3c>
10015d64:	4628      	mov	r0, r5
10015d66:	4621      	mov	r1, r4
10015d68:	f7ff ff52 	bl	10015c10 <__sflush_r>
10015d6c:	6e63      	ldr	r3, [r4, #100]	@ 0x64
10015d6e:	07da      	lsls	r2, r3, #31
10015d70:	4605      	mov	r5, r0
10015d72:	d402      	bmi.n	10015d7a <_fflush_r+0x32>
10015d74:	89a3      	ldrh	r3, [r4, #12]
10015d76:	059b      	lsls	r3, r3, #22
10015d78:	d508      	bpl.n	10015d8c <_fflush_r+0x44>
10015d7a:	4628      	mov	r0, r5
10015d7c:	bd38      	pop	{r3, r4, r5, pc}
10015d7e:	4605      	mov	r5, r0
10015d80:	4628      	mov	r0, r5
10015d82:	bd38      	pop	{r3, r4, r5, pc}
10015d84:	6da0      	ldr	r0, [r4, #88]	@ 0x58
10015d86:	f7fe fe77 	bl	10014a78 <__retarget_lock_acquire_recursive>
10015d8a:	e7eb      	b.n	10015d64 <_fflush_r+0x1c>
10015d8c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
10015d8e:	f7fe fe75 	bl	10014a7c <__retarget_lock_release_recursive>
10015d92:	4628      	mov	r0, r5
10015d94:	bd38      	pop	{r3, r4, r5, pc}
10015d96:	f000 f8a5 	bl	10015ee4 <__sinit>
10015d9a:	e7db      	b.n	10015d54 <_fflush_r+0xc>

10015d9c <stdio_exit_handler>:
10015d9c:	4a02      	ldr	r2, [pc, #8]	@ (10015da8 <stdio_exit_handler+0xc>)
10015d9e:	4903      	ldr	r1, [pc, #12]	@ (10015dac <stdio_exit_handler+0x10>)
10015da0:	4803      	ldr	r0, [pc, #12]	@ (10015db0 <stdio_exit_handler+0x14>)
10015da2:	f000 bf4f 	b.w	10016c44 <_fwalk_sglue>
10015da6:	bf00      	nop
10015da8:	200006f0 	.word	0x200006f0
10015dac:	10014a95 	.word	0x10014a95
10015db0:	200005d0 	.word	0x200005d0

10015db4 <cleanup_stdio>:
10015db4:	4b0c      	ldr	r3, [pc, #48]	@ (10015de8 <cleanup_stdio+0x34>)
10015db6:	6841      	ldr	r1, [r0, #4]
10015db8:	4299      	cmp	r1, r3
10015dba:	b510      	push	{r4, lr}
10015dbc:	4604      	mov	r4, r0
10015dbe:	d001      	beq.n	10015dc4 <cleanup_stdio+0x10>
10015dc0:	f7fe fe68 	bl	10014a94 <_fclose_r>
10015dc4:	68a1      	ldr	r1, [r4, #8]
10015dc6:	4b09      	ldr	r3, [pc, #36]	@ (10015dec <cleanup_stdio+0x38>)
10015dc8:	4299      	cmp	r1, r3
10015dca:	d002      	beq.n	10015dd2 <cleanup_stdio+0x1e>
10015dcc:	4620      	mov	r0, r4
10015dce:	f7fe fe61 	bl	10014a94 <_fclose_r>
10015dd2:	68e1      	ldr	r1, [r4, #12]
10015dd4:	4b06      	ldr	r3, [pc, #24]	@ (10015df0 <cleanup_stdio+0x3c>)
10015dd6:	4299      	cmp	r1, r3
10015dd8:	d004      	beq.n	10015de4 <cleanup_stdio+0x30>
10015dda:	4620      	mov	r0, r4
10015ddc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
10015de0:	f7fe be58 	b.w	10014a94 <_fclose_r>
10015de4:	bd10      	pop	{r4, pc}
10015de6:	bf00      	nop
10015de8:	20001684 	.word	0x20001684
10015dec:	200016ec 	.word	0x200016ec
10015df0:	20001754 	.word	0x20001754

10015df4 <global_stdio_init.part.0>:
10015df4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
10015df8:	4c31      	ldr	r4, [pc, #196]	@ (10015ec0 <global_stdio_init.part.0+0xcc>)
10015dfa:	4b32      	ldr	r3, [pc, #200]	@ (10015ec4 <global_stdio_init.part.0+0xd0>)
10015dfc:	4832      	ldr	r0, [pc, #200]	@ (10015ec8 <global_stdio_init.part.0+0xd4>)
10015dfe:	f8df 90dc 	ldr.w	r9, [pc, #220]	@ 10015edc <global_stdio_init.part.0+0xe8>
10015e02:	f8df 80dc 	ldr.w	r8, [pc, #220]	@ 10015ee0 <global_stdio_init.part.0+0xec>
10015e06:	4f31      	ldr	r7, [pc, #196]	@ (10015ecc <global_stdio_init.part.0+0xd8>)
10015e08:	6018      	str	r0, [r3, #0]
10015e0a:	2500      	movs	r5, #0
10015e0c:	4629      	mov	r1, r5
10015e0e:	2304      	movs	r3, #4
10015e10:	2208      	movs	r2, #8
10015e12:	f104 005c 	add.w	r0, r4, #92	@ 0x5c
10015e16:	4e2e      	ldr	r6, [pc, #184]	@ (10015ed0 <global_stdio_init.part.0+0xdc>)
10015e18:	60e3      	str	r3, [r4, #12]
10015e1a:	e9c4 5500 	strd	r5, r5, [r4]
10015e1e:	e9c4 5504 	strd	r5, r5, [r4, #16]
10015e22:	60a5      	str	r5, [r4, #8]
10015e24:	6665      	str	r5, [r4, #100]	@ 0x64
10015e26:	61a5      	str	r5, [r4, #24]
10015e28:	f7fe fd6e 	bl	10014908 <memset>
10015e2c:	f104 0058 	add.w	r0, r4, #88	@ 0x58
10015e30:	e9c4 4907 	strd	r4, r9, [r4, #28]
10015e34:	e9c4 8709 	strd	r8, r7, [r4, #36]	@ 0x24
10015e38:	62e6      	str	r6, [r4, #44]	@ 0x2c
10015e3a:	f7fe fe19 	bl	10014a70 <__retarget_lock_init_recursive>
10015e3e:	4629      	mov	r1, r5
10015e40:	4b24      	ldr	r3, [pc, #144]	@ (10015ed4 <global_stdio_init.part.0+0xe0>)
10015e42:	6763      	str	r3, [r4, #116]	@ 0x74
10015e44:	2208      	movs	r2, #8
10015e46:	f104 00c4 	add.w	r0, r4, #196	@ 0xc4
10015e4a:	e9c4 551a 	strd	r5, r5, [r4, #104]	@ 0x68
10015e4e:	e9c4 551e 	strd	r5, r5, [r4, #120]	@ 0x78
10015e52:	6725      	str	r5, [r4, #112]	@ 0x70
10015e54:	f8c4 50cc 	str.w	r5, [r4, #204]	@ 0xcc
10015e58:	f8c4 5080 	str.w	r5, [r4, #128]	@ 0x80
10015e5c:	f7fe fd54 	bl	10014908 <memset>
10015e60:	f104 0368 	add.w	r3, r4, #104	@ 0x68
10015e64:	f104 00c0 	add.w	r0, r4, #192	@ 0xc0
10015e68:	f8c4 3084 	str.w	r3, [r4, #132]	@ 0x84
10015e6c:	e9c4 9822 	strd	r9, r8, [r4, #136]	@ 0x88
10015e70:	e9c4 7624 	strd	r7, r6, [r4, #144]	@ 0x90
10015e74:	f7fe fdfc 	bl	10014a70 <__retarget_lock_init_recursive>
10015e78:	4b17      	ldr	r3, [pc, #92]	@ (10015ed8 <global_stdio_init.part.0+0xe4>)
10015e7a:	f8c4 30dc 	str.w	r3, [r4, #220]	@ 0xdc
10015e7e:	4629      	mov	r1, r5
10015e80:	f504 7096 	add.w	r0, r4, #300	@ 0x12c
10015e84:	2208      	movs	r2, #8
10015e86:	e9c4 5534 	strd	r5, r5, [r4, #208]	@ 0xd0
10015e8a:	e9c4 5538 	strd	r5, r5, [r4, #224]	@ 0xe0
10015e8e:	f8c4 50d8 	str.w	r5, [r4, #216]	@ 0xd8
10015e92:	f8c4 5134 	str.w	r5, [r4, #308]	@ 0x134
10015e96:	f8c4 50e8 	str.w	r5, [r4, #232]	@ 0xe8
10015e9a:	f7fe fd35 	bl	10014908 <memset>
10015e9e:	f104 03d0 	add.w	r3, r4, #208	@ 0xd0
10015ea2:	e9c4 873d 	strd	r8, r7, [r4, #244]	@ 0xf4
10015ea6:	f8c4 90f0 	str.w	r9, [r4, #240]	@ 0xf0
10015eaa:	f504 7094 	add.w	r0, r4, #296	@ 0x128
10015eae:	f8c4 60fc 	str.w	r6, [r4, #252]	@ 0xfc
10015eb2:	f8c4 30ec 	str.w	r3, [r4, #236]	@ 0xec
10015eb6:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
10015eba:	f7fe bdd9 	b.w	10014a70 <__retarget_lock_init_recursive>
10015ebe:	bf00      	nop
10015ec0:	20001684 	.word	0x20001684
10015ec4:	200017bc 	.word	0x200017bc
10015ec8:	10015d9d 	.word	0x10015d9d
10015ecc:	10012679 	.word	0x10012679
10015ed0:	1001269d 	.word	0x1001269d
10015ed4:	00010009 	.word	0x00010009
10015ed8:	00020012 	.word	0x00020012
10015edc:	10012615 	.word	0x10012615
10015ee0:	10012639 	.word	0x10012639

10015ee4 <__sinit>:
10015ee4:	b510      	push	{r4, lr}
10015ee6:	4604      	mov	r4, r0
10015ee8:	480a      	ldr	r0, [pc, #40]	@ (10015f14 <__sinit+0x30>)
10015eea:	f7fe fdc5 	bl	10014a78 <__retarget_lock_acquire_recursive>
10015eee:	6b63      	ldr	r3, [r4, #52]	@ 0x34
10015ef0:	b923      	cbnz	r3, 10015efc <__sinit+0x18>
10015ef2:	4b09      	ldr	r3, [pc, #36]	@ (10015f18 <__sinit+0x34>)
10015ef4:	4a09      	ldr	r2, [pc, #36]	@ (10015f1c <__sinit+0x38>)
10015ef6:	681b      	ldr	r3, [r3, #0]
10015ef8:	6362      	str	r2, [r4, #52]	@ 0x34
10015efa:	b123      	cbz	r3, 10015f06 <__sinit+0x22>
10015efc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
10015f00:	4804      	ldr	r0, [pc, #16]	@ (10015f14 <__sinit+0x30>)
10015f02:	f7fe bdbb 	b.w	10014a7c <__retarget_lock_release_recursive>
10015f06:	f7ff ff75 	bl	10015df4 <global_stdio_init.part.0>
10015f0a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
10015f0e:	4801      	ldr	r0, [pc, #4]	@ (10015f14 <__sinit+0x30>)
10015f10:	f7fe bdb4 	b.w	10014a7c <__retarget_lock_release_recursive>
10015f14:	2000167c 	.word	0x2000167c
10015f18:	200017bc 	.word	0x200017bc
10015f1c:	10015db5 	.word	0x10015db5

10015f20 <__sfp_lock_acquire>:
10015f20:	4801      	ldr	r0, [pc, #4]	@ (10015f28 <__sfp_lock_acquire+0x8>)
10015f22:	f7fe bda9 	b.w	10014a78 <__retarget_lock_acquire_recursive>
10015f26:	bf00      	nop
10015f28:	2000167c 	.word	0x2000167c

10015f2c <__sfp_lock_release>:
10015f2c:	4801      	ldr	r0, [pc, #4]	@ (10015f34 <__sfp_lock_release+0x8>)
10015f2e:	f7fe bda5 	b.w	10014a7c <__retarget_lock_release_recursive>
10015f32:	bf00      	nop
10015f34:	2000167c 	.word	0x2000167c
	...

10015f40 <memchr>:
10015f40:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
10015f44:	2a10      	cmp	r2, #16
10015f46:	db2b      	blt.n	10015fa0 <memchr+0x60>
10015f48:	f010 0f07 	tst.w	r0, #7
10015f4c:	d008      	beq.n	10015f60 <memchr+0x20>
10015f4e:	f810 3b01 	ldrb.w	r3, [r0], #1
10015f52:	3a01      	subs	r2, #1
10015f54:	428b      	cmp	r3, r1
10015f56:	d02d      	beq.n	10015fb4 <memchr+0x74>
10015f58:	f010 0f07 	tst.w	r0, #7
10015f5c:	b342      	cbz	r2, 10015fb0 <memchr+0x70>
10015f5e:	d1f6      	bne.n	10015f4e <memchr+0xe>
10015f60:	b4f0      	push	{r4, r5, r6, r7}
10015f62:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
10015f66:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
10015f6a:	f022 0407 	bic.w	r4, r2, #7
10015f6e:	f07f 0700 	mvns.w	r7, #0
10015f72:	2300      	movs	r3, #0
10015f74:	e8f0 5602 	ldrd	r5, r6, [r0], #8
10015f78:	3c08      	subs	r4, #8
10015f7a:	ea85 0501 	eor.w	r5, r5, r1
10015f7e:	ea86 0601 	eor.w	r6, r6, r1
10015f82:	fa85 f547 	uadd8	r5, r5, r7
10015f86:	faa3 f587 	sel	r5, r3, r7
10015f8a:	fa86 f647 	uadd8	r6, r6, r7
10015f8e:	faa5 f687 	sel	r6, r5, r7
10015f92:	b98e      	cbnz	r6, 10015fb8 <memchr+0x78>
10015f94:	d1ee      	bne.n	10015f74 <memchr+0x34>
10015f96:	bcf0      	pop	{r4, r5, r6, r7}
10015f98:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
10015f9c:	f002 0207 	and.w	r2, r2, #7
10015fa0:	b132      	cbz	r2, 10015fb0 <memchr+0x70>
10015fa2:	f810 3b01 	ldrb.w	r3, [r0], #1
10015fa6:	3a01      	subs	r2, #1
10015fa8:	ea83 0301 	eor.w	r3, r3, r1
10015fac:	b113      	cbz	r3, 10015fb4 <memchr+0x74>
10015fae:	d1f8      	bne.n	10015fa2 <memchr+0x62>
10015fb0:	2000      	movs	r0, #0
10015fb2:	4770      	bx	lr
10015fb4:	3801      	subs	r0, #1
10015fb6:	4770      	bx	lr
10015fb8:	2d00      	cmp	r5, #0
10015fba:	bf06      	itte	eq
10015fbc:	4635      	moveq	r5, r6
10015fbe:	3803      	subeq	r0, #3
10015fc0:	3807      	subne	r0, #7
10015fc2:	f015 0f01 	tst.w	r5, #1
10015fc6:	d107      	bne.n	10015fd8 <memchr+0x98>
10015fc8:	3001      	adds	r0, #1
10015fca:	f415 7f80 	tst.w	r5, #256	@ 0x100
10015fce:	bf02      	ittt	eq
10015fd0:	3001      	addeq	r0, #1
10015fd2:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
10015fd6:	3001      	addeq	r0, #1
10015fd8:	bcf0      	pop	{r4, r5, r6, r7}
10015fda:	3801      	subs	r0, #1
10015fdc:	4770      	bx	lr
10015fde:	bf00      	nop

10015fe0 <memcpy>:
10015fe0:	4684      	mov	ip, r0
10015fe2:	ea41 0300 	orr.w	r3, r1, r0
10015fe6:	f013 0303 	ands.w	r3, r3, #3
10015fea:	d16d      	bne.n	100160c8 <memcpy+0xe8>
10015fec:	3a40      	subs	r2, #64	@ 0x40
10015fee:	d341      	bcc.n	10016074 <memcpy+0x94>
10015ff0:	f851 3b04 	ldr.w	r3, [r1], #4
10015ff4:	f840 3b04 	str.w	r3, [r0], #4
10015ff8:	f851 3b04 	ldr.w	r3, [r1], #4
10015ffc:	f840 3b04 	str.w	r3, [r0], #4
10016000:	f851 3b04 	ldr.w	r3, [r1], #4
10016004:	f840 3b04 	str.w	r3, [r0], #4
10016008:	f851 3b04 	ldr.w	r3, [r1], #4
1001600c:	f840 3b04 	str.w	r3, [r0], #4
10016010:	f851 3b04 	ldr.w	r3, [r1], #4
10016014:	f840 3b04 	str.w	r3, [r0], #4
10016018:	f851 3b04 	ldr.w	r3, [r1], #4
1001601c:	f840 3b04 	str.w	r3, [r0], #4
10016020:	f851 3b04 	ldr.w	r3, [r1], #4
10016024:	f840 3b04 	str.w	r3, [r0], #4
10016028:	f851 3b04 	ldr.w	r3, [r1], #4
1001602c:	f840 3b04 	str.w	r3, [r0], #4
10016030:	f851 3b04 	ldr.w	r3, [r1], #4
10016034:	f840 3b04 	str.w	r3, [r0], #4
10016038:	f851 3b04 	ldr.w	r3, [r1], #4
1001603c:	f840 3b04 	str.w	r3, [r0], #4
10016040:	f851 3b04 	ldr.w	r3, [r1], #4
10016044:	f840 3b04 	str.w	r3, [r0], #4
10016048:	f851 3b04 	ldr.w	r3, [r1], #4
1001604c:	f840 3b04 	str.w	r3, [r0], #4
10016050:	f851 3b04 	ldr.w	r3, [r1], #4
10016054:	f840 3b04 	str.w	r3, [r0], #4
10016058:	f851 3b04 	ldr.w	r3, [r1], #4
1001605c:	f840 3b04 	str.w	r3, [r0], #4
10016060:	f851 3b04 	ldr.w	r3, [r1], #4
10016064:	f840 3b04 	str.w	r3, [r0], #4
10016068:	f851 3b04 	ldr.w	r3, [r1], #4
1001606c:	f840 3b04 	str.w	r3, [r0], #4
10016070:	3a40      	subs	r2, #64	@ 0x40
10016072:	d2bd      	bcs.n	10015ff0 <memcpy+0x10>
10016074:	3230      	adds	r2, #48	@ 0x30
10016076:	d311      	bcc.n	1001609c <memcpy+0xbc>
10016078:	f851 3b04 	ldr.w	r3, [r1], #4
1001607c:	f840 3b04 	str.w	r3, [r0], #4
10016080:	f851 3b04 	ldr.w	r3, [r1], #4
10016084:	f840 3b04 	str.w	r3, [r0], #4
10016088:	f851 3b04 	ldr.w	r3, [r1], #4
1001608c:	f840 3b04 	str.w	r3, [r0], #4
10016090:	f851 3b04 	ldr.w	r3, [r1], #4
10016094:	f840 3b04 	str.w	r3, [r0], #4
10016098:	3a10      	subs	r2, #16
1001609a:	d2ed      	bcs.n	10016078 <memcpy+0x98>
1001609c:	320c      	adds	r2, #12
1001609e:	d305      	bcc.n	100160ac <memcpy+0xcc>
100160a0:	f851 3b04 	ldr.w	r3, [r1], #4
100160a4:	f840 3b04 	str.w	r3, [r0], #4
100160a8:	3a04      	subs	r2, #4
100160aa:	d2f9      	bcs.n	100160a0 <memcpy+0xc0>
100160ac:	3204      	adds	r2, #4
100160ae:	d008      	beq.n	100160c2 <memcpy+0xe2>
100160b0:	07d2      	lsls	r2, r2, #31
100160b2:	bf1c      	itt	ne
100160b4:	f811 3b01 	ldrbne.w	r3, [r1], #1
100160b8:	f800 3b01 	strbne.w	r3, [r0], #1
100160bc:	d301      	bcc.n	100160c2 <memcpy+0xe2>
100160be:	880b      	ldrh	r3, [r1, #0]
100160c0:	8003      	strh	r3, [r0, #0]
100160c2:	4660      	mov	r0, ip
100160c4:	4770      	bx	lr
100160c6:	bf00      	nop
100160c8:	2a08      	cmp	r2, #8
100160ca:	d313      	bcc.n	100160f4 <memcpy+0x114>
100160cc:	078b      	lsls	r3, r1, #30
100160ce:	d08d      	beq.n	10015fec <memcpy+0xc>
100160d0:	f010 0303 	ands.w	r3, r0, #3
100160d4:	d08a      	beq.n	10015fec <memcpy+0xc>
100160d6:	f1c3 0304 	rsb	r3, r3, #4
100160da:	1ad2      	subs	r2, r2, r3
100160dc:	07db      	lsls	r3, r3, #31
100160de:	bf1c      	itt	ne
100160e0:	f811 3b01 	ldrbne.w	r3, [r1], #1
100160e4:	f800 3b01 	strbne.w	r3, [r0], #1
100160e8:	d380      	bcc.n	10015fec <memcpy+0xc>
100160ea:	f831 3b02 	ldrh.w	r3, [r1], #2
100160ee:	f820 3b02 	strh.w	r3, [r0], #2
100160f2:	e77b      	b.n	10015fec <memcpy+0xc>
100160f4:	3a04      	subs	r2, #4
100160f6:	d3d9      	bcc.n	100160ac <memcpy+0xcc>
100160f8:	3a01      	subs	r2, #1
100160fa:	f811 3b01 	ldrb.w	r3, [r1], #1
100160fe:	f800 3b01 	strb.w	r3, [r0], #1
10016102:	d2f9      	bcs.n	100160f8 <memcpy+0x118>
10016104:	780b      	ldrb	r3, [r1, #0]
10016106:	7003      	strb	r3, [r0, #0]
10016108:	784b      	ldrb	r3, [r1, #1]
1001610a:	7043      	strb	r3, [r0, #1]
1001610c:	788b      	ldrb	r3, [r1, #2]
1001610e:	7083      	strb	r3, [r0, #2]
10016110:	4660      	mov	r0, ip
10016112:	4770      	bx	lr
	...

10016140 <strlen>:
10016140:	b430      	push	{r4, r5}
10016142:	f890 f000 	pld	[r0]
10016146:	f020 0107 	bic.w	r1, r0, #7
1001614a:	f06f 0c00 	mvn.w	ip, #0
1001614e:	f010 0407 	ands.w	r4, r0, #7
10016152:	f891 f020 	pld	[r1, #32]
10016156:	f040 8048 	bne.w	100161ea <strlen+0xaa>
1001615a:	f04f 0400 	mov.w	r4, #0
1001615e:	f06f 0007 	mvn.w	r0, #7
10016162:	e9d1 2300 	ldrd	r2, r3, [r1]
10016166:	f891 f040 	pld	[r1, #64]	@ 0x40
1001616a:	f100 0008 	add.w	r0, r0, #8
1001616e:	fa82 f24c 	uadd8	r2, r2, ip
10016172:	faa4 f28c 	sel	r2, r4, ip
10016176:	fa83 f34c 	uadd8	r3, r3, ip
1001617a:	faa2 f38c 	sel	r3, r2, ip
1001617e:	bb4b      	cbnz	r3, 100161d4 <strlen+0x94>
10016180:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
10016184:	fa82 f24c 	uadd8	r2, r2, ip
10016188:	f100 0008 	add.w	r0, r0, #8
1001618c:	faa4 f28c 	sel	r2, r4, ip
10016190:	fa83 f34c 	uadd8	r3, r3, ip
10016194:	faa2 f38c 	sel	r3, r2, ip
10016198:	b9e3      	cbnz	r3, 100161d4 <strlen+0x94>
1001619a:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
1001619e:	fa82 f24c 	uadd8	r2, r2, ip
100161a2:	f100 0008 	add.w	r0, r0, #8
100161a6:	faa4 f28c 	sel	r2, r4, ip
100161aa:	fa83 f34c 	uadd8	r3, r3, ip
100161ae:	faa2 f38c 	sel	r3, r2, ip
100161b2:	b97b      	cbnz	r3, 100161d4 <strlen+0x94>
100161b4:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
100161b8:	f101 0120 	add.w	r1, r1, #32
100161bc:	fa82 f24c 	uadd8	r2, r2, ip
100161c0:	f100 0008 	add.w	r0, r0, #8
100161c4:	faa4 f28c 	sel	r2, r4, ip
100161c8:	fa83 f34c 	uadd8	r3, r3, ip
100161cc:	faa2 f38c 	sel	r3, r2, ip
100161d0:	2b00      	cmp	r3, #0
100161d2:	d0c6      	beq.n	10016162 <strlen+0x22>
100161d4:	2a00      	cmp	r2, #0
100161d6:	bf04      	itt	eq
100161d8:	3004      	addeq	r0, #4
100161da:	461a      	moveq	r2, r3
100161dc:	ba12      	rev	r2, r2
100161de:	fab2 f282 	clz	r2, r2
100161e2:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
100161e6:	bc30      	pop	{r4, r5}
100161e8:	4770      	bx	lr
100161ea:	e9d1 2300 	ldrd	r2, r3, [r1]
100161ee:	f004 0503 	and.w	r5, r4, #3
100161f2:	f1c4 0000 	rsb	r0, r4, #0
100161f6:	ea4f 05c5 	mov.w	r5, r5, lsl #3
100161fa:	f014 0f04 	tst.w	r4, #4
100161fe:	f891 f040 	pld	[r1, #64]	@ 0x40
10016202:	fa0c f505 	lsl.w	r5, ip, r5
10016206:	ea62 0205 	orn	r2, r2, r5
1001620a:	bf1c      	itt	ne
1001620c:	ea63 0305 	ornne	r3, r3, r5
10016210:	4662      	movne	r2, ip
10016212:	f04f 0400 	mov.w	r4, #0
10016216:	e7aa      	b.n	1001616e <strlen+0x2e>

10016218 <frexp>:
10016218:	f8df c064 	ldr.w	ip, [pc, #100]	@ 10016280 <frexp+0x68>
1001621c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1001621e:	f021 4300 	bic.w	r3, r1, #2147483648	@ 0x80000000
10016222:	2700      	movs	r7, #0
10016224:	4563      	cmp	r3, ip
10016226:	4604      	mov	r4, r0
10016228:	460d      	mov	r5, r1
1001622a:	4616      	mov	r6, r2
1001622c:	6017      	str	r7, [r2, #0]
1001622e:	d822      	bhi.n	10016276 <frexp+0x5e>
10016230:	4684      	mov	ip, r0
10016232:	ea53 0c0c 	orrs.w	ip, r3, ip
10016236:	d01e      	beq.n	10016276 <frexp+0x5e>
10016238:	f8df c048 	ldr.w	ip, [pc, #72]	@ 10016284 <frexp+0x6c>
1001623c:	ea01 0c0c 	and.w	ip, r1, ip
10016240:	460a      	mov	r2, r1
10016242:	f1bc 0f00 	cmp.w	ip, #0
10016246:	d109      	bne.n	1001625c <frexp+0x44>
10016248:	4b0c      	ldr	r3, [pc, #48]	@ (1001627c <frexp+0x64>)
1001624a:	2200      	movs	r2, #0
1001624c:	f004 fd30 	bl	1001acb0 <__aeabi_dmul>
10016250:	f06f 0735 	mvn.w	r7, #53	@ 0x35
10016254:	4604      	mov	r4, r0
10016256:	460a      	mov	r2, r1
10016258:	f021 4300 	bic.w	r3, r1, #2147483648	@ 0x80000000
1001625c:	f022 42ff 	bic.w	r2, r2, #2139095040	@ 0x7f800000
10016260:	151b      	asrs	r3, r3, #20
10016262:	f422 02e0 	bic.w	r2, r2, #7340032	@ 0x700000
10016266:	f2a3 33fe 	subw	r3, r3, #1022	@ 0x3fe
1001626a:	f042 557f 	orr.w	r5, r2, #1069547520	@ 0x3fc00000
1001626e:	443b      	add	r3, r7
10016270:	f445 1500 	orr.w	r5, r5, #2097152	@ 0x200000
10016274:	6033      	str	r3, [r6, #0]
10016276:	4620      	mov	r0, r4
10016278:	4629      	mov	r1, r5
1001627a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1001627c:	43500000 	.word	0x43500000
10016280:	7fefffff 	.word	0x7fefffff
10016284:	7ff00000 	.word	0x7ff00000

10016288 <_realloc_r>:
10016288:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
1001628c:	4616      	mov	r6, r2
1001628e:	2900      	cmp	r1, #0
10016290:	f000 8096 	beq.w	100163c0 <_realloc_r+0x138>
10016294:	460c      	mov	r4, r1
10016296:	4680      	mov	r8, r0
10016298:	f106 050b 	add.w	r5, r6, #11
1001629c:	f7fe fcd0 	bl	10014c40 <__malloc_lock>
100162a0:	f854 1c04 	ldr.w	r1, [r4, #-4]
100162a4:	2d16      	cmp	r5, #22
100162a6:	f1a4 0908 	sub.w	r9, r4, #8
100162aa:	f021 0703 	bic.w	r7, r1, #3
100162ae:	d858      	bhi.n	10016362 <_realloc_r+0xda>
100162b0:	2510      	movs	r5, #16
100162b2:	42ae      	cmp	r6, r5
100162b4:	d858      	bhi.n	10016368 <_realloc_r+0xe0>
100162b6:	42af      	cmp	r7, r5
100162b8:	da60      	bge.n	1001637c <_realloc_r+0xf4>
100162ba:	4bbe      	ldr	r3, [pc, #760]	@ (100165b4 <_realloc_r+0x32c>)
100162bc:	689a      	ldr	r2, [r3, #8]
100162be:	eb09 0c07 	add.w	ip, r9, r7
100162c2:	4562      	cmp	r2, ip
100162c4:	f8dc 0004 	ldr.w	r0, [ip, #4]
100162c8:	f000 8090 	beq.w	100163ec <_realloc_r+0x164>
100162cc:	f020 0301 	bic.w	r3, r0, #1
100162d0:	4463      	add	r3, ip
100162d2:	685b      	ldr	r3, [r3, #4]
100162d4:	07da      	lsls	r2, r3, #31
100162d6:	d468      	bmi.n	100163aa <_realloc_r+0x122>
100162d8:	f020 0003 	bic.w	r0, r0, #3
100162dc:	183b      	adds	r3, r7, r0
100162de:	429d      	cmp	r5, r3
100162e0:	dd47      	ble.n	10016372 <_realloc_r+0xea>
100162e2:	07cb      	lsls	r3, r1, #31
100162e4:	d412      	bmi.n	1001630c <_realloc_r+0x84>
100162e6:	f854 3c08 	ldr.w	r3, [r4, #-8]
100162ea:	eba9 0b03 	sub.w	fp, r9, r3
100162ee:	f8db 3004 	ldr.w	r3, [fp, #4]
100162f2:	f023 0203 	bic.w	r2, r3, #3
100162f6:	4410      	add	r0, r2
100162f8:	eb00 0a07 	add.w	sl, r0, r7
100162fc:	4555      	cmp	r5, sl
100162fe:	f340 80f6 	ble.w	100164ee <_realloc_r+0x266>
10016302:	eb07 0a02 	add.w	sl, r7, r2
10016306:	4555      	cmp	r5, sl
10016308:	f340 80cc 	ble.w	100164a4 <_realloc_r+0x21c>
1001630c:	4631      	mov	r1, r6
1001630e:	4640      	mov	r0, r8
10016310:	f7fd ffb6 	bl	10014280 <_malloc_r>
10016314:	4606      	mov	r6, r0
10016316:	2800      	cmp	r0, #0
10016318:	f000 8120 	beq.w	1001655c <_realloc_r+0x2d4>
1001631c:	f854 3c04 	ldr.w	r3, [r4, #-4]
10016320:	f023 0301 	bic.w	r3, r3, #1
10016324:	444b      	add	r3, r9
10016326:	f1a0 0208 	sub.w	r2, r0, #8
1001632a:	4293      	cmp	r3, r2
1001632c:	f000 80b4 	beq.w	10016498 <_realloc_r+0x210>
10016330:	1f3a      	subs	r2, r7, #4
10016332:	2a24      	cmp	r2, #36	@ 0x24
10016334:	f200 80d7 	bhi.w	100164e6 <_realloc_r+0x25e>
10016338:	2a13      	cmp	r2, #19
1001633a:	f200 80a2 	bhi.w	10016482 <_realloc_r+0x1fa>
1001633e:	4603      	mov	r3, r0
10016340:	4622      	mov	r2, r4
10016342:	6811      	ldr	r1, [r2, #0]
10016344:	6019      	str	r1, [r3, #0]
10016346:	6851      	ldr	r1, [r2, #4]
10016348:	6059      	str	r1, [r3, #4]
1001634a:	6892      	ldr	r2, [r2, #8]
1001634c:	609a      	str	r2, [r3, #8]
1001634e:	4621      	mov	r1, r4
10016350:	4640      	mov	r0, r8
10016352:	f000 f997 	bl	10016684 <_free_r>
10016356:	4640      	mov	r0, r8
10016358:	f7fe fc78 	bl	10014c4c <__malloc_unlock>
1001635c:	4630      	mov	r0, r6
1001635e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
10016362:	f035 0507 	bics.w	r5, r5, #7
10016366:	d5a4      	bpl.n	100162b2 <_realloc_r+0x2a>
10016368:	230c      	movs	r3, #12
1001636a:	f8c8 3000 	str.w	r3, [r8]
1001636e:	2600      	movs	r6, #0
10016370:	e018      	b.n	100163a4 <_realloc_r+0x11c>
10016372:	461f      	mov	r7, r3
10016374:	e9dc 2302 	ldrd	r2, r3, [ip, #8]
10016378:	60d3      	str	r3, [r2, #12]
1001637a:	609a      	str	r2, [r3, #8]
1001637c:	f8d9 3004 	ldr.w	r3, [r9, #4]
10016380:	1b7a      	subs	r2, r7, r5
10016382:	2a0f      	cmp	r2, #15
10016384:	f003 0301 	and.w	r3, r3, #1
10016388:	eb09 0007 	add.w	r0, r9, r7
1001638c:	d81d      	bhi.n	100163ca <_realloc_r+0x142>
1001638e:	433b      	orrs	r3, r7
10016390:	f8c9 3004 	str.w	r3, [r9, #4]
10016394:	6843      	ldr	r3, [r0, #4]
10016396:	f043 0301 	orr.w	r3, r3, #1
1001639a:	6043      	str	r3, [r0, #4]
1001639c:	4640      	mov	r0, r8
1001639e:	f7fe fc55 	bl	10014c4c <__malloc_unlock>
100163a2:	4626      	mov	r6, r4
100163a4:	4630      	mov	r0, r6
100163a6:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
100163aa:	07c9      	lsls	r1, r1, #31
100163ac:	d4ae      	bmi.n	1001630c <_realloc_r+0x84>
100163ae:	f854 3c08 	ldr.w	r3, [r4, #-8]
100163b2:	eba9 0b03 	sub.w	fp, r9, r3
100163b6:	f8db 3004 	ldr.w	r3, [fp, #4]
100163ba:	f023 0203 	bic.w	r2, r3, #3
100163be:	e7a0      	b.n	10016302 <_realloc_r+0x7a>
100163c0:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
100163c4:	4611      	mov	r1, r2
100163c6:	f7fd bf5b 	b.w	10014280 <_malloc_r>
100163ca:	eb09 0105 	add.w	r1, r9, r5
100163ce:	432b      	orrs	r3, r5
100163d0:	f042 0201 	orr.w	r2, r2, #1
100163d4:	f8c9 3004 	str.w	r3, [r9, #4]
100163d8:	604a      	str	r2, [r1, #4]
100163da:	6843      	ldr	r3, [r0, #4]
100163dc:	f043 0301 	orr.w	r3, r3, #1
100163e0:	6043      	str	r3, [r0, #4]
100163e2:	3108      	adds	r1, #8
100163e4:	4640      	mov	r0, r8
100163e6:	f000 f94d 	bl	10016684 <_free_r>
100163ea:	e7d7      	b.n	1001639c <_realloc_r+0x114>
100163ec:	f020 0003 	bic.w	r0, r0, #3
100163f0:	19c2      	adds	r2, r0, r7
100163f2:	f105 0c10 	add.w	ip, r5, #16
100163f6:	4562      	cmp	r2, ip
100163f8:	f280 8091 	bge.w	1001651e <_realloc_r+0x296>
100163fc:	07ca      	lsls	r2, r1, #31
100163fe:	d485      	bmi.n	1001630c <_realloc_r+0x84>
10016400:	f854 2c08 	ldr.w	r2, [r4, #-8]
10016404:	eba9 0b02 	sub.w	fp, r9, r2
10016408:	f8db 2004 	ldr.w	r2, [fp, #4]
1001640c:	f022 0203 	bic.w	r2, r2, #3
10016410:	4410      	add	r0, r2
10016412:	eb00 0a07 	add.w	sl, r0, r7
10016416:	45d4      	cmp	ip, sl
10016418:	f73f af73 	bgt.w	10016302 <_realloc_r+0x7a>
1001641c:	465e      	mov	r6, fp
1001641e:	f8db 100c 	ldr.w	r1, [fp, #12]
10016422:	f856 0f08 	ldr.w	r0, [r6, #8]!
10016426:	1f3a      	subs	r2, r7, #4
10016428:	2a24      	cmp	r2, #36	@ 0x24
1001642a:	60c1      	str	r1, [r0, #12]
1001642c:	6088      	str	r0, [r1, #8]
1001642e:	f200 80ae 	bhi.w	1001658e <_realloc_r+0x306>
10016432:	2a13      	cmp	r2, #19
10016434:	f240 80a9 	bls.w	1001658a <_realloc_r+0x302>
10016438:	6821      	ldr	r1, [r4, #0]
1001643a:	f8cb 1008 	str.w	r1, [fp, #8]
1001643e:	6861      	ldr	r1, [r4, #4]
10016440:	f8cb 100c 	str.w	r1, [fp, #12]
10016444:	2a1b      	cmp	r2, #27
10016446:	f200 80a8 	bhi.w	1001659a <_realloc_r+0x312>
1001644a:	3408      	adds	r4, #8
1001644c:	f10b 0210 	add.w	r2, fp, #16
10016450:	6821      	ldr	r1, [r4, #0]
10016452:	6011      	str	r1, [r2, #0]
10016454:	6861      	ldr	r1, [r4, #4]
10016456:	6051      	str	r1, [r2, #4]
10016458:	68a1      	ldr	r1, [r4, #8]
1001645a:	6091      	str	r1, [r2, #8]
1001645c:	eb0b 0105 	add.w	r1, fp, r5
10016460:	ebaa 0205 	sub.w	r2, sl, r5
10016464:	f042 0201 	orr.w	r2, r2, #1
10016468:	6099      	str	r1, [r3, #8]
1001646a:	604a      	str	r2, [r1, #4]
1001646c:	f8db 3004 	ldr.w	r3, [fp, #4]
10016470:	f003 0301 	and.w	r3, r3, #1
10016474:	432b      	orrs	r3, r5
10016476:	4640      	mov	r0, r8
10016478:	f8cb 3004 	str.w	r3, [fp, #4]
1001647c:	f7fe fbe6 	bl	10014c4c <__malloc_unlock>
10016480:	e790      	b.n	100163a4 <_realloc_r+0x11c>
10016482:	6823      	ldr	r3, [r4, #0]
10016484:	6003      	str	r3, [r0, #0]
10016486:	6863      	ldr	r3, [r4, #4]
10016488:	6043      	str	r3, [r0, #4]
1001648a:	2a1b      	cmp	r2, #27
1001648c:	d83c      	bhi.n	10016508 <_realloc_r+0x280>
1001648e:	f104 0208 	add.w	r2, r4, #8
10016492:	f100 0308 	add.w	r3, r0, #8
10016496:	e754      	b.n	10016342 <_realloc_r+0xba>
10016498:	f850 3c04 	ldr.w	r3, [r0, #-4]
1001649c:	f023 0303 	bic.w	r3, r3, #3
100164a0:	441f      	add	r7, r3
100164a2:	e76b      	b.n	1001637c <_realloc_r+0xf4>
100164a4:	1f3a      	subs	r2, r7, #4
100164a6:	465e      	mov	r6, fp
100164a8:	f8db 300c 	ldr.w	r3, [fp, #12]
100164ac:	f856 1f08 	ldr.w	r1, [r6, #8]!
100164b0:	2a24      	cmp	r2, #36	@ 0x24
100164b2:	60cb      	str	r3, [r1, #12]
100164b4:	6099      	str	r1, [r3, #8]
100164b6:	d822      	bhi.n	100164fe <_realloc_r+0x276>
100164b8:	2a13      	cmp	r2, #19
100164ba:	d91e      	bls.n	100164fa <_realloc_r+0x272>
100164bc:	6823      	ldr	r3, [r4, #0]
100164be:	f8cb 3008 	str.w	r3, [fp, #8]
100164c2:	6863      	ldr	r3, [r4, #4]
100164c4:	f8cb 300c 	str.w	r3, [fp, #12]
100164c8:	2a1b      	cmp	r2, #27
100164ca:	d83b      	bhi.n	10016544 <_realloc_r+0x2bc>
100164cc:	3408      	adds	r4, #8
100164ce:	f10b 0310 	add.w	r3, fp, #16
100164d2:	6822      	ldr	r2, [r4, #0]
100164d4:	601a      	str	r2, [r3, #0]
100164d6:	6862      	ldr	r2, [r4, #4]
100164d8:	605a      	str	r2, [r3, #4]
100164da:	68a2      	ldr	r2, [r4, #8]
100164dc:	609a      	str	r2, [r3, #8]
100164de:	4634      	mov	r4, r6
100164e0:	4657      	mov	r7, sl
100164e2:	46d9      	mov	r9, fp
100164e4:	e74a      	b.n	1001637c <_realloc_r+0xf4>
100164e6:	4621      	mov	r1, r4
100164e8:	f7fe f98e 	bl	10014808 <memmove>
100164ec:	e72f      	b.n	1001634e <_realloc_r+0xc6>
100164ee:	e9dc 1302 	ldrd	r1, r3, [ip, #8]
100164f2:	1f3a      	subs	r2, r7, #4
100164f4:	60cb      	str	r3, [r1, #12]
100164f6:	6099      	str	r1, [r3, #8]
100164f8:	e7d5      	b.n	100164a6 <_realloc_r+0x21e>
100164fa:	4633      	mov	r3, r6
100164fc:	e7e9      	b.n	100164d2 <_realloc_r+0x24a>
100164fe:	4621      	mov	r1, r4
10016500:	4630      	mov	r0, r6
10016502:	f7fe f981 	bl	10014808 <memmove>
10016506:	e7ea      	b.n	100164de <_realloc_r+0x256>
10016508:	68a3      	ldr	r3, [r4, #8]
1001650a:	6083      	str	r3, [r0, #8]
1001650c:	68e3      	ldr	r3, [r4, #12]
1001650e:	60c3      	str	r3, [r0, #12]
10016510:	2a24      	cmp	r2, #36	@ 0x24
10016512:	d027      	beq.n	10016564 <_realloc_r+0x2dc>
10016514:	f104 0210 	add.w	r2, r4, #16
10016518:	f100 0310 	add.w	r3, r0, #16
1001651c:	e711      	b.n	10016342 <_realloc_r+0xba>
1001651e:	eb09 0105 	add.w	r1, r9, r5
10016522:	6099      	str	r1, [r3, #8]
10016524:	1b53      	subs	r3, r2, r5
10016526:	f043 0301 	orr.w	r3, r3, #1
1001652a:	604b      	str	r3, [r1, #4]
1001652c:	f854 3c04 	ldr.w	r3, [r4, #-4]
10016530:	f003 0301 	and.w	r3, r3, #1
10016534:	432b      	orrs	r3, r5
10016536:	4640      	mov	r0, r8
10016538:	f844 3c04 	str.w	r3, [r4, #-4]
1001653c:	f7fe fb86 	bl	10014c4c <__malloc_unlock>
10016540:	4626      	mov	r6, r4
10016542:	e72f      	b.n	100163a4 <_realloc_r+0x11c>
10016544:	68a3      	ldr	r3, [r4, #8]
10016546:	f8cb 3010 	str.w	r3, [fp, #16]
1001654a:	68e3      	ldr	r3, [r4, #12]
1001654c:	f8cb 3014 	str.w	r3, [fp, #20]
10016550:	2a24      	cmp	r2, #36	@ 0x24
10016552:	d010      	beq.n	10016576 <_realloc_r+0x2ee>
10016554:	3410      	adds	r4, #16
10016556:	f10b 0318 	add.w	r3, fp, #24
1001655a:	e7ba      	b.n	100164d2 <_realloc_r+0x24a>
1001655c:	4640      	mov	r0, r8
1001655e:	f7fe fb75 	bl	10014c4c <__malloc_unlock>
10016562:	e704      	b.n	1001636e <_realloc_r+0xe6>
10016564:	6923      	ldr	r3, [r4, #16]
10016566:	6103      	str	r3, [r0, #16]
10016568:	6961      	ldr	r1, [r4, #20]
1001656a:	6141      	str	r1, [r0, #20]
1001656c:	f104 0218 	add.w	r2, r4, #24
10016570:	f100 0318 	add.w	r3, r0, #24
10016574:	e6e5      	b.n	10016342 <_realloc_r+0xba>
10016576:	6923      	ldr	r3, [r4, #16]
10016578:	f8cb 3018 	str.w	r3, [fp, #24]
1001657c:	6963      	ldr	r3, [r4, #20]
1001657e:	f8cb 301c 	str.w	r3, [fp, #28]
10016582:	3418      	adds	r4, #24
10016584:	f10b 0320 	add.w	r3, fp, #32
10016588:	e7a3      	b.n	100164d2 <_realloc_r+0x24a>
1001658a:	4632      	mov	r2, r6
1001658c:	e760      	b.n	10016450 <_realloc_r+0x1c8>
1001658e:	4621      	mov	r1, r4
10016590:	4630      	mov	r0, r6
10016592:	f7fe f939 	bl	10014808 <memmove>
10016596:	4b07      	ldr	r3, [pc, #28]	@ (100165b4 <_realloc_r+0x32c>)
10016598:	e760      	b.n	1001645c <_realloc_r+0x1d4>
1001659a:	68a1      	ldr	r1, [r4, #8]
1001659c:	f8cb 1010 	str.w	r1, [fp, #16]
100165a0:	68e1      	ldr	r1, [r4, #12]
100165a2:	f8cb 1014 	str.w	r1, [fp, #20]
100165a6:	2a24      	cmp	r2, #36	@ 0x24
100165a8:	d006      	beq.n	100165b8 <_realloc_r+0x330>
100165aa:	3410      	adds	r4, #16
100165ac:	f10b 0218 	add.w	r2, fp, #24
100165b0:	e74e      	b.n	10016450 <_realloc_r+0x1c8>
100165b2:	bf00      	nop
100165b4:	20000050 	.word	0x20000050
100165b8:	6922      	ldr	r2, [r4, #16]
100165ba:	f8cb 2018 	str.w	r2, [fp, #24]
100165be:	6962      	ldr	r2, [r4, #20]
100165c0:	f8cb 201c 	str.w	r2, [fp, #28]
100165c4:	3418      	adds	r4, #24
100165c6:	f10b 0220 	add.w	r2, fp, #32
100165ca:	e741      	b.n	10016450 <_realloc_r+0x1c8>

100165cc <_malloc_trim_r>:
100165cc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
100165d0:	4606      	mov	r6, r0
100165d2:	2008      	movs	r0, #8
100165d4:	4689      	mov	r9, r1
100165d6:	f7fe fabd 	bl	10014b54 <sysconf>
100165da:	f8df 80a4 	ldr.w	r8, [pc, #164]	@ 10016680 <_malloc_trim_r+0xb4>
100165de:	4605      	mov	r5, r0
100165e0:	4630      	mov	r0, r6
100165e2:	f7fe fb2d 	bl	10014c40 <__malloc_lock>
100165e6:	f8d8 3008 	ldr.w	r3, [r8, #8]
100165ea:	685f      	ldr	r7, [r3, #4]
100165ec:	f027 0703 	bic.w	r7, r7, #3
100165f0:	f1a7 0411 	sub.w	r4, r7, #17
100165f4:	eba4 0409 	sub.w	r4, r4, r9
100165f8:	442c      	add	r4, r5
100165fa:	fbb4 f4f5 	udiv	r4, r4, r5
100165fe:	3c01      	subs	r4, #1
10016600:	fb05 f404 	mul.w	r4, r5, r4
10016604:	42a5      	cmp	r5, r4
10016606:	dc08      	bgt.n	1001661a <_malloc_trim_r+0x4e>
10016608:	2100      	movs	r1, #0
1001660a:	4630      	mov	r0, r6
1001660c:	f000 f988 	bl	10016920 <_sbrk_r>
10016610:	f8d8 3008 	ldr.w	r3, [r8, #8]
10016614:	443b      	add	r3, r7
10016616:	4298      	cmp	r0, r3
10016618:	d005      	beq.n	10016626 <_malloc_trim_r+0x5a>
1001661a:	4630      	mov	r0, r6
1001661c:	f7fe fb16 	bl	10014c4c <__malloc_unlock>
10016620:	2000      	movs	r0, #0
10016622:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
10016626:	4261      	negs	r1, r4
10016628:	4630      	mov	r0, r6
1001662a:	f000 f979 	bl	10016920 <_sbrk_r>
1001662e:	3001      	adds	r0, #1
10016630:	d00f      	beq.n	10016652 <_malloc_trim_r+0x86>
10016632:	4a11      	ldr	r2, [pc, #68]	@ (10016678 <_malloc_trim_r+0xac>)
10016634:	f8d8 3008 	ldr.w	r3, [r8, #8]
10016638:	1b3f      	subs	r7, r7, r4
1001663a:	f047 0701 	orr.w	r7, r7, #1
1001663e:	605f      	str	r7, [r3, #4]
10016640:	6813      	ldr	r3, [r2, #0]
10016642:	4630      	mov	r0, r6
10016644:	1b1b      	subs	r3, r3, r4
10016646:	6013      	str	r3, [r2, #0]
10016648:	f7fe fb00 	bl	10014c4c <__malloc_unlock>
1001664c:	2001      	movs	r0, #1
1001664e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
10016652:	2100      	movs	r1, #0
10016654:	4630      	mov	r0, r6
10016656:	f000 f963 	bl	10016920 <_sbrk_r>
1001665a:	f8d8 2008 	ldr.w	r2, [r8, #8]
1001665e:	1a83      	subs	r3, r0, r2
10016660:	2b0f      	cmp	r3, #15
10016662:	ddda      	ble.n	1001661a <_malloc_trim_r+0x4e>
10016664:	f043 0301 	orr.w	r3, r3, #1
10016668:	6053      	str	r3, [r2, #4]
1001666a:	4b04      	ldr	r3, [pc, #16]	@ (1001667c <_malloc_trim_r+0xb0>)
1001666c:	4902      	ldr	r1, [pc, #8]	@ (10016678 <_malloc_trim_r+0xac>)
1001666e:	681b      	ldr	r3, [r3, #0]
10016670:	1ac0      	subs	r0, r0, r3
10016672:	6008      	str	r0, [r1, #0]
10016674:	e7d1      	b.n	1001661a <_malloc_trim_r+0x4e>
10016676:	bf00      	nop
10016678:	2000163c 	.word	0x2000163c
1001667c:	20000048 	.word	0x20000048
10016680:	20000050 	.word	0x20000050

10016684 <_free_r>:
10016684:	2900      	cmp	r1, #0
10016686:	d07c      	beq.n	10016782 <_free_r+0xfe>
10016688:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
1001668c:	460c      	mov	r4, r1
1001668e:	4680      	mov	r8, r0
10016690:	f7fe fad6 	bl	10014c40 <__malloc_lock>
10016694:	f854 3c04 	ldr.w	r3, [r4, #-4]
10016698:	4f76      	ldr	r7, [pc, #472]	@ (10016874 <_free_r+0x1f0>)
1001669a:	f1a4 0508 	sub.w	r5, r4, #8
1001669e:	f023 0101 	bic.w	r1, r3, #1
100166a2:	1868      	adds	r0, r5, r1
100166a4:	68be      	ldr	r6, [r7, #8]
100166a6:	6842      	ldr	r2, [r0, #4]
100166a8:	4286      	cmp	r6, r0
100166aa:	f022 0203 	bic.w	r2, r2, #3
100166ae:	f000 8083 	beq.w	100167b8 <_free_r+0x134>
100166b2:	07de      	lsls	r6, r3, #31
100166b4:	6042      	str	r2, [r0, #4]
100166b6:	eb00 0c02 	add.w	ip, r0, r2
100166ba:	d433      	bmi.n	10016724 <_free_r+0xa0>
100166bc:	f854 4c08 	ldr.w	r4, [r4, #-8]
100166c0:	f8dc 3004 	ldr.w	r3, [ip, #4]
100166c4:	1b2d      	subs	r5, r5, r4
100166c6:	4421      	add	r1, r4
100166c8:	68ac      	ldr	r4, [r5, #8]
100166ca:	f107 0c08 	add.w	ip, r7, #8
100166ce:	4564      	cmp	r4, ip
100166d0:	f003 0301 	and.w	r3, r3, #1
100166d4:	d064      	beq.n	100167a0 <_free_r+0x11c>
100166d6:	f8d5 e00c 	ldr.w	lr, [r5, #12]
100166da:	f8c4 e00c 	str.w	lr, [r4, #12]
100166de:	f8ce 4008 	str.w	r4, [lr, #8]
100166e2:	2b00      	cmp	r3, #0
100166e4:	f000 8081 	beq.w	100167ea <_free_r+0x166>
100166e8:	f041 0301 	orr.w	r3, r1, #1
100166ec:	606b      	str	r3, [r5, #4]
100166ee:	6001      	str	r1, [r0, #0]
100166f0:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
100166f4:	d222      	bcs.n	1001673c <_free_r+0xb8>
100166f6:	6878      	ldr	r0, [r7, #4]
100166f8:	08cb      	lsrs	r3, r1, #3
100166fa:	2201      	movs	r2, #1
100166fc:	0949      	lsrs	r1, r1, #5
100166fe:	3301      	adds	r3, #1
10016700:	408a      	lsls	r2, r1
10016702:	4302      	orrs	r2, r0
10016704:	f857 1033 	ldr.w	r1, [r7, r3, lsl #3]
10016708:	607a      	str	r2, [r7, #4]
1001670a:	eb07 02c3 	add.w	r2, r7, r3, lsl #3
1001670e:	3a08      	subs	r2, #8
10016710:	e9c5 1202 	strd	r1, r2, [r5, #8]
10016714:	f847 5033 	str.w	r5, [r7, r3, lsl #3]
10016718:	60cd      	str	r5, [r1, #12]
1001671a:	4640      	mov	r0, r8
1001671c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
10016720:	f7fe ba94 	b.w	10014c4c <__malloc_unlock>
10016724:	f8dc 3004 	ldr.w	r3, [ip, #4]
10016728:	07db      	lsls	r3, r3, #31
1001672a:	d52b      	bpl.n	10016784 <_free_r+0x100>
1001672c:	f041 0301 	orr.w	r3, r1, #1
10016730:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
10016734:	f844 3c04 	str.w	r3, [r4, #-4]
10016738:	6001      	str	r1, [r0, #0]
1001673a:	d3dc      	bcc.n	100166f6 <_free_r+0x72>
1001673c:	f5b1 6f20 	cmp.w	r1, #2560	@ 0xa00
10016740:	ea4f 2351 	mov.w	r3, r1, lsr #9
10016744:	d253      	bcs.n	100167ee <_free_r+0x16a>
10016746:	098b      	lsrs	r3, r1, #6
10016748:	f103 0039 	add.w	r0, r3, #57	@ 0x39
1001674c:	f103 0238 	add.w	r2, r3, #56	@ 0x38
10016750:	00c3      	lsls	r3, r0, #3
10016752:	18f8      	adds	r0, r7, r3
10016754:	58fb      	ldr	r3, [r7, r3]
10016756:	3808      	subs	r0, #8
10016758:	4298      	cmp	r0, r3
1001675a:	d103      	bne.n	10016764 <_free_r+0xe0>
1001675c:	e063      	b.n	10016826 <_free_r+0x1a2>
1001675e:	689b      	ldr	r3, [r3, #8]
10016760:	4298      	cmp	r0, r3
10016762:	d004      	beq.n	1001676e <_free_r+0xea>
10016764:	685a      	ldr	r2, [r3, #4]
10016766:	f022 0203 	bic.w	r2, r2, #3
1001676a:	428a      	cmp	r2, r1
1001676c:	d8f7      	bhi.n	1001675e <_free_r+0xda>
1001676e:	68d8      	ldr	r0, [r3, #12]
10016770:	e9c5 3002 	strd	r3, r0, [r5, #8]
10016774:	6085      	str	r5, [r0, #8]
10016776:	60dd      	str	r5, [r3, #12]
10016778:	4640      	mov	r0, r8
1001677a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
1001677e:	f7fe ba65 	b.w	10014c4c <__malloc_unlock>
10016782:	4770      	bx	lr
10016784:	4411      	add	r1, r2
10016786:	f107 0c08 	add.w	ip, r7, #8
1001678a:	6883      	ldr	r3, [r0, #8]
1001678c:	4563      	cmp	r3, ip
1001678e:	d03f      	beq.n	10016810 <_free_r+0x18c>
10016790:	68c2      	ldr	r2, [r0, #12]
10016792:	60da      	str	r2, [r3, #12]
10016794:	6093      	str	r3, [r2, #8]
10016796:	f041 0301 	orr.w	r3, r1, #1
1001679a:	606b      	str	r3, [r5, #4]
1001679c:	5069      	str	r1, [r5, r1]
1001679e:	e7a7      	b.n	100166f0 <_free_r+0x6c>
100167a0:	2b00      	cmp	r3, #0
100167a2:	d161      	bne.n	10016868 <_free_r+0x1e4>
100167a4:	440a      	add	r2, r1
100167a6:	e9d0 1302 	ldrd	r1, r3, [r0, #8]
100167aa:	60cb      	str	r3, [r1, #12]
100167ac:	6099      	str	r1, [r3, #8]
100167ae:	f042 0301 	orr.w	r3, r2, #1
100167b2:	606b      	str	r3, [r5, #4]
100167b4:	50aa      	str	r2, [r5, r2]
100167b6:	e7b0      	b.n	1001671a <_free_r+0x96>
100167b8:	07db      	lsls	r3, r3, #31
100167ba:	440a      	add	r2, r1
100167bc:	d407      	bmi.n	100167ce <_free_r+0x14a>
100167be:	f854 3c08 	ldr.w	r3, [r4, #-8]
100167c2:	1aed      	subs	r5, r5, r3
100167c4:	441a      	add	r2, r3
100167c6:	e9d5 1302 	ldrd	r1, r3, [r5, #8]
100167ca:	60cb      	str	r3, [r1, #12]
100167cc:	6099      	str	r1, [r3, #8]
100167ce:	f042 0301 	orr.w	r3, r2, #1
100167d2:	606b      	str	r3, [r5, #4]
100167d4:	4b28      	ldr	r3, [pc, #160]	@ (10016878 <_free_r+0x1f4>)
100167d6:	60bd      	str	r5, [r7, #8]
100167d8:	681b      	ldr	r3, [r3, #0]
100167da:	4293      	cmp	r3, r2
100167dc:	d89d      	bhi.n	1001671a <_free_r+0x96>
100167de:	4b27      	ldr	r3, [pc, #156]	@ (1001687c <_free_r+0x1f8>)
100167e0:	4640      	mov	r0, r8
100167e2:	6819      	ldr	r1, [r3, #0]
100167e4:	f7ff fef2 	bl	100165cc <_malloc_trim_r>
100167e8:	e797      	b.n	1001671a <_free_r+0x96>
100167ea:	4411      	add	r1, r2
100167ec:	e7cd      	b.n	1001678a <_free_r+0x106>
100167ee:	2b14      	cmp	r3, #20
100167f0:	d908      	bls.n	10016804 <_free_r+0x180>
100167f2:	2b54      	cmp	r3, #84	@ 0x54
100167f4:	d81f      	bhi.n	10016836 <_free_r+0x1b2>
100167f6:	0b0b      	lsrs	r3, r1, #12
100167f8:	f103 006f 	add.w	r0, r3, #111	@ 0x6f
100167fc:	f103 026e 	add.w	r2, r3, #110	@ 0x6e
10016800:	00c3      	lsls	r3, r0, #3
10016802:	e7a6      	b.n	10016752 <_free_r+0xce>
10016804:	f103 005c 	add.w	r0, r3, #92	@ 0x5c
10016808:	f103 025b 	add.w	r2, r3, #91	@ 0x5b
1001680c:	00c3      	lsls	r3, r0, #3
1001680e:	e7a0      	b.n	10016752 <_free_r+0xce>
10016810:	f041 0301 	orr.w	r3, r1, #1
10016814:	613d      	str	r5, [r7, #16]
10016816:	617d      	str	r5, [r7, #20]
10016818:	f8c5 c008 	str.w	ip, [r5, #8]
1001681c:	f8c5 c00c 	str.w	ip, [r5, #12]
10016820:	606b      	str	r3, [r5, #4]
10016822:	5069      	str	r1, [r5, r1]
10016824:	e779      	b.n	1001671a <_free_r+0x96>
10016826:	6879      	ldr	r1, [r7, #4]
10016828:	1092      	asrs	r2, r2, #2
1001682a:	2401      	movs	r4, #1
1001682c:	fa04 f202 	lsl.w	r2, r4, r2
10016830:	430a      	orrs	r2, r1
10016832:	607a      	str	r2, [r7, #4]
10016834:	e79c      	b.n	10016770 <_free_r+0xec>
10016836:	f5b3 7faa 	cmp.w	r3, #340	@ 0x154
1001683a:	d806      	bhi.n	1001684a <_free_r+0x1c6>
1001683c:	0bcb      	lsrs	r3, r1, #15
1001683e:	f103 0078 	add.w	r0, r3, #120	@ 0x78
10016842:	f103 0277 	add.w	r2, r3, #119	@ 0x77
10016846:	00c3      	lsls	r3, r0, #3
10016848:	e783      	b.n	10016752 <_free_r+0xce>
1001684a:	f240 5254 	movw	r2, #1364	@ 0x554
1001684e:	4293      	cmp	r3, r2
10016850:	d806      	bhi.n	10016860 <_free_r+0x1dc>
10016852:	0c8b      	lsrs	r3, r1, #18
10016854:	f103 007d 	add.w	r0, r3, #125	@ 0x7d
10016858:	f103 027c 	add.w	r2, r3, #124	@ 0x7c
1001685c:	00c3      	lsls	r3, r0, #3
1001685e:	e778      	b.n	10016752 <_free_r+0xce>
10016860:	f44f 737e 	mov.w	r3, #1016	@ 0x3f8
10016864:	227e      	movs	r2, #126	@ 0x7e
10016866:	e774      	b.n	10016752 <_free_r+0xce>
10016868:	f041 0301 	orr.w	r3, r1, #1
1001686c:	606b      	str	r3, [r5, #4]
1001686e:	6001      	str	r1, [r0, #0]
10016870:	e753      	b.n	1001671a <_free_r+0x96>
10016872:	bf00      	nop
10016874:	20000050 	.word	0x20000050
10016878:	2000004c 	.word	0x2000004c
1001687c:	2000166c 	.word	0x2000166c

10016880 <_fstat_r>:
10016880:	b570      	push	{r4, r5, r6, lr}
10016882:	460c      	mov	r4, r1
10016884:	4d08      	ldr	r5, [pc, #32]	@ (100168a8 <_fstat_r+0x28>)
10016886:	4603      	mov	r3, r0
10016888:	2600      	movs	r6, #0
1001688a:	4620      	mov	r0, r4
1001688c:	4611      	mov	r1, r2
1001688e:	461c      	mov	r4, r3
10016890:	602e      	str	r6, [r5, #0]
10016892:	f7fa fa45 	bl	10010d20 <_fstat>
10016896:	1c43      	adds	r3, r0, #1
10016898:	d000      	beq.n	1001689c <_fstat_r+0x1c>
1001689a:	bd70      	pop	{r4, r5, r6, pc}
1001689c:	682b      	ldr	r3, [r5, #0]
1001689e:	2b00      	cmp	r3, #0
100168a0:	d0fb      	beq.n	1001689a <_fstat_r+0x1a>
100168a2:	6023      	str	r3, [r4, #0]
100168a4:	bd70      	pop	{r4, r5, r6, pc}
100168a6:	bf00      	nop
100168a8:	20001680 	.word	0x20001680

100168ac <_lseek_r>:
100168ac:	b538      	push	{r3, r4, r5, lr}
100168ae:	460c      	mov	r4, r1
100168b0:	4d08      	ldr	r5, [pc, #32]	@ (100168d4 <_lseek_r+0x28>)
100168b2:	4684      	mov	ip, r0
100168b4:	4611      	mov	r1, r2
100168b6:	4620      	mov	r0, r4
100168b8:	461a      	mov	r2, r3
100168ba:	2300      	movs	r3, #0
100168bc:	602b      	str	r3, [r5, #0]
100168be:	4664      	mov	r4, ip
100168c0:	f7fa fa2a 	bl	10010d18 <_lseek>
100168c4:	1c43      	adds	r3, r0, #1
100168c6:	d000      	beq.n	100168ca <_lseek_r+0x1e>
100168c8:	bd38      	pop	{r3, r4, r5, pc}
100168ca:	682b      	ldr	r3, [r5, #0]
100168cc:	2b00      	cmp	r3, #0
100168ce:	d0fb      	beq.n	100168c8 <_lseek_r+0x1c>
100168d0:	6023      	str	r3, [r4, #0]
100168d2:	bd38      	pop	{r3, r4, r5, pc}
100168d4:	20001680 	.word	0x20001680

100168d8 <_read_r>:
100168d8:	b538      	push	{r3, r4, r5, lr}
100168da:	460c      	mov	r4, r1
100168dc:	4d08      	ldr	r5, [pc, #32]	@ (10016900 <_read_r+0x28>)
100168de:	4684      	mov	ip, r0
100168e0:	4611      	mov	r1, r2
100168e2:	4620      	mov	r0, r4
100168e4:	461a      	mov	r2, r3
100168e6:	2300      	movs	r3, #0
100168e8:	602b      	str	r3, [r5, #0]
100168ea:	4664      	mov	r4, ip
100168ec:	f7fa fa1c 	bl	10010d28 <_read>
100168f0:	1c43      	adds	r3, r0, #1
100168f2:	d000      	beq.n	100168f6 <_read_r+0x1e>
100168f4:	bd38      	pop	{r3, r4, r5, pc}
100168f6:	682b      	ldr	r3, [r5, #0]
100168f8:	2b00      	cmp	r3, #0
100168fa:	d0fb      	beq.n	100168f4 <_read_r+0x1c>
100168fc:	6023      	str	r3, [r4, #0]
100168fe:	bd38      	pop	{r3, r4, r5, pc}
10016900:	20001680 	.word	0x20001680

10016904 <__ascii_wctomb>:
10016904:	b149      	cbz	r1, 1001691a <__ascii_wctomb+0x16>
10016906:	2aff      	cmp	r2, #255	@ 0xff
10016908:	d802      	bhi.n	10016910 <__ascii_wctomb+0xc>
1001690a:	700a      	strb	r2, [r1, #0]
1001690c:	2001      	movs	r0, #1
1001690e:	4770      	bx	lr
10016910:	238a      	movs	r3, #138	@ 0x8a
10016912:	6003      	str	r3, [r0, #0]
10016914:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10016918:	4770      	bx	lr
1001691a:	4608      	mov	r0, r1
1001691c:	4770      	bx	lr
1001691e:	bf00      	nop

10016920 <_sbrk_r>:
10016920:	b538      	push	{r3, r4, r5, lr}
10016922:	4d07      	ldr	r5, [pc, #28]	@ (10016940 <_sbrk_r+0x20>)
10016924:	2200      	movs	r2, #0
10016926:	4604      	mov	r4, r0
10016928:	4608      	mov	r0, r1
1001692a:	602a      	str	r2, [r5, #0]
1001692c:	f7fa fb74 	bl	10011018 <_sbrk>
10016930:	1c43      	adds	r3, r0, #1
10016932:	d000      	beq.n	10016936 <_sbrk_r+0x16>
10016934:	bd38      	pop	{r3, r4, r5, pc}
10016936:	682b      	ldr	r3, [r5, #0]
10016938:	2b00      	cmp	r3, #0
1001693a:	d0fb      	beq.n	10016934 <_sbrk_r+0x14>
1001693c:	6023      	str	r3, [r4, #0]
1001693e:	bd38      	pop	{r3, r4, r5, pc}
10016940:	20001680 	.word	0x20001680

10016944 <__sfvwrite_r>:
10016944:	6893      	ldr	r3, [r2, #8]
10016946:	2b00      	cmp	r3, #0
10016948:	f000 80f8 	beq.w	10016b3c <__sfvwrite_r+0x1f8>
1001694c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10016950:	f9b1 c00c 	ldrsh.w	ip, [r1, #12]
10016954:	f01c 0f08 	tst.w	ip, #8
10016958:	b083      	sub	sp, #12
1001695a:	4690      	mov	r8, r2
1001695c:	4681      	mov	r9, r0
1001695e:	460c      	mov	r4, r1
10016960:	d031      	beq.n	100169c6 <__sfvwrite_r+0x82>
10016962:	690b      	ldr	r3, [r1, #16]
10016964:	b37b      	cbz	r3, 100169c6 <__sfvwrite_r+0x82>
10016966:	f01c 0702 	ands.w	r7, ip, #2
1001696a:	f8d8 6000 	ldr.w	r6, [r8]
1001696e:	d038      	beq.n	100169e2 <__sfvwrite_r+0x9e>
10016970:	2700      	movs	r7, #0
10016972:	f8d4 b024 	ldr.w	fp, [r4, #36]	@ 0x24
10016976:	69e1      	ldr	r1, [r4, #28]
10016978:	f8df a2c4 	ldr.w	sl, [pc, #708]	@ 10016c40 <__sfvwrite_r+0x2fc>
1001697c:	463d      	mov	r5, r7
1001697e:	4555      	cmp	r5, sl
10016980:	462b      	mov	r3, r5
10016982:	463a      	mov	r2, r7
10016984:	bf28      	it	cs
10016986:	4653      	movcs	r3, sl
10016988:	4648      	mov	r0, r9
1001698a:	b1c5      	cbz	r5, 100169be <__sfvwrite_r+0x7a>
1001698c:	47d8      	blx	fp
1001698e:	2800      	cmp	r0, #0
10016990:	f340 80ca 	ble.w	10016b28 <__sfvwrite_r+0x1e4>
10016994:	f8d8 3008 	ldr.w	r3, [r8, #8]
10016998:	1a1b      	subs	r3, r3, r0
1001699a:	4407      	add	r7, r0
1001699c:	1a2d      	subs	r5, r5, r0
1001699e:	f8c8 3008 	str.w	r3, [r8, #8]
100169a2:	2b00      	cmp	r3, #0
100169a4:	f000 80b6 	beq.w	10016b14 <__sfvwrite_r+0x1d0>
100169a8:	4555      	cmp	r5, sl
100169aa:	462b      	mov	r3, r5
100169ac:	f8d4 b024 	ldr.w	fp, [r4, #36]	@ 0x24
100169b0:	69e1      	ldr	r1, [r4, #28]
100169b2:	bf28      	it	cs
100169b4:	4653      	movcs	r3, sl
100169b6:	463a      	mov	r2, r7
100169b8:	4648      	mov	r0, r9
100169ba:	2d00      	cmp	r5, #0
100169bc:	d1e6      	bne.n	1001698c <__sfvwrite_r+0x48>
100169be:	e9d6 7500 	ldrd	r7, r5, [r6]
100169c2:	3608      	adds	r6, #8
100169c4:	e7db      	b.n	1001697e <__sfvwrite_r+0x3a>
100169c6:	4621      	mov	r1, r4
100169c8:	4648      	mov	r0, r9
100169ca:	f003 f91f 	bl	10019c0c <__swsetup_r>
100169ce:	2800      	cmp	r0, #0
100169d0:	f040 80af 	bne.w	10016b32 <__sfvwrite_r+0x1ee>
100169d4:	f9b4 c00c 	ldrsh.w	ip, [r4, #12]
100169d8:	f8d8 6000 	ldr.w	r6, [r8]
100169dc:	f01c 0702 	ands.w	r7, ip, #2
100169e0:	d1c6      	bne.n	10016970 <__sfvwrite_r+0x2c>
100169e2:	f01c 0a01 	ands.w	sl, ip, #1
100169e6:	d163      	bne.n	10016ab0 <__sfvwrite_r+0x16c>
100169e8:	6823      	ldr	r3, [r4, #0]
100169ea:	68a1      	ldr	r1, [r4, #8]
100169ec:	4657      	mov	r7, sl
100169ee:	4618      	mov	r0, r3
100169f0:	468b      	mov	fp, r1
100169f2:	2f00      	cmp	r7, #0
100169f4:	d058      	beq.n	10016aa8 <__sfvwrite_r+0x164>
100169f6:	f41c 7f00 	tst.w	ip, #512	@ 0x200
100169fa:	f000 80b5 	beq.w	10016b68 <__sfvwrite_r+0x224>
100169fe:	42b9      	cmp	r1, r7
10016a00:	460a      	mov	r2, r1
10016a02:	f200 80e1 	bhi.w	10016bc8 <__sfvwrite_r+0x284>
10016a06:	f41c 6f90 	tst.w	ip, #1152	@ 0x480
10016a0a:	d02f      	beq.n	10016a6c <__sfvwrite_r+0x128>
10016a0c:	6921      	ldr	r1, [r4, #16]
10016a0e:	6962      	ldr	r2, [r4, #20]
10016a10:	1a5d      	subs	r5, r3, r1
10016a12:	eb02 0242 	add.w	r2, r2, r2, lsl #1
10016a16:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
10016a1a:	1c6b      	adds	r3, r5, #1
10016a1c:	1052      	asrs	r2, r2, #1
10016a1e:	443b      	add	r3, r7
10016a20:	4293      	cmp	r3, r2
10016a22:	bf92      	itee	ls
10016a24:	4693      	movls	fp, r2
10016a26:	469b      	movhi	fp, r3
10016a28:	461a      	movhi	r2, r3
10016a2a:	f41c 6f80 	tst.w	ip, #1024	@ 0x400
10016a2e:	f000 80ea 	beq.w	10016c06 <__sfvwrite_r+0x2c2>
10016a32:	4611      	mov	r1, r2
10016a34:	4648      	mov	r0, r9
10016a36:	f7fd fc23 	bl	10014280 <_malloc_r>
10016a3a:	2800      	cmp	r0, #0
10016a3c:	f000 80f9 	beq.w	10016c32 <__sfvwrite_r+0x2ee>
10016a40:	462a      	mov	r2, r5
10016a42:	6921      	ldr	r1, [r4, #16]
10016a44:	9000      	str	r0, [sp, #0]
10016a46:	f7ff facb 	bl	10015fe0 <memcpy>
10016a4a:	89a2      	ldrh	r2, [r4, #12]
10016a4c:	9b00      	ldr	r3, [sp, #0]
10016a4e:	f422 6290 	bic.w	r2, r2, #1152	@ 0x480
10016a52:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
10016a56:	81a2      	strh	r2, [r4, #12]
10016a58:	1958      	adds	r0, r3, r5
10016a5a:	ebab 0505 	sub.w	r5, fp, r5
10016a5e:	f8c4 b014 	str.w	fp, [r4, #20]
10016a62:	6123      	str	r3, [r4, #16]
10016a64:	60a5      	str	r5, [r4, #8]
10016a66:	6020      	str	r0, [r4, #0]
10016a68:	46bb      	mov	fp, r7
10016a6a:	463a      	mov	r2, r7
10016a6c:	4651      	mov	r1, sl
10016a6e:	9200      	str	r2, [sp, #0]
10016a70:	f7fd feca 	bl	10014808 <memmove>
10016a74:	68a1      	ldr	r1, [r4, #8]
10016a76:	6823      	ldr	r3, [r4, #0]
10016a78:	9a00      	ldr	r2, [sp, #0]
10016a7a:	eba1 010b 	sub.w	r1, r1, fp
10016a7e:	441a      	add	r2, r3
10016a80:	463d      	mov	r5, r7
10016a82:	60a1      	str	r1, [r4, #8]
10016a84:	6022      	str	r2, [r4, #0]
10016a86:	2700      	movs	r7, #0
10016a88:	f8d8 3008 	ldr.w	r3, [r8, #8]
10016a8c:	1b5b      	subs	r3, r3, r5
10016a8e:	44aa      	add	sl, r5
10016a90:	f8c8 3008 	str.w	r3, [r8, #8]
10016a94:	2b00      	cmp	r3, #0
10016a96:	d03d      	beq.n	10016b14 <__sfvwrite_r+0x1d0>
10016a98:	6823      	ldr	r3, [r4, #0]
10016a9a:	68a1      	ldr	r1, [r4, #8]
10016a9c:	f9b4 c00c 	ldrsh.w	ip, [r4, #12]
10016aa0:	4618      	mov	r0, r3
10016aa2:	468b      	mov	fp, r1
10016aa4:	2f00      	cmp	r7, #0
10016aa6:	d1a6      	bne.n	100169f6 <__sfvwrite_r+0xb2>
10016aa8:	e9d6 a700 	ldrd	sl, r7, [r6]
10016aac:	3608      	adds	r6, #8
10016aae:	e79e      	b.n	100169ee <__sfvwrite_r+0xaa>
10016ab0:	4638      	mov	r0, r7
10016ab2:	46bb      	mov	fp, r7
10016ab4:	463d      	mov	r5, r7
10016ab6:	9700      	str	r7, [sp, #0]
10016ab8:	2d00      	cmp	r5, #0
10016aba:	d041      	beq.n	10016b40 <__sfvwrite_r+0x1fc>
10016abc:	2800      	cmp	r0, #0
10016abe:	d046      	beq.n	10016b4e <__sfvwrite_r+0x20a>
10016ac0:	9a00      	ldr	r2, [sp, #0]
10016ac2:	6820      	ldr	r0, [r4, #0]
10016ac4:	68a1      	ldr	r1, [r4, #8]
10016ac6:	e9d4 7304 	ldrd	r7, r3, [r4, #16]
10016aca:	42aa      	cmp	r2, r5
10016acc:	bf28      	it	cs
10016ace:	462a      	movcs	r2, r5
10016ad0:	42b8      	cmp	r0, r7
10016ad2:	d904      	bls.n	10016ade <__sfvwrite_r+0x19a>
10016ad4:	eb01 0a03 	add.w	sl, r1, r3
10016ad8:	4552      	cmp	r2, sl
10016ada:	f300 8085 	bgt.w	10016be8 <__sfvwrite_r+0x2a4>
10016ade:	4293      	cmp	r3, r2
10016ae0:	dc75      	bgt.n	10016bce <__sfvwrite_r+0x28a>
10016ae2:	69e1      	ldr	r1, [r4, #28]
10016ae4:	6a67      	ldr	r7, [r4, #36]	@ 0x24
10016ae6:	465a      	mov	r2, fp
10016ae8:	4648      	mov	r0, r9
10016aea:	47b8      	blx	r7
10016aec:	f1b0 0a00 	subs.w	sl, r0, #0
10016af0:	dd1a      	ble.n	10016b28 <__sfvwrite_r+0x1e4>
10016af2:	9b00      	ldr	r3, [sp, #0]
10016af4:	ebb3 030a 	subs.w	r3, r3, sl
10016af8:	9300      	str	r3, [sp, #0]
10016afa:	d00f      	beq.n	10016b1c <__sfvwrite_r+0x1d8>
10016afc:	2001      	movs	r0, #1
10016afe:	f8d8 3008 	ldr.w	r3, [r8, #8]
10016b02:	eba3 030a 	sub.w	r3, r3, sl
10016b06:	44d3      	add	fp, sl
10016b08:	eba5 050a 	sub.w	r5, r5, sl
10016b0c:	f8c8 3008 	str.w	r3, [r8, #8]
10016b10:	2b00      	cmp	r3, #0
10016b12:	d1d1      	bne.n	10016ab8 <__sfvwrite_r+0x174>
10016b14:	2000      	movs	r0, #0
10016b16:	b003      	add	sp, #12
10016b18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10016b1c:	4621      	mov	r1, r4
10016b1e:	4648      	mov	r0, r9
10016b20:	f7ff f912 	bl	10015d48 <_fflush_r>
10016b24:	2800      	cmp	r0, #0
10016b26:	d0ea      	beq.n	10016afe <__sfvwrite_r+0x1ba>
10016b28:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10016b2c:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10016b30:	81a3      	strh	r3, [r4, #12]
10016b32:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10016b36:	b003      	add	sp, #12
10016b38:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10016b3c:	2000      	movs	r0, #0
10016b3e:	4770      	bx	lr
10016b40:	6875      	ldr	r5, [r6, #4]
10016b42:	4633      	mov	r3, r6
10016b44:	3608      	adds	r6, #8
10016b46:	2d00      	cmp	r5, #0
10016b48:	d0fa      	beq.n	10016b40 <__sfvwrite_r+0x1fc>
10016b4a:	f8d3 b000 	ldr.w	fp, [r3]
10016b4e:	462a      	mov	r2, r5
10016b50:	210a      	movs	r1, #10
10016b52:	4658      	mov	r0, fp
10016b54:	f7ff f9f4 	bl	10015f40 <memchr>
10016b58:	2800      	cmp	r0, #0
10016b5a:	d067      	beq.n	10016c2c <__sfvwrite_r+0x2e8>
10016b5c:	3001      	adds	r0, #1
10016b5e:	eba0 030b 	sub.w	r3, r0, fp
10016b62:	9300      	str	r3, [sp, #0]
10016b64:	461a      	mov	r2, r3
10016b66:	e7ac      	b.n	10016ac2 <__sfvwrite_r+0x17e>
10016b68:	6922      	ldr	r2, [r4, #16]
10016b6a:	429a      	cmp	r2, r3
10016b6c:	d314      	bcc.n	10016b98 <__sfvwrite_r+0x254>
10016b6e:	6962      	ldr	r2, [r4, #20]
10016b70:	42ba      	cmp	r2, r7
10016b72:	d811      	bhi.n	10016b98 <__sfvwrite_r+0x254>
10016b74:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
10016b78:	42bb      	cmp	r3, r7
10016b7a:	bf28      	it	cs
10016b7c:	463b      	movcs	r3, r7
10016b7e:	6a65      	ldr	r5, [r4, #36]	@ 0x24
10016b80:	fb93 f3f2 	sdiv	r3, r3, r2
10016b84:	69e1      	ldr	r1, [r4, #28]
10016b86:	fb02 f303 	mul.w	r3, r2, r3
10016b8a:	4648      	mov	r0, r9
10016b8c:	4652      	mov	r2, sl
10016b8e:	47a8      	blx	r5
10016b90:	1e05      	subs	r5, r0, #0
10016b92:	ddc9      	ble.n	10016b28 <__sfvwrite_r+0x1e4>
10016b94:	1b7f      	subs	r7, r7, r5
10016b96:	e777      	b.n	10016a88 <__sfvwrite_r+0x144>
10016b98:	42b9      	cmp	r1, r7
10016b9a:	bf28      	it	cs
10016b9c:	4639      	movcs	r1, r7
10016b9e:	460d      	mov	r5, r1
10016ba0:	4618      	mov	r0, r3
10016ba2:	460a      	mov	r2, r1
10016ba4:	4651      	mov	r1, sl
10016ba6:	f7fd fe2f 	bl	10014808 <memmove>
10016baa:	68a1      	ldr	r1, [r4, #8]
10016bac:	6823      	ldr	r3, [r4, #0]
10016bae:	1b49      	subs	r1, r1, r5
10016bb0:	442b      	add	r3, r5
10016bb2:	60a1      	str	r1, [r4, #8]
10016bb4:	6023      	str	r3, [r4, #0]
10016bb6:	2900      	cmp	r1, #0
10016bb8:	d1ec      	bne.n	10016b94 <__sfvwrite_r+0x250>
10016bba:	4621      	mov	r1, r4
10016bbc:	4648      	mov	r0, r9
10016bbe:	f7ff f8c3 	bl	10015d48 <_fflush_r>
10016bc2:	2800      	cmp	r0, #0
10016bc4:	d0e6      	beq.n	10016b94 <__sfvwrite_r+0x250>
10016bc6:	e7af      	b.n	10016b28 <__sfvwrite_r+0x1e4>
10016bc8:	46bb      	mov	fp, r7
10016bca:	463a      	mov	r2, r7
10016bcc:	e74e      	b.n	10016a6c <__sfvwrite_r+0x128>
10016bce:	4659      	mov	r1, fp
10016bd0:	9201      	str	r2, [sp, #4]
10016bd2:	f7fd fe19 	bl	10014808 <memmove>
10016bd6:	9a01      	ldr	r2, [sp, #4]
10016bd8:	68a3      	ldr	r3, [r4, #8]
10016bda:	1a9b      	subs	r3, r3, r2
10016bdc:	60a3      	str	r3, [r4, #8]
10016bde:	6823      	ldr	r3, [r4, #0]
10016be0:	4413      	add	r3, r2
10016be2:	6023      	str	r3, [r4, #0]
10016be4:	4692      	mov	sl, r2
10016be6:	e784      	b.n	10016af2 <__sfvwrite_r+0x1ae>
10016be8:	4659      	mov	r1, fp
10016bea:	4652      	mov	r2, sl
10016bec:	f7fd fe0c 	bl	10014808 <memmove>
10016bf0:	6823      	ldr	r3, [r4, #0]
10016bf2:	4453      	add	r3, sl
10016bf4:	6023      	str	r3, [r4, #0]
10016bf6:	4621      	mov	r1, r4
10016bf8:	4648      	mov	r0, r9
10016bfa:	f7ff f8a5 	bl	10015d48 <_fflush_r>
10016bfe:	2800      	cmp	r0, #0
10016c00:	f43f af77 	beq.w	10016af2 <__sfvwrite_r+0x1ae>
10016c04:	e790      	b.n	10016b28 <__sfvwrite_r+0x1e4>
10016c06:	4648      	mov	r0, r9
10016c08:	f7ff fb3e 	bl	10016288 <_realloc_r>
10016c0c:	4603      	mov	r3, r0
10016c0e:	2800      	cmp	r0, #0
10016c10:	f47f af22 	bne.w	10016a58 <__sfvwrite_r+0x114>
10016c14:	6921      	ldr	r1, [r4, #16]
10016c16:	4648      	mov	r0, r9
10016c18:	f7ff fd34 	bl	10016684 <_free_r>
10016c1c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10016c20:	220c      	movs	r2, #12
10016c22:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
10016c26:	f8c9 2000 	str.w	r2, [r9]
10016c2a:	e77f      	b.n	10016b2c <__sfvwrite_r+0x1e8>
10016c2c:	1c6a      	adds	r2, r5, #1
10016c2e:	9200      	str	r2, [sp, #0]
10016c30:	e747      	b.n	10016ac2 <__sfvwrite_r+0x17e>
10016c32:	220c      	movs	r2, #12
10016c34:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10016c38:	f8c9 2000 	str.w	r2, [r9]
10016c3c:	e776      	b.n	10016b2c <__sfvwrite_r+0x1e8>
10016c3e:	bf00      	nop
10016c40:	7ffffc00 	.word	0x7ffffc00

10016c44 <_fwalk_sglue>:
10016c44:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
10016c48:	4680      	mov	r8, r0
10016c4a:	460f      	mov	r7, r1
10016c4c:	4616      	mov	r6, r2
10016c4e:	f04f 0900 	mov.w	r9, #0
10016c52:	e9d6 5401 	ldrd	r5, r4, [r6, #4]
10016c56:	3d01      	subs	r5, #1
10016c58:	d411      	bmi.n	10016c7e <_fwalk_sglue+0x3a>
10016c5a:	89a3      	ldrh	r3, [r4, #12]
10016c5c:	2b01      	cmp	r3, #1
10016c5e:	f105 35ff 	add.w	r5, r5, #4294967295	@ 0xffffffff
10016c62:	d908      	bls.n	10016c76 <_fwalk_sglue+0x32>
10016c64:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
10016c68:	3301      	adds	r3, #1
10016c6a:	4621      	mov	r1, r4
10016c6c:	d003      	beq.n	10016c76 <_fwalk_sglue+0x32>
10016c6e:	4640      	mov	r0, r8
10016c70:	47b8      	blx	r7
10016c72:	ea49 0900 	orr.w	r9, r9, r0
10016c76:	1c6b      	adds	r3, r5, #1
10016c78:	f104 0468 	add.w	r4, r4, #104	@ 0x68
10016c7c:	d1ed      	bne.n	10016c5a <_fwalk_sglue+0x16>
10016c7e:	6836      	ldr	r6, [r6, #0]
10016c80:	2e00      	cmp	r6, #0
10016c82:	d1e6      	bne.n	10016c52 <_fwalk_sglue+0xe>
10016c84:	4648      	mov	r0, r9
10016c86:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
10016c8a:	bf00      	nop

10016c8c <__ssprint_r>:
10016c8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10016c90:	6893      	ldr	r3, [r2, #8]
10016c92:	6817      	ldr	r7, [r2, #0]
10016c94:	b083      	sub	sp, #12
10016c96:	4692      	mov	sl, r2
10016c98:	2b00      	cmp	r3, #0
10016c9a:	d074      	beq.n	10016d86 <__ssprint_r+0xfa>
10016c9c:	f04f 0b00 	mov.w	fp, #0
10016ca0:	688b      	ldr	r3, [r1, #8]
10016ca2:	680a      	ldr	r2, [r1, #0]
10016ca4:	4681      	mov	r9, r0
10016ca6:	460c      	mov	r4, r1
10016ca8:	465d      	mov	r5, fp
10016caa:	e045      	b.n	10016d38 <__ssprint_r+0xac>
10016cac:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10016cb0:	f413 6f90 	tst.w	r3, #1152	@ 0x480
10016cb4:	d02c      	beq.n	10016d10 <__ssprint_r+0x84>
10016cb6:	e9d4 0104 	ldrd	r0, r1, [r4, #16]
10016cba:	1a16      	subs	r6, r2, r0
10016cbc:	eb01 0241 	add.w	r2, r1, r1, lsl #1
10016cc0:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
10016cc4:	1c71      	adds	r1, r6, #1
10016cc6:	1052      	asrs	r2, r2, #1
10016cc8:	4429      	add	r1, r5
10016cca:	4291      	cmp	r1, r2
10016ccc:	bf92      	itee	ls
10016cce:	4690      	movls	r8, r2
10016cd0:	4688      	movhi	r8, r1
10016cd2:	460a      	movhi	r2, r1
10016cd4:	055b      	lsls	r3, r3, #21
10016cd6:	d539      	bpl.n	10016d4c <__ssprint_r+0xc0>
10016cd8:	4611      	mov	r1, r2
10016cda:	4648      	mov	r0, r9
10016cdc:	f7fd fad0 	bl	10014280 <_malloc_r>
10016ce0:	9001      	str	r0, [sp, #4]
10016ce2:	2800      	cmp	r0, #0
10016ce4:	d03d      	beq.n	10016d62 <__ssprint_r+0xd6>
10016ce6:	4632      	mov	r2, r6
10016ce8:	6921      	ldr	r1, [r4, #16]
10016cea:	f7ff f979 	bl	10015fe0 <memcpy>
10016cee:	89a2      	ldrh	r2, [r4, #12]
10016cf0:	9b01      	ldr	r3, [sp, #4]
10016cf2:	f422 6290 	bic.w	r2, r2, #1152	@ 0x480
10016cf6:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
10016cfa:	81a2      	strh	r2, [r4, #12]
10016cfc:	1998      	adds	r0, r3, r6
10016cfe:	eba8 0606 	sub.w	r6, r8, r6
10016d02:	60a6      	str	r6, [r4, #8]
10016d04:	f8c4 8014 	str.w	r8, [r4, #20]
10016d08:	6123      	str	r3, [r4, #16]
10016d0a:	6020      	str	r0, [r4, #0]
10016d0c:	46a8      	mov	r8, r5
10016d0e:	462e      	mov	r6, r5
10016d10:	4632      	mov	r2, r6
10016d12:	4659      	mov	r1, fp
10016d14:	f7fd fd78 	bl	10014808 <memmove>
10016d18:	f8da 1008 	ldr.w	r1, [sl, #8]
10016d1c:	68a3      	ldr	r3, [r4, #8]
10016d1e:	6822      	ldr	r2, [r4, #0]
10016d20:	eba3 0308 	sub.w	r3, r3, r8
10016d24:	4432      	add	r2, r6
10016d26:	1b49      	subs	r1, r1, r5
10016d28:	60a3      	str	r3, [r4, #8]
10016d2a:	6022      	str	r2, [r4, #0]
10016d2c:	f8ca 1008 	str.w	r1, [sl, #8]
10016d30:	b349      	cbz	r1, 10016d86 <__ssprint_r+0xfa>
10016d32:	e9d7 b500 	ldrd	fp, r5, [r7]
10016d36:	3708      	adds	r7, #8
10016d38:	4698      	mov	r8, r3
10016d3a:	4610      	mov	r0, r2
10016d3c:	2d00      	cmp	r5, #0
10016d3e:	d0f8      	beq.n	10016d32 <__ssprint_r+0xa6>
10016d40:	429d      	cmp	r5, r3
10016d42:	461e      	mov	r6, r3
10016d44:	d2b2      	bcs.n	10016cac <__ssprint_r+0x20>
10016d46:	46a8      	mov	r8, r5
10016d48:	462e      	mov	r6, r5
10016d4a:	e7e1      	b.n	10016d10 <__ssprint_r+0x84>
10016d4c:	4601      	mov	r1, r0
10016d4e:	4648      	mov	r0, r9
10016d50:	f7ff fa9a 	bl	10016288 <_realloc_r>
10016d54:	4603      	mov	r3, r0
10016d56:	2800      	cmp	r0, #0
10016d58:	d1d0      	bne.n	10016cfc <__ssprint_r+0x70>
10016d5a:	6921      	ldr	r1, [r4, #16]
10016d5c:	4648      	mov	r0, r9
10016d5e:	f7ff fc91 	bl	10016684 <_free_r>
10016d62:	89a3      	ldrh	r3, [r4, #12]
10016d64:	220c      	movs	r2, #12
10016d66:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10016d6a:	f8c9 2000 	str.w	r2, [r9]
10016d6e:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10016d72:	81a3      	strh	r3, [r4, #12]
10016d74:	2200      	movs	r2, #0
10016d76:	2300      	movs	r3, #0
10016d78:	f8ca 2008 	str.w	r2, [sl, #8]
10016d7c:	f8ca 3004 	str.w	r3, [sl, #4]
10016d80:	b003      	add	sp, #12
10016d82:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10016d86:	2000      	movs	r0, #0
10016d88:	2300      	movs	r3, #0
10016d8a:	f8ca 3004 	str.w	r3, [sl, #4]
10016d8e:	b003      	add	sp, #12
10016d90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10016d94:	0000      	movs	r0, r0
	...

10016d98 <_vfprintf_r>:
10016d98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10016d9c:	b0df      	sub	sp, #380	@ 0x17c
10016d9e:	461c      	mov	r4, r3
10016da0:	9107      	str	r1, [sp, #28]
10016da2:	4691      	mov	r9, r2
10016da4:	4683      	mov	fp, r0
10016da6:	f7fd fe71 	bl	10014a8c <_localeconv_r>
10016daa:	6803      	ldr	r3, [r0, #0]
10016dac:	9319      	str	r3, [sp, #100]	@ 0x64
10016dae:	4618      	mov	r0, r3
10016db0:	f7ff f9c6 	bl	10016140 <strlen>
10016db4:	2208      	movs	r2, #8
10016db6:	9018      	str	r0, [sp, #96]	@ 0x60
10016db8:	2100      	movs	r1, #0
10016dba:	a82e      	add	r0, sp, #184	@ 0xb8
10016dbc:	940d      	str	r4, [sp, #52]	@ 0x34
10016dbe:	f7fd fda3 	bl	10014908 <memset>
10016dc2:	f1bb 0f00 	cmp.w	fp, #0
10016dc6:	d004      	beq.n	10016dd2 <_vfprintf_r+0x3a>
10016dc8:	f8db 3034 	ldr.w	r3, [fp, #52]	@ 0x34
10016dcc:	2b00      	cmp	r3, #0
10016dce:	f001 8087 	beq.w	10017ee0 <_vfprintf_r+0x1148>
10016dd2:	9b07      	ldr	r3, [sp, #28]
10016dd4:	6e5a      	ldr	r2, [r3, #100]	@ 0x64
10016dd6:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
10016dda:	07d1      	lsls	r1, r2, #31
10016ddc:	d402      	bmi.n	10016de4 <_vfprintf_r+0x4c>
10016dde:	059a      	lsls	r2, r3, #22
10016de0:	f140 86a7 	bpl.w	10017b32 <_vfprintf_r+0xd9a>
10016de4:	049f      	lsls	r7, r3, #18
10016de6:	d407      	bmi.n	10016df8 <_vfprintf_r+0x60>
10016de8:	9907      	ldr	r1, [sp, #28]
10016dea:	6e4a      	ldr	r2, [r1, #100]	@ 0x64
10016dec:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
10016df0:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
10016df4:	818b      	strh	r3, [r1, #12]
10016df6:	664a      	str	r2, [r1, #100]	@ 0x64
10016df8:	071e      	lsls	r6, r3, #28
10016dfa:	f140 80cc 	bpl.w	10016f96 <_vfprintf_r+0x1fe>
10016dfe:	9a07      	ldr	r2, [sp, #28]
10016e00:	6912      	ldr	r2, [r2, #16]
10016e02:	2a00      	cmp	r2, #0
10016e04:	f000 80c7 	beq.w	10016f96 <_vfprintf_r+0x1fe>
10016e08:	f003 021a 	and.w	r2, r3, #26
10016e0c:	2a0a      	cmp	r2, #10
10016e0e:	f000 80d1 	beq.w	10016fb4 <_vfprintf_r+0x21c>
10016e12:	ed9f 7b99 	vldr	d7, [pc, #612]	@ 10017078 <_vfprintf_r+0x2e0>
10016e16:	2300      	movs	r3, #0
10016e18:	e9cd 3333 	strd	r3, r3, [sp, #204]	@ 0xcc
10016e1c:	e9cd 331b 	strd	r3, r3, [sp, #108]	@ 0x6c
10016e20:	e9cd 331d 	strd	r3, r3, [sp, #116]	@ 0x74
10016e24:	ed8d 7b16 	vstr	d7, [sp, #88]	@ 0x58
10016e28:	aa35      	add	r2, sp, #212	@ 0xd4
10016e2a:	9313      	str	r3, [sp, #76]	@ 0x4c
10016e2c:	9232      	str	r2, [sp, #200]	@ 0xc8
10016e2e:	4690      	mov	r8, r2
10016e30:	931a      	str	r3, [sp, #104]	@ 0x68
10016e32:	930a      	str	r3, [sp, #40]	@ 0x28
10016e34:	f8cd b020 	str.w	fp, [sp, #32]
10016e38:	464d      	mov	r5, r9
10016e3a:	9f08      	ldr	r7, [sp, #32]
10016e3c:	462e      	mov	r6, r5
10016e3e:	4b90      	ldr	r3, [pc, #576]	@ (10017080 <_vfprintf_r+0x2e8>)
10016e40:	f8d3 40e4 	ldr.w	r4, [r3, #228]	@ 0xe4
10016e44:	f7fd fe1c 	bl	10014a80 <__locale_mb_cur_max>
10016e48:	4603      	mov	r3, r0
10016e4a:	a82e      	add	r0, sp, #184	@ 0xb8
10016e4c:	9000      	str	r0, [sp, #0]
10016e4e:	4632      	mov	r2, r6
10016e50:	a92a      	add	r1, sp, #168	@ 0xa8
10016e52:	4638      	mov	r0, r7
10016e54:	47a0      	blx	r4
10016e56:	2800      	cmp	r0, #0
10016e58:	f000 80cb 	beq.w	10016ff2 <_vfprintf_r+0x25a>
10016e5c:	f2c0 80c1 	blt.w	10016fe2 <_vfprintf_r+0x24a>
10016e60:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
10016e62:	2a25      	cmp	r2, #37	@ 0x25
10016e64:	4603      	mov	r3, r0
10016e66:	d001      	beq.n	10016e6c <_vfprintf_r+0xd4>
10016e68:	441e      	add	r6, r3
10016e6a:	e7e8      	b.n	10016e3e <_vfprintf_r+0xa6>
10016e6c:	1b77      	subs	r7, r6, r5
10016e6e:	4604      	mov	r4, r0
10016e70:	f040 80c2 	bne.w	10016ff8 <_vfprintf_r+0x260>
10016e74:	2300      	movs	r3, #0
10016e76:	f88d 309f 	strb.w	r3, [sp, #159]	@ 0x9f
10016e7a:	4699      	mov	r9, r3
10016e7c:	930b      	str	r3, [sp, #44]	@ 0x2c
10016e7e:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
10016e82:	7873      	ldrb	r3, [r6, #1]
10016e84:	9209      	str	r2, [sp, #36]	@ 0x24
10016e86:	1c74      	adds	r4, r6, #1
10016e88:	3401      	adds	r4, #1
10016e8a:	f1a3 0220 	sub.w	r2, r3, #32
10016e8e:	2a5a      	cmp	r2, #90	@ 0x5a
10016e90:	f200 80f8 	bhi.w	10017084 <_vfprintf_r+0x2ec>
10016e94:	e8df f012 	tbh	[pc, r2, lsl #1]
10016e98:	00f602d0 	.word	0x00f602d0
10016e9c:	02cc00f6 	.word	0x02cc00f6
10016ea0:	00f600f6 	.word	0x00f600f6
10016ea4:	006a00f6 	.word	0x006a00f6
10016ea8:	00f600f6 	.word	0x00f600f6
10016eac:	02a90286 	.word	0x02a90286
10016eb0:	029100f6 	.word	0x029100f6
10016eb4:	00f602b2 	.word	0x00f602b2
10016eb8:	005b02ae 	.word	0x005b02ae
10016ebc:	005b005b 	.word	0x005b005b
10016ec0:	005b005b 	.word	0x005b005b
10016ec4:	005b005b 	.word	0x005b005b
10016ec8:	005b005b 	.word	0x005b005b
10016ecc:	00f600f6 	.word	0x00f600f6
10016ed0:	00f600f6 	.word	0x00f600f6
10016ed4:	00f600f6 	.word	0x00f600f6
10016ed8:	017700f6 	.word	0x017700f6
10016edc:	021100f6 	.word	0x021100f6
10016ee0:	0177032a 	.word	0x0177032a
10016ee4:	01770177 	.word	0x01770177
10016ee8:	00f600f6 	.word	0x00f600f6
10016eec:	00f600f6 	.word	0x00f600f6
10016ef0:	00f60326 	.word	0x00f60326
10016ef4:	02e200f6 	.word	0x02e200f6
10016ef8:	00f600f6 	.word	0x00f600f6
10016efc:	022f00f6 	.word	0x022f00f6
10016f00:	031300f6 	.word	0x031300f6
10016f04:	00f600f6 	.word	0x00f600f6
10016f08:	00f6071f 	.word	0x00f6071f
10016f0c:	00f600f6 	.word	0x00f600f6
10016f10:	00f600f6 	.word	0x00f600f6
10016f14:	00f600f6 	.word	0x00f600f6
10016f18:	017700f6 	.word	0x017700f6
10016f1c:	021100f6 	.word	0x021100f6
10016f20:	01770261 	.word	0x01770261
10016f24:	01770177 	.word	0x01770177
10016f28:	0261029f 	.word	0x0261029f
10016f2c:	00f6020d 	.word	0x00f6020d
10016f30:	00f60295 	.word	0x00f60295
10016f34:	07470355 	.word	0x07470355
10016f38:	020d0343 	.word	0x020d0343
10016f3c:	022f00f6 	.word	0x022f00f6
10016f40:	0742007d 	.word	0x0742007d
10016f44:	00f600f6 	.word	0x00f600f6
10016f48:	00f6074b 	.word	0x00f6074b
10016f4c:	007d      	.short	0x007d
10016f4e:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
10016f52:	2100      	movs	r1, #0
10016f54:	f814 3b01 	ldrb.w	r3, [r4], #1
10016f58:	eb01 0181 	add.w	r1, r1, r1, lsl #2
10016f5c:	eb02 0141 	add.w	r1, r2, r1, lsl #1
10016f60:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
10016f64:	2a09      	cmp	r2, #9
10016f66:	d9f5      	bls.n	10016f54 <_vfprintf_r+0x1bc>
10016f68:	910b      	str	r1, [sp, #44]	@ 0x2c
10016f6a:	e78e      	b.n	10016e8a <_vfprintf_r+0xf2>
10016f6c:	9f08      	ldr	r7, [sp, #32]
10016f6e:	4638      	mov	r0, r7
10016f70:	f7fd fd8c 	bl	10014a8c <_localeconv_r>
10016f74:	6843      	ldr	r3, [r0, #4]
10016f76:	931d      	str	r3, [sp, #116]	@ 0x74
10016f78:	4618      	mov	r0, r3
10016f7a:	f7ff f8e1 	bl	10016140 <strlen>
10016f7e:	901e      	str	r0, [sp, #120]	@ 0x78
10016f80:	4606      	mov	r6, r0
10016f82:	4638      	mov	r0, r7
10016f84:	f7fd fd82 	bl	10014a8c <_localeconv_r>
10016f88:	6883      	ldr	r3, [r0, #8]
10016f8a:	931b      	str	r3, [sp, #108]	@ 0x6c
10016f8c:	2e00      	cmp	r6, #0
10016f8e:	f040 8629 	bne.w	10017be4 <_vfprintf_r+0xe4c>
10016f92:	7823      	ldrb	r3, [r4, #0]
10016f94:	e778      	b.n	10016e88 <_vfprintf_r+0xf0>
10016f96:	9d07      	ldr	r5, [sp, #28]
10016f98:	4658      	mov	r0, fp
10016f9a:	4629      	mov	r1, r5
10016f9c:	f002 fe36 	bl	10019c0c <__swsetup_r>
10016fa0:	2800      	cmp	r0, #0
10016fa2:	f041 83ac 	bne.w	100186fe <_vfprintf_r+0x1966>
10016fa6:	f9b5 300c 	ldrsh.w	r3, [r5, #12]
10016faa:	f003 021a 	and.w	r2, r3, #26
10016fae:	2a0a      	cmp	r2, #10
10016fb0:	f47f af2f 	bne.w	10016e12 <_vfprintf_r+0x7a>
10016fb4:	9907      	ldr	r1, [sp, #28]
10016fb6:	f9b1 200e 	ldrsh.w	r2, [r1, #14]
10016fba:	2a00      	cmp	r2, #0
10016fbc:	f6ff af29 	blt.w	10016e12 <_vfprintf_r+0x7a>
10016fc0:	6e4a      	ldr	r2, [r1, #100]	@ 0x64
10016fc2:	07d0      	lsls	r0, r2, #31
10016fc4:	d402      	bmi.n	10016fcc <_vfprintf_r+0x234>
10016fc6:	059a      	lsls	r2, r3, #22
10016fc8:	f141 81c5 	bpl.w	10018356 <_vfprintf_r+0x15be>
10016fcc:	9907      	ldr	r1, [sp, #28]
10016fce:	4623      	mov	r3, r4
10016fd0:	464a      	mov	r2, r9
10016fd2:	4658      	mov	r0, fp
10016fd4:	f001 fd08 	bl	100189e8 <__sbprintf>
10016fd8:	900a      	str	r0, [sp, #40]	@ 0x28
10016fda:	980a      	ldr	r0, [sp, #40]	@ 0x28
10016fdc:	b05f      	add	sp, #380	@ 0x17c
10016fde:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10016fe2:	2208      	movs	r2, #8
10016fe4:	2100      	movs	r1, #0
10016fe6:	a82e      	add	r0, sp, #184	@ 0xb8
10016fe8:	f7fd fc8e 	bl	10014908 <memset>
10016fec:	2301      	movs	r3, #1
10016fee:	441e      	add	r6, r3
10016ff0:	e725      	b.n	10016e3e <_vfprintf_r+0xa6>
10016ff2:	1b77      	subs	r7, r6, r5
10016ff4:	4604      	mov	r4, r0
10016ff6:	d011      	beq.n	1001701c <_vfprintf_r+0x284>
10016ff8:	9b34      	ldr	r3, [sp, #208]	@ 0xd0
10016ffa:	443b      	add	r3, r7
10016ffc:	9334      	str	r3, [sp, #208]	@ 0xd0
10016ffe:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10017000:	3301      	adds	r3, #1
10017002:	2b07      	cmp	r3, #7
10017004:	e9c8 5700 	strd	r5, r7, [r8]
10017008:	9333      	str	r3, [sp, #204]	@ 0xcc
1001700a:	dc13      	bgt.n	10017034 <_vfprintf_r+0x29c>
1001700c:	f108 0808 	add.w	r8, r8, #8
10017010:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10017012:	443b      	add	r3, r7
10017014:	930a      	str	r3, [sp, #40]	@ 0x28
10017016:	2c00      	cmp	r4, #0
10017018:	f47f af2c 	bne.w	10016e74 <_vfprintf_r+0xdc>
1001701c:	9b34      	ldr	r3, [sp, #208]	@ 0xd0
1001701e:	f8dd b020 	ldr.w	fp, [sp, #32]
10017022:	2b00      	cmp	r3, #0
10017024:	f041 80dc 	bne.w	100181e0 <_vfprintf_r+0x1448>
10017028:	9b07      	ldr	r3, [sp, #28]
1001702a:	2200      	movs	r2, #0
1001702c:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
10017030:	9233      	str	r2, [sp, #204]	@ 0xcc
10017032:	e012      	b.n	1001705a <_vfprintf_r+0x2c2>
10017034:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10017038:	aa32      	add	r2, sp, #200	@ 0xc8
1001703a:	f001 fd51 	bl	10018ae0 <__sprint_r>
1001703e:	b948      	cbnz	r0, 10017054 <_vfprintf_r+0x2bc>
10017040:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10017044:	e7e4      	b.n	10017010 <_vfprintf_r+0x278>
10017046:	46bb      	mov	fp, r7
10017048:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
1001704a:	b11b      	cbz	r3, 10017054 <_vfprintf_r+0x2bc>
1001704c:	990c      	ldr	r1, [sp, #48]	@ 0x30
1001704e:	4658      	mov	r0, fp
10017050:	f7ff fb18 	bl	10016684 <_free_r>
10017054:	9b07      	ldr	r3, [sp, #28]
10017056:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
1001705a:	9a07      	ldr	r2, [sp, #28]
1001705c:	6e52      	ldr	r2, [r2, #100]	@ 0x64
1001705e:	07d4      	lsls	r4, r2, #31
10017060:	f140 811d 	bpl.w	1001729e <_vfprintf_r+0x506>
10017064:	0659      	lsls	r1, r3, #25
10017066:	f101 8356 	bmi.w	10018716 <_vfprintf_r+0x197e>
1001706a:	980a      	ldr	r0, [sp, #40]	@ 0x28
1001706c:	b05f      	add	sp, #380	@ 0x17c
1001706e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10017072:	bf00      	nop
10017074:	f3af 8000 	nop.w
	...
10017080:	2000045c 	.word	0x2000045c
10017084:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10017088:	2b00      	cmp	r3, #0
1001708a:	d0c7      	beq.n	1001701c <_vfprintf_r+0x284>
1001708c:	2200      	movs	r2, #0
1001708e:	f88d 3114 	strb.w	r3, [sp, #276]	@ 0x114
10017092:	2301      	movs	r3, #1
10017094:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
10017098:	9306      	str	r3, [sp, #24]
1001709a:	920c      	str	r2, [sp, #48]	@ 0x30
1001709c:	469b      	mov	fp, r3
1001709e:	9209      	str	r2, [sp, #36]	@ 0x24
100170a0:	9214      	str	r2, [sp, #80]	@ 0x50
100170a2:	9210      	str	r2, [sp, #64]	@ 0x40
100170a4:	9212      	str	r2, [sp, #72]	@ 0x48
100170a6:	ad45      	add	r5, sp, #276	@ 0x114
100170a8:	f019 0302 	ands.w	r3, r9, #2
100170ac:	d002      	beq.n	100170b4 <_vfprintf_r+0x31c>
100170ae:	9906      	ldr	r1, [sp, #24]
100170b0:	3102      	adds	r1, #2
100170b2:	9106      	str	r1, [sp, #24]
100170b4:	f019 0784 	ands.w	r7, r9, #132	@ 0x84
100170b8:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
100170ba:	d105      	bne.n	100170c8 <_vfprintf_r+0x330>
100170bc:	990b      	ldr	r1, [sp, #44]	@ 0x2c
100170be:	9806      	ldr	r0, [sp, #24]
100170c0:	1a0e      	subs	r6, r1, r0
100170c2:	2e00      	cmp	r6, #0
100170c4:	f300 80aa 	bgt.w	1001721c <_vfprintf_r+0x484>
100170c8:	b182      	cbz	r2, 100170ec <_vfprintf_r+0x354>
100170ca:	2201      	movs	r2, #1
100170cc:	f8c8 2004 	str.w	r2, [r8, #4]
100170d0:	9a33      	ldr	r2, [sp, #204]	@ 0xcc
100170d2:	3201      	adds	r2, #1
100170d4:	3401      	adds	r4, #1
100170d6:	f10d 019f 	add.w	r1, sp, #159	@ 0x9f
100170da:	2a07      	cmp	r2, #7
100170dc:	9434      	str	r4, [sp, #208]	@ 0xd0
100170de:	9233      	str	r2, [sp, #204]	@ 0xcc
100170e0:	f8c8 1000 	str.w	r1, [r8]
100170e4:	f300 83e3 	bgt.w	100178ae <_vfprintf_r+0xb16>
100170e8:	f108 0808 	add.w	r8, r8, #8
100170ec:	b183      	cbz	r3, 10017110 <_vfprintf_r+0x378>
100170ee:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
100170f0:	aa28      	add	r2, sp, #160	@ 0xa0
100170f2:	3301      	adds	r3, #1
100170f4:	3402      	adds	r4, #2
100170f6:	f8c8 2000 	str.w	r2, [r8]
100170fa:	2b07      	cmp	r3, #7
100170fc:	f04f 0202 	mov.w	r2, #2
10017100:	9434      	str	r4, [sp, #208]	@ 0xd0
10017102:	9333      	str	r3, [sp, #204]	@ 0xcc
10017104:	f8c8 2004 	str.w	r2, [r8, #4]
10017108:	f300 83df 	bgt.w	100178ca <_vfprintf_r+0xb32>
1001710c:	f108 0808 	add.w	r8, r8, #8
10017110:	2f80      	cmp	r7, #128	@ 0x80
10017112:	f000 82c0 	beq.w	10017696 <_vfprintf_r+0x8fe>
10017116:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10017118:	eba3 060b 	sub.w	r6, r3, fp
1001711c:	2e00      	cmp	r6, #0
1001711e:	f300 82ff 	bgt.w	10017720 <_vfprintf_r+0x988>
10017122:	f419 7f80 	tst.w	r9, #256	@ 0x100
10017126:	f040 821b 	bne.w	10017560 <_vfprintf_r+0x7c8>
1001712a:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001712c:	f8c8 5000 	str.w	r5, [r8]
10017130:	3301      	adds	r3, #1
10017132:	445c      	add	r4, fp
10017134:	2b07      	cmp	r3, #7
10017136:	f8c8 b004 	str.w	fp, [r8, #4]
1001713a:	9434      	str	r4, [sp, #208]	@ 0xd0
1001713c:	9333      	str	r3, [sp, #204]	@ 0xcc
1001713e:	f300 834f 	bgt.w	100177e0 <_vfprintf_r+0xa48>
10017142:	f108 0808 	add.w	r8, r8, #8
10017146:	f019 0f04 	tst.w	r9, #4
1001714a:	d005      	beq.n	10017158 <_vfprintf_r+0x3c0>
1001714c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
1001714e:	9a06      	ldr	r2, [sp, #24]
10017150:	1a9d      	subs	r5, r3, r2
10017152:	2d00      	cmp	r5, #0
10017154:	f300 83c5 	bgt.w	100178e2 <_vfprintf_r+0xb4a>
10017158:	e9dd 320a 	ldrd	r3, r2, [sp, #40]	@ 0x28
1001715c:	9906      	ldr	r1, [sp, #24]
1001715e:	428a      	cmp	r2, r1
10017160:	bfac      	ite	ge
10017162:	189b      	addge	r3, r3, r2
10017164:	185b      	addlt	r3, r3, r1
10017166:	930a      	str	r3, [sp, #40]	@ 0x28
10017168:	2c00      	cmp	r4, #0
1001716a:	f040 8311 	bne.w	10017790 <_vfprintf_r+0x9f8>
1001716e:	2300      	movs	r3, #0
10017170:	9333      	str	r3, [sp, #204]	@ 0xcc
10017172:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
10017174:	b11b      	cbz	r3, 1001717e <_vfprintf_r+0x3e6>
10017176:	990c      	ldr	r1, [sp, #48]	@ 0x30
10017178:	9808      	ldr	r0, [sp, #32]
1001717a:	f7ff fa83 	bl	10016684 <_free_r>
1001717e:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10017182:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
10017184:	e659      	b.n	10016e3a <_vfprintf_r+0xa2>
10017186:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
1001718a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
1001718c:	3307      	adds	r3, #7
1001718e:	f023 0307 	bic.w	r3, r3, #7
10017192:	ecb3 7b02 	vldmia	r3!, {d7}
10017196:	ec57 6b17 	vmov	r6, r7, d7
1001719a:	930d      	str	r3, [sp, #52]	@ 0x34
1001719c:	f027 4300 	bic.w	r3, r7, #2147483648	@ 0x80000000
100171a0:	9323      	str	r3, [sp, #140]	@ 0x8c
100171a2:	ed8d 7a22 	vstr	s14, [sp, #136]	@ 0x88
100171a6:	e9dd ab22 	ldrd	sl, fp, [sp, #136]	@ 0x88
100171aa:	4ba8      	ldr	r3, [pc, #672]	@ (1001744c <_vfprintf_r+0x6b4>)
100171ac:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
100171b0:	4650      	mov	r0, sl
100171b2:	4659      	mov	r1, fp
100171b4:	ed8d 7b16 	vstr	d7, [sp, #88]	@ 0x58
100171b8:	f004 f814 	bl	1001b1e4 <__aeabi_dcmpun>
100171bc:	2800      	cmp	r0, #0
100171be:	f040 852f 	bne.w	10017c20 <_vfprintf_r+0xe88>
100171c2:	4ba2      	ldr	r3, [pc, #648]	@ (1001744c <_vfprintf_r+0x6b4>)
100171c4:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
100171c8:	4650      	mov	r0, sl
100171ca:	4659      	mov	r1, fp
100171cc:	f003 ffec 	bl	1001b1a8 <__aeabi_dcmple>
100171d0:	2800      	cmp	r0, #0
100171d2:	f040 8525 	bne.w	10017c20 <_vfprintf_r+0xe88>
100171d6:	2200      	movs	r2, #0
100171d8:	2300      	movs	r3, #0
100171da:	4630      	mov	r0, r6
100171dc:	4639      	mov	r1, r7
100171de:	f003 ffd9 	bl	1001b194 <__aeabi_dcmplt>
100171e2:	2800      	cmp	r0, #0
100171e4:	f041 810c 	bne.w	10018400 <_vfprintf_r+0x1668>
100171e8:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
100171ec:	4d98      	ldr	r5, [pc, #608]	@ (10017450 <_vfprintf_r+0x6b8>)
100171ee:	4b99      	ldr	r3, [pc, #612]	@ (10017454 <_vfprintf_r+0x6bc>)
100171f0:	f029 0980 	bic.w	r9, r9, #128	@ 0x80
100171f4:	990e      	ldr	r1, [sp, #56]	@ 0x38
100171f6:	2947      	cmp	r1, #71	@ 0x47
100171f8:	bfc8      	it	gt
100171fa:	461d      	movgt	r5, r3
100171fc:	2300      	movs	r3, #0
100171fe:	2103      	movs	r1, #3
10017200:	930c      	str	r3, [sp, #48]	@ 0x30
10017202:	9106      	str	r1, [sp, #24]
10017204:	468b      	mov	fp, r1
10017206:	9309      	str	r3, [sp, #36]	@ 0x24
10017208:	9314      	str	r3, [sp, #80]	@ 0x50
1001720a:	9310      	str	r3, [sp, #64]	@ 0x40
1001720c:	9312      	str	r3, [sp, #72]	@ 0x48
1001720e:	2a00      	cmp	r2, #0
10017210:	f43f af4a 	beq.w	100170a8 <_vfprintf_r+0x310>
10017214:	9b06      	ldr	r3, [sp, #24]
10017216:	3301      	adds	r3, #1
10017218:	9306      	str	r3, [sp, #24]
1001721a:	e745      	b.n	100170a8 <_vfprintf_r+0x310>
1001721c:	2e10      	cmp	r6, #16
1001721e:	9a33      	ldr	r2, [sp, #204]	@ 0xcc
10017220:	f341 823a 	ble.w	10018698 <_vfprintf_r+0x1900>
10017224:	488c      	ldr	r0, [pc, #560]	@ (10017458 <_vfprintf_r+0x6c0>)
10017226:	9521      	str	r5, [sp, #132]	@ 0x84
10017228:	e9cd 371f 	strd	r3, r7, [sp, #124]	@ 0x7c
1001722c:	4621      	mov	r1, r4
1001722e:	9d07      	ldr	r5, [sp, #28]
10017230:	9c08      	ldr	r4, [sp, #32]
10017232:	9015      	str	r0, [sp, #84]	@ 0x54
10017234:	f04f 0a10 	mov.w	sl, #16
10017238:	4607      	mov	r7, r0
1001723a:	e004      	b.n	10017246 <_vfprintf_r+0x4ae>
1001723c:	3e10      	subs	r6, #16
1001723e:	2e10      	cmp	r6, #16
10017240:	f108 0808 	add.w	r8, r8, #8
10017244:	dd16      	ble.n	10017274 <_vfprintf_r+0x4dc>
10017246:	3201      	adds	r2, #1
10017248:	3110      	adds	r1, #16
1001724a:	2a07      	cmp	r2, #7
1001724c:	e9c8 7a00 	strd	r7, sl, [r8]
10017250:	e9cd 2133 	strd	r2, r1, [sp, #204]	@ 0xcc
10017254:	ddf2      	ble.n	1001723c <_vfprintf_r+0x4a4>
10017256:	aa32      	add	r2, sp, #200	@ 0xc8
10017258:	4629      	mov	r1, r5
1001725a:	4620      	mov	r0, r4
1001725c:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10017260:	f001 fc3e 	bl	10018ae0 <__sprint_r>
10017264:	2800      	cmp	r0, #0
10017266:	f040 8635 	bne.w	10017ed4 <_vfprintf_r+0x113c>
1001726a:	3e10      	subs	r6, #16
1001726c:	2e10      	cmp	r6, #16
1001726e:	e9dd 2133 	ldrd	r2, r1, [sp, #204]	@ 0xcc
10017272:	dce8      	bgt.n	10017246 <_vfprintf_r+0x4ae>
10017274:	e9dd 371f 	ldrd	r3, r7, [sp, #124]	@ 0x7c
10017278:	9d21      	ldr	r5, [sp, #132]	@ 0x84
1001727a:	460c      	mov	r4, r1
1001727c:	3201      	adds	r2, #1
1001727e:	9915      	ldr	r1, [sp, #84]	@ 0x54
10017280:	f8c8 1000 	str.w	r1, [r8]
10017284:	4434      	add	r4, r6
10017286:	2a07      	cmp	r2, #7
10017288:	e9cd 2433 	strd	r2, r4, [sp, #204]	@ 0xcc
1001728c:	f8c8 6004 	str.w	r6, [r8, #4]
10017290:	f300 860f 	bgt.w	10017eb2 <_vfprintf_r+0x111a>
10017294:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
10017298:	f108 0808 	add.w	r8, r8, #8
1001729c:	e714      	b.n	100170c8 <_vfprintf_r+0x330>
1001729e:	0598      	lsls	r0, r3, #22
100172a0:	f53f aee0 	bmi.w	10017064 <_vfprintf_r+0x2cc>
100172a4:	9c07      	ldr	r4, [sp, #28]
100172a6:	6da0      	ldr	r0, [r4, #88]	@ 0x58
100172a8:	f7fd fbe8 	bl	10014a7c <__retarget_lock_release_recursive>
100172ac:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
100172b0:	e6d8      	b.n	10017064 <_vfprintf_r+0x2cc>
100172b2:	7823      	ldrb	r3, [r4, #0]
100172b4:	f049 0920 	orr.w	r9, r9, #32
100172b8:	e5e6      	b.n	10016e88 <_vfprintf_r+0xf0>
100172ba:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
100172bc:	2b43      	cmp	r3, #67	@ 0x43
100172be:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
100172c2:	f102 0404 	add.w	r4, r2, #4
100172c6:	f000 8561 	beq.w	10017d8c <_vfprintf_r+0xff4>
100172ca:	f019 0f10 	tst.w	r9, #16
100172ce:	f040 855d 	bne.w	10017d8c <_vfprintf_r+0xff4>
100172d2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
100172d4:	681b      	ldr	r3, [r3, #0]
100172d6:	f88d 3114 	strb.w	r3, [sp, #276]	@ 0x114
100172da:	2301      	movs	r3, #1
100172dc:	9306      	str	r3, [sp, #24]
100172de:	469b      	mov	fp, r3
100172e0:	ad45      	add	r5, sp, #276	@ 0x114
100172e2:	2200      	movs	r2, #0
100172e4:	940d      	str	r4, [sp, #52]	@ 0x34
100172e6:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
100172ea:	920c      	str	r2, [sp, #48]	@ 0x30
100172ec:	9209      	str	r2, [sp, #36]	@ 0x24
100172ee:	9214      	str	r2, [sp, #80]	@ 0x50
100172f0:	9210      	str	r2, [sp, #64]	@ 0x40
100172f2:	9212      	str	r2, [sp, #72]	@ 0x48
100172f4:	e6d8      	b.n	100170a8 <_vfprintf_r+0x310>
100172f6:	9e0d      	ldr	r6, [sp, #52]	@ 0x34
100172f8:	f856 5b04 	ldr.w	r5, [r6], #4
100172fc:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10017300:	2300      	movs	r3, #0
10017302:	f88d 309f 	strb.w	r3, [sp, #159]	@ 0x9f
10017306:	2d00      	cmp	r5, #0
10017308:	f000 852f 	beq.w	10017d6a <_vfprintf_r+0xfd2>
1001730c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001730e:	2b53      	cmp	r3, #83	@ 0x53
10017310:	f000 8600 	beq.w	10017f14 <_vfprintf_r+0x117c>
10017314:	f019 0310 	ands.w	r3, r9, #16
10017318:	9312      	str	r3, [sp, #72]	@ 0x48
1001731a:	f040 85fb 	bne.w	10017f14 <_vfprintf_r+0x117c>
1001731e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10017320:	1c5a      	adds	r2, r3, #1
10017322:	f000 8767 	beq.w	100181f4 <_vfprintf_r+0x145c>
10017326:	9912      	ldr	r1, [sp, #72]	@ 0x48
10017328:	461a      	mov	r2, r3
1001732a:	4628      	mov	r0, r5
1001732c:	f7fe fe08 	bl	10015f40 <memchr>
10017330:	900c      	str	r0, [sp, #48]	@ 0x30
10017332:	2800      	cmp	r0, #0
10017334:	f001 82c2 	beq.w	100188bc <_vfprintf_r+0x1b24>
10017338:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
1001733a:	960d      	str	r6, [sp, #52]	@ 0x34
1001733c:	eba3 0b05 	sub.w	fp, r3, r5
10017340:	9b12      	ldr	r3, [sp, #72]	@ 0x48
10017342:	9309      	str	r3, [sp, #36]	@ 0x24
10017344:	ea2b 71eb 	bic.w	r1, fp, fp, asr #31
10017348:	9314      	str	r3, [sp, #80]	@ 0x50
1001734a:	9310      	str	r3, [sp, #64]	@ 0x40
1001734c:	930c      	str	r3, [sp, #48]	@ 0x30
1001734e:	2373      	movs	r3, #115	@ 0x73
10017350:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
10017354:	9106      	str	r1, [sp, #24]
10017356:	930e      	str	r3, [sp, #56]	@ 0x38
10017358:	e759      	b.n	1001720e <_vfprintf_r+0x476>
1001735a:	f019 0f20 	tst.w	r9, #32
1001735e:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10017362:	f000 80cb 	beq.w	100174fc <_vfprintf_r+0x764>
10017366:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10017368:	3307      	adds	r3, #7
1001736a:	f023 0307 	bic.w	r3, r3, #7
1001736e:	461a      	mov	r2, r3
10017370:	6859      	ldr	r1, [r3, #4]
10017372:	f852 3b08 	ldr.w	r3, [r2], #8
10017376:	920d      	str	r2, [sp, #52]	@ 0x34
10017378:	460a      	mov	r2, r1
1001737a:	2900      	cmp	r1, #0
1001737c:	f2c0 8424 	blt.w	10017bc8 <_vfprintf_r+0xe30>
10017380:	9909      	ldr	r1, [sp, #36]	@ 0x24
10017382:	3101      	adds	r1, #1
10017384:	f000 8284 	beq.w	10017890 <_vfprintf_r+0xaf8>
10017388:	ea53 0102 	orrs.w	r1, r3, r2
1001738c:	f029 0480 	bic.w	r4, r9, #128	@ 0x80
10017390:	f040 827f 	bne.w	10017892 <_vfprintf_r+0xafa>
10017394:	9a09      	ldr	r2, [sp, #36]	@ 0x24
10017396:	2a00      	cmp	r2, #0
10017398:	f040 8280 	bne.w	1001789c <_vfprintf_r+0xb04>
1001739c:	46a1      	mov	r9, r4
1001739e:	4693      	mov	fp, r2
100173a0:	ad5e      	add	r5, sp, #376	@ 0x178
100173a2:	e14f      	b.n	10017644 <_vfprintf_r+0x8ac>
100173a4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
100173a6:	f853 2b04 	ldr.w	r2, [r3], #4
100173aa:	920b      	str	r2, [sp, #44]	@ 0x2c
100173ac:	2a00      	cmp	r2, #0
100173ae:	f280 83cd 	bge.w	10017b4c <_vfprintf_r+0xdb4>
100173b2:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
100173b4:	930d      	str	r3, [sp, #52]	@ 0x34
100173b6:	4252      	negs	r2, r2
100173b8:	920b      	str	r2, [sp, #44]	@ 0x2c
100173ba:	7823      	ldrb	r3, [r4, #0]
100173bc:	f049 0904 	orr.w	r9, r9, #4
100173c0:	e562      	b.n	10016e88 <_vfprintf_r+0xf0>
100173c2:	7823      	ldrb	r3, [r4, #0]
100173c4:	2b6c      	cmp	r3, #108	@ 0x6c
100173c6:	bf03      	ittte	eq
100173c8:	7863      	ldrbeq	r3, [r4, #1]
100173ca:	f049 0920 	orreq.w	r9, r9, #32
100173ce:	3401      	addeq	r4, #1
100173d0:	f049 0910 	orrne.w	r9, r9, #16
100173d4:	e558      	b.n	10016e88 <_vfprintf_r+0xf0>
100173d6:	7823      	ldrb	r3, [r4, #0]
100173d8:	2b68      	cmp	r3, #104	@ 0x68
100173da:	bf03      	ittte	eq
100173dc:	7863      	ldrbeq	r3, [r4, #1]
100173de:	f449 7900 	orreq.w	r9, r9, #512	@ 0x200
100173e2:	3401      	addeq	r4, #1
100173e4:	f049 0940 	orrne.w	r9, r9, #64	@ 0x40
100173e8:	e54e      	b.n	10016e88 <_vfprintf_r+0xf0>
100173ea:	232b      	movs	r3, #43	@ 0x2b
100173ec:	f88d 309f 	strb.w	r3, [sp, #159]	@ 0x9f
100173f0:	7823      	ldrb	r3, [r4, #0]
100173f2:	e549      	b.n	10016e88 <_vfprintf_r+0xf0>
100173f4:	7823      	ldrb	r3, [r4, #0]
100173f6:	f049 0980 	orr.w	r9, r9, #128	@ 0x80
100173fa:	e545      	b.n	10016e88 <_vfprintf_r+0xf0>
100173fc:	4621      	mov	r1, r4
100173fe:	f811 3b01 	ldrb.w	r3, [r1], #1
10017402:	2b2a      	cmp	r3, #42	@ 0x2a
10017404:	f001 82d7 	beq.w	100189b6 <_vfprintf_r+0x1c1e>
10017408:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
1001740c:	2a09      	cmp	r2, #9
1001740e:	460c      	mov	r4, r1
10017410:	bf98      	it	ls
10017412:	2100      	movls	r1, #0
10017414:	f201 816f 	bhi.w	100186f6 <_vfprintf_r+0x195e>
10017418:	f814 3b01 	ldrb.w	r3, [r4], #1
1001741c:	eb01 0181 	add.w	r1, r1, r1, lsl #2
10017420:	eb02 0141 	add.w	r1, r2, r1, lsl #1
10017424:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
10017428:	2a09      	cmp	r2, #9
1001742a:	d9f5      	bls.n	10017418 <_vfprintf_r+0x680>
1001742c:	9109      	str	r1, [sp, #36]	@ 0x24
1001742e:	e52c      	b.n	10016e8a <_vfprintf_r+0xf2>
10017430:	7823      	ldrb	r3, [r4, #0]
10017432:	f049 0901 	orr.w	r9, r9, #1
10017436:	e527      	b.n	10016e88 <_vfprintf_r+0xf0>
10017438:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
1001743c:	7823      	ldrb	r3, [r4, #0]
1001743e:	2a00      	cmp	r2, #0
10017440:	f47f ad22 	bne.w	10016e88 <_vfprintf_r+0xf0>
10017444:	2220      	movs	r2, #32
10017446:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
1001744a:	e51d      	b.n	10016e88 <_vfprintf_r+0xf0>
1001744c:	7fefffff 	.word	0x7fefffff
10017450:	1001d970 	.word	0x1001d970
10017454:	1001d974 	.word	0x1001d974
10017458:	1001dbb0 	.word	0x1001dbb0
1001745c:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10017460:	f049 0910 	orr.w	r9, r9, #16
10017464:	f019 0220 	ands.w	r2, r9, #32
10017468:	f000 8354 	beq.w	10017b14 <_vfprintf_r+0xd7c>
1001746c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
1001746e:	3307      	adds	r3, #7
10017470:	f023 0307 	bic.w	r3, r3, #7
10017474:	4619      	mov	r1, r3
10017476:	685a      	ldr	r2, [r3, #4]
10017478:	f851 3b08 	ldr.w	r3, [r1], #8
1001747c:	910d      	str	r1, [sp, #52]	@ 0x34
1001747e:	f429 6480 	bic.w	r4, r9, #1024	@ 0x400
10017482:	2100      	movs	r1, #0
10017484:	2000      	movs	r0, #0
10017486:	9d09      	ldr	r5, [sp, #36]	@ 0x24
10017488:	f88d 009f 	strb.w	r0, [sp, #159]	@ 0x9f
1001748c:	1c6f      	adds	r7, r5, #1
1001748e:	f000 80c2 	beq.w	10017616 <_vfprintf_r+0x87e>
10017492:	ea53 0002 	orrs.w	r0, r3, r2
10017496:	f024 0980 	bic.w	r9, r4, #128	@ 0x80
1001749a:	f040 80bb 	bne.w	10017614 <_vfprintf_r+0x87c>
1001749e:	2d00      	cmp	r5, #0
100174a0:	f040 8523 	bne.w	10017eea <_vfprintf_r+0x1152>
100174a4:	2900      	cmp	r1, #0
100174a6:	f040 8496 	bne.w	10017dd6 <_vfprintf_r+0x103e>
100174aa:	f014 0b01 	ands.w	fp, r4, #1
100174ae:	f000 8351 	beq.w	10017b54 <_vfprintf_r+0xdbc>
100174b2:	2330      	movs	r3, #48	@ 0x30
100174b4:	f88d 3177 	strb.w	r3, [sp, #375]	@ 0x177
100174b8:	f20d 1577 	addw	r5, sp, #375	@ 0x177
100174bc:	e0c2      	b.n	10017644 <_vfprintf_r+0x8ac>
100174be:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
100174c2:	f049 0410 	orr.w	r4, r9, #16
100174c6:	f014 0220 	ands.w	r2, r4, #32
100174ca:	f000 8315 	beq.w	10017af8 <_vfprintf_r+0xd60>
100174ce:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
100174d0:	3307      	adds	r3, #7
100174d2:	f023 0307 	bic.w	r3, r3, #7
100174d6:	4619      	mov	r1, r3
100174d8:	685a      	ldr	r2, [r3, #4]
100174da:	f851 3b08 	ldr.w	r3, [r1], #8
100174de:	910d      	str	r1, [sp, #52]	@ 0x34
100174e0:	2101      	movs	r1, #1
100174e2:	e7cf      	b.n	10017484 <_vfprintf_r+0x6ec>
100174e4:	7823      	ldrb	r3, [r4, #0]
100174e6:	f049 0908 	orr.w	r9, r9, #8
100174ea:	e4cd      	b.n	10016e88 <_vfprintf_r+0xf0>
100174ec:	f049 0910 	orr.w	r9, r9, #16
100174f0:	f019 0f20 	tst.w	r9, #32
100174f4:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
100174f8:	f47f af35 	bne.w	10017366 <_vfprintf_r+0x5ce>
100174fc:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
100174fe:	f019 0f10 	tst.w	r9, #16
10017502:	f852 3b04 	ldr.w	r3, [r2], #4
10017506:	920d      	str	r2, [sp, #52]	@ 0x34
10017508:	f040 8359 	bne.w	10017bbe <_vfprintf_r+0xe26>
1001750c:	f019 0f40 	tst.w	r9, #64	@ 0x40
10017510:	f000 8351 	beq.w	10017bb6 <_vfprintf_r+0xe1e>
10017514:	f343 32c0 	sbfx	r2, r3, #15, #1
10017518:	4611      	mov	r1, r2
1001751a:	b21b      	sxth	r3, r3
1001751c:	e72d      	b.n	1001737a <_vfprintf_r+0x5e2>
1001751e:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
10017520:	940f      	str	r4, [sp, #60]	@ 0x3c
10017522:	f852 3b04 	ldr.w	r3, [r2], #4
10017526:	920d      	str	r2, [sp, #52]	@ 0x34
10017528:	f647 0230 	movw	r2, #30768	@ 0x7830
1001752c:	f8ad 20a0 	strh.w	r2, [sp, #160]	@ 0xa0
10017530:	2078      	movs	r0, #120	@ 0x78
10017532:	4ab1      	ldr	r2, [pc, #708]	@ (100177f8 <_vfprintf_r+0xa60>)
10017534:	921a      	str	r2, [sp, #104]	@ 0x68
10017536:	f049 0402 	orr.w	r4, r9, #2
1001753a:	2200      	movs	r2, #0
1001753c:	2102      	movs	r1, #2
1001753e:	900e      	str	r0, [sp, #56]	@ 0x38
10017540:	e7a0      	b.n	10017484 <_vfprintf_r+0x6ec>
10017542:	f019 0f20 	tst.w	r9, #32
10017546:	940f      	str	r4, [sp, #60]	@ 0x3c
10017548:	f000 8359 	beq.w	10017bfe <_vfprintf_r+0xe66>
1001754c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
1001754e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
10017550:	681b      	ldr	r3, [r3, #0]
10017552:	601a      	str	r2, [r3, #0]
10017554:	17d2      	asrs	r2, r2, #31
10017556:	605a      	str	r2, [r3, #4]
10017558:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
1001755a:	3304      	adds	r3, #4
1001755c:	930d      	str	r3, [sp, #52]	@ 0x34
1001755e:	e610      	b.n	10017182 <_vfprintf_r+0x3ea>
10017560:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10017562:	2b65      	cmp	r3, #101	@ 0x65
10017564:	f340 814e 	ble.w	10017804 <_vfprintf_r+0xa6c>
10017568:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	@ 0x58
1001756c:	2200      	movs	r2, #0
1001756e:	2300      	movs	r3, #0
10017570:	f003 fe06 	bl	1001b180 <__aeabi_dcmpeq>
10017574:	2800      	cmp	r0, #0
10017576:	f000 81ee 	beq.w	10017956 <_vfprintf_r+0xbbe>
1001757a:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001757c:	4a9f      	ldr	r2, [pc, #636]	@ (100177fc <_vfprintf_r+0xa64>)
1001757e:	f8c8 2000 	str.w	r2, [r8]
10017582:	3301      	adds	r3, #1
10017584:	3401      	adds	r4, #1
10017586:	2201      	movs	r2, #1
10017588:	2b07      	cmp	r3, #7
1001758a:	9434      	str	r4, [sp, #208]	@ 0xd0
1001758c:	9333      	str	r3, [sp, #204]	@ 0xcc
1001758e:	f8c8 2004 	str.w	r2, [r8, #4]
10017592:	f300 84af 	bgt.w	10017ef4 <_vfprintf_r+0x115c>
10017596:	f108 0808 	add.w	r8, r8, #8
1001759a:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
1001759c:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
1001759e:	4293      	cmp	r3, r2
100175a0:	f280 82cf 	bge.w	10017b42 <_vfprintf_r+0xdaa>
100175a4:	9b18      	ldr	r3, [sp, #96]	@ 0x60
100175a6:	9a19      	ldr	r2, [sp, #100]	@ 0x64
100175a8:	441c      	add	r4, r3
100175aa:	e9c8 2300 	strd	r2, r3, [r8]
100175ae:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
100175b0:	9434      	str	r4, [sp, #208]	@ 0xd0
100175b2:	3301      	adds	r3, #1
100175b4:	2b07      	cmp	r3, #7
100175b6:	9333      	str	r3, [sp, #204]	@ 0xcc
100175b8:	f300 83cb 	bgt.w	10017d52 <_vfprintf_r+0xfba>
100175bc:	f108 0808 	add.w	r8, r8, #8
100175c0:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
100175c2:	1e5d      	subs	r5, r3, #1
100175c4:	2d00      	cmp	r5, #0
100175c6:	f77f adbe 	ble.w	10017146 <_vfprintf_r+0x3ae>
100175ca:	2d10      	cmp	r5, #16
100175cc:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
100175ce:	f340 84f9 	ble.w	10017fc4 <_vfprintf_r+0x122c>
100175d2:	4f8b      	ldr	r7, [pc, #556]	@ (10017800 <_vfprintf_r+0xa68>)
100175d4:	9715      	str	r7, [sp, #84]	@ 0x54
100175d6:	e9dd ab07 	ldrd	sl, fp, [sp, #28]
100175da:	2610      	movs	r6, #16
100175dc:	e005      	b.n	100175ea <_vfprintf_r+0x852>
100175de:	f108 0808 	add.w	r8, r8, #8
100175e2:	3d10      	subs	r5, #16
100175e4:	2d10      	cmp	r5, #16
100175e6:	f340 84ef 	ble.w	10017fc8 <_vfprintf_r+0x1230>
100175ea:	3301      	adds	r3, #1
100175ec:	3410      	adds	r4, #16
100175ee:	2b07      	cmp	r3, #7
100175f0:	e9c8 7600 	strd	r7, r6, [r8]
100175f4:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
100175f8:	ddf1      	ble.n	100175de <_vfprintf_r+0x846>
100175fa:	aa32      	add	r2, sp, #200	@ 0xc8
100175fc:	4651      	mov	r1, sl
100175fe:	4658      	mov	r0, fp
10017600:	f001 fa6e 	bl	10018ae0 <__sprint_r>
10017604:	2800      	cmp	r0, #0
10017606:	f47f ad1f 	bne.w	10017048 <_vfprintf_r+0x2b0>
1001760a:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
1001760e:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10017612:	e7e6      	b.n	100175e2 <_vfprintf_r+0x84a>
10017614:	464c      	mov	r4, r9
10017616:	2901      	cmp	r1, #1
10017618:	f000 813b 	beq.w	10017892 <_vfprintf_r+0xafa>
1001761c:	2902      	cmp	r1, #2
1001761e:	ad5e      	add	r5, sp, #376	@ 0x178
10017620:	d11e      	bne.n	10017660 <_vfprintf_r+0x8c8>
10017622:	981a      	ldr	r0, [sp, #104]	@ 0x68
10017624:	f003 010f 	and.w	r1, r3, #15
10017628:	091b      	lsrs	r3, r3, #4
1001762a:	5c41      	ldrb	r1, [r0, r1]
1001762c:	f805 1d01 	strb.w	r1, [r5, #-1]!
10017630:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
10017634:	0912      	lsrs	r2, r2, #4
10017636:	ea53 0102 	orrs.w	r1, r3, r2
1001763a:	d1f3      	bne.n	10017624 <_vfprintf_r+0x88c>
1001763c:	ab5e      	add	r3, sp, #376	@ 0x178
1001763e:	46a1      	mov	r9, r4
10017640:	eba3 0b05 	sub.w	fp, r3, r5
10017644:	9909      	ldr	r1, [sp, #36]	@ 0x24
10017646:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
1001764a:	4559      	cmp	r1, fp
1001764c:	f04f 0300 	mov.w	r3, #0
10017650:	bfb8      	it	lt
10017652:	4659      	movlt	r1, fp
10017654:	930c      	str	r3, [sp, #48]	@ 0x30
10017656:	9106      	str	r1, [sp, #24]
10017658:	9314      	str	r3, [sp, #80]	@ 0x50
1001765a:	9310      	str	r3, [sp, #64]	@ 0x40
1001765c:	9312      	str	r3, [sp, #72]	@ 0x48
1001765e:	e5d6      	b.n	1001720e <_vfprintf_r+0x476>
10017660:	f003 0107 	and.w	r1, r3, #7
10017664:	08db      	lsrs	r3, r3, #3
10017666:	ea43 7342 	orr.w	r3, r3, r2, lsl #29
1001766a:	08d2      	lsrs	r2, r2, #3
1001766c:	3130      	adds	r1, #48	@ 0x30
1001766e:	ea53 0602 	orrs.w	r6, r3, r2
10017672:	4628      	mov	r0, r5
10017674:	f805 1d01 	strb.w	r1, [r5, #-1]!
10017678:	d1f2      	bne.n	10017660 <_vfprintf_r+0x8c8>
1001767a:	07e6      	lsls	r6, r4, #31
1001767c:	d5de      	bpl.n	1001763c <_vfprintf_r+0x8a4>
1001767e:	2930      	cmp	r1, #48	@ 0x30
10017680:	d0dc      	beq.n	1001763c <_vfprintf_r+0x8a4>
10017682:	2330      	movs	r3, #48	@ 0x30
10017684:	3802      	subs	r0, #2
10017686:	f805 3c01 	strb.w	r3, [r5, #-1]
1001768a:	ab5e      	add	r3, sp, #376	@ 0x178
1001768c:	46a1      	mov	r9, r4
1001768e:	eba3 0b00 	sub.w	fp, r3, r0
10017692:	4605      	mov	r5, r0
10017694:	e7d6      	b.n	10017644 <_vfprintf_r+0x8ac>
10017696:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
10017698:	9a06      	ldr	r2, [sp, #24]
1001769a:	1a9e      	subs	r6, r3, r2
1001769c:	2e00      	cmp	r6, #0
1001769e:	f77f ad3a 	ble.w	10017116 <_vfprintf_r+0x37e>
100176a2:	2e10      	cmp	r6, #16
100176a4:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
100176a6:	f341 80ab 	ble.w	10018800 <_vfprintf_r+0x1a68>
100176aa:	4855      	ldr	r0, [pc, #340]	@ (10017800 <_vfprintf_r+0xa68>)
100176ac:	f8dd a020 	ldr.w	sl, [sp, #32]
100176b0:	9015      	str	r0, [sp, #84]	@ 0x54
100176b2:	4621      	mov	r1, r4
100176b4:	2710      	movs	r7, #16
100176b6:	461a      	mov	r2, r3
100176b8:	4604      	mov	r4, r0
100176ba:	e004      	b.n	100176c6 <_vfprintf_r+0x92e>
100176bc:	3e10      	subs	r6, #16
100176be:	2e10      	cmp	r6, #16
100176c0:	f108 0808 	add.w	r8, r8, #8
100176c4:	dd16      	ble.n	100176f4 <_vfprintf_r+0x95c>
100176c6:	3201      	adds	r2, #1
100176c8:	3110      	adds	r1, #16
100176ca:	2a07      	cmp	r2, #7
100176cc:	e9c8 4700 	strd	r4, r7, [r8]
100176d0:	e9cd 2133 	strd	r2, r1, [sp, #204]	@ 0xcc
100176d4:	ddf2      	ble.n	100176bc <_vfprintf_r+0x924>
100176d6:	9907      	ldr	r1, [sp, #28]
100176d8:	aa32      	add	r2, sp, #200	@ 0xc8
100176da:	4650      	mov	r0, sl
100176dc:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
100176e0:	f001 f9fe 	bl	10018ae0 <__sprint_r>
100176e4:	2800      	cmp	r0, #0
100176e6:	f040 83f8 	bne.w	10017eda <_vfprintf_r+0x1142>
100176ea:	3e10      	subs	r6, #16
100176ec:	2e10      	cmp	r6, #16
100176ee:	e9dd 2133 	ldrd	r2, r1, [sp, #204]	@ 0xcc
100176f2:	dce8      	bgt.n	100176c6 <_vfprintf_r+0x92e>
100176f4:	460c      	mov	r4, r1
100176f6:	4613      	mov	r3, r2
100176f8:	3301      	adds	r3, #1
100176fa:	9a15      	ldr	r2, [sp, #84]	@ 0x54
100176fc:	f8c8 2000 	str.w	r2, [r8]
10017700:	4434      	add	r4, r6
10017702:	2b07      	cmp	r3, #7
10017704:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10017708:	f8c8 6004 	str.w	r6, [r8, #4]
1001770c:	f300 8314 	bgt.w	10017d38 <_vfprintf_r+0xfa0>
10017710:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10017712:	eba3 060b 	sub.w	r6, r3, fp
10017716:	2e00      	cmp	r6, #0
10017718:	f108 0808 	add.w	r8, r8, #8
1001771c:	f77f ad01 	ble.w	10017122 <_vfprintf_r+0x38a>
10017720:	4a37      	ldr	r2, [pc, #220]	@ (10017800 <_vfprintf_r+0xa68>)
10017722:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10017724:	9215      	str	r2, [sp, #84]	@ 0x54
10017726:	2e10      	cmp	r6, #16
10017728:	dd23      	ble.n	10017772 <_vfprintf_r+0x9da>
1001772a:	4622      	mov	r2, r4
1001772c:	f04f 0a10 	mov.w	sl, #16
10017730:	e9dd 4707 	ldrd	r4, r7, [sp, #28]
10017734:	e004      	b.n	10017740 <_vfprintf_r+0x9a8>
10017736:	3e10      	subs	r6, #16
10017738:	2e10      	cmp	r6, #16
1001773a:	f108 0808 	add.w	r8, r8, #8
1001773e:	dd17      	ble.n	10017770 <_vfprintf_r+0x9d8>
10017740:	3301      	adds	r3, #1
10017742:	492f      	ldr	r1, [pc, #188]	@ (10017800 <_vfprintf_r+0xa68>)
10017744:	3210      	adds	r2, #16
10017746:	2b07      	cmp	r3, #7
10017748:	e9c8 1a00 	strd	r1, sl, [r8]
1001774c:	e9cd 3233 	strd	r3, r2, [sp, #204]	@ 0xcc
10017750:	ddf1      	ble.n	10017736 <_vfprintf_r+0x99e>
10017752:	aa32      	add	r2, sp, #200	@ 0xc8
10017754:	4621      	mov	r1, r4
10017756:	4638      	mov	r0, r7
10017758:	f001 f9c2 	bl	10018ae0 <__sprint_r>
1001775c:	2800      	cmp	r0, #0
1001775e:	f47f ac72 	bne.w	10017046 <_vfprintf_r+0x2ae>
10017762:	3e10      	subs	r6, #16
10017764:	2e10      	cmp	r6, #16
10017766:	e9dd 3233 	ldrd	r3, r2, [sp, #204]	@ 0xcc
1001776a:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001776e:	dce7      	bgt.n	10017740 <_vfprintf_r+0x9a8>
10017770:	4614      	mov	r4, r2
10017772:	3301      	adds	r3, #1
10017774:	9a15      	ldr	r2, [sp, #84]	@ 0x54
10017776:	f8c8 2000 	str.w	r2, [r8]
1001777a:	4434      	add	r4, r6
1001777c:	2b07      	cmp	r3, #7
1001777e:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10017782:	f8c8 6004 	str.w	r6, [r8, #4]
10017786:	f300 81aa 	bgt.w	10017ade <_vfprintf_r+0xd46>
1001778a:	f108 0808 	add.w	r8, r8, #8
1001778e:	e4c8      	b.n	10017122 <_vfprintf_r+0x38a>
10017790:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10017794:	aa32      	add	r2, sp, #200	@ 0xc8
10017796:	f001 f9a3 	bl	10018ae0 <__sprint_r>
1001779a:	2800      	cmp	r0, #0
1001779c:	f43f ace7 	beq.w	1001716e <_vfprintf_r+0x3d6>
100177a0:	f8dd b020 	ldr.w	fp, [sp, #32]
100177a4:	e450      	b.n	10017048 <_vfprintf_r+0x2b0>
100177a6:	9b18      	ldr	r3, [sp, #96]	@ 0x60
100177a8:	9919      	ldr	r1, [sp, #100]	@ 0x64
100177aa:	441c      	add	r4, r3
100177ac:	e9c8 1300 	strd	r1, r3, [r8]
100177b0:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
100177b2:	9434      	str	r4, [sp, #208]	@ 0xd0
100177b4:	3301      	adds	r3, #1
100177b6:	2b07      	cmp	r3, #7
100177b8:	9333      	str	r3, [sp, #204]	@ 0xcc
100177ba:	f300 85bd 	bgt.w	10018338 <_vfprintf_r+0x15a0>
100177be:	f108 0808 	add.w	r8, r8, #8
100177c2:	2a00      	cmp	r2, #0
100177c4:	f2c0 87ac 	blt.w	10018720 <_vfprintf_r+0x1988>
100177c8:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
100177ca:	f8c8 5000 	str.w	r5, [r8]
100177ce:	3301      	adds	r3, #1
100177d0:	4414      	add	r4, r2
100177d2:	2b07      	cmp	r3, #7
100177d4:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
100177d8:	f8c8 2004 	str.w	r2, [r8, #4]
100177dc:	f77f acb1 	ble.w	10017142 <_vfprintf_r+0x3aa>
100177e0:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
100177e4:	aa32      	add	r2, sp, #200	@ 0xc8
100177e6:	f001 f97b 	bl	10018ae0 <__sprint_r>
100177ea:	2800      	cmp	r0, #0
100177ec:	d1d8      	bne.n	100177a0 <_vfprintf_r+0xa08>
100177ee:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
100177f0:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
100177f4:	e4a7      	b.n	10017146 <_vfprintf_r+0x3ae>
100177f6:	bf00      	nop
100177f8:	1001d980 	.word	0x1001d980
100177fc:	1001d9b0 	.word	0x1001d9b0
10017800:	1001dba0 	.word	0x1001dba0
10017804:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
10017806:	9e33      	ldr	r6, [sp, #204]	@ 0xcc
10017808:	2b01      	cmp	r3, #1
1001780a:	f104 0401 	add.w	r4, r4, #1
1001780e:	f106 0601 	add.w	r6, r6, #1
10017812:	f108 0708 	add.w	r7, r8, #8
10017816:	f340 811d 	ble.w	10017a54 <_vfprintf_r+0xcbc>
1001781a:	2301      	movs	r3, #1
1001781c:	2e07      	cmp	r6, #7
1001781e:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
10017822:	f8c8 5000 	str.w	r5, [r8]
10017826:	f8c8 3004 	str.w	r3, [r8, #4]
1001782a:	f300 82e4 	bgt.w	10017df6 <_vfprintf_r+0x105e>
1001782e:	9b18      	ldr	r3, [sp, #96]	@ 0x60
10017830:	9a19      	ldr	r2, [sp, #100]	@ 0x64
10017832:	3601      	adds	r6, #1
10017834:	441c      	add	r4, r3
10017836:	2e07      	cmp	r6, #7
10017838:	e9c7 2300 	strd	r2, r3, [r7]
1001783c:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
10017840:	f300 82cd 	bgt.w	10017dde <_vfprintf_r+0x1046>
10017844:	3708      	adds	r7, #8
10017846:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
10017848:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	@ 0x58
1001784c:	f103 38ff 	add.w	r8, r3, #4294967295	@ 0xffffffff
10017850:	2200      	movs	r2, #0
10017852:	2300      	movs	r3, #0
10017854:	f003 fc94 	bl	1001b180 <__aeabi_dcmpeq>
10017858:	2800      	cmp	r0, #0
1001785a:	f040 8115 	bne.w	10017a88 <_vfprintf_r+0xcf0>
1001785e:	3601      	adds	r6, #1
10017860:	3501      	adds	r5, #1
10017862:	4444      	add	r4, r8
10017864:	2e07      	cmp	r6, #7
10017866:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
1001786a:	603d      	str	r5, [r7, #0]
1001786c:	f8c7 8004 	str.w	r8, [r7, #4]
10017870:	f300 80fe 	bgt.w	10017a70 <_vfprintf_r+0xcd8>
10017874:	3708      	adds	r7, #8
10017876:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
10017878:	607b      	str	r3, [r7, #4]
1001787a:	3601      	adds	r6, #1
1001787c:	441c      	add	r4, r3
1001787e:	2e07      	cmp	r6, #7
10017880:	ab2c      	add	r3, sp, #176	@ 0xb0
10017882:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
10017886:	603b      	str	r3, [r7, #0]
10017888:	dcaa      	bgt.n	100177e0 <_vfprintf_r+0xa48>
1001788a:	f107 0808 	add.w	r8, r7, #8
1001788e:	e45a      	b.n	10017146 <_vfprintf_r+0x3ae>
10017890:	464c      	mov	r4, r9
10017892:	2b0a      	cmp	r3, #10
10017894:	f172 0100 	sbcs.w	r1, r2, #0
10017898:	f080 82b9 	bcs.w	10017e0e <_vfprintf_r+0x1076>
1001789c:	3330      	adds	r3, #48	@ 0x30
1001789e:	f88d 3177 	strb.w	r3, [sp, #375]	@ 0x177
100178a2:	46a1      	mov	r9, r4
100178a4:	f04f 0b01 	mov.w	fp, #1
100178a8:	f20d 1577 	addw	r5, sp, #375	@ 0x177
100178ac:	e6ca      	b.n	10017644 <_vfprintf_r+0x8ac>
100178ae:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
100178b2:	aa32      	add	r2, sp, #200	@ 0xc8
100178b4:	9315      	str	r3, [sp, #84]	@ 0x54
100178b6:	f001 f913 	bl	10018ae0 <__sprint_r>
100178ba:	2800      	cmp	r0, #0
100178bc:	f47f af70 	bne.w	100177a0 <_vfprintf_r+0xa08>
100178c0:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
100178c2:	9b15      	ldr	r3, [sp, #84]	@ 0x54
100178c4:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
100178c8:	e410      	b.n	100170ec <_vfprintf_r+0x354>
100178ca:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
100178ce:	aa32      	add	r2, sp, #200	@ 0xc8
100178d0:	f001 f906 	bl	10018ae0 <__sprint_r>
100178d4:	2800      	cmp	r0, #0
100178d6:	f47f af63 	bne.w	100177a0 <_vfprintf_r+0xa08>
100178da:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
100178dc:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
100178e0:	e416      	b.n	10017110 <_vfprintf_r+0x378>
100178e2:	2d10      	cmp	r5, #16
100178e4:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
100178e6:	f340 8750 	ble.w	1001878a <_vfprintf_r+0x19f2>
100178ea:	4fbb      	ldr	r7, [pc, #748]	@ (10017bd8 <_vfprintf_r+0xe40>)
100178ec:	9715      	str	r7, [sp, #84]	@ 0x54
100178ee:	e9dd a907 	ldrd	sl, r9, [sp, #28]
100178f2:	2610      	movs	r6, #16
100178f4:	e004      	b.n	10017900 <_vfprintf_r+0xb68>
100178f6:	3d10      	subs	r5, #16
100178f8:	2d10      	cmp	r5, #16
100178fa:	f108 0808 	add.w	r8, r8, #8
100178fe:	dd16      	ble.n	1001792e <_vfprintf_r+0xb96>
10017900:	3301      	adds	r3, #1
10017902:	3410      	adds	r4, #16
10017904:	2b07      	cmp	r3, #7
10017906:	e9c8 7600 	strd	r7, r6, [r8]
1001790a:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
1001790e:	ddf2      	ble.n	100178f6 <_vfprintf_r+0xb5e>
10017910:	aa32      	add	r2, sp, #200	@ 0xc8
10017912:	4651      	mov	r1, sl
10017914:	4648      	mov	r0, r9
10017916:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001791a:	f001 f8e1 	bl	10018ae0 <__sprint_r>
1001791e:	2800      	cmp	r0, #0
10017920:	f040 82f5 	bne.w	10017f0e <_vfprintf_r+0x1176>
10017924:	3d10      	subs	r5, #16
10017926:	2d10      	cmp	r5, #16
10017928:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
1001792c:	dce8      	bgt.n	10017900 <_vfprintf_r+0xb68>
1001792e:	3301      	adds	r3, #1
10017930:	9a15      	ldr	r2, [sp, #84]	@ 0x54
10017932:	442c      	add	r4, r5
10017934:	2b07      	cmp	r3, #7
10017936:	e9c8 2500 	strd	r2, r5, [r8]
1001793a:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
1001793e:	f77f ac0b 	ble.w	10017158 <_vfprintf_r+0x3c0>
10017942:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10017946:	aa32      	add	r2, sp, #200	@ 0xc8
10017948:	f001 f8ca 	bl	10018ae0 <__sprint_r>
1001794c:	2800      	cmp	r0, #0
1001794e:	f47f af27 	bne.w	100177a0 <_vfprintf_r+0xa08>
10017952:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10017954:	e400      	b.n	10017158 <_vfprintf_r+0x3c0>
10017956:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
10017958:	2a00      	cmp	r2, #0
1001795a:	f340 80fd 	ble.w	10017b58 <_vfprintf_r+0xdc0>
1001795e:	e9dd 7312 	ldrd	r7, r3, [sp, #72]	@ 0x48
10017962:	429f      	cmp	r7, r3
10017964:	bfa8      	it	ge
10017966:	461f      	movge	r7, r3
10017968:	2f00      	cmp	r7, #0
1001796a:	eb05 0b03 	add.w	fp, r5, r3
1001796e:	dd0b      	ble.n	10017988 <_vfprintf_r+0xbf0>
10017970:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10017972:	3301      	adds	r3, #1
10017974:	443c      	add	r4, r7
10017976:	2b07      	cmp	r3, #7
10017978:	e9c8 5700 	strd	r5, r7, [r8]
1001797c:	9434      	str	r4, [sp, #208]	@ 0xd0
1001797e:	9333      	str	r3, [sp, #204]	@ 0xcc
10017980:	f300 866d 	bgt.w	1001865e <_vfprintf_r+0x18c6>
10017984:	f108 0808 	add.w	r8, r8, #8
10017988:	9e12      	ldr	r6, [sp, #72]	@ 0x48
1001798a:	2f00      	cmp	r7, #0
1001798c:	bfa8      	it	ge
1001798e:	1bf6      	subge	r6, r6, r7
10017990:	2e00      	cmp	r6, #0
10017992:	f300 8345 	bgt.w	10018020 <_vfprintf_r+0x1288>
10017996:	9b12      	ldr	r3, [sp, #72]	@ 0x48
10017998:	f419 6f80 	tst.w	r9, #1024	@ 0x400
1001799c:	442b      	add	r3, r5
1001799e:	469a      	mov	sl, r3
100179a0:	f040 8578 	bne.w	10018494 <_vfprintf_r+0x16fc>
100179a4:	9d29      	ldr	r5, [sp, #164]	@ 0xa4
100179a6:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
100179a8:	429d      	cmp	r5, r3
100179aa:	db03      	blt.n	100179b4 <_vfprintf_r+0xc1c>
100179ac:	f019 0f01 	tst.w	r9, #1
100179b0:	f000 8402 	beq.w	100181b8 <_vfprintf_r+0x1420>
100179b4:	9b18      	ldr	r3, [sp, #96]	@ 0x60
100179b6:	9a19      	ldr	r2, [sp, #100]	@ 0x64
100179b8:	441c      	add	r4, r3
100179ba:	e9c8 2300 	strd	r2, r3, [r8]
100179be:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
100179c0:	9434      	str	r4, [sp, #208]	@ 0xd0
100179c2:	3301      	adds	r3, #1
100179c4:	2b07      	cmp	r3, #7
100179c6:	9333      	str	r3, [sp, #204]	@ 0xcc
100179c8:	f300 8658 	bgt.w	1001867c <_vfprintf_r+0x18e4>
100179cc:	f108 0808 	add.w	r8, r8, #8
100179d0:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
100179d2:	ebab 060a 	sub.w	r6, fp, sl
100179d6:	1b5d      	subs	r5, r3, r5
100179d8:	42ae      	cmp	r6, r5
100179da:	bfa8      	it	ge
100179dc:	462e      	movge	r6, r5
100179de:	2e00      	cmp	r6, #0
100179e0:	dd0d      	ble.n	100179fe <_vfprintf_r+0xc66>
100179e2:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
100179e4:	f8c8 a000 	str.w	sl, [r8]
100179e8:	3301      	adds	r3, #1
100179ea:	4434      	add	r4, r6
100179ec:	2b07      	cmp	r3, #7
100179ee:	f8c8 6004 	str.w	r6, [r8, #4]
100179f2:	9434      	str	r4, [sp, #208]	@ 0xd0
100179f4:	9333      	str	r3, [sp, #204]	@ 0xcc
100179f6:	f300 8653 	bgt.w	100186a0 <_vfprintf_r+0x1908>
100179fa:	f108 0808 	add.w	r8, r8, #8
100179fe:	2e00      	cmp	r6, #0
10017a00:	bfa8      	it	ge
10017a02:	1bad      	subge	r5, r5, r6
10017a04:	2d00      	cmp	r5, #0
10017a06:	f77f ab9e 	ble.w	10017146 <_vfprintf_r+0x3ae>
10017a0a:	2d10      	cmp	r5, #16
10017a0c:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10017a0e:	f340 82d9 	ble.w	10017fc4 <_vfprintf_r+0x122c>
10017a12:	4f72      	ldr	r7, [pc, #456]	@ (10017bdc <_vfprintf_r+0xe44>)
10017a14:	9715      	str	r7, [sp, #84]	@ 0x54
10017a16:	e9dd ab07 	ldrd	sl, fp, [sp, #28]
10017a1a:	2610      	movs	r6, #16
10017a1c:	e005      	b.n	10017a2a <_vfprintf_r+0xc92>
10017a1e:	f108 0808 	add.w	r8, r8, #8
10017a22:	3d10      	subs	r5, #16
10017a24:	2d10      	cmp	r5, #16
10017a26:	f340 82cf 	ble.w	10017fc8 <_vfprintf_r+0x1230>
10017a2a:	3301      	adds	r3, #1
10017a2c:	3410      	adds	r4, #16
10017a2e:	2b07      	cmp	r3, #7
10017a30:	e9c8 7600 	strd	r7, r6, [r8]
10017a34:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10017a38:	ddf1      	ble.n	10017a1e <_vfprintf_r+0xc86>
10017a3a:	aa32      	add	r2, sp, #200	@ 0xc8
10017a3c:	4651      	mov	r1, sl
10017a3e:	4658      	mov	r0, fp
10017a40:	f001 f84e 	bl	10018ae0 <__sprint_r>
10017a44:	2800      	cmp	r0, #0
10017a46:	f47f aaff 	bne.w	10017048 <_vfprintf_r+0x2b0>
10017a4a:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
10017a4e:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10017a52:	e7e6      	b.n	10017a22 <_vfprintf_r+0xc8a>
10017a54:	f019 0f01 	tst.w	r9, #1
10017a58:	f47f aedf 	bne.w	1001781a <_vfprintf_r+0xa82>
10017a5c:	2301      	movs	r3, #1
10017a5e:	2e07      	cmp	r6, #7
10017a60:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
10017a64:	f8c8 5000 	str.w	r5, [r8]
10017a68:	f8c8 3004 	str.w	r3, [r8, #4]
10017a6c:	f77f af03 	ble.w	10017876 <_vfprintf_r+0xade>
10017a70:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10017a74:	aa32      	add	r2, sp, #200	@ 0xc8
10017a76:	f001 f833 	bl	10018ae0 <__sprint_r>
10017a7a:	2800      	cmp	r0, #0
10017a7c:	f47f ae90 	bne.w	100177a0 <_vfprintf_r+0xa08>
10017a80:	e9dd 6433 	ldrd	r6, r4, [sp, #204]	@ 0xcc
10017a84:	af35      	add	r7, sp, #212	@ 0xd4
10017a86:	e6f6      	b.n	10017876 <_vfprintf_r+0xade>
10017a88:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
10017a8a:	2b01      	cmp	r3, #1
10017a8c:	f77f aef3 	ble.w	10017876 <_vfprintf_r+0xade>
10017a90:	2b11      	cmp	r3, #17
10017a92:	4b52      	ldr	r3, [pc, #328]	@ (10017bdc <_vfprintf_r+0xe44>)
10017a94:	9315      	str	r3, [sp, #84]	@ 0x54
10017a96:	f340 82b7 	ble.w	10018008 <_vfprintf_r+0x1270>
10017a9a:	f8cd 9024 	str.w	r9, [sp, #36]	@ 0x24
10017a9e:	e9dd ba07 	ldrd	fp, sl, [sp, #28]
10017aa2:	2510      	movs	r5, #16
10017aa4:	4699      	mov	r9, r3
10017aa6:	e006      	b.n	10017ab6 <_vfprintf_r+0xd1e>
10017aa8:	3708      	adds	r7, #8
10017aaa:	f1a8 0810 	sub.w	r8, r8, #16
10017aae:	f1b8 0f10 	cmp.w	r8, #16
10017ab2:	f340 82a7 	ble.w	10018004 <_vfprintf_r+0x126c>
10017ab6:	3601      	adds	r6, #1
10017ab8:	3410      	adds	r4, #16
10017aba:	2e07      	cmp	r6, #7
10017abc:	e9c7 9500 	strd	r9, r5, [r7]
10017ac0:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
10017ac4:	ddf0      	ble.n	10017aa8 <_vfprintf_r+0xd10>
10017ac6:	aa32      	add	r2, sp, #200	@ 0xc8
10017ac8:	4659      	mov	r1, fp
10017aca:	4650      	mov	r0, sl
10017acc:	f001 f808 	bl	10018ae0 <__sprint_r>
10017ad0:	2800      	cmp	r0, #0
10017ad2:	f040 8202 	bne.w	10017eda <_vfprintf_r+0x1142>
10017ad6:	e9dd 6433 	ldrd	r6, r4, [sp, #204]	@ 0xcc
10017ada:	af35      	add	r7, sp, #212	@ 0xd4
10017adc:	e7e5      	b.n	10017aaa <_vfprintf_r+0xd12>
10017ade:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10017ae2:	aa32      	add	r2, sp, #200	@ 0xc8
10017ae4:	f000 fffc 	bl	10018ae0 <__sprint_r>
10017ae8:	2800      	cmp	r0, #0
10017aea:	f47f ae59 	bne.w	100177a0 <_vfprintf_r+0xa08>
10017aee:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10017af0:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10017af4:	f7ff bb15 	b.w	10017122 <_vfprintf_r+0x38a>
10017af8:	990d      	ldr	r1, [sp, #52]	@ 0x34
10017afa:	f851 3b04 	ldr.w	r3, [r1], #4
10017afe:	910d      	str	r1, [sp, #52]	@ 0x34
10017b00:	f014 0110 	ands.w	r1, r4, #16
10017b04:	d155      	bne.n	10017bb2 <_vfprintf_r+0xe1a>
10017b06:	f014 0040 	ands.w	r0, r4, #64	@ 0x40
10017b0a:	d04d      	beq.n	10017ba8 <_vfprintf_r+0xe10>
10017b0c:	460a      	mov	r2, r1
10017b0e:	b29b      	uxth	r3, r3
10017b10:	2101      	movs	r1, #1
10017b12:	e4b7      	b.n	10017484 <_vfprintf_r+0x6ec>
10017b14:	990d      	ldr	r1, [sp, #52]	@ 0x34
10017b16:	f851 3b04 	ldr.w	r3, [r1], #4
10017b1a:	910d      	str	r1, [sp, #52]	@ 0x34
10017b1c:	f019 0110 	ands.w	r1, r9, #16
10017b20:	f47f acad 	bne.w	1001747e <_vfprintf_r+0x6e6>
10017b24:	f019 0040 	ands.w	r0, r9, #64	@ 0x40
10017b28:	f000 82a7 	beq.w	1001807a <_vfprintf_r+0x12e2>
10017b2c:	b29b      	uxth	r3, r3
10017b2e:	460a      	mov	r2, r1
10017b30:	e4a5      	b.n	1001747e <_vfprintf_r+0x6e6>
10017b32:	9d07      	ldr	r5, [sp, #28]
10017b34:	6da8      	ldr	r0, [r5, #88]	@ 0x58
10017b36:	f7fc ff9f 	bl	10014a78 <__retarget_lock_acquire_recursive>
10017b3a:	f9b5 300c 	ldrsh.w	r3, [r5, #12]
10017b3e:	f7ff b951 	b.w	10016de4 <_vfprintf_r+0x4c>
10017b42:	f019 0f01 	tst.w	r9, #1
10017b46:	f43f aafe 	beq.w	10017146 <_vfprintf_r+0x3ae>
10017b4a:	e52b      	b.n	100175a4 <_vfprintf_r+0x80c>
10017b4c:	930d      	str	r3, [sp, #52]	@ 0x34
10017b4e:	7823      	ldrb	r3, [r4, #0]
10017b50:	f7ff b99a 	b.w	10016e88 <_vfprintf_r+0xf0>
10017b54:	ad5e      	add	r5, sp, #376	@ 0x178
10017b56:	e575      	b.n	10017644 <_vfprintf_r+0x8ac>
10017b58:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10017b5a:	4921      	ldr	r1, [pc, #132]	@ (10017be0 <_vfprintf_r+0xe48>)
10017b5c:	f8c8 1000 	str.w	r1, [r8]
10017b60:	3301      	adds	r3, #1
10017b62:	3401      	adds	r4, #1
10017b64:	2101      	movs	r1, #1
10017b66:	2b07      	cmp	r3, #7
10017b68:	9434      	str	r4, [sp, #208]	@ 0xd0
10017b6a:	9333      	str	r3, [sp, #204]	@ 0xcc
10017b6c:	f8c8 1004 	str.w	r1, [r8, #4]
10017b70:	f300 854f 	bgt.w	10018612 <_vfprintf_r+0x187a>
10017b74:	f108 0808 	add.w	r8, r8, #8
10017b78:	2a00      	cmp	r2, #0
10017b7a:	f47f ae14 	bne.w	100177a6 <_vfprintf_r+0xa0e>
10017b7e:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
10017b80:	f009 0301 	and.w	r3, r9, #1
10017b84:	4313      	orrs	r3, r2
10017b86:	f43f aade 	beq.w	10017146 <_vfprintf_r+0x3ae>
10017b8a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
10017b8c:	9a19      	ldr	r2, [sp, #100]	@ 0x64
10017b8e:	441c      	add	r4, r3
10017b90:	e9c8 2300 	strd	r2, r3, [r8]
10017b94:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10017b96:	9434      	str	r4, [sp, #208]	@ 0xd0
10017b98:	3301      	adds	r3, #1
10017b9a:	2b07      	cmp	r3, #7
10017b9c:	9333      	str	r3, [sp, #204]	@ 0xcc
10017b9e:	f300 83cb 	bgt.w	10018338 <_vfprintf_r+0x15a0>
10017ba2:	f108 0808 	add.w	r8, r8, #8
10017ba6:	e60f      	b.n	100177c8 <_vfprintf_r+0xa30>
10017ba8:	f414 7200 	ands.w	r2, r4, #512	@ 0x200
10017bac:	bf1c      	itt	ne
10017bae:	b2db      	uxtbne	r3, r3
10017bb0:	4602      	movne	r2, r0
10017bb2:	2101      	movs	r1, #1
10017bb4:	e466      	b.n	10017484 <_vfprintf_r+0x6ec>
10017bb6:	f419 7f00 	tst.w	r9, #512	@ 0x200
10017bba:	f040 8305 	bne.w	100181c8 <_vfprintf_r+0x1430>
10017bbe:	17da      	asrs	r2, r3, #31
10017bc0:	4611      	mov	r1, r2
10017bc2:	2900      	cmp	r1, #0
10017bc4:	f6bf abdc 	bge.w	10017380 <_vfprintf_r+0x5e8>
10017bc8:	425b      	negs	r3, r3
10017bca:	eb62 0242 	sbc.w	r2, r2, r2, lsl #1
10017bce:	464c      	mov	r4, r9
10017bd0:	202d      	movs	r0, #45	@ 0x2d
10017bd2:	2101      	movs	r1, #1
10017bd4:	e457      	b.n	10017486 <_vfprintf_r+0x6ee>
10017bd6:	bf00      	nop
10017bd8:	1001dbb0 	.word	0x1001dbb0
10017bdc:	1001dba0 	.word	0x1001dba0
10017be0:	1001d9b0 	.word	0x1001d9b0
10017be4:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
10017be6:	7823      	ldrb	r3, [r4, #0]
10017be8:	2a00      	cmp	r2, #0
10017bea:	f43f a94d 	beq.w	10016e88 <_vfprintf_r+0xf0>
10017bee:	7812      	ldrb	r2, [r2, #0]
10017bf0:	2a00      	cmp	r2, #0
10017bf2:	f43f a949 	beq.w	10016e88 <_vfprintf_r+0xf0>
10017bf6:	f449 6980 	orr.w	r9, r9, #1024	@ 0x400
10017bfa:	f7ff b945 	b.w	10016e88 <_vfprintf_r+0xf0>
10017bfe:	f019 0f10 	tst.w	r9, #16
10017c02:	f040 81f9 	bne.w	10017ff8 <_vfprintf_r+0x1260>
10017c06:	f019 0f40 	tst.w	r9, #64	@ 0x40
10017c0a:	f040 82e3 	bne.w	100181d4 <_vfprintf_r+0x143c>
10017c0e:	f419 7f00 	tst.w	r9, #512	@ 0x200
10017c12:	f000 81f1 	beq.w	10017ff8 <_vfprintf_r+0x1260>
10017c16:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10017c18:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
10017c1a:	681b      	ldr	r3, [r3, #0]
10017c1c:	701a      	strb	r2, [r3, #0]
10017c1e:	e49b      	b.n	10017558 <_vfprintf_r+0x7c0>
10017c20:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	@ 0x58
10017c24:	4602      	mov	r2, r0
10017c26:	460b      	mov	r3, r1
10017c28:	f003 fadc 	bl	1001b1e4 <__aeabi_dcmpun>
10017c2c:	2800      	cmp	r0, #0
10017c2e:	f040 8636 	bne.w	1001889e <_vfprintf_r+0x1b06>
10017c32:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10017c34:	2b61      	cmp	r3, #97	@ 0x61
10017c36:	f000 851f 	beq.w	10018678 <_vfprintf_r+0x18e0>
10017c3a:	2b41      	cmp	r3, #65	@ 0x41
10017c3c:	f000 82e1 	beq.w	10018202 <_vfprintf_r+0x146a>
10017c40:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10017c42:	3301      	adds	r3, #1
10017c44:	f000 8615 	beq.w	10018872 <_vfprintf_r+0x1ada>
10017c48:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10017c4a:	f023 0320 	bic.w	r3, r3, #32
10017c4e:	2b47      	cmp	r3, #71	@ 0x47
10017c50:	d104      	bne.n	10017c5c <_vfprintf_r+0xec4>
10017c52:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10017c54:	2b00      	cmp	r3, #0
10017c56:	bf08      	it	eq
10017c58:	2301      	moveq	r3, #1
10017c5a:	9309      	str	r3, [sp, #36]	@ 0x24
10017c5c:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	@ 0x58
10017c60:	f449 7280 	orr.w	r2, r9, #256	@ 0x100
10017c64:	2900      	cmp	r1, #0
10017c66:	9215      	str	r2, [sp, #84]	@ 0x54
10017c68:	f8cd 9018 	str.w	r9, [sp, #24]
10017c6c:	f04f 0300 	mov.w	r3, #0
10017c70:	f2c0 84dd 	blt.w	1001862e <_vfprintf_r+0x1896>
10017c74:	e9cd 0124 	strd	r0, r1, [sp, #144]	@ 0x90
10017c78:	931f      	str	r3, [sp, #124]	@ 0x7c
10017c7a:	930c      	str	r3, [sp, #48]	@ 0x30
10017c7c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10017c7e:	3b41      	subs	r3, #65	@ 0x41
10017c80:	2b25      	cmp	r3, #37	@ 0x25
10017c82:	f200 8201 	bhi.w	10018088 <_vfprintf_r+0x12f0>
10017c86:	e8df f013 	tbh	[pc, r3, lsl #1]
10017c8a:	0372      	.short	0x0372
10017c8c:	01ff01ff 	.word	0x01ff01ff
10017c90:	036b01ff 	.word	0x036b01ff
10017c94:	01ff036f 	.word	0x01ff036f
10017c98:	01ff01ff 	.word	0x01ff01ff
10017c9c:	01ff01ff 	.word	0x01ff01ff
10017ca0:	01ff01ff 	.word	0x01ff01ff
10017ca4:	01ff01ff 	.word	0x01ff01ff
10017ca8:	01ff01ff 	.word	0x01ff01ff
10017cac:	01ff01ff 	.word	0x01ff01ff
10017cb0:	01ff01ff 	.word	0x01ff01ff
10017cb4:	01ff01ff 	.word	0x01ff01ff
10017cb8:	01ff01ff 	.word	0x01ff01ff
10017cbc:	01ff01ff 	.word	0x01ff01ff
10017cc0:	01ff01ff 	.word	0x01ff01ff
10017cc4:	01ff01ff 	.word	0x01ff01ff
10017cc8:	01ff01ff 	.word	0x01ff01ff
10017ccc:	01ff01ff 	.word	0x01ff01ff
10017cd0:	036b01ff 	.word	0x036b01ff
10017cd4:	036f      	.short	0x036f
10017cd6:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10017cda:	4bc2      	ldr	r3, [pc, #776]	@ (10017fe4 <_vfprintf_r+0x124c>)
10017cdc:	931a      	str	r3, [sp, #104]	@ 0x68
10017cde:	f019 0220 	ands.w	r2, r9, #32
10017ce2:	d06a      	beq.n	10017dba <_vfprintf_r+0x1022>
10017ce4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10017ce6:	3307      	adds	r3, #7
10017ce8:	f023 0307 	bic.w	r3, r3, #7
10017cec:	4619      	mov	r1, r3
10017cee:	685a      	ldr	r2, [r3, #4]
10017cf0:	f851 3b08 	ldr.w	r3, [r1], #8
10017cf4:	910d      	str	r1, [sp, #52]	@ 0x34
10017cf6:	f019 0f01 	tst.w	r9, #1
10017cfa:	d00a      	beq.n	10017d12 <_vfprintf_r+0xf7a>
10017cfc:	ea53 0102 	orrs.w	r1, r3, r2
10017d00:	d007      	beq.n	10017d12 <_vfprintf_r+0xf7a>
10017d02:	990e      	ldr	r1, [sp, #56]	@ 0x38
10017d04:	f88d 10a1 	strb.w	r1, [sp, #161]	@ 0xa1
10017d08:	2130      	movs	r1, #48	@ 0x30
10017d0a:	f049 0902 	orr.w	r9, r9, #2
10017d0e:	f88d 10a0 	strb.w	r1, [sp, #160]	@ 0xa0
10017d12:	f429 6480 	bic.w	r4, r9, #1024	@ 0x400
10017d16:	2102      	movs	r1, #2
10017d18:	f7ff bbb4 	b.w	10017484 <_vfprintf_r+0x6ec>
10017d1c:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10017d20:	464c      	mov	r4, r9
10017d22:	f7ff bbd0 	b.w	100174c6 <_vfprintf_r+0x72e>
10017d26:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10017d2a:	f7ff bb9b 	b.w	10017464 <_vfprintf_r+0x6cc>
10017d2e:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10017d32:	4bad      	ldr	r3, [pc, #692]	@ (10017fe8 <_vfprintf_r+0x1250>)
10017d34:	931a      	str	r3, [sp, #104]	@ 0x68
10017d36:	e7d2      	b.n	10017cde <_vfprintf_r+0xf46>
10017d38:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10017d3c:	aa32      	add	r2, sp, #200	@ 0xc8
10017d3e:	f000 fecf 	bl	10018ae0 <__sprint_r>
10017d42:	2800      	cmp	r0, #0
10017d44:	f47f ad2c 	bne.w	100177a0 <_vfprintf_r+0xa08>
10017d48:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10017d4a:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10017d4e:	f7ff b9e2 	b.w	10017116 <_vfprintf_r+0x37e>
10017d52:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10017d56:	aa32      	add	r2, sp, #200	@ 0xc8
10017d58:	f000 fec2 	bl	10018ae0 <__sprint_r>
10017d5c:	2800      	cmp	r0, #0
10017d5e:	f47f ad1f 	bne.w	100177a0 <_vfprintf_r+0xa08>
10017d62:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10017d64:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10017d68:	e42a      	b.n	100175c0 <_vfprintf_r+0x828>
10017d6a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10017d6c:	950c      	str	r5, [sp, #48]	@ 0x30
10017d6e:	2b06      	cmp	r3, #6
10017d70:	4629      	mov	r1, r5
10017d72:	bf28      	it	cs
10017d74:	2306      	movcs	r3, #6
10017d76:	9509      	str	r5, [sp, #36]	@ 0x24
10017d78:	462a      	mov	r2, r5
10017d7a:	9306      	str	r3, [sp, #24]
10017d7c:	4d9b      	ldr	r5, [pc, #620]	@ (10017fec <_vfprintf_r+0x1254>)
10017d7e:	960d      	str	r6, [sp, #52]	@ 0x34
10017d80:	469b      	mov	fp, r3
10017d82:	9114      	str	r1, [sp, #80]	@ 0x50
10017d84:	9110      	str	r1, [sp, #64]	@ 0x40
10017d86:	9112      	str	r1, [sp, #72]	@ 0x48
10017d88:	f7ff ba41 	b.w	1001720e <_vfprintf_r+0x476>
10017d8c:	2208      	movs	r2, #8
10017d8e:	2100      	movs	r1, #0
10017d90:	a830      	add	r0, sp, #192	@ 0xc0
10017d92:	f7fc fdb9 	bl	10014908 <memset>
10017d96:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10017d98:	9808      	ldr	r0, [sp, #32]
10017d9a:	681a      	ldr	r2, [r3, #0]
10017d9c:	ad45      	add	r5, sp, #276	@ 0x114
10017d9e:	ab30      	add	r3, sp, #192	@ 0xc0
10017da0:	4629      	mov	r1, r5
10017da2:	f7fc fe03 	bl	100149ac <_wcrtomb_r>
10017da6:	f1b0 3fff 	cmp.w	r0, #4294967295	@ 0xffffffff
10017daa:	4683      	mov	fp, r0
10017dac:	f000 8542 	beq.w	10018834 <_vfprintf_r+0x1a9c>
10017db0:	ea20 73e0 	bic.w	r3, r0, r0, asr #31
10017db4:	9306      	str	r3, [sp, #24]
10017db6:	f7ff ba94 	b.w	100172e2 <_vfprintf_r+0x54a>
10017dba:	990d      	ldr	r1, [sp, #52]	@ 0x34
10017dbc:	f851 3b04 	ldr.w	r3, [r1], #4
10017dc0:	910d      	str	r1, [sp, #52]	@ 0x34
10017dc2:	f019 0110 	ands.w	r1, r9, #16
10017dc6:	d196      	bne.n	10017cf6 <_vfprintf_r+0xf5e>
10017dc8:	f019 0040 	ands.w	r0, r9, #64	@ 0x40
10017dcc:	f000 814f 	beq.w	1001806e <_vfprintf_r+0x12d6>
10017dd0:	b29b      	uxth	r3, r3
10017dd2:	460a      	mov	r2, r1
10017dd4:	e78f      	b.n	10017cf6 <_vfprintf_r+0xf5e>
10017dd6:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
10017dda:	ad5e      	add	r5, sp, #376	@ 0x178
10017ddc:	e432      	b.n	10017644 <_vfprintf_r+0x8ac>
10017dde:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10017de2:	aa32      	add	r2, sp, #200	@ 0xc8
10017de4:	f000 fe7c 	bl	10018ae0 <__sprint_r>
10017de8:	2800      	cmp	r0, #0
10017dea:	f47f acd9 	bne.w	100177a0 <_vfprintf_r+0xa08>
10017dee:	e9dd 6433 	ldrd	r6, r4, [sp, #204]	@ 0xcc
10017df2:	af35      	add	r7, sp, #212	@ 0xd4
10017df4:	e527      	b.n	10017846 <_vfprintf_r+0xaae>
10017df6:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10017dfa:	aa32      	add	r2, sp, #200	@ 0xc8
10017dfc:	f000 fe70 	bl	10018ae0 <__sprint_r>
10017e00:	2800      	cmp	r0, #0
10017e02:	f47f accd 	bne.w	100177a0 <_vfprintf_r+0xa08>
10017e06:	e9dd 6433 	ldrd	r6, r4, [sp, #204]	@ 0xcc
10017e0a:	af35      	add	r7, sp, #212	@ 0xd4
10017e0c:	e50f      	b.n	1001782e <_vfprintf_r+0xa96>
10017e0e:	f404 6b80 	and.w	fp, r4, #1024	@ 0x400
10017e12:	2100      	movs	r1, #0
10017e14:	f8cd 8030 	str.w	r8, [sp, #48]	@ 0x30
10017e18:	f8df 91d8 	ldr.w	r9, [pc, #472]	@ 10017ff4 <_vfprintf_r+0x125c>
10017e1c:	f8dd 806c 	ldr.w	r8, [sp, #108]	@ 0x6c
10017e20:	9406      	str	r4, [sp, #24]
10017e22:	ad5e      	add	r5, sp, #376	@ 0x178
10017e24:	f04f 3acc 	mov.w	sl, #3435973836	@ 0xcccccccc
10017e28:	2705      	movs	r7, #5
10017e2a:	468c      	mov	ip, r1
10017e2c:	465e      	mov	r6, fp
10017e2e:	e005      	b.n	10017e3c <_vfprintf_r+0x10a4>
10017e30:	2b0a      	cmp	r3, #10
10017e32:	f172 0200 	sbcs.w	r2, r2, #0
10017e36:	d333      	bcc.n	10017ea0 <_vfprintf_r+0x1108>
10017e38:	465b      	mov	r3, fp
10017e3a:	4622      	mov	r2, r4
10017e3c:	1899      	adds	r1, r3, r2
10017e3e:	f141 0100 	adc.w	r1, r1, #0
10017e42:	fba9 0401 	umull	r0, r4, r9, r1
10017e46:	f024 0003 	bic.w	r0, r4, #3
10017e4a:	eb00 0094 	add.w	r0, r0, r4, lsr #2
10017e4e:	1a09      	subs	r1, r1, r0
10017e50:	1a58      	subs	r0, r3, r1
10017e52:	f162 0e00 	sbc.w	lr, r2, #0
10017e56:	fb0a f400 	mul.w	r4, sl, r0
10017e5a:	fba0 b009 	umull	fp, r0, r0, r9
10017e5e:	fb09 440e 	mla	r4, r9, lr, r4
10017e62:	f00b 0e01 	and.w	lr, fp, #1
10017e66:	4404      	add	r4, r0
10017e68:	fbae 0e07 	umull	r0, lr, lr, r7
10017e6c:	1840      	adds	r0, r0, r1
10017e6e:	ea4f 0b5b 	mov.w	fp, fp, lsr #1
10017e72:	3030      	adds	r0, #48	@ 0x30
10017e74:	f805 0c01 	strb.w	r0, [r5, #-1]
10017e78:	ea4b 7bc4 	orr.w	fp, fp, r4, lsl #31
10017e7c:	f10c 0c01 	add.w	ip, ip, #1
10017e80:	3d01      	subs	r5, #1
10017e82:	0864      	lsrs	r4, r4, #1
10017e84:	2e00      	cmp	r6, #0
10017e86:	d0d3      	beq.n	10017e30 <_vfprintf_r+0x1098>
10017e88:	f898 1000 	ldrb.w	r1, [r8]
10017e8c:	458c      	cmp	ip, r1
10017e8e:	d1cf      	bne.n	10017e30 <_vfprintf_r+0x1098>
10017e90:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
10017e94:	d0cc      	beq.n	10017e30 <_vfprintf_r+0x1098>
10017e96:	2b0a      	cmp	r3, #10
10017e98:	f172 0200 	sbcs.w	r2, r2, #0
10017e9c:	f080 82c3 	bcs.w	10018426 <_vfprintf_r+0x168e>
10017ea0:	f8cd 806c 	str.w	r8, [sp, #108]	@ 0x6c
10017ea4:	9c06      	ldr	r4, [sp, #24]
10017ea6:	f8dd 8030 	ldr.w	r8, [sp, #48]	@ 0x30
10017eaa:	f8cd c04c 	str.w	ip, [sp, #76]	@ 0x4c
10017eae:	f7ff bbc5 	b.w	1001763c <_vfprintf_r+0x8a4>
10017eb2:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10017eb6:	aa32      	add	r2, sp, #200	@ 0xc8
10017eb8:	9315      	str	r3, [sp, #84]	@ 0x54
10017eba:	f000 fe11 	bl	10018ae0 <__sprint_r>
10017ebe:	2800      	cmp	r0, #0
10017ec0:	f47f ac6e 	bne.w	100177a0 <_vfprintf_r+0xa08>
10017ec4:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
10017ec8:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10017eca:	9b15      	ldr	r3, [sp, #84]	@ 0x54
10017ecc:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10017ed0:	f7ff b8fa 	b.w	100170c8 <_vfprintf_r+0x330>
10017ed4:	46a3      	mov	fp, r4
10017ed6:	f7ff b8b7 	b.w	10017048 <_vfprintf_r+0x2b0>
10017eda:	46d3      	mov	fp, sl
10017edc:	f7ff b8b4 	b.w	10017048 <_vfprintf_r+0x2b0>
10017ee0:	4658      	mov	r0, fp
10017ee2:	f7fd ffff 	bl	10015ee4 <__sinit>
10017ee6:	f7fe bf74 	b.w	10016dd2 <_vfprintf_r+0x3a>
10017eea:	2901      	cmp	r1, #1
10017eec:	464c      	mov	r4, r9
10017eee:	f47f ab95 	bne.w	1001761c <_vfprintf_r+0x884>
10017ef2:	e4d3      	b.n	1001789c <_vfprintf_r+0xb04>
10017ef4:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10017ef8:	aa32      	add	r2, sp, #200	@ 0xc8
10017efa:	f000 fdf1 	bl	10018ae0 <__sprint_r>
10017efe:	2800      	cmp	r0, #0
10017f00:	f47f ac4e 	bne.w	100177a0 <_vfprintf_r+0xa08>
10017f04:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10017f06:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10017f0a:	f7ff bb46 	b.w	1001759a <_vfprintf_r+0x802>
10017f0e:	46cb      	mov	fp, r9
10017f10:	f7ff b89a 	b.w	10017048 <_vfprintf_r+0x2b0>
10017f14:	af30      	add	r7, sp, #192	@ 0xc0
10017f16:	2208      	movs	r2, #8
10017f18:	2100      	movs	r1, #0
10017f1a:	4638      	mov	r0, r7
10017f1c:	952b      	str	r5, [sp, #172]	@ 0xac
10017f1e:	f7fc fcf3 	bl	10014908 <memset>
10017f22:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10017f24:	1c58      	adds	r0, r3, #1
10017f26:	f000 8270 	beq.w	1001840a <_vfprintf_r+0x1672>
10017f2a:	2400      	movs	r4, #0
10017f2c:	f8cd 9018 	str.w	r9, [sp, #24]
10017f30:	46a3      	mov	fp, r4
10017f32:	f8dd 9020 	ldr.w	r9, [sp, #32]
10017f36:	469a      	mov	sl, r3
10017f38:	e00c      	b.n	10017f54 <_vfprintf_r+0x11bc>
10017f3a:	a945      	add	r1, sp, #276	@ 0x114
10017f3c:	4648      	mov	r0, r9
10017f3e:	f7fc fd35 	bl	100149ac <_wcrtomb_r>
10017f42:	1c41      	adds	r1, r0, #1
10017f44:	4458      	add	r0, fp
10017f46:	f000 8475 	beq.w	10018834 <_vfprintf_r+0x1a9c>
10017f4a:	4550      	cmp	r0, sl
10017f4c:	dc08      	bgt.n	10017f60 <_vfprintf_r+0x11c8>
10017f4e:	f000 84c2 	beq.w	100188d6 <_vfprintf_r+0x1b3e>
10017f52:	4683      	mov	fp, r0
10017f54:	9a2b      	ldr	r2, [sp, #172]	@ 0xac
10017f56:	5912      	ldr	r2, [r2, r4]
10017f58:	463b      	mov	r3, r7
10017f5a:	3404      	adds	r4, #4
10017f5c:	2a00      	cmp	r2, #0
10017f5e:	d1ec      	bne.n	10017f3a <_vfprintf_r+0x11a2>
10017f60:	f8dd 9018 	ldr.w	r9, [sp, #24]
10017f64:	f1bb 0f00 	cmp.w	fp, #0
10017f68:	f000 8342 	beq.w	100185f0 <_vfprintf_r+0x1858>
10017f6c:	f1bb 0f63 	cmp.w	fp, #99	@ 0x63
10017f70:	f340 83f9 	ble.w	10018766 <_vfprintf_r+0x19ce>
10017f74:	9808      	ldr	r0, [sp, #32]
10017f76:	f10b 0101 	add.w	r1, fp, #1
10017f7a:	f7fc f981 	bl	10014280 <_malloc_r>
10017f7e:	4605      	mov	r5, r0
10017f80:	2800      	cmp	r0, #0
10017f82:	f000 8457 	beq.w	10018834 <_vfprintf_r+0x1a9c>
10017f86:	900c      	str	r0, [sp, #48]	@ 0x30
10017f88:	2208      	movs	r2, #8
10017f8a:	2100      	movs	r1, #0
10017f8c:	4638      	mov	r0, r7
10017f8e:	f7fc fcbb 	bl	10014908 <memset>
10017f92:	9808      	ldr	r0, [sp, #32]
10017f94:	9700      	str	r7, [sp, #0]
10017f96:	465b      	mov	r3, fp
10017f98:	aa2b      	add	r2, sp, #172	@ 0xac
10017f9a:	4629      	mov	r1, r5
10017f9c:	f7fc fe62 	bl	10014c64 <_wcsrtombs_r>
10017fa0:	4583      	cmp	fp, r0
10017fa2:	f040 8517 	bne.w	100189d4 <_vfprintf_r+0x1c3c>
10017fa6:	2300      	movs	r3, #0
10017fa8:	f805 300b 	strb.w	r3, [r5, fp]
10017fac:	ea2b 71eb 	bic.w	r1, fp, fp, asr #31
10017fb0:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
10017fb4:	960d      	str	r6, [sp, #52]	@ 0x34
10017fb6:	9309      	str	r3, [sp, #36]	@ 0x24
10017fb8:	9106      	str	r1, [sp, #24]
10017fba:	9314      	str	r3, [sp, #80]	@ 0x50
10017fbc:	9310      	str	r3, [sp, #64]	@ 0x40
10017fbe:	9312      	str	r3, [sp, #72]	@ 0x48
10017fc0:	f7ff b925 	b.w	1001720e <_vfprintf_r+0x476>
10017fc4:	4a0a      	ldr	r2, [pc, #40]	@ (10017ff0 <_vfprintf_r+0x1258>)
10017fc6:	9215      	str	r2, [sp, #84]	@ 0x54
10017fc8:	3301      	adds	r3, #1
10017fca:	9a15      	ldr	r2, [sp, #84]	@ 0x54
10017fcc:	f8c8 2000 	str.w	r2, [r8]
10017fd0:	442c      	add	r4, r5
10017fd2:	2b07      	cmp	r3, #7
10017fd4:	f8c8 5004 	str.w	r5, [r8, #4]
10017fd8:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10017fdc:	f77f a8b1 	ble.w	10017142 <_vfprintf_r+0x3aa>
10017fe0:	f7ff bbfe 	b.w	100177e0 <_vfprintf_r+0xa48>
10017fe4:	1001d994 	.word	0x1001d994
10017fe8:	1001d980 	.word	0x1001d980
10017fec:	1001d9a8 	.word	0x1001d9a8
10017ff0:	1001dba0 	.word	0x1001dba0
10017ff4:	cccccccd 	.word	0xcccccccd
10017ff8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10017ffa:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
10017ffc:	681b      	ldr	r3, [r3, #0]
10017ffe:	601a      	str	r2, [r3, #0]
10018000:	f7ff baaa 	b.w	10017558 <_vfprintf_r+0x7c0>
10018004:	f8dd 9024 	ldr.w	r9, [sp, #36]	@ 0x24
10018008:	9b15      	ldr	r3, [sp, #84]	@ 0x54
1001800a:	603b      	str	r3, [r7, #0]
1001800c:	3601      	adds	r6, #1
1001800e:	4444      	add	r4, r8
10018010:	2e07      	cmp	r6, #7
10018012:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
10018016:	f8c7 8004 	str.w	r8, [r7, #4]
1001801a:	f77f ac2b 	ble.w	10017874 <_vfprintf_r+0xadc>
1001801e:	e527      	b.n	10017a70 <_vfprintf_r+0xcd8>
10018020:	2e10      	cmp	r6, #16
10018022:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10018024:	f340 84ad 	ble.w	10018982 <_vfprintf_r+0x1bea>
10018028:	4898      	ldr	r0, [pc, #608]	@ (1001828c <_vfprintf_r+0x14f4>)
1001802a:	9015      	str	r0, [sp, #84]	@ 0x54
1001802c:	4642      	mov	r2, r8
1001802e:	4621      	mov	r1, r4
10018030:	46a8      	mov	r8, r5
10018032:	e9dd 4a07 	ldrd	r4, sl, [sp, #28]
10018036:	2710      	movs	r7, #16
10018038:	4605      	mov	r5, r0
1001803a:	e004      	b.n	10018046 <_vfprintf_r+0x12ae>
1001803c:	3208      	adds	r2, #8
1001803e:	3e10      	subs	r6, #16
10018040:	2e10      	cmp	r6, #16
10018042:	f340 81ca 	ble.w	100183da <_vfprintf_r+0x1642>
10018046:	3301      	adds	r3, #1
10018048:	3110      	adds	r1, #16
1001804a:	2b07      	cmp	r3, #7
1001804c:	e9c2 5700 	strd	r5, r7, [r2]
10018050:	e9cd 3133 	strd	r3, r1, [sp, #204]	@ 0xcc
10018054:	ddf2      	ble.n	1001803c <_vfprintf_r+0x12a4>
10018056:	aa32      	add	r2, sp, #200	@ 0xc8
10018058:	4621      	mov	r1, r4
1001805a:	4650      	mov	r0, sl
1001805c:	f000 fd40 	bl	10018ae0 <__sprint_r>
10018060:	2800      	cmp	r0, #0
10018062:	f47f af3a 	bne.w	10017eda <_vfprintf_r+0x1142>
10018066:	e9dd 3133 	ldrd	r3, r1, [sp, #204]	@ 0xcc
1001806a:	aa35      	add	r2, sp, #212	@ 0xd4
1001806c:	e7e7      	b.n	1001803e <_vfprintf_r+0x12a6>
1001806e:	f419 7200 	ands.w	r2, r9, #512	@ 0x200
10018072:	bf1c      	itt	ne
10018074:	b2db      	uxtbne	r3, r3
10018076:	4602      	movne	r2, r0
10018078:	e63d      	b.n	10017cf6 <_vfprintf_r+0xf5e>
1001807a:	f419 7200 	ands.w	r2, r9, #512	@ 0x200
1001807e:	bf1c      	itt	ne
10018080:	b2db      	uxtbne	r3, r3
10018082:	4602      	movne	r2, r0
10018084:	f7ff b9fb 	b.w	1001747e <_vfprintf_r+0x6e6>
10018088:	9e09      	ldr	r6, [sp, #36]	@ 0x24
1001808a:	2302      	movs	r3, #2
1001808c:	e9cd 3600 	strd	r3, r6, [sp]
10018090:	ab30      	add	r3, sp, #192	@ 0xc0
10018092:	9304      	str	r3, [sp, #16]
10018094:	ab2b      	add	r3, sp, #172	@ 0xac
10018096:	9303      	str	r3, [sp, #12]
10018098:	ab29      	add	r3, sp, #164	@ 0xa4
1001809a:	9302      	str	r3, [sp, #8]
1001809c:	9808      	ldr	r0, [sp, #32]
1001809e:	e9dd 2324 	ldrd	r2, r3, [sp, #144]	@ 0x90
100180a2:	f7fc fe81 	bl	10014da8 <_dtoa_r>
100180a6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
100180a8:	2b67      	cmp	r3, #103	@ 0x67
100180aa:	4605      	mov	r5, r0
100180ac:	f000 8177 	beq.w	1001839e <_vfprintf_r+0x1606>
100180b0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
100180b2:	2b47      	cmp	r3, #71	@ 0x47
100180b4:	f000 8173 	beq.w	1001839e <_vfprintf_r+0x1606>
100180b8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
100180ba:	f023 0720 	bic.w	r7, r3, #32
100180be:	2f46      	cmp	r7, #70	@ 0x46
100180c0:	eb00 0406 	add.w	r4, r0, r6
100180c4:	d105      	bne.n	100180d2 <_vfprintf_r+0x133a>
100180c6:	7803      	ldrb	r3, [r0, #0]
100180c8:	2b30      	cmp	r3, #48	@ 0x30
100180ca:	f000 83db 	beq.w	10018884 <_vfprintf_r+0x1aec>
100180ce:	9e29      	ldr	r6, [sp, #164]	@ 0xa4
100180d0:	4434      	add	r4, r6
100180d2:	e9dd 0124 	ldrd	r0, r1, [sp, #144]	@ 0x90
100180d6:	2200      	movs	r2, #0
100180d8:	2300      	movs	r3, #0
100180da:	f003 f851 	bl	1001b180 <__aeabi_dcmpeq>
100180de:	2800      	cmp	r0, #0
100180e0:	f000 81cc 	beq.w	1001847c <_vfprintf_r+0x16e4>
100180e4:	4623      	mov	r3, r4
100180e6:	1b5b      	subs	r3, r3, r5
100180e8:	9313      	str	r3, [sp, #76]	@ 0x4c
100180ea:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
100180ec:	9212      	str	r2, [sp, #72]	@ 0x48
100180ee:	2f47      	cmp	r7, #71	@ 0x47
100180f0:	f000 815d 	beq.w	100183ae <_vfprintf_r+0x1616>
100180f4:	2f46      	cmp	r7, #70	@ 0x46
100180f6:	f000 82e3 	beq.w	100186c0 <_vfprintf_r+0x1928>
100180fa:	990e      	ldr	r1, [sp, #56]	@ 0x38
100180fc:	1e53      	subs	r3, r2, #1
100180fe:	2961      	cmp	r1, #97	@ 0x61
10018100:	9329      	str	r3, [sp, #164]	@ 0xa4
10018102:	f000 8441 	beq.w	10018988 <_vfprintf_r+0x1bf0>
10018106:	2941      	cmp	r1, #65	@ 0x41
10018108:	f040 815c 	bne.w	100183c4 <_vfprintf_r+0x162c>
1001810c:	2150      	movs	r1, #80	@ 0x50
1001810e:	2001      	movs	r0, #1
10018110:	2b00      	cmp	r3, #0
10018112:	bfb6      	itet	lt
10018114:	f1c2 0301 	rsblt	r3, r2, #1
10018118:	222b      	movge	r2, #43	@ 0x2b
1001811a:	222d      	movlt	r2, #45	@ 0x2d
1001811c:	2b09      	cmp	r3, #9
1001811e:	f88d 10b0 	strb.w	r1, [sp, #176]	@ 0xb0
10018122:	f88d 20b1 	strb.w	r2, [sp, #177]	@ 0xb1
10018126:	f340 8377 	ble.w	10018818 <_vfprintf_r+0x1a80>
1001812a:	f10d 04c7 	add.w	r4, sp, #199	@ 0xc7
1001812e:	4e58      	ldr	r6, [pc, #352]	@ (10018290 <_vfprintf_r+0x14f8>)
10018130:	4622      	mov	r2, r4
10018132:	4610      	mov	r0, r2
10018134:	fba6 1203 	umull	r1, r2, r6, r3
10018138:	08d2      	lsrs	r2, r2, #3
1001813a:	eb02 0182 	add.w	r1, r2, r2, lsl #2
1001813e:	eba3 0141 	sub.w	r1, r3, r1, lsl #1
10018142:	3130      	adds	r1, #48	@ 0x30
10018144:	f800 1c01 	strb.w	r1, [r0, #-1]
10018148:	4619      	mov	r1, r3
1001814a:	2963      	cmp	r1, #99	@ 0x63
1001814c:	4613      	mov	r3, r2
1001814e:	f100 32ff 	add.w	r2, r0, #4294967295	@ 0xffffffff
10018152:	dcee      	bgt.n	10018132 <_vfprintf_r+0x139a>
10018154:	3330      	adds	r3, #48	@ 0x30
10018156:	f802 3c01 	strb.w	r3, [r2, #-1]
1001815a:	1e83      	subs	r3, r0, #2
1001815c:	42a3      	cmp	r3, r4
1001815e:	f080 840c 	bcs.w	1001897a <_vfprintf_r+0x1be2>
10018162:	f10d 02b1 	add.w	r2, sp, #177	@ 0xb1
10018166:	f813 1b01 	ldrb.w	r1, [r3], #1
1001816a:	f802 1f01 	strb.w	r1, [r2, #1]!
1001816e:	42a3      	cmp	r3, r4
10018170:	d1f9      	bne.n	10018166 <_vfprintf_r+0x13ce>
10018172:	ab5e      	add	r3, sp, #376	@ 0x178
10018174:	1a18      	subs	r0, r3, r0
10018176:	f1a0 03ad 	sub.w	r3, r0, #173	@ 0xad
1001817a:	931c      	str	r3, [sp, #112]	@ 0x70
1001817c:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
1001817e:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
10018180:	2b01      	cmp	r3, #1
10018182:	eb03 0b02 	add.w	fp, r3, r2
10018186:	f340 8378 	ble.w	1001887a <_vfprintf_r+0x1ae2>
1001818a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
1001818c:	449b      	add	fp, r3
1001818e:	9b06      	ldr	r3, [sp, #24]
10018190:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
10018194:	f443 7980 	orr.w	r9, r3, #256	@ 0x100
10018198:	ea2b 72eb 	bic.w	r2, fp, fp, asr #31
1001819c:	2300      	movs	r3, #0
1001819e:	9314      	str	r3, [sp, #80]	@ 0x50
100181a0:	9206      	str	r2, [sp, #24]
100181a2:	9310      	str	r3, [sp, #64]	@ 0x40
100181a4:	9312      	str	r3, [sp, #72]	@ 0x48
100181a6:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
100181a8:	2b00      	cmp	r3, #0
100181aa:	f040 810f 	bne.w	100183cc <_vfprintf_r+0x1634>
100181ae:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
100181b2:	9309      	str	r3, [sp, #36]	@ 0x24
100181b4:	f7ff b82b 	b.w	1001720e <_vfprintf_r+0x476>
100181b8:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
100181ba:	ebab 060a 	sub.w	r6, fp, sl
100181be:	1b5d      	subs	r5, r3, r5
100181c0:	42ae      	cmp	r6, r5
100181c2:	bfa8      	it	ge
100181c4:	462e      	movge	r6, r5
100181c6:	e41a      	b.n	100179fe <_vfprintf_r+0xc66>
100181c8:	f343 12c0 	sbfx	r2, r3, #7, #1
100181cc:	4611      	mov	r1, r2
100181ce:	b25b      	sxtb	r3, r3
100181d0:	f7ff b8d3 	b.w	1001737a <_vfprintf_r+0x5e2>
100181d4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
100181d6:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
100181d8:	681b      	ldr	r3, [r3, #0]
100181da:	801a      	strh	r2, [r3, #0]
100181dc:	f7ff b9bc 	b.w	10017558 <_vfprintf_r+0x7c0>
100181e0:	9907      	ldr	r1, [sp, #28]
100181e2:	aa32      	add	r2, sp, #200	@ 0xc8
100181e4:	4658      	mov	r0, fp
100181e6:	f000 fc7b 	bl	10018ae0 <__sprint_r>
100181ea:	2800      	cmp	r0, #0
100181ec:	f43e af1c 	beq.w	10017028 <_vfprintf_r+0x290>
100181f0:	f7fe bf30 	b.w	10017054 <_vfprintf_r+0x2bc>
100181f4:	4628      	mov	r0, r5
100181f6:	960d      	str	r6, [sp, #52]	@ 0x34
100181f8:	f7fd ffa2 	bl	10016140 <strlen>
100181fc:	4683      	mov	fp, r0
100181fe:	f7ff b89f 	b.w	10017340 <_vfprintf_r+0x5a8>
10018202:	2358      	movs	r3, #88	@ 0x58
10018204:	f88d 30a1 	strb.w	r3, [sp, #161]	@ 0xa1
10018208:	2330      	movs	r3, #48	@ 0x30
1001820a:	f88d 30a0 	strb.w	r3, [sp, #160]	@ 0xa0
1001820e:	f049 0302 	orr.w	r3, r9, #2
10018212:	9306      	str	r3, [sp, #24]
10018214:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10018216:	2b63      	cmp	r3, #99	@ 0x63
10018218:	f300 82f6 	bgt.w	10018808 <_vfprintf_r+0x1a70>
1001821c:	2300      	movs	r3, #0
1001821e:	930c      	str	r3, [sp, #48]	@ 0x30
10018220:	ad45      	add	r5, sp, #276	@ 0x114
10018222:	f449 7381 	orr.w	r3, r9, #258	@ 0x102
10018226:	9315      	str	r3, [sp, #84]	@ 0x54
10018228:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
1001822a:	2b00      	cmp	r3, #0
1001822c:	f2c0 8200 	blt.w	10018630 <_vfprintf_r+0x1898>
10018230:	ed9d 7b16 	vldr	d7, [sp, #88]	@ 0x58
10018234:	ed8d 7b24 	vstr	d7, [sp, #144]	@ 0x90
10018238:	2300      	movs	r3, #0
1001823a:	931f      	str	r3, [sp, #124]	@ 0x7c
1001823c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001823e:	2b61      	cmp	r3, #97	@ 0x61
10018240:	f47f ad1c 	bne.w	10017c7c <_vfprintf_r+0xee4>
10018244:	aa29      	add	r2, sp, #164	@ 0xa4
10018246:	e9dd 0124 	ldrd	r0, r1, [sp, #144]	@ 0x90
1001824a:	f7fd ffe5 	bl	10016218 <frexp>
1001824e:	2200      	movs	r2, #0
10018250:	f04f 537f 	mov.w	r3, #1069547520	@ 0x3fc00000
10018254:	f002 fd2c 	bl	1001acb0 <__aeabi_dmul>
10018258:	4602      	mov	r2, r0
1001825a:	460b      	mov	r3, r1
1001825c:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
10018260:	2200      	movs	r2, #0
10018262:	2300      	movs	r3, #0
10018264:	f002 ff8c 	bl	1001b180 <__aeabi_dcmpeq>
10018268:	2800      	cmp	r0, #0
1001826a:	f040 82f8 	bne.w	1001885e <_vfprintf_r+0x1ac6>
1001826e:	4b09      	ldr	r3, [pc, #36]	@ (10018294 <_vfprintf_r+0x14fc>)
10018270:	9312      	str	r3, [sp, #72]	@ 0x48
10018272:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10018274:	f8cd 804c 	str.w	r8, [sp, #76]	@ 0x4c
10018278:	f103 39ff 	add.w	r9, r3, #4294967295	@ 0xffffffff
1001827c:	462e      	mov	r6, r5
1001827e:	9514      	str	r5, [sp, #80]	@ 0x50
10018280:	f8dd b048 	ldr.w	fp, [sp, #72]	@ 0x48
10018284:	464d      	mov	r5, r9
10018286:	e9dd 8910 	ldrd	r8, r9, [sp, #64]	@ 0x40
1001828a:	e00b      	b.n	100182a4 <_vfprintf_r+0x150c>
1001828c:	1001dba0 	.word	0x1001dba0
10018290:	cccccccd 	.word	0xcccccccd
10018294:	1001d980 	.word	0x1001d980
10018298:	2200      	movs	r2, #0
1001829a:	2300      	movs	r3, #0
1001829c:	f002 ff70 	bl	1001b180 <__aeabi_dcmpeq>
100182a0:	b9f0      	cbnz	r0, 100182e0 <_vfprintf_r+0x1548>
100182a2:	463d      	mov	r5, r7
100182a4:	4ba9      	ldr	r3, [pc, #676]	@ (1001854c <_vfprintf_r+0x17b4>)
100182a6:	2200      	movs	r2, #0
100182a8:	4640      	mov	r0, r8
100182aa:	4649      	mov	r1, r9
100182ac:	f002 fd00 	bl	1001acb0 <__aeabi_dmul>
100182b0:	4689      	mov	r9, r1
100182b2:	4680      	mov	r8, r0
100182b4:	f002 ffac 	bl	1001b210 <__aeabi_d2iz>
100182b8:	4604      	mov	r4, r0
100182ba:	f002 fc8f 	bl	1001abdc <__aeabi_i2d>
100182be:	460b      	mov	r3, r1
100182c0:	4602      	mov	r2, r0
100182c2:	4649      	mov	r1, r9
100182c4:	4640      	mov	r0, r8
100182c6:	f002 fb3b 	bl	1001a940 <__aeabi_dsub>
100182ca:	f81b 3004 	ldrb.w	r3, [fp, r4]
100182ce:	46b2      	mov	sl, r6
100182d0:	f806 3b01 	strb.w	r3, [r6], #1
100182d4:	1c6b      	adds	r3, r5, #1
100182d6:	f105 37ff 	add.w	r7, r5, #4294967295	@ 0xffffffff
100182da:	4680      	mov	r8, r0
100182dc:	4689      	mov	r9, r1
100182de:	d1db      	bne.n	10018298 <_vfprintf_r+0x1500>
100182e0:	46cb      	mov	fp, r9
100182e2:	4657      	mov	r7, sl
100182e4:	46c2      	mov	sl, r8
100182e6:	4b9a      	ldr	r3, [pc, #616]	@ (10018550 <_vfprintf_r+0x17b8>)
100182e8:	f8dd 804c 	ldr.w	r8, [sp, #76]	@ 0x4c
100182ec:	2200      	movs	r2, #0
100182ee:	4650      	mov	r0, sl
100182f0:	4659      	mov	r1, fp
100182f2:	46a9      	mov	r9, r5
100182f4:	9d14      	ldr	r5, [sp, #80]	@ 0x50
100182f6:	f002 ff6b 	bl	1001b1d0 <__aeabi_dcmpgt>
100182fa:	2800      	cmp	r0, #0
100182fc:	f040 8264 	bne.w	100187c8 <_vfprintf_r+0x1a30>
10018300:	4b93      	ldr	r3, [pc, #588]	@ (10018550 <_vfprintf_r+0x17b8>)
10018302:	4650      	mov	r0, sl
10018304:	4659      	mov	r1, fp
10018306:	2200      	movs	r2, #0
10018308:	f002 ff3a 	bl	1001b180 <__aeabi_dcmpeq>
1001830c:	b110      	cbz	r0, 10018314 <_vfprintf_r+0x157c>
1001830e:	07e2      	lsls	r2, r4, #31
10018310:	f100 825a 	bmi.w	100187c8 <_vfprintf_r+0x1a30>
10018314:	f1b9 0f00 	cmp.w	r9, #0
10018318:	f2c0 8270 	blt.w	100187fc <_vfprintf_r+0x1a64>
1001831c:	f109 0301 	add.w	r3, r9, #1
10018320:	4433      	add	r3, r6
10018322:	2230      	movs	r2, #48	@ 0x30
10018324:	f806 2b01 	strb.w	r2, [r6], #1
10018328:	42b3      	cmp	r3, r6
1001832a:	d1fb      	bne.n	10018324 <_vfprintf_r+0x158c>
1001832c:	1b5b      	subs	r3, r3, r5
1001832e:	9313      	str	r3, [sp, #76]	@ 0x4c
10018330:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10018332:	f023 0720 	bic.w	r7, r3, #32
10018336:	e6d8      	b.n	100180ea <_vfprintf_r+0x1352>
10018338:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
1001833c:	aa32      	add	r2, sp, #200	@ 0xc8
1001833e:	f000 fbcf 	bl	10018ae0 <__sprint_r>
10018342:	2800      	cmp	r0, #0
10018344:	f47f aa2c 	bne.w	100177a0 <_vfprintf_r+0xa08>
10018348:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
1001834c:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
1001834e:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10018352:	f7ff ba36 	b.w	100177c2 <_vfprintf_r+0xa2a>
10018356:	6d88      	ldr	r0, [r1, #88]	@ 0x58
10018358:	f7fc fb90 	bl	10014a7c <__retarget_lock_release_recursive>
1001835c:	f7fe be36 	b.w	10016fcc <_vfprintf_r+0x234>
10018360:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10018362:	1c5e      	adds	r6, r3, #1
10018364:	2302      	movs	r3, #2
10018366:	e691      	b.n	1001808c <_vfprintf_r+0x12f4>
10018368:	9e09      	ldr	r6, [sp, #36]	@ 0x24
1001836a:	2303      	movs	r3, #3
1001836c:	e68e      	b.n	1001808c <_vfprintf_r+0x12f4>
1001836e:	aa29      	add	r2, sp, #164	@ 0xa4
10018370:	e9dd 0124 	ldrd	r0, r1, [sp, #144]	@ 0x90
10018374:	f7fd ff50 	bl	10016218 <frexp>
10018378:	2200      	movs	r2, #0
1001837a:	f04f 537f 	mov.w	r3, #1069547520	@ 0x3fc00000
1001837e:	f002 fc97 	bl	1001acb0 <__aeabi_dmul>
10018382:	4602      	mov	r2, r0
10018384:	460b      	mov	r3, r1
10018386:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
1001838a:	2200      	movs	r2, #0
1001838c:	2300      	movs	r3, #0
1001838e:	f002 fef7 	bl	1001b180 <__aeabi_dcmpeq>
10018392:	2800      	cmp	r0, #0
10018394:	f040 8263 	bne.w	1001885e <_vfprintf_r+0x1ac6>
10018398:	4b6e      	ldr	r3, [pc, #440]	@ (10018554 <_vfprintf_r+0x17bc>)
1001839a:	9312      	str	r3, [sp, #72]	@ 0x48
1001839c:	e769      	b.n	10018272 <_vfprintf_r+0x14da>
1001839e:	9b06      	ldr	r3, [sp, #24]
100183a0:	07db      	lsls	r3, r3, #31
100183a2:	f100 81e4 	bmi.w	1001876e <_vfprintf_r+0x19d6>
100183a6:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
100183a8:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
100183aa:	1b5b      	subs	r3, r3, r5
100183ac:	9313      	str	r3, [sp, #76]	@ 0x4c
100183ae:	1cd3      	adds	r3, r2, #3
100183b0:	9212      	str	r2, [sp, #72]	@ 0x48
100183b2:	db02      	blt.n	100183ba <_vfprintf_r+0x1622>
100183b4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
100183b6:	4293      	cmp	r3, r2
100183b8:	da44      	bge.n	10018444 <_vfprintf_r+0x16ac>
100183ba:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
100183bc:	3b02      	subs	r3, #2
100183be:	930e      	str	r3, [sp, #56]	@ 0x38
100183c0:	1e53      	subs	r3, r2, #1
100183c2:	9329      	str	r3, [sp, #164]	@ 0xa4
100183c4:	f89d 1038 	ldrb.w	r1, [sp, #56]	@ 0x38
100183c8:	2000      	movs	r0, #0
100183ca:	e6a1      	b.n	10018110 <_vfprintf_r+0x1378>
100183cc:	222d      	movs	r2, #45	@ 0x2d
100183ce:	2300      	movs	r3, #0
100183d0:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
100183d4:	9309      	str	r3, [sp, #36]	@ 0x24
100183d6:	f7fe bf1d 	b.w	10017214 <_vfprintf_r+0x47c>
100183da:	4645      	mov	r5, r8
100183dc:	460c      	mov	r4, r1
100183de:	4690      	mov	r8, r2
100183e0:	3301      	adds	r3, #1
100183e2:	9a15      	ldr	r2, [sp, #84]	@ 0x54
100183e4:	f8c8 2000 	str.w	r2, [r8]
100183e8:	4434      	add	r4, r6
100183ea:	2b07      	cmp	r3, #7
100183ec:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
100183f0:	f8c8 6004 	str.w	r6, [r8, #4]
100183f4:	f300 8226 	bgt.w	10018844 <_vfprintf_r+0x1aac>
100183f8:	f108 0808 	add.w	r8, r8, #8
100183fc:	f7ff bacb 	b.w	10017996 <_vfprintf_r+0xbfe>
10018400:	222d      	movs	r2, #45	@ 0x2d
10018402:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
10018406:	f7fe bef1 	b.w	100171ec <_vfprintf_r+0x454>
1001840a:	2300      	movs	r3, #0
1001840c:	9808      	ldr	r0, [sp, #32]
1001840e:	9700      	str	r7, [sp, #0]
10018410:	aa2b      	add	r2, sp, #172	@ 0xac
10018412:	4619      	mov	r1, r3
10018414:	f7fc fc26 	bl	10014c64 <_wcsrtombs_r>
10018418:	f1b0 3fff 	cmp.w	r0, #4294967295	@ 0xffffffff
1001841c:	4683      	mov	fp, r0
1001841e:	f000 8209 	beq.w	10018834 <_vfprintf_r+0x1a9c>
10018422:	952b      	str	r5, [sp, #172]	@ 0xac
10018424:	e59e      	b.n	10017f64 <_vfprintf_r+0x11cc>
10018426:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
10018428:	991d      	ldr	r1, [sp, #116]	@ 0x74
1001842a:	1aed      	subs	r5, r5, r3
1001842c:	461a      	mov	r2, r3
1001842e:	4628      	mov	r0, r5
10018430:	f7fa f89c 	bl	1001256c <strncpy>
10018434:	f898 3001 	ldrb.w	r3, [r8, #1]
10018438:	b10b      	cbz	r3, 1001843e <_vfprintf_r+0x16a6>
1001843a:	f108 0801 	add.w	r8, r8, #1
1001843e:	f04f 0c00 	mov.w	ip, #0
10018442:	e4f9      	b.n	10017e38 <_vfprintf_r+0x10a0>
10018444:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
10018446:	4293      	cmp	r3, r2
10018448:	f300 8194 	bgt.w	10018774 <_vfprintf_r+0x19dc>
1001844c:	9b06      	ldr	r3, [sp, #24]
1001844e:	07de      	lsls	r6, r3, #31
10018450:	f140 824a 	bpl.w	100188e8 <_vfprintf_r+0x1b50>
10018454:	9b18      	ldr	r3, [sp, #96]	@ 0x60
10018456:	eb02 0b03 	add.w	fp, r2, r3
1001845a:	9b06      	ldr	r3, [sp, #24]
1001845c:	055c      	lsls	r4, r3, #21
1001845e:	d502      	bpl.n	10018466 <_vfprintf_r+0x16ce>
10018460:	2a00      	cmp	r2, #0
10018462:	f300 824a 	bgt.w	100188fa <_vfprintf_r+0x1b62>
10018466:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
1001846a:	9306      	str	r3, [sp, #24]
1001846c:	f8dd 9054 	ldr.w	r9, [sp, #84]	@ 0x54
10018470:	2367      	movs	r3, #103	@ 0x67
10018472:	930e      	str	r3, [sp, #56]	@ 0x38
10018474:	2300      	movs	r3, #0
10018476:	9314      	str	r3, [sp, #80]	@ 0x50
10018478:	9310      	str	r3, [sp, #64]	@ 0x40
1001847a:	e694      	b.n	100181a6 <_vfprintf_r+0x140e>
1001847c:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
1001847e:	42a3      	cmp	r3, r4
10018480:	f4bf ae31 	bcs.w	100180e6 <_vfprintf_r+0x134e>
10018484:	2130      	movs	r1, #48	@ 0x30
10018486:	1c5a      	adds	r2, r3, #1
10018488:	9230      	str	r2, [sp, #192]	@ 0xc0
1001848a:	7019      	strb	r1, [r3, #0]
1001848c:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
1001848e:	429c      	cmp	r4, r3
10018490:	d8f9      	bhi.n	10018486 <_vfprintf_r+0x16ee>
10018492:	e628      	b.n	100180e6 <_vfprintf_r+0x134e>
10018494:	4621      	mov	r1, r4
10018496:	461c      	mov	r4, r3
10018498:	9b10      	ldr	r3, [sp, #64]	@ 0x40
1001849a:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
1001849e:	f8cd 9038 	str.w	r9, [sp, #56]	@ 0x38
100184a2:	4642      	mov	r2, r8
100184a4:	4f2c      	ldr	r7, [pc, #176]	@ (10018558 <_vfprintf_r+0x17c0>)
100184a6:	f8dd 9050 	ldr.w	r9, [sp, #80]	@ 0x50
100184aa:	f8dd 8078 	ldr.w	r8, [sp, #120]	@ 0x78
100184ae:	f8dd a06c 	ldr.w	sl, [sp, #108]	@ 0x6c
100184b2:	f8dd b020 	ldr.w	fp, [sp, #32]
100184b6:	b37b      	cbz	r3, 10018518 <_vfprintf_r+0x1780>
100184b8:	f1b9 0f00 	cmp.w	r9, #0
100184bc:	f000 8085 	beq.w	100185ca <_vfprintf_r+0x1832>
100184c0:	f109 39ff 	add.w	r9, r9, #4294967295	@ 0xffffffff
100184c4:	9833      	ldr	r0, [sp, #204]	@ 0xcc
100184c6:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
100184c8:	3001      	adds	r0, #1
100184ca:	4441      	add	r1, r8
100184cc:	2807      	cmp	r0, #7
100184ce:	e9c2 3800 	strd	r3, r8, [r2]
100184d2:	9134      	str	r1, [sp, #208]	@ 0xd0
100184d4:	9033      	str	r0, [sp, #204]	@ 0xcc
100184d6:	dc6d      	bgt.n	100185b4 <_vfprintf_r+0x181c>
100184d8:	3208      	adds	r2, #8
100184da:	9b09      	ldr	r3, [sp, #36]	@ 0x24
100184dc:	f89a 0000 	ldrb.w	r0, [sl]
100184e0:	1b1e      	subs	r6, r3, r4
100184e2:	4286      	cmp	r6, r0
100184e4:	bfa8      	it	ge
100184e6:	4606      	movge	r6, r0
100184e8:	2e00      	cmp	r6, #0
100184ea:	dd0b      	ble.n	10018504 <_vfprintf_r+0x176c>
100184ec:	9833      	ldr	r0, [sp, #204]	@ 0xcc
100184ee:	3001      	adds	r0, #1
100184f0:	4431      	add	r1, r6
100184f2:	2807      	cmp	r0, #7
100184f4:	e9c2 4600 	strd	r4, r6, [r2]
100184f8:	9134      	str	r1, [sp, #208]	@ 0xd0
100184fa:	9033      	str	r0, [sp, #204]	@ 0xcc
100184fc:	dc6b      	bgt.n	100185d6 <_vfprintf_r+0x183e>
100184fe:	f89a 0000 	ldrb.w	r0, [sl]
10018502:	3208      	adds	r2, #8
10018504:	2e00      	cmp	r6, #0
10018506:	bfac      	ite	ge
10018508:	1b85      	subge	r5, r0, r6
1001850a:	4605      	movlt	r5, r0
1001850c:	2d00      	cmp	r5, #0
1001850e:	dc14      	bgt.n	1001853a <_vfprintf_r+0x17a2>
10018510:	4404      	add	r4, r0
10018512:	9b10      	ldr	r3, [sp, #64]	@ 0x40
10018514:	2b00      	cmp	r3, #0
10018516:	d1cf      	bne.n	100184b8 <_vfprintf_r+0x1720>
10018518:	f1b9 0f00 	cmp.w	r9, #0
1001851c:	d1d0      	bne.n	100184c0 <_vfprintf_r+0x1728>
1001851e:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
10018522:	f8cd a06c 	str.w	sl, [sp, #108]	@ 0x6c
10018526:	46a2      	mov	sl, r4
10018528:	45da      	cmp	sl, fp
1001852a:	f8dd 9038 	ldr.w	r9, [sp, #56]	@ 0x38
1001852e:	4690      	mov	r8, r2
10018530:	460c      	mov	r4, r1
10018532:	bf28      	it	cs
10018534:	46da      	movcs	sl, fp
10018536:	f7ff ba35 	b.w	100179a4 <_vfprintf_r+0xc0c>
1001853a:	2d10      	cmp	r5, #16
1001853c:	9833      	ldr	r0, [sp, #204]	@ 0xcc
1001853e:	f340 821a 	ble.w	10018976 <_vfprintf_r+0x1bde>
10018542:	4623      	mov	r3, r4
10018544:	463e      	mov	r6, r7
10018546:	462c      	mov	r4, r5
10018548:	461d      	mov	r5, r3
1001854a:	e00c      	b.n	10018566 <_vfprintf_r+0x17ce>
1001854c:	40300000 	.word	0x40300000
10018550:	3fe00000 	.word	0x3fe00000
10018554:	1001d994 	.word	0x1001d994
10018558:	1001dba0 	.word	0x1001dba0
1001855c:	3c10      	subs	r4, #16
1001855e:	2c10      	cmp	r4, #16
10018560:	f102 0208 	add.w	r2, r2, #8
10018564:	dd16      	ble.n	10018594 <_vfprintf_r+0x17fc>
10018566:	3001      	adds	r0, #1
10018568:	3110      	adds	r1, #16
1001856a:	2310      	movs	r3, #16
1001856c:	2807      	cmp	r0, #7
1001856e:	e9cd 0133 	strd	r0, r1, [sp, #204]	@ 0xcc
10018572:	6017      	str	r7, [r2, #0]
10018574:	6053      	str	r3, [r2, #4]
10018576:	ddf1      	ble.n	1001855c <_vfprintf_r+0x17c4>
10018578:	9907      	ldr	r1, [sp, #28]
1001857a:	aa32      	add	r2, sp, #200	@ 0xc8
1001857c:	4658      	mov	r0, fp
1001857e:	f000 faaf 	bl	10018ae0 <__sprint_r>
10018582:	2800      	cmp	r0, #0
10018584:	f47e ad60 	bne.w	10017048 <_vfprintf_r+0x2b0>
10018588:	3c10      	subs	r4, #16
1001858a:	2c10      	cmp	r4, #16
1001858c:	e9dd 0133 	ldrd	r0, r1, [sp, #204]	@ 0xcc
10018590:	aa35      	add	r2, sp, #212	@ 0xd4
10018592:	dce8      	bgt.n	10018566 <_vfprintf_r+0x17ce>
10018594:	462b      	mov	r3, r5
10018596:	4625      	mov	r5, r4
10018598:	461c      	mov	r4, r3
1001859a:	3001      	adds	r0, #1
1001859c:	4429      	add	r1, r5
1001859e:	2807      	cmp	r0, #7
100185a0:	e9cd 0133 	strd	r0, r1, [sp, #204]	@ 0xcc
100185a4:	6016      	str	r6, [r2, #0]
100185a6:	6055      	str	r5, [r2, #4]
100185a8:	dc4b      	bgt.n	10018642 <_vfprintf_r+0x18aa>
100185aa:	f89a 0000 	ldrb.w	r0, [sl]
100185ae:	3208      	adds	r2, #8
100185b0:	4404      	add	r4, r0
100185b2:	e7ae      	b.n	10018512 <_vfprintf_r+0x177a>
100185b4:	9907      	ldr	r1, [sp, #28]
100185b6:	aa32      	add	r2, sp, #200	@ 0xc8
100185b8:	4658      	mov	r0, fp
100185ba:	f000 fa91 	bl	10018ae0 <__sprint_r>
100185be:	2800      	cmp	r0, #0
100185c0:	f47e ad42 	bne.w	10017048 <_vfprintf_r+0x2b0>
100185c4:	9934      	ldr	r1, [sp, #208]	@ 0xd0
100185c6:	aa35      	add	r2, sp, #212	@ 0xd4
100185c8:	e787      	b.n	100184da <_vfprintf_r+0x1742>
100185ca:	9b10      	ldr	r3, [sp, #64]	@ 0x40
100185cc:	3b01      	subs	r3, #1
100185ce:	f10a 3aff 	add.w	sl, sl, #4294967295	@ 0xffffffff
100185d2:	9310      	str	r3, [sp, #64]	@ 0x40
100185d4:	e776      	b.n	100184c4 <_vfprintf_r+0x172c>
100185d6:	9907      	ldr	r1, [sp, #28]
100185d8:	aa32      	add	r2, sp, #200	@ 0xc8
100185da:	4658      	mov	r0, fp
100185dc:	f000 fa80 	bl	10018ae0 <__sprint_r>
100185e0:	2800      	cmp	r0, #0
100185e2:	f47e ad31 	bne.w	10017048 <_vfprintf_r+0x2b0>
100185e6:	f89a 0000 	ldrb.w	r0, [sl]
100185ea:	9934      	ldr	r1, [sp, #208]	@ 0xd0
100185ec:	aa35      	add	r2, sp, #212	@ 0xd4
100185ee:	e789      	b.n	10018504 <_vfprintf_r+0x176c>
100185f0:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
100185f4:	960d      	str	r6, [sp, #52]	@ 0x34
100185f6:	f8cd b018 	str.w	fp, [sp, #24]
100185fa:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
100185fe:	f8cd b050 	str.w	fp, [sp, #80]	@ 0x50
10018602:	f8cd b040 	str.w	fp, [sp, #64]	@ 0x40
10018606:	f8cd b048 	str.w	fp, [sp, #72]	@ 0x48
1001860a:	f8cd b030 	str.w	fp, [sp, #48]	@ 0x30
1001860e:	f7fe bdfe 	b.w	1001720e <_vfprintf_r+0x476>
10018612:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10018616:	aa32      	add	r2, sp, #200	@ 0xc8
10018618:	f000 fa62 	bl	10018ae0 <__sprint_r>
1001861c:	2800      	cmp	r0, #0
1001861e:	f47f a8bf 	bne.w	100177a0 <_vfprintf_r+0xa08>
10018622:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
10018624:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10018626:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001862a:	f7ff baa5 	b.w	10017b78 <_vfprintf_r+0xde0>
1001862e:	930c      	str	r3, [sp, #48]	@ 0x30
10018630:	e9dd 1216 	ldrd	r1, r2, [sp, #88]	@ 0x58
10018634:	f102 4300 	add.w	r3, r2, #2147483648	@ 0x80000000
10018638:	9325      	str	r3, [sp, #148]	@ 0x94
1001863a:	232d      	movs	r3, #45	@ 0x2d
1001863c:	9124      	str	r1, [sp, #144]	@ 0x90
1001863e:	931f      	str	r3, [sp, #124]	@ 0x7c
10018640:	e5fc      	b.n	1001823c <_vfprintf_r+0x14a4>
10018642:	9907      	ldr	r1, [sp, #28]
10018644:	aa32      	add	r2, sp, #200	@ 0xc8
10018646:	4658      	mov	r0, fp
10018648:	f000 fa4a 	bl	10018ae0 <__sprint_r>
1001864c:	2800      	cmp	r0, #0
1001864e:	f47e acfb 	bne.w	10017048 <_vfprintf_r+0x2b0>
10018652:	f89a 0000 	ldrb.w	r0, [sl]
10018656:	9934      	ldr	r1, [sp, #208]	@ 0xd0
10018658:	aa35      	add	r2, sp, #212	@ 0xd4
1001865a:	4404      	add	r4, r0
1001865c:	e759      	b.n	10018512 <_vfprintf_r+0x177a>
1001865e:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10018662:	aa32      	add	r2, sp, #200	@ 0xc8
10018664:	f000 fa3c 	bl	10018ae0 <__sprint_r>
10018668:	2800      	cmp	r0, #0
1001866a:	f47f a899 	bne.w	100177a0 <_vfprintf_r+0xa08>
1001866e:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10018670:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10018674:	f7ff b988 	b.w	10017988 <_vfprintf_r+0xbf0>
10018678:	2378      	movs	r3, #120	@ 0x78
1001867a:	e5c3      	b.n	10018204 <_vfprintf_r+0x146c>
1001867c:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10018680:	aa32      	add	r2, sp, #200	@ 0xc8
10018682:	f000 fa2d 	bl	10018ae0 <__sprint_r>
10018686:	2800      	cmp	r0, #0
10018688:	f47f a88a 	bne.w	100177a0 <_vfprintf_r+0xa08>
1001868c:	9d29      	ldr	r5, [sp, #164]	@ 0xa4
1001868e:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10018690:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10018694:	f7ff b99c 	b.w	100179d0 <_vfprintf_r+0xc38>
10018698:	49ab      	ldr	r1, [pc, #684]	@ (10018948 <_vfprintf_r+0x1bb0>)
1001869a:	9115      	str	r1, [sp, #84]	@ 0x54
1001869c:	f7fe bdee 	b.w	1001727c <_vfprintf_r+0x4e4>
100186a0:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
100186a4:	aa32      	add	r2, sp, #200	@ 0xc8
100186a6:	f000 fa1b 	bl	10018ae0 <__sprint_r>
100186aa:	2800      	cmp	r0, #0
100186ac:	f47f a878 	bne.w	100177a0 <_vfprintf_r+0xa08>
100186b0:	9d29      	ldr	r5, [sp, #164]	@ 0xa4
100186b2:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
100186b4:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
100186b6:	1b5d      	subs	r5, r3, r5
100186b8:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
100186bc:	f7ff b99f 	b.w	100179fe <_vfprintf_r+0xc66>
100186c0:	9b06      	ldr	r3, [sp, #24]
100186c2:	9912      	ldr	r1, [sp, #72]	@ 0x48
100186c4:	9a09      	ldr	r2, [sp, #36]	@ 0x24
100186c6:	f003 0301 	and.w	r3, r3, #1
100186ca:	2900      	cmp	r1, #0
100186cc:	ea43 0302 	orr.w	r3, r3, r2
100186d0:	f340 815d 	ble.w	1001898e <_vfprintf_r+0x1bf6>
100186d4:	2b00      	cmp	r3, #0
100186d6:	f040 8109 	bne.w	100188ec <_vfprintf_r+0x1b54>
100186da:	2366      	movs	r3, #102	@ 0x66
100186dc:	f8dd b048 	ldr.w	fp, [sp, #72]	@ 0x48
100186e0:	930e      	str	r3, [sp, #56]	@ 0x38
100186e2:	9b06      	ldr	r3, [sp, #24]
100186e4:	055a      	lsls	r2, r3, #21
100186e6:	f100 810a 	bmi.w	100188fe <_vfprintf_r+0x1b66>
100186ea:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
100186ee:	f8dd 9054 	ldr.w	r9, [sp, #84]	@ 0x54
100186f2:	9306      	str	r3, [sp, #24]
100186f4:	e6be      	b.n	10018474 <_vfprintf_r+0x16dc>
100186f6:	2200      	movs	r2, #0
100186f8:	9209      	str	r2, [sp, #36]	@ 0x24
100186fa:	f7fe bbc6 	b.w	10016e8a <_vfprintf_r+0xf2>
100186fe:	9b07      	ldr	r3, [sp, #28]
10018700:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
10018702:	07dd      	lsls	r5, r3, #31
10018704:	d407      	bmi.n	10018716 <_vfprintf_r+0x197e>
10018706:	9b07      	ldr	r3, [sp, #28]
10018708:	899b      	ldrh	r3, [r3, #12]
1001870a:	059c      	lsls	r4, r3, #22
1001870c:	d403      	bmi.n	10018716 <_vfprintf_r+0x197e>
1001870e:	9b07      	ldr	r3, [sp, #28]
10018710:	6d98      	ldr	r0, [r3, #88]	@ 0x58
10018712:	f7fc f9b3 	bl	10014a7c <__retarget_lock_release_recursive>
10018716:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
1001871a:	930a      	str	r3, [sp, #40]	@ 0x28
1001871c:	f7fe bca5 	b.w	1001706a <_vfprintf_r+0x2d2>
10018720:	4256      	negs	r6, r2
10018722:	3210      	adds	r2, #16
10018724:	4a89      	ldr	r2, [pc, #548]	@ (1001894c <_vfprintf_r+0x1bb4>)
10018726:	9215      	str	r2, [sp, #84]	@ 0x54
10018728:	da34      	bge.n	10018794 <_vfprintf_r+0x19fc>
1001872a:	46aa      	mov	sl, r5
1001872c:	2710      	movs	r7, #16
1001872e:	4615      	mov	r5, r2
10018730:	e004      	b.n	1001873c <_vfprintf_r+0x19a4>
10018732:	f108 0808 	add.w	r8, r8, #8
10018736:	3e10      	subs	r6, #16
10018738:	2e10      	cmp	r6, #16
1001873a:	dd2a      	ble.n	10018792 <_vfprintf_r+0x19fa>
1001873c:	3301      	adds	r3, #1
1001873e:	3410      	adds	r4, #16
10018740:	2b07      	cmp	r3, #7
10018742:	e9c8 5700 	strd	r5, r7, [r8]
10018746:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
1001874a:	ddf2      	ble.n	10018732 <_vfprintf_r+0x199a>
1001874c:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10018750:	aa32      	add	r2, sp, #200	@ 0xc8
10018752:	f000 f9c5 	bl	10018ae0 <__sprint_r>
10018756:	2800      	cmp	r0, #0
10018758:	f47f a822 	bne.w	100177a0 <_vfprintf_r+0xa08>
1001875c:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
10018760:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10018764:	e7e7      	b.n	10018736 <_vfprintf_r+0x199e>
10018766:	2300      	movs	r3, #0
10018768:	930c      	str	r3, [sp, #48]	@ 0x30
1001876a:	ad45      	add	r5, sp, #276	@ 0x114
1001876c:	e40c      	b.n	10017f88 <_vfprintf_r+0x11f0>
1001876e:	19ac      	adds	r4, r5, r6
10018770:	2747      	movs	r7, #71	@ 0x47
10018772:	e4ae      	b.n	100180d2 <_vfprintf_r+0x133a>
10018774:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
10018776:	9a18      	ldr	r2, [sp, #96]	@ 0x60
10018778:	eb03 0b02 	add.w	fp, r3, r2
1001877c:	9b12      	ldr	r3, [sp, #72]	@ 0x48
1001877e:	2b00      	cmp	r3, #0
10018780:	f340 80ee 	ble.w	10018960 <_vfprintf_r+0x1bc8>
10018784:	2367      	movs	r3, #103	@ 0x67
10018786:	930e      	str	r3, [sp, #56]	@ 0x38
10018788:	e7ab      	b.n	100186e2 <_vfprintf_r+0x194a>
1001878a:	4a6f      	ldr	r2, [pc, #444]	@ (10018948 <_vfprintf_r+0x1bb0>)
1001878c:	9215      	str	r2, [sp, #84]	@ 0x54
1001878e:	f7ff b8ce 	b.w	1001792e <_vfprintf_r+0xb96>
10018792:	4655      	mov	r5, sl
10018794:	3301      	adds	r3, #1
10018796:	9a15      	ldr	r2, [sp, #84]	@ 0x54
10018798:	f8c8 2000 	str.w	r2, [r8]
1001879c:	4434      	add	r4, r6
1001879e:	2b07      	cmp	r3, #7
100187a0:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
100187a4:	f8c8 6004 	str.w	r6, [r8, #4]
100187a8:	f77f a9fb 	ble.w	10017ba2 <_vfprintf_r+0xe0a>
100187ac:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
100187b0:	aa32      	add	r2, sp, #200	@ 0xc8
100187b2:	f000 f995 	bl	10018ae0 <__sprint_r>
100187b6:	2800      	cmp	r0, #0
100187b8:	f47e aff2 	bne.w	100177a0 <_vfprintf_r+0xa08>
100187bc:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
100187c0:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
100187c4:	f7ff b800 	b.w	100177c8 <_vfprintf_r+0xa30>
100187c8:	9b12      	ldr	r3, [sp, #72]	@ 0x48
100187ca:	9730      	str	r7, [sp, #192]	@ 0xc0
100187cc:	7bd9      	ldrb	r1, [r3, #15]
100187ce:	f816 2c01 	ldrb.w	r2, [r6, #-1]
100187d2:	428a      	cmp	r2, r1
100187d4:	4633      	mov	r3, r6
100187d6:	d109      	bne.n	100187ec <_vfprintf_r+0x1a54>
100187d8:	2030      	movs	r0, #48	@ 0x30
100187da:	f803 0c01 	strb.w	r0, [r3, #-1]
100187de:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
100187e0:	1e5a      	subs	r2, r3, #1
100187e2:	9230      	str	r2, [sp, #192]	@ 0xc0
100187e4:	f813 2c01 	ldrb.w	r2, [r3, #-1]
100187e8:	4291      	cmp	r1, r2
100187ea:	d0f6      	beq.n	100187da <_vfprintf_r+0x1a42>
100187ec:	2a39      	cmp	r2, #57	@ 0x39
100187ee:	bf0b      	itete	eq
100187f0:	9a12      	ldreq	r2, [sp, #72]	@ 0x48
100187f2:	3201      	addne	r2, #1
100187f4:	7a92      	ldrbeq	r2, [r2, #10]
100187f6:	b2d2      	uxtbne	r2, r2
100187f8:	f803 2c01 	strb.w	r2, [r3, #-1]
100187fc:	4633      	mov	r3, r6
100187fe:	e595      	b.n	1001832c <_vfprintf_r+0x1594>
10018800:	4a52      	ldr	r2, [pc, #328]	@ (1001894c <_vfprintf_r+0x1bb4>)
10018802:	9215      	str	r2, [sp, #84]	@ 0x54
10018804:	f7fe bf78 	b.w	100176f8 <_vfprintf_r+0x960>
10018808:	9808      	ldr	r0, [sp, #32]
1001880a:	1c59      	adds	r1, r3, #1
1001880c:	f7fb fd38 	bl	10014280 <_malloc_r>
10018810:	4605      	mov	r5, r0
10018812:	b178      	cbz	r0, 10018834 <_vfprintf_r+0x1a9c>
10018814:	900c      	str	r0, [sp, #48]	@ 0x30
10018816:	e504      	b.n	10018222 <_vfprintf_r+0x148a>
10018818:	2800      	cmp	r0, #0
1001881a:	d162      	bne.n	100188e2 <_vfprintf_r+0x1b4a>
1001881c:	2230      	movs	r2, #48	@ 0x30
1001881e:	f88d 20b2 	strb.w	r2, [sp, #178]	@ 0xb2
10018822:	f10d 02b3 	add.w	r2, sp, #179	@ 0xb3
10018826:	3330      	adds	r3, #48	@ 0x30
10018828:	f802 3b01 	strb.w	r3, [r2], #1
1001882c:	ab2c      	add	r3, sp, #176	@ 0xb0
1001882e:	1ad3      	subs	r3, r2, r3
10018830:	931c      	str	r3, [sp, #112]	@ 0x70
10018832:	e4a3      	b.n	1001817c <_vfprintf_r+0x13e4>
10018834:	9a07      	ldr	r2, [sp, #28]
10018836:	f9b2 300c 	ldrsh.w	r3, [r2, #12]
1001883a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
1001883e:	8193      	strh	r3, [r2, #12]
10018840:	f7fe bc0b 	b.w	1001705a <_vfprintf_r+0x2c2>
10018844:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10018848:	aa32      	add	r2, sp, #200	@ 0xc8
1001884a:	f000 f949 	bl	10018ae0 <__sprint_r>
1001884e:	2800      	cmp	r0, #0
10018850:	f47e afa6 	bne.w	100177a0 <_vfprintf_r+0xa08>
10018854:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10018856:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001885a:	f7ff b89c 	b.w	10017996 <_vfprintf_r+0xbfe>
1001885e:	4b3c      	ldr	r3, [pc, #240]	@ (10018950 <_vfprintf_r+0x1bb8>)
10018860:	4a3c      	ldr	r2, [pc, #240]	@ (10018954 <_vfprintf_r+0x1bbc>)
10018862:	990e      	ldr	r1, [sp, #56]	@ 0x38
10018864:	2961      	cmp	r1, #97	@ 0x61
10018866:	bf18      	it	ne
10018868:	461a      	movne	r2, r3
1001886a:	2301      	movs	r3, #1
1001886c:	9212      	str	r2, [sp, #72]	@ 0x48
1001886e:	9329      	str	r3, [sp, #164]	@ 0xa4
10018870:	e4ff      	b.n	10018272 <_vfprintf_r+0x14da>
10018872:	2306      	movs	r3, #6
10018874:	9309      	str	r3, [sp, #36]	@ 0x24
10018876:	f7ff b9f1 	b.w	10017c5c <_vfprintf_r+0xec4>
1001887a:	9b06      	ldr	r3, [sp, #24]
1001887c:	07df      	lsls	r7, r3, #31
1001887e:	f57f ac86 	bpl.w	1001818e <_vfprintf_r+0x13f6>
10018882:	e482      	b.n	1001818a <_vfprintf_r+0x13f2>
10018884:	e9dd 0124 	ldrd	r0, r1, [sp, #144]	@ 0x90
10018888:	2200      	movs	r2, #0
1001888a:	2300      	movs	r3, #0
1001888c:	f002 fc78 	bl	1001b180 <__aeabi_dcmpeq>
10018890:	2800      	cmp	r0, #0
10018892:	f47f ac1c 	bne.w	100180ce <_vfprintf_r+0x1336>
10018896:	f1c6 0601 	rsb	r6, r6, #1
1001889a:	9629      	str	r6, [sp, #164]	@ 0xa4
1001889c:	e418      	b.n	100180d0 <_vfprintf_r+0x1338>
1001889e:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
100188a0:	4d2d      	ldr	r5, [pc, #180]	@ (10018958 <_vfprintf_r+0x1bc0>)
100188a2:	2b00      	cmp	r3, #0
100188a4:	bfb4      	ite	lt
100188a6:	222d      	movlt	r2, #45	@ 0x2d
100188a8:	f89d 209f 	ldrbge.w	r2, [sp, #159]	@ 0x9f
100188ac:	4b2b      	ldr	r3, [pc, #172]	@ (1001895c <_vfprintf_r+0x1bc4>)
100188ae:	bfb8      	it	lt
100188b0:	f88d 209f 	strblt.w	r2, [sp, #159]	@ 0x9f
100188b4:	f029 0980 	bic.w	r9, r9, #128	@ 0x80
100188b8:	f7fe bc9c 	b.w	100171f4 <_vfprintf_r+0x45c>
100188bc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
100188be:	9306      	str	r3, [sp, #24]
100188c0:	469b      	mov	fp, r3
100188c2:	2373      	movs	r3, #115	@ 0x73
100188c4:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
100188c8:	960d      	str	r6, [sp, #52]	@ 0x34
100188ca:	9009      	str	r0, [sp, #36]	@ 0x24
100188cc:	9014      	str	r0, [sp, #80]	@ 0x50
100188ce:	9010      	str	r0, [sp, #64]	@ 0x40
100188d0:	930e      	str	r3, [sp, #56]	@ 0x38
100188d2:	f7fe bc9c 	b.w	1001720e <_vfprintf_r+0x476>
100188d6:	f8dd 9018 	ldr.w	r9, [sp, #24]
100188da:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
100188de:	f7ff bb41 	b.w	10017f64 <_vfprintf_r+0x11cc>
100188e2:	f10d 02b2 	add.w	r2, sp, #178	@ 0xb2
100188e6:	e79e      	b.n	10018826 <_vfprintf_r+0x1a8e>
100188e8:	4693      	mov	fp, r2
100188ea:	e5b6      	b.n	1001845a <_vfprintf_r+0x16c2>
100188ec:	9b18      	ldr	r3, [sp, #96]	@ 0x60
100188ee:	18cf      	adds	r7, r1, r3
100188f0:	443a      	add	r2, r7
100188f2:	2366      	movs	r3, #102	@ 0x66
100188f4:	4693      	mov	fp, r2
100188f6:	930e      	str	r3, [sp, #56]	@ 0x38
100188f8:	e6f3      	b.n	100186e2 <_vfprintf_r+0x194a>
100188fa:	2367      	movs	r3, #103	@ 0x67
100188fc:	930e      	str	r3, [sp, #56]	@ 0x38
100188fe:	991b      	ldr	r1, [sp, #108]	@ 0x6c
10018900:	780b      	ldrb	r3, [r1, #0]
10018902:	2bff      	cmp	r3, #255	@ 0xff
10018904:	d062      	beq.n	100189cc <_vfprintf_r+0x1c34>
10018906:	2400      	movs	r4, #0
10018908:	9a12      	ldr	r2, [sp, #72]	@ 0x48
1001890a:	4620      	mov	r0, r4
1001890c:	e003      	b.n	10018916 <_vfprintf_r+0x1b7e>
1001890e:	3001      	adds	r0, #1
10018910:	3101      	adds	r1, #1
10018912:	2bff      	cmp	r3, #255	@ 0xff
10018914:	d008      	beq.n	10018928 <_vfprintf_r+0x1b90>
10018916:	4293      	cmp	r3, r2
10018918:	da06      	bge.n	10018928 <_vfprintf_r+0x1b90>
1001891a:	1ad2      	subs	r2, r2, r3
1001891c:	784b      	ldrb	r3, [r1, #1]
1001891e:	2b00      	cmp	r3, #0
10018920:	d1f5      	bne.n	1001890e <_vfprintf_r+0x1b76>
10018922:	780b      	ldrb	r3, [r1, #0]
10018924:	3401      	adds	r4, #1
10018926:	e7f4      	b.n	10018912 <_vfprintf_r+0x1b7a>
10018928:	911b      	str	r1, [sp, #108]	@ 0x6c
1001892a:	9212      	str	r2, [sp, #72]	@ 0x48
1001892c:	9010      	str	r0, [sp, #64]	@ 0x40
1001892e:	9414      	str	r4, [sp, #80]	@ 0x50
10018930:	e9dd 3914 	ldrd	r3, r9, [sp, #80]	@ 0x50
10018934:	9a10      	ldr	r2, [sp, #64]	@ 0x40
10018936:	4413      	add	r3, r2
10018938:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
1001893a:	fb02 bb03 	mla	fp, r2, r3, fp
1001893e:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
10018942:	9306      	str	r3, [sp, #24]
10018944:	e42f      	b.n	100181a6 <_vfprintf_r+0x140e>
10018946:	bf00      	nop
10018948:	1001dbb0 	.word	0x1001dbb0
1001894c:	1001dba0 	.word	0x1001dba0
10018950:	1001d994 	.word	0x1001d994
10018954:	1001d980 	.word	0x1001d980
10018958:	1001d978 	.word	0x1001d978
1001895c:	1001d97c 	.word	0x1001d97c
10018960:	f1c3 0301 	rsb	r3, r3, #1
10018964:	449b      	add	fp, r3
10018966:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
1001896a:	9306      	str	r3, [sp, #24]
1001896c:	2367      	movs	r3, #103	@ 0x67
1001896e:	f8dd 9054 	ldr.w	r9, [sp, #84]	@ 0x54
10018972:	930e      	str	r3, [sp, #56]	@ 0x38
10018974:	e57e      	b.n	10018474 <_vfprintf_r+0x16dc>
10018976:	4e1b      	ldr	r6, [pc, #108]	@ (100189e4 <_vfprintf_r+0x1c4c>)
10018978:	e60f      	b.n	1001859a <_vfprintf_r+0x1802>
1001897a:	2302      	movs	r3, #2
1001897c:	931c      	str	r3, [sp, #112]	@ 0x70
1001897e:	f7ff bbfd 	b.w	1001817c <_vfprintf_r+0x13e4>
10018982:	4a18      	ldr	r2, [pc, #96]	@ (100189e4 <_vfprintf_r+0x1c4c>)
10018984:	9215      	str	r2, [sp, #84]	@ 0x54
10018986:	e52b      	b.n	100183e0 <_vfprintf_r+0x1648>
10018988:	2170      	movs	r1, #112	@ 0x70
1001898a:	f7ff bbc0 	b.w	1001810e <_vfprintf_r+0x1376>
1001898e:	f8dd 9054 	ldr.w	r9, [sp, #84]	@ 0x54
10018992:	b92b      	cbnz	r3, 100189a0 <_vfprintf_r+0x1c08>
10018994:	2301      	movs	r3, #1
10018996:	2266      	movs	r2, #102	@ 0x66
10018998:	9306      	str	r3, [sp, #24]
1001899a:	920e      	str	r2, [sp, #56]	@ 0x38
1001899c:	469b      	mov	fp, r3
1001899e:	e569      	b.n	10018474 <_vfprintf_r+0x16dc>
100189a0:	9b18      	ldr	r3, [sp, #96]	@ 0x60
100189a2:	1c5f      	adds	r7, r3, #1
100189a4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
100189a6:	443b      	add	r3, r7
100189a8:	469b      	mov	fp, r3
100189aa:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
100189ae:	9306      	str	r3, [sp, #24]
100189b0:	2366      	movs	r3, #102	@ 0x66
100189b2:	930e      	str	r3, [sp, #56]	@ 0x38
100189b4:	e55e      	b.n	10018474 <_vfprintf_r+0x16dc>
100189b6:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
100189b8:	7863      	ldrb	r3, [r4, #1]
100189ba:	460c      	mov	r4, r1
100189bc:	f852 1b04 	ldr.w	r1, [r2], #4
100189c0:	920d      	str	r2, [sp, #52]	@ 0x34
100189c2:	ea41 71e1 	orr.w	r1, r1, r1, asr #31
100189c6:	9109      	str	r1, [sp, #36]	@ 0x24
100189c8:	f7fe ba5e 	b.w	10016e88 <_vfprintf_r+0xf0>
100189cc:	2300      	movs	r3, #0
100189ce:	9314      	str	r3, [sp, #80]	@ 0x50
100189d0:	9310      	str	r3, [sp, #64]	@ 0x40
100189d2:	e7ad      	b.n	10018930 <_vfprintf_r+0x1b98>
100189d4:	e9dd 2b07 	ldrd	r2, fp, [sp, #28]
100189d8:	8993      	ldrh	r3, [r2, #12]
100189da:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
100189de:	8193      	strh	r3, [r2, #12]
100189e0:	f7fe bb32 	b.w	10017048 <_vfprintf_r+0x2b0>
100189e4:	1001dba0 	.word	0x1001dba0

100189e8 <__sbprintf>:
100189e8:	b5f0      	push	{r4, r5, r6, r7, lr}
100189ea:	461f      	mov	r7, r3
100189ec:	898b      	ldrh	r3, [r1, #12]
100189ee:	f2ad 4d6c 	subw	sp, sp, #1132	@ 0x46c
100189f2:	f023 0302 	bic.w	r3, r3, #2
100189f6:	f8ad 300c 	strh.w	r3, [sp, #12]
100189fa:	6e4b      	ldr	r3, [r1, #100]	@ 0x64
100189fc:	9319      	str	r3, [sp, #100]	@ 0x64
100189fe:	89cb      	ldrh	r3, [r1, #14]
10018a00:	f8ad 300e 	strh.w	r3, [sp, #14]
10018a04:	69cb      	ldr	r3, [r1, #28]
10018a06:	9307      	str	r3, [sp, #28]
10018a08:	6a4b      	ldr	r3, [r1, #36]	@ 0x24
10018a0a:	9309      	str	r3, [sp, #36]	@ 0x24
10018a0c:	ab1a      	add	r3, sp, #104	@ 0x68
10018a0e:	9300      	str	r3, [sp, #0]
10018a10:	9304      	str	r3, [sp, #16]
10018a12:	f44f 6380 	mov.w	r3, #1024	@ 0x400
10018a16:	4615      	mov	r5, r2
10018a18:	4606      	mov	r6, r0
10018a1a:	9302      	str	r3, [sp, #8]
10018a1c:	9305      	str	r3, [sp, #20]
10018a1e:	a816      	add	r0, sp, #88	@ 0x58
10018a20:	2300      	movs	r3, #0
10018a22:	460c      	mov	r4, r1
10018a24:	9306      	str	r3, [sp, #24]
10018a26:	f7fc f823 	bl	10014a70 <__retarget_lock_init_recursive>
10018a2a:	462a      	mov	r2, r5
10018a2c:	463b      	mov	r3, r7
10018a2e:	4669      	mov	r1, sp
10018a30:	4630      	mov	r0, r6
10018a32:	f7fe f9b1 	bl	10016d98 <_vfprintf_r>
10018a36:	1e05      	subs	r5, r0, #0
10018a38:	db07      	blt.n	10018a4a <__sbprintf+0x62>
10018a3a:	4669      	mov	r1, sp
10018a3c:	4630      	mov	r0, r6
10018a3e:	f7fd f983 	bl	10015d48 <_fflush_r>
10018a42:	2800      	cmp	r0, #0
10018a44:	bf18      	it	ne
10018a46:	f04f 35ff 	movne.w	r5, #4294967295	@ 0xffffffff
10018a4a:	f8bd 300c 	ldrh.w	r3, [sp, #12]
10018a4e:	065b      	lsls	r3, r3, #25
10018a50:	d503      	bpl.n	10018a5a <__sbprintf+0x72>
10018a52:	89a3      	ldrh	r3, [r4, #12]
10018a54:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10018a58:	81a3      	strh	r3, [r4, #12]
10018a5a:	9816      	ldr	r0, [sp, #88]	@ 0x58
10018a5c:	f7fc f80a 	bl	10014a74 <__retarget_lock_close_recursive>
10018a60:	4628      	mov	r0, r5
10018a62:	f20d 4d6c 	addw	sp, sp, #1132	@ 0x46c
10018a66:	bdf0      	pop	{r4, r5, r6, r7, pc}

10018a68 <__sprint_r.part.0>:
10018a68:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
10018a6c:	6e4b      	ldr	r3, [r1, #100]	@ 0x64
10018a6e:	049c      	lsls	r4, r3, #18
10018a70:	4690      	mov	r8, r2
10018a72:	d52e      	bpl.n	10018ad2 <__sprint_r.part.0+0x6a>
10018a74:	6893      	ldr	r3, [r2, #8]
10018a76:	6812      	ldr	r2, [r2, #0]
10018a78:	b34b      	cbz	r3, 10018ace <__sprint_r.part.0+0x66>
10018a7a:	460d      	mov	r5, r1
10018a7c:	4606      	mov	r6, r0
10018a7e:	f102 0908 	add.w	r9, r2, #8
10018a82:	e959 2a02 	ldrd	r2, sl, [r9, #-8]
10018a86:	ea5f 079a 	movs.w	r7, sl, lsr #2
10018a8a:	d016      	beq.n	10018aba <__sprint_r.part.0+0x52>
10018a8c:	f1a2 0b04 	sub.w	fp, r2, #4
10018a90:	2400      	movs	r4, #0
10018a92:	e001      	b.n	10018a98 <__sprint_r.part.0+0x30>
10018a94:	42a7      	cmp	r7, r4
10018a96:	d00e      	beq.n	10018ab6 <__sprint_r.part.0+0x4e>
10018a98:	f85b 1f04 	ldr.w	r1, [fp, #4]!
10018a9c:	462a      	mov	r2, r5
10018a9e:	4630      	mov	r0, r6
10018aa0:	f001 fe66 	bl	1001a770 <_fputwc_r>
10018aa4:	1c43      	adds	r3, r0, #1
10018aa6:	f104 0401 	add.w	r4, r4, #1
10018aaa:	d1f3      	bne.n	10018a94 <__sprint_r.part.0+0x2c>
10018aac:	2300      	movs	r3, #0
10018aae:	e9c8 3301 	strd	r3, r3, [r8, #4]
10018ab2:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
10018ab6:	f8d8 3008 	ldr.w	r3, [r8, #8]
10018aba:	f02a 0a03 	bic.w	sl, sl, #3
10018abe:	eba3 030a 	sub.w	r3, r3, sl
10018ac2:	f8c8 3008 	str.w	r3, [r8, #8]
10018ac6:	f109 0908 	add.w	r9, r9, #8
10018aca:	2b00      	cmp	r3, #0
10018acc:	d1d9      	bne.n	10018a82 <__sprint_r.part.0+0x1a>
10018ace:	2000      	movs	r0, #0
10018ad0:	e7ec      	b.n	10018aac <__sprint_r.part.0+0x44>
10018ad2:	f7fd ff37 	bl	10016944 <__sfvwrite_r>
10018ad6:	2300      	movs	r3, #0
10018ad8:	e9c8 3301 	strd	r3, r3, [r8, #4]
10018adc:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

10018ae0 <__sprint_r>:
10018ae0:	b410      	push	{r4}
10018ae2:	6894      	ldr	r4, [r2, #8]
10018ae4:	b11c      	cbz	r4, 10018aee <__sprint_r+0xe>
10018ae6:	f85d 4b04 	ldr.w	r4, [sp], #4
10018aea:	f7ff bfbd 	b.w	10018a68 <__sprint_r.part.0>
10018aee:	4620      	mov	r0, r4
10018af0:	6054      	str	r4, [r2, #4]
10018af2:	f85d 4b04 	ldr.w	r4, [sp], #4
10018af6:	4770      	bx	lr

10018af8 <_vfiprintf_r>:
10018af8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10018afc:	b0c7      	sub	sp, #284	@ 0x11c
10018afe:	af16      	add	r7, sp, #88	@ 0x58
10018b00:	4683      	mov	fp, r0
10018b02:	9103      	str	r1, [sp, #12]
10018b04:	9206      	str	r2, [sp, #24]
10018b06:	2100      	movs	r1, #0
10018b08:	2208      	movs	r2, #8
10018b0a:	4638      	mov	r0, r7
10018b0c:	461c      	mov	r4, r3
10018b0e:	930a      	str	r3, [sp, #40]	@ 0x28
10018b10:	f7fb fefa 	bl	10014908 <memset>
10018b14:	f1bb 0f00 	cmp.w	fp, #0
10018b18:	d004      	beq.n	10018b24 <_vfiprintf_r+0x2c>
10018b1a:	f8db 3034 	ldr.w	r3, [fp, #52]	@ 0x34
10018b1e:	2b00      	cmp	r3, #0
10018b20:	f000 86b8 	beq.w	10019894 <_vfiprintf_r+0xd9c>
10018b24:	9a03      	ldr	r2, [sp, #12]
10018b26:	6e53      	ldr	r3, [r2, #100]	@ 0x64
10018b28:	f9b2 200c 	ldrsh.w	r2, [r2, #12]
10018b2c:	07db      	lsls	r3, r3, #31
10018b2e:	d402      	bmi.n	10018b36 <_vfiprintf_r+0x3e>
10018b30:	0596      	lsls	r6, r2, #22
10018b32:	f140 859d 	bpl.w	10019670 <_vfiprintf_r+0xb78>
10018b36:	0495      	lsls	r5, r2, #18
10018b38:	d407      	bmi.n	10018b4a <_vfiprintf_r+0x52>
10018b3a:	9903      	ldr	r1, [sp, #12]
10018b3c:	6e4b      	ldr	r3, [r1, #100]	@ 0x64
10018b3e:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
10018b42:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
10018b46:	818a      	strh	r2, [r1, #12]
10018b48:	664b      	str	r3, [r1, #100]	@ 0x64
10018b4a:	0710      	lsls	r0, r2, #28
10018b4c:	f140 80c9 	bpl.w	10018ce2 <_vfiprintf_r+0x1ea>
10018b50:	9b03      	ldr	r3, [sp, #12]
10018b52:	691b      	ldr	r3, [r3, #16]
10018b54:	2b00      	cmp	r3, #0
10018b56:	f000 80c4 	beq.w	10018ce2 <_vfiprintf_r+0x1ea>
10018b5a:	f002 031a 	and.w	r3, r2, #26
10018b5e:	2b0a      	cmp	r3, #10
10018b60:	f000 80ce 	beq.w	10018d00 <_vfiprintf_r+0x208>
10018b64:	2300      	movs	r3, #0
10018b66:	e9cd 331b 	strd	r3, r3, [sp, #108]	@ 0x6c
10018b6a:	e9cd 330e 	strd	r3, r3, [sp, #56]	@ 0x38
10018b6e:	aa1d      	add	r2, sp, #116	@ 0x74
10018b70:	f8df a904 	ldr.w	sl, [pc, #2308]	@ 10019478 <_vfiprintf_r+0x980>
10018b74:	930d      	str	r3, [sp, #52]	@ 0x34
10018b76:	921a      	str	r2, [sp, #104]	@ 0x68
10018b78:	4691      	mov	r9, r2
10018b7a:	9310      	str	r3, [sp, #64]	@ 0x40
10018b7c:	9307      	str	r3, [sp, #28]
10018b7e:	9d06      	ldr	r5, [sp, #24]
10018b80:	f8da 40e4 	ldr.w	r4, [sl, #228]	@ 0xe4
10018b84:	f7fb ff7c 	bl	10014a80 <__locale_mb_cur_max>
10018b88:	462a      	mov	r2, r5
10018b8a:	4603      	mov	r3, r0
10018b8c:	a914      	add	r1, sp, #80	@ 0x50
10018b8e:	9700      	str	r7, [sp, #0]
10018b90:	4658      	mov	r0, fp
10018b92:	47a0      	blx	r4
10018b94:	2800      	cmp	r0, #0
10018b96:	f000 80d2 	beq.w	10018d3e <_vfiprintf_r+0x246>
10018b9a:	f2c0 80c8 	blt.w	10018d2e <_vfiprintf_r+0x236>
10018b9e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
10018ba0:	2a25      	cmp	r2, #37	@ 0x25
10018ba2:	4603      	mov	r3, r0
10018ba4:	d001      	beq.n	10018baa <_vfiprintf_r+0xb2>
10018ba6:	441d      	add	r5, r3
10018ba8:	e7ea      	b.n	10018b80 <_vfiprintf_r+0x88>
10018baa:	9b06      	ldr	r3, [sp, #24]
10018bac:	1aee      	subs	r6, r5, r3
10018bae:	4604      	mov	r4, r0
10018bb0:	f040 80c9 	bne.w	10018d46 <_vfiprintf_r+0x24e>
10018bb4:	2300      	movs	r3, #0
10018bb6:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
10018bba:	786a      	ldrb	r2, [r5, #1]
10018bbc:	f88d 304b 	strb.w	r3, [sp, #75]	@ 0x4b
10018bc0:	9308      	str	r3, [sp, #32]
10018bc2:	1c6c      	adds	r4, r5, #1
10018bc4:	9105      	str	r1, [sp, #20]
10018bc6:	9302      	str	r3, [sp, #8]
10018bc8:	3401      	adds	r4, #1
10018bca:	f1a2 0320 	sub.w	r3, r2, #32
10018bce:	2b5a      	cmp	r3, #90	@ 0x5a
10018bd0:	f200 80ff 	bhi.w	10018dd2 <_vfiprintf_r+0x2da>
10018bd4:	e8df f013 	tbh	[pc, r3, lsl #1]
10018bd8:	00fd0300 	.word	0x00fd0300
10018bdc:	02fa00fd 	.word	0x02fa00fd
10018be0:	00fd00fd 	.word	0x00fd00fd
10018be4:	006b00fd 	.word	0x006b00fd
10018be8:	00fd00fd 	.word	0x00fd00fd
10018bec:	032a0215 	.word	0x032a0215
10018bf0:	022000fd 	.word	0x022000fd
10018bf4:	00fd0310 	.word	0x00fd0310
10018bf8:	005b030a 	.word	0x005b030a
10018bfc:	005b005b 	.word	0x005b005b
10018c00:	005b005b 	.word	0x005b005b
10018c04:	005b005b 	.word	0x005b005b
10018c08:	005b005b 	.word	0x005b005b
10018c0c:	00fd00fd 	.word	0x00fd00fd
10018c10:	00fd00fd 	.word	0x00fd00fd
10018c14:	00fd00fd 	.word	0x00fd00fd
10018c18:	00fd00fd 	.word	0x00fd00fd
10018c1c:	01cb00fd 	.word	0x01cb00fd
10018c20:	00fd025a 	.word	0x00fd025a
10018c24:	00fd00fd 	.word	0x00fd00fd
10018c28:	00fd00fd 	.word	0x00fd00fd
10018c2c:	00fd00fd 	.word	0x00fd00fd
10018c30:	00fd00fd 	.word	0x00fd00fd
10018c34:	022600fd 	.word	0x022600fd
10018c38:	00fd00fd 	.word	0x00fd00fd
10018c3c:	01a300fd 	.word	0x01a300fd
10018c40:	027300fd 	.word	0x027300fd
10018c44:	00fd00fd 	.word	0x00fd00fd
10018c48:	00fd058c 	.word	0x00fd058c
10018c4c:	00fd00fd 	.word	0x00fd00fd
10018c50:	00fd00fd 	.word	0x00fd00fd
10018c54:	00fd00fd 	.word	0x00fd00fd
10018c58:	00fd00fd 	.word	0x00fd00fd
10018c5c:	01cb00fd 	.word	0x01cb00fd
10018c60:	00fd01f0 	.word	0x00fd01f0
10018c64:	00fd00fd 	.word	0x00fd00fd
10018c68:	01f002c1 	.word	0x01f002c1
10018c6c:	00fd007f 	.word	0x00fd007f
10018c70:	00fd032f 	.word	0x00fd032f
10018c74:	058902eb 	.word	0x058902eb
10018c78:	007f02ca 	.word	0x007f02ca
10018c7c:	01a300fd 	.word	0x01a300fd
10018c80:	0586007d 	.word	0x0586007d
10018c84:	00fd00fd 	.word	0x00fd00fd
10018c88:	00fd05af 	.word	0x00fd05af
10018c8c:	007d      	.short	0x007d
10018c8e:	f1a2 0330 	sub.w	r3, r2, #48	@ 0x30
10018c92:	2200      	movs	r2, #0
10018c94:	4611      	mov	r1, r2
10018c96:	f814 2b01 	ldrb.w	r2, [r4], #1
10018c9a:	eb01 0181 	add.w	r1, r1, r1, lsl #2
10018c9e:	eb03 0141 	add.w	r1, r3, r1, lsl #1
10018ca2:	f1a2 0330 	sub.w	r3, r2, #48	@ 0x30
10018ca6:	2b09      	cmp	r3, #9
10018ca8:	d9f5      	bls.n	10018c96 <_vfiprintf_r+0x19e>
10018caa:	9108      	str	r1, [sp, #32]
10018cac:	e78d      	b.n	10018bca <_vfiprintf_r+0xd2>
10018cae:	4658      	mov	r0, fp
10018cb0:	f7fb feec 	bl	10014a8c <_localeconv_r>
10018cb4:	6843      	ldr	r3, [r0, #4]
10018cb6:	9310      	str	r3, [sp, #64]	@ 0x40
10018cb8:	4618      	mov	r0, r3
10018cba:	f7fd fa41 	bl	10016140 <strlen>
10018cbe:	900f      	str	r0, [sp, #60]	@ 0x3c
10018cc0:	4605      	mov	r5, r0
10018cc2:	4658      	mov	r0, fp
10018cc4:	f7fb fee2 	bl	10014a8c <_localeconv_r>
10018cc8:	6883      	ldr	r3, [r0, #8]
10018cca:	930e      	str	r3, [sp, #56]	@ 0x38
10018ccc:	2d00      	cmp	r5, #0
10018cce:	f040 84e3 	bne.w	10019698 <_vfiprintf_r+0xba0>
10018cd2:	7822      	ldrb	r2, [r4, #0]
10018cd4:	e778      	b.n	10018bc8 <_vfiprintf_r+0xd0>
10018cd6:	9b02      	ldr	r3, [sp, #8]
10018cd8:	7822      	ldrb	r2, [r4, #0]
10018cda:	f043 0320 	orr.w	r3, r3, #32
10018cde:	9302      	str	r3, [sp, #8]
10018ce0:	e772      	b.n	10018bc8 <_vfiprintf_r+0xd0>
10018ce2:	9d03      	ldr	r5, [sp, #12]
10018ce4:	4658      	mov	r0, fp
10018ce6:	4629      	mov	r1, r5
10018ce8:	f000 ff90 	bl	10019c0c <__swsetup_r>
10018cec:	2800      	cmp	r0, #0
10018cee:	f040 86a3 	bne.w	10019a38 <_vfiprintf_r+0xf40>
10018cf2:	f9b5 200c 	ldrsh.w	r2, [r5, #12]
10018cf6:	f002 031a 	and.w	r3, r2, #26
10018cfa:	2b0a      	cmp	r3, #10
10018cfc:	f47f af32 	bne.w	10018b64 <_vfiprintf_r+0x6c>
10018d00:	9903      	ldr	r1, [sp, #12]
10018d02:	f9b1 300e 	ldrsh.w	r3, [r1, #14]
10018d06:	2b00      	cmp	r3, #0
10018d08:	f6ff af2c 	blt.w	10018b64 <_vfiprintf_r+0x6c>
10018d0c:	6e4b      	ldr	r3, [r1, #100]	@ 0x64
10018d0e:	07db      	lsls	r3, r3, #31
10018d10:	d402      	bmi.n	10018d18 <_vfiprintf_r+0x220>
10018d12:	0597      	lsls	r7, r2, #22
10018d14:	f140 865b 	bpl.w	100199ce <_vfiprintf_r+0xed6>
10018d18:	9a06      	ldr	r2, [sp, #24]
10018d1a:	9903      	ldr	r1, [sp, #12]
10018d1c:	4623      	mov	r3, r4
10018d1e:	4658      	mov	r0, fp
10018d20:	f000 febe 	bl	10019aa0 <__sbprintf>
10018d24:	9007      	str	r0, [sp, #28]
10018d26:	9807      	ldr	r0, [sp, #28]
10018d28:	b047      	add	sp, #284	@ 0x11c
10018d2a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10018d2e:	2208      	movs	r2, #8
10018d30:	2100      	movs	r1, #0
10018d32:	4638      	mov	r0, r7
10018d34:	f7fb fde8 	bl	10014908 <memset>
10018d38:	2301      	movs	r3, #1
10018d3a:	441d      	add	r5, r3
10018d3c:	e720      	b.n	10018b80 <_vfiprintf_r+0x88>
10018d3e:	9b06      	ldr	r3, [sp, #24]
10018d40:	1aee      	subs	r6, r5, r3
10018d42:	4604      	mov	r4, r0
10018d44:	d012      	beq.n	10018d6c <_vfiprintf_r+0x274>
10018d46:	9b06      	ldr	r3, [sp, #24]
10018d48:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
10018d4a:	e9c9 3600 	strd	r3, r6, [r9]
10018d4e:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
10018d50:	3301      	adds	r3, #1
10018d52:	4432      	add	r2, r6
10018d54:	2b07      	cmp	r3, #7
10018d56:	921c      	str	r2, [sp, #112]	@ 0x70
10018d58:	931b      	str	r3, [sp, #108]	@ 0x6c
10018d5a:	dc11      	bgt.n	10018d80 <_vfiprintf_r+0x288>
10018d5c:	f109 0908 	add.w	r9, r9, #8
10018d60:	9b07      	ldr	r3, [sp, #28]
10018d62:	4433      	add	r3, r6
10018d64:	9307      	str	r3, [sp, #28]
10018d66:	2c00      	cmp	r4, #0
10018d68:	f47f af24 	bne.w	10018bb4 <_vfiprintf_r+0xbc>
10018d6c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
10018d6e:	2b00      	cmp	r3, #0
10018d70:	f040 864d 	bne.w	10019a0e <_vfiprintf_r+0xf16>
10018d74:	9b03      	ldr	r3, [sp, #12]
10018d76:	2200      	movs	r2, #0
10018d78:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
10018d7c:	921b      	str	r2, [sp, #108]	@ 0x6c
10018d7e:	e01c      	b.n	10018dba <_vfiprintf_r+0x2c2>
10018d80:	2a00      	cmp	r2, #0
10018d82:	f000 842d 	beq.w	100195e0 <_vfiprintf_r+0xae8>
10018d86:	9903      	ldr	r1, [sp, #12]
10018d88:	aa1a      	add	r2, sp, #104	@ 0x68
10018d8a:	4658      	mov	r0, fp
10018d8c:	f7ff fe6c 	bl	10018a68 <__sprint_r.part.0>
10018d90:	b980      	cbnz	r0, 10018db4 <_vfiprintf_r+0x2bc>
10018d92:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10018d96:	e7e3      	b.n	10018d60 <_vfiprintf_r+0x268>
10018d98:	9903      	ldr	r1, [sp, #12]
10018d9a:	aa1a      	add	r2, sp, #104	@ 0x68
10018d9c:	4658      	mov	r0, fp
10018d9e:	f7ff fe63 	bl	10018a68 <__sprint_r.part.0>
10018da2:	2800      	cmp	r0, #0
10018da4:	f000 80a6 	beq.w	10018ef4 <_vfiprintf_r+0x3fc>
10018da8:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
10018daa:	b11b      	cbz	r3, 10018db4 <_vfiprintf_r+0x2bc>
10018dac:	990b      	ldr	r1, [sp, #44]	@ 0x2c
10018dae:	4658      	mov	r0, fp
10018db0:	f7fd fc68 	bl	10016684 <_free_r>
10018db4:	9b03      	ldr	r3, [sp, #12]
10018db6:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
10018dba:	9a03      	ldr	r2, [sp, #12]
10018dbc:	6e52      	ldr	r2, [r2, #100]	@ 0x64
10018dbe:	07d1      	lsls	r1, r2, #31
10018dc0:	f140 80a3 	bpl.w	10018f0a <_vfiprintf_r+0x412>
10018dc4:	065b      	lsls	r3, r3, #25
10018dc6:	f100 8643 	bmi.w	10019a50 <_vfiprintf_r+0xf58>
10018dca:	9807      	ldr	r0, [sp, #28]
10018dcc:	b047      	add	sp, #284	@ 0x11c
10018dce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10018dd2:	9406      	str	r4, [sp, #24]
10018dd4:	2a00      	cmp	r2, #0
10018dd6:	d0c9      	beq.n	10018d6c <_vfiprintf_r+0x274>
10018dd8:	2300      	movs	r3, #0
10018dda:	f88d 304b 	strb.w	r3, [sp, #75]	@ 0x4b
10018dde:	2301      	movs	r3, #1
10018de0:	f88d 20b4 	strb.w	r2, [sp, #180]	@ 0xb4
10018de4:	9304      	str	r3, [sp, #16]
10018de6:	9309      	str	r3, [sp, #36]	@ 0x24
10018de8:	ac2d      	add	r4, sp, #180	@ 0xb4
10018dea:	2300      	movs	r3, #0
10018dec:	930b      	str	r3, [sp, #44]	@ 0x2c
10018dee:	9305      	str	r3, [sp, #20]
10018df0:	9b02      	ldr	r3, [sp, #8]
10018df2:	f013 0302 	ands.w	r3, r3, #2
10018df6:	d002      	beq.n	10018dfe <_vfiprintf_r+0x306>
10018df8:	9a04      	ldr	r2, [sp, #16]
10018dfa:	3202      	adds	r2, #2
10018dfc:	9204      	str	r2, [sp, #16]
10018dfe:	e9dd 2c1b 	ldrd	r2, ip, [sp, #108]	@ 0x6c
10018e02:	9d02      	ldr	r5, [sp, #8]
10018e04:	1c50      	adds	r0, r2, #1
10018e06:	f015 0584 	ands.w	r5, r5, #132	@ 0x84
10018e0a:	4601      	mov	r1, r0
10018e0c:	950c      	str	r5, [sp, #48]	@ 0x30
10018e0e:	d105      	bne.n	10018e1c <_vfiprintf_r+0x324>
10018e10:	9d08      	ldr	r5, [sp, #32]
10018e12:	9e04      	ldr	r6, [sp, #16]
10018e14:	1bad      	subs	r5, r5, r6
10018e16:	2d00      	cmp	r5, #0
10018e18:	f300 8332 	bgt.w	10019480 <_vfiprintf_r+0x988>
10018e1c:	f89d 004b 	ldrb.w	r0, [sp, #75]	@ 0x4b
10018e20:	b188      	cbz	r0, 10018e46 <_vfiprintf_r+0x34e>
10018e22:	2201      	movs	r2, #1
10018e24:	f10c 0c01 	add.w	ip, ip, #1
10018e28:	f8c9 2004 	str.w	r2, [r9, #4]
10018e2c:	2907      	cmp	r1, #7
10018e2e:	f10d 024b 	add.w	r2, sp, #75	@ 0x4b
10018e32:	e9cd 1c1b 	strd	r1, ip, [sp, #108]	@ 0x6c
10018e36:	f8c9 2000 	str.w	r2, [r9]
10018e3a:	f300 82e1 	bgt.w	10019400 <_vfiprintf_r+0x908>
10018e3e:	460a      	mov	r2, r1
10018e40:	f109 0908 	add.w	r9, r9, #8
10018e44:	3101      	adds	r1, #1
10018e46:	b1eb      	cbz	r3, 10018e84 <_vfiprintf_r+0x38c>
10018e48:	ab13      	add	r3, sp, #76	@ 0x4c
10018e4a:	f10c 0c02 	add.w	ip, ip, #2
10018e4e:	f8c9 3000 	str.w	r3, [r9]
10018e52:	2907      	cmp	r1, #7
10018e54:	f04f 0302 	mov.w	r3, #2
10018e58:	e9cd 1c1b 	strd	r1, ip, [sp, #108]	@ 0x6c
10018e5c:	f8c9 3004 	str.w	r3, [r9, #4]
10018e60:	f340 82ec 	ble.w	1001943c <_vfiprintf_r+0x944>
10018e64:	f1bc 0f00 	cmp.w	ip, #0
10018e68:	f000 83db 	beq.w	10019622 <_vfiprintf_r+0xb2a>
10018e6c:	9903      	ldr	r1, [sp, #12]
10018e6e:	aa1a      	add	r2, sp, #104	@ 0x68
10018e70:	4658      	mov	r0, fp
10018e72:	f7ff fdf9 	bl	10018a68 <__sprint_r.part.0>
10018e76:	2800      	cmp	r0, #0
10018e78:	d196      	bne.n	10018da8 <_vfiprintf_r+0x2b0>
10018e7a:	e9dd 2c1b 	ldrd	r2, ip, [sp, #108]	@ 0x6c
10018e7e:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10018e82:	1c51      	adds	r1, r2, #1
10018e84:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
10018e86:	2b80      	cmp	r3, #128	@ 0x80
10018e88:	f000 8213 	beq.w	100192b2 <_vfiprintf_r+0x7ba>
10018e8c:	9b05      	ldr	r3, [sp, #20]
10018e8e:	9809      	ldr	r0, [sp, #36]	@ 0x24
10018e90:	1a1d      	subs	r5, r3, r0
10018e92:	2d00      	cmp	r5, #0
10018e94:	f300 8268 	bgt.w	10019368 <_vfiprintf_r+0x870>
10018e98:	9a09      	ldr	r2, [sp, #36]	@ 0x24
10018e9a:	f8c9 4000 	str.w	r4, [r9]
10018e9e:	eb02 030c 	add.w	r3, r2, ip
10018ea2:	2907      	cmp	r1, #7
10018ea4:	e9cd 131b 	strd	r1, r3, [sp, #108]	@ 0x6c
10018ea8:	f8c9 2004 	str.w	r2, [r9, #4]
10018eac:	f340 81fe 	ble.w	100192ac <_vfiprintf_r+0x7b4>
10018eb0:	2b00      	cmp	r3, #0
10018eb2:	f000 832c 	beq.w	1001950e <_vfiprintf_r+0xa16>
10018eb6:	9903      	ldr	r1, [sp, #12]
10018eb8:	aa1a      	add	r2, sp, #104	@ 0x68
10018eba:	4658      	mov	r0, fp
10018ebc:	f7ff fdd4 	bl	10018a68 <__sprint_r.part.0>
10018ec0:	2800      	cmp	r0, #0
10018ec2:	f47f af71 	bne.w	10018da8 <_vfiprintf_r+0x2b0>
10018ec6:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
10018ec8:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10018ecc:	9a02      	ldr	r2, [sp, #8]
10018ece:	0750      	lsls	r0, r2, #29
10018ed0:	d505      	bpl.n	10018ede <_vfiprintf_r+0x3e6>
10018ed2:	9a08      	ldr	r2, [sp, #32]
10018ed4:	9904      	ldr	r1, [sp, #16]
10018ed6:	1a54      	subs	r4, r2, r1
10018ed8:	2c00      	cmp	r4, #0
10018eda:	f300 8323 	bgt.w	10019524 <_vfiprintf_r+0xa2c>
10018ede:	e9dd 2107 	ldrd	r2, r1, [sp, #28]
10018ee2:	9804      	ldr	r0, [sp, #16]
10018ee4:	4281      	cmp	r1, r0
10018ee6:	bfac      	ite	ge
10018ee8:	1852      	addge	r2, r2, r1
10018eea:	1812      	addlt	r2, r2, r0
10018eec:	9207      	str	r2, [sp, #28]
10018eee:	2b00      	cmp	r3, #0
10018ef0:	f47f af52 	bne.w	10018d98 <_vfiprintf_r+0x2a0>
10018ef4:	2300      	movs	r3, #0
10018ef6:	931b      	str	r3, [sp, #108]	@ 0x6c
10018ef8:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
10018efa:	b11b      	cbz	r3, 10018f04 <_vfiprintf_r+0x40c>
10018efc:	4619      	mov	r1, r3
10018efe:	4658      	mov	r0, fp
10018f00:	f7fd fbc0 	bl	10016684 <_free_r>
10018f04:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10018f08:	e639      	b.n	10018b7e <_vfiprintf_r+0x86>
10018f0a:	059a      	lsls	r2, r3, #22
10018f0c:	f53f af5a 	bmi.w	10018dc4 <_vfiprintf_r+0x2cc>
10018f10:	9c03      	ldr	r4, [sp, #12]
10018f12:	6da0      	ldr	r0, [r4, #88]	@ 0x58
10018f14:	f7fb fdb2 	bl	10014a7c <__retarget_lock_release_recursive>
10018f18:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10018f1c:	e752      	b.n	10018dc4 <_vfiprintf_r+0x2cc>
10018f1e:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
10018f20:	9406      	str	r4, [sp, #24]
10018f22:	f856 4b04 	ldr.w	r4, [r6], #4
10018f26:	2300      	movs	r3, #0
10018f28:	f88d 304b 	strb.w	r3, [sp, #75]	@ 0x4b
10018f2c:	2c00      	cmp	r4, #0
10018f2e:	f000 84c9 	beq.w	100198c4 <_vfiprintf_r+0xdcc>
10018f32:	2a53      	cmp	r2, #83	@ 0x53
10018f34:	f000 8422 	beq.w	1001977c <_vfiprintf_r+0xc84>
10018f38:	9b02      	ldr	r3, [sp, #8]
10018f3a:	f013 0510 	ands.w	r5, r3, #16
10018f3e:	f040 841d 	bne.w	1001977c <_vfiprintf_r+0xc84>
10018f42:	9b05      	ldr	r3, [sp, #20]
10018f44:	1c5a      	adds	r2, r3, #1
10018f46:	f000 854e 	beq.w	100199e6 <_vfiprintf_r+0xeee>
10018f4a:	461a      	mov	r2, r3
10018f4c:	4629      	mov	r1, r5
10018f4e:	4620      	mov	r0, r4
10018f50:	f7fc fff6 	bl	10015f40 <memchr>
10018f54:	900b      	str	r0, [sp, #44]	@ 0x2c
10018f56:	2800      	cmp	r0, #0
10018f58:	f000 853e 	beq.w	100199d8 <_vfiprintf_r+0xee0>
10018f5c:	1b03      	subs	r3, r0, r4
10018f5e:	9309      	str	r3, [sp, #36]	@ 0x24
10018f60:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
10018f64:	9505      	str	r5, [sp, #20]
10018f66:	960a      	str	r6, [sp, #40]	@ 0x28
10018f68:	9304      	str	r3, [sp, #16]
10018f6a:	950b      	str	r5, [sp, #44]	@ 0x2c
10018f6c:	e18d      	b.n	1001928a <_vfiprintf_r+0x792>
10018f6e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10018f70:	9406      	str	r4, [sp, #24]
10018f72:	2a43      	cmp	r2, #67	@ 0x43
10018f74:	f103 0504 	add.w	r5, r3, #4
10018f78:	d003      	beq.n	10018f82 <_vfiprintf_r+0x48a>
10018f7a:	9b02      	ldr	r3, [sp, #8]
10018f7c:	06de      	lsls	r6, r3, #27
10018f7e:	f140 83e5 	bpl.w	1001974c <_vfiprintf_r+0xc54>
10018f82:	2208      	movs	r2, #8
10018f84:	2100      	movs	r1, #0
10018f86:	a818      	add	r0, sp, #96	@ 0x60
10018f88:	f7fb fcbe 	bl	10014908 <memset>
10018f8c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10018f8e:	ac2d      	add	r4, sp, #180	@ 0xb4
10018f90:	681a      	ldr	r2, [r3, #0]
10018f92:	4621      	mov	r1, r4
10018f94:	ab18      	add	r3, sp, #96	@ 0x60
10018f96:	4658      	mov	r0, fp
10018f98:	f7fb fd08 	bl	100149ac <_wcrtomb_r>
10018f9c:	4603      	mov	r3, r0
10018f9e:	3301      	adds	r3, #1
10018fa0:	9009      	str	r0, [sp, #36]	@ 0x24
10018fa2:	f000 8541 	beq.w	10019a28 <_vfiprintf_r+0xf30>
10018fa6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10018fa8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
10018fac:	9304      	str	r3, [sp, #16]
10018fae:	2300      	movs	r3, #0
10018fb0:	950a      	str	r5, [sp, #40]	@ 0x28
10018fb2:	f88d 304b 	strb.w	r3, [sp, #75]	@ 0x4b
10018fb6:	e718      	b.n	10018dea <_vfiprintf_r+0x2f2>
10018fb8:	9b02      	ldr	r3, [sp, #8]
10018fba:	9406      	str	r4, [sp, #24]
10018fbc:	069c      	lsls	r4, r3, #26
10018fbe:	d56d      	bpl.n	1001909c <_vfiprintf_r+0x5a4>
10018fc0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10018fc2:	3307      	adds	r3, #7
10018fc4:	f023 0307 	bic.w	r3, r3, #7
10018fc8:	4619      	mov	r1, r3
10018fca:	685a      	ldr	r2, [r3, #4]
10018fcc:	f851 3b08 	ldr.w	r3, [r1], #8
10018fd0:	910a      	str	r1, [sp, #40]	@ 0x28
10018fd2:	4611      	mov	r1, r2
10018fd4:	2a00      	cmp	r2, #0
10018fd6:	f2c0 8137 	blt.w	10019248 <_vfiprintf_r+0x750>
10018fda:	9a05      	ldr	r2, [sp, #20]
10018fdc:	3201      	adds	r2, #1
10018fde:	f000 8140 	beq.w	10019262 <_vfiprintf_r+0x76a>
10018fe2:	9a02      	ldr	r2, [sp, #8]
10018fe4:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
10018fe8:	9202      	str	r2, [sp, #8]
10018fea:	ea53 0201 	orrs.w	r2, r3, r1
10018fee:	f040 8138 	bne.w	10019262 <_vfiprintf_r+0x76a>
10018ff2:	9b05      	ldr	r3, [sp, #20]
10018ff4:	2b00      	cmp	r3, #0
10018ff6:	f040 8508 	bne.w	10019a0a <_vfiprintf_r+0xf12>
10018ffa:	9304      	str	r3, [sp, #16]
10018ffc:	9309      	str	r3, [sp, #36]	@ 0x24
10018ffe:	ac46      	add	r4, sp, #280	@ 0x118
10019000:	e141      	b.n	10019286 <_vfiprintf_r+0x78e>
10019002:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10019004:	f853 2b04 	ldr.w	r2, [r3], #4
10019008:	9208      	str	r2, [sp, #32]
1001900a:	2a00      	cmp	r2, #0
1001900c:	f280 8328 	bge.w	10019660 <_vfiprintf_r+0xb68>
10019010:	9a08      	ldr	r2, [sp, #32]
10019012:	930a      	str	r3, [sp, #40]	@ 0x28
10019014:	4252      	negs	r2, r2
10019016:	9208      	str	r2, [sp, #32]
10019018:	9b02      	ldr	r3, [sp, #8]
1001901a:	7822      	ldrb	r2, [r4, #0]
1001901c:	f043 0304 	orr.w	r3, r3, #4
10019020:	9302      	str	r3, [sp, #8]
10019022:	e5d1      	b.n	10018bc8 <_vfiprintf_r+0xd0>
10019024:	9b02      	ldr	r3, [sp, #8]
10019026:	9406      	str	r4, [sp, #24]
10019028:	f043 0210 	orr.w	r2, r3, #16
1001902c:	f012 0120 	ands.w	r1, r2, #32
10019030:	f000 82e8 	beq.w	10019604 <_vfiprintf_r+0xb0c>
10019034:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10019036:	3307      	adds	r3, #7
10019038:	f023 0307 	bic.w	r3, r3, #7
1001903c:	4618      	mov	r0, r3
1001903e:	6859      	ldr	r1, [r3, #4]
10019040:	f850 3b08 	ldr.w	r3, [r0], #8
10019044:	900a      	str	r0, [sp, #40]	@ 0x28
10019046:	f422 6480 	bic.w	r4, r2, #1024	@ 0x400
1001904a:	9402      	str	r4, [sp, #8]
1001904c:	9c05      	ldr	r4, [sp, #20]
1001904e:	2000      	movs	r0, #0
10019050:	3401      	adds	r4, #1
10019052:	f88d 004b 	strb.w	r0, [sp, #75]	@ 0x4b
10019056:	d05d      	beq.n	10019114 <_vfiprintf_r+0x61c>
10019058:	ea53 0401 	orrs.w	r4, r3, r1
1001905c:	f422 6290 	bic.w	r2, r2, #1152	@ 0x480
10019060:	f040 8414 	bne.w	1001988c <_vfiprintf_r+0xd94>
10019064:	9c02      	ldr	r4, [sp, #8]
10019066:	9202      	str	r2, [sp, #8]
10019068:	9b05      	ldr	r3, [sp, #20]
1001906a:	2b00      	cmp	r3, #0
1001906c:	d14a      	bne.n	10019104 <_vfiprintf_r+0x60c>
1001906e:	2800      	cmp	r0, #0
10019070:	f040 82f1 	bne.w	10019656 <_vfiprintf_r+0xb5e>
10019074:	f014 0201 	ands.w	r2, r4, #1
10019078:	9209      	str	r2, [sp, #36]	@ 0x24
1001907a:	f000 82f5 	beq.w	10019668 <_vfiprintf_r+0xb70>
1001907e:	2330      	movs	r3, #48	@ 0x30
10019080:	f88d 3117 	strb.w	r3, [sp, #279]	@ 0x117
10019084:	9204      	str	r2, [sp, #16]
10019086:	f20d 1417 	addw	r4, sp, #279	@ 0x117
1001908a:	e0fc      	b.n	10019286 <_vfiprintf_r+0x78e>
1001908c:	9b02      	ldr	r3, [sp, #8]
1001908e:	9406      	str	r4, [sp, #24]
10019090:	f043 0310 	orr.w	r3, r3, #16
10019094:	9302      	str	r3, [sp, #8]
10019096:	9b02      	ldr	r3, [sp, #8]
10019098:	069c      	lsls	r4, r3, #26
1001909a:	d491      	bmi.n	10018fc0 <_vfiprintf_r+0x4c8>
1001909c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
1001909e:	f852 3b04 	ldr.w	r3, [r2], #4
100190a2:	920a      	str	r2, [sp, #40]	@ 0x28
100190a4:	9a02      	ldr	r2, [sp, #8]
100190a6:	06d0      	lsls	r0, r2, #27
100190a8:	f100 82f3 	bmi.w	10019692 <_vfiprintf_r+0xb9a>
100190ac:	9a02      	ldr	r2, [sp, #8]
100190ae:	0651      	lsls	r1, r2, #25
100190b0:	f140 82eb 	bpl.w	1001968a <_vfiprintf_r+0xb92>
100190b4:	f343 31c0 	sbfx	r1, r3, #15, #1
100190b8:	460a      	mov	r2, r1
100190ba:	b21b      	sxth	r3, r3
100190bc:	e78a      	b.n	10018fd4 <_vfiprintf_r+0x4dc>
100190be:	9b02      	ldr	r3, [sp, #8]
100190c0:	9406      	str	r4, [sp, #24]
100190c2:	f043 0410 	orr.w	r4, r3, #16
100190c6:	f014 0120 	ands.w	r1, r4, #32
100190ca:	f000 828c 	beq.w	100195e6 <_vfiprintf_r+0xaee>
100190ce:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
100190d0:	3307      	adds	r3, #7
100190d2:	f023 0307 	bic.w	r3, r3, #7
100190d6:	461a      	mov	r2, r3
100190d8:	6859      	ldr	r1, [r3, #4]
100190da:	f852 3b08 	ldr.w	r3, [r2], #8
100190de:	920a      	str	r2, [sp, #40]	@ 0x28
100190e0:	2200      	movs	r2, #0
100190e2:	f88d 204b 	strb.w	r2, [sp, #75]	@ 0x4b
100190e6:	9a05      	ldr	r2, [sp, #20]
100190e8:	3201      	adds	r2, #1
100190ea:	f000 83d1 	beq.w	10019890 <_vfiprintf_r+0xd98>
100190ee:	f024 0280 	bic.w	r2, r4, #128	@ 0x80
100190f2:	9202      	str	r2, [sp, #8]
100190f4:	ea53 0201 	orrs.w	r2, r3, r1
100190f8:	f040 80b3 	bne.w	10019262 <_vfiprintf_r+0x76a>
100190fc:	9b05      	ldr	r3, [sp, #20]
100190fe:	2001      	movs	r0, #1
10019100:	2b00      	cmp	r3, #0
10019102:	d0b4      	beq.n	1001906e <_vfiprintf_r+0x576>
10019104:	2801      	cmp	r0, #1
10019106:	f000 8480 	beq.w	10019a0a <_vfiprintf_r+0xf12>
1001910a:	2300      	movs	r3, #0
1001910c:	2802      	cmp	r0, #2
1001910e:	4619      	mov	r1, r3
10019110:	f000 8199 	beq.w	10019446 <_vfiprintf_r+0x94e>
10019114:	ac46      	add	r4, sp, #280	@ 0x118
10019116:	f003 0207 	and.w	r2, r3, #7
1001911a:	08db      	lsrs	r3, r3, #3
1001911c:	ea43 7341 	orr.w	r3, r3, r1, lsl #29
10019120:	08c9      	lsrs	r1, r1, #3
10019122:	3230      	adds	r2, #48	@ 0x30
10019124:	ea53 0501 	orrs.w	r5, r3, r1
10019128:	4620      	mov	r0, r4
1001912a:	f804 2d01 	strb.w	r2, [r4, #-1]!
1001912e:	d1f2      	bne.n	10019116 <_vfiprintf_r+0x61e>
10019130:	9b02      	ldr	r3, [sp, #8]
10019132:	07dd      	lsls	r5, r3, #31
10019134:	f140 8195 	bpl.w	10019462 <_vfiprintf_r+0x96a>
10019138:	2a30      	cmp	r2, #48	@ 0x30
1001913a:	f000 8192 	beq.w	10019462 <_vfiprintf_r+0x96a>
1001913e:	2330      	movs	r3, #48	@ 0x30
10019140:	9a05      	ldr	r2, [sp, #20]
10019142:	f804 3c01 	strb.w	r3, [r4, #-1]
10019146:	3802      	subs	r0, #2
10019148:	ab46      	add	r3, sp, #280	@ 0x118
1001914a:	1a1b      	subs	r3, r3, r0
1001914c:	429a      	cmp	r2, r3
1001914e:	bfb8      	it	lt
10019150:	461a      	movlt	r2, r3
10019152:	9309      	str	r3, [sp, #36]	@ 0x24
10019154:	4604      	mov	r4, r0
10019156:	9204      	str	r2, [sp, #16]
10019158:	e095      	b.n	10019286 <_vfiprintf_r+0x78e>
1001915a:	7822      	ldrb	r2, [r4, #0]
1001915c:	9b02      	ldr	r3, [sp, #8]
1001915e:	2a68      	cmp	r2, #104	@ 0x68
10019160:	f000 839d 	beq.w	1001989e <_vfiprintf_r+0xda6>
10019164:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10019168:	9302      	str	r3, [sp, #8]
1001916a:	e52d      	b.n	10018bc8 <_vfiprintf_r+0xd0>
1001916c:	9b02      	ldr	r3, [sp, #8]
1001916e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
10019170:	9406      	str	r4, [sp, #24]
10019172:	f043 0302 	orr.w	r3, r3, #2
10019176:	9302      	str	r3, [sp, #8]
10019178:	f852 3b04 	ldr.w	r3, [r2], #4
1001917c:	920a      	str	r2, [sp, #40]	@ 0x28
1001917e:	f647 0230 	movw	r2, #30768	@ 0x7830
10019182:	f8ad 204c 	strh.w	r2, [sp, #76]	@ 0x4c
10019186:	4abb      	ldr	r2, [pc, #748]	@ (10019474 <_vfiprintf_r+0x97c>)
10019188:	920d      	str	r2, [sp, #52]	@ 0x34
1001918a:	2100      	movs	r1, #0
1001918c:	2200      	movs	r2, #0
1001918e:	f88d 204b 	strb.w	r2, [sp, #75]	@ 0x4b
10019192:	9a05      	ldr	r2, [sp, #20]
10019194:	3201      	adds	r2, #1
10019196:	f000 8156 	beq.w	10019446 <_vfiprintf_r+0x94e>
1001919a:	9c02      	ldr	r4, [sp, #8]
1001919c:	ea53 0001 	orrs.w	r0, r3, r1
100191a0:	f024 0280 	bic.w	r2, r4, #128	@ 0x80
100191a4:	9202      	str	r2, [sp, #8]
100191a6:	f040 814e 	bne.w	10019446 <_vfiprintf_r+0x94e>
100191aa:	2002      	movs	r0, #2
100191ac:	e75c      	b.n	10019068 <_vfiprintf_r+0x570>
100191ae:	9b02      	ldr	r3, [sp, #8]
100191b0:	9406      	str	r4, [sp, #24]
100191b2:	069b      	lsls	r3, r3, #26
100191b4:	f140 827f 	bpl.w	100196b6 <_vfiprintf_r+0xbbe>
100191b8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
100191ba:	9a07      	ldr	r2, [sp, #28]
100191bc:	681b      	ldr	r3, [r3, #0]
100191be:	601a      	str	r2, [r3, #0]
100191c0:	17d2      	asrs	r2, r2, #31
100191c2:	605a      	str	r2, [r3, #4]
100191c4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
100191c6:	3304      	adds	r3, #4
100191c8:	930a      	str	r3, [sp, #40]	@ 0x28
100191ca:	e4d8      	b.n	10018b7e <_vfiprintf_r+0x86>
100191cc:	9b02      	ldr	r3, [sp, #8]
100191ce:	7822      	ldrb	r2, [r4, #0]
100191d0:	f043 0301 	orr.w	r3, r3, #1
100191d4:	9302      	str	r3, [sp, #8]
100191d6:	e4f7      	b.n	10018bc8 <_vfiprintf_r+0xd0>
100191d8:	f89d 304b 	ldrb.w	r3, [sp, #75]	@ 0x4b
100191dc:	7822      	ldrb	r2, [r4, #0]
100191de:	2b00      	cmp	r3, #0
100191e0:	f47f acf2 	bne.w	10018bc8 <_vfiprintf_r+0xd0>
100191e4:	2320      	movs	r3, #32
100191e6:	f88d 304b 	strb.w	r3, [sp, #75]	@ 0x4b
100191ea:	e4ed      	b.n	10018bc8 <_vfiprintf_r+0xd0>
100191ec:	9b02      	ldr	r3, [sp, #8]
100191ee:	7822      	ldrb	r2, [r4, #0]
100191f0:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
100191f4:	9302      	str	r3, [sp, #8]
100191f6:	e4e7      	b.n	10018bc8 <_vfiprintf_r+0xd0>
100191f8:	4621      	mov	r1, r4
100191fa:	f811 2b01 	ldrb.w	r2, [r1], #1
100191fe:	2a2a      	cmp	r2, #42	@ 0x2a
10019200:	f000 8433 	beq.w	10019a6a <_vfiprintf_r+0xf72>
10019204:	f1a2 0330 	sub.w	r3, r2, #48	@ 0x30
10019208:	2b09      	cmp	r3, #9
1001920a:	460c      	mov	r4, r1
1001920c:	f200 83f6 	bhi.w	100199fc <_vfiprintf_r+0xf04>
10019210:	2200      	movs	r2, #0
10019212:	4611      	mov	r1, r2
10019214:	f814 2b01 	ldrb.w	r2, [r4], #1
10019218:	eb01 0181 	add.w	r1, r1, r1, lsl #2
1001921c:	eb03 0141 	add.w	r1, r3, r1, lsl #1
10019220:	f1a2 0330 	sub.w	r3, r2, #48	@ 0x30
10019224:	2b09      	cmp	r3, #9
10019226:	d9f5      	bls.n	10019214 <_vfiprintf_r+0x71c>
10019228:	9105      	str	r1, [sp, #20]
1001922a:	e4ce      	b.n	10018bca <_vfiprintf_r+0xd2>
1001922c:	232b      	movs	r3, #43	@ 0x2b
1001922e:	7822      	ldrb	r2, [r4, #0]
10019230:	f88d 304b 	strb.w	r3, [sp, #75]	@ 0x4b
10019234:	e4c8      	b.n	10018bc8 <_vfiprintf_r+0xd0>
10019236:	7822      	ldrb	r2, [r4, #0]
10019238:	9b02      	ldr	r3, [sp, #8]
1001923a:	2a6c      	cmp	r2, #108	@ 0x6c
1001923c:	f000 8336 	beq.w	100198ac <_vfiprintf_r+0xdb4>
10019240:	f043 0310 	orr.w	r3, r3, #16
10019244:	9302      	str	r3, [sp, #8]
10019246:	e4bf      	b.n	10018bc8 <_vfiprintf_r+0xd0>
10019248:	222d      	movs	r2, #45	@ 0x2d
1001924a:	f88d 204b 	strb.w	r2, [sp, #75]	@ 0x4b
1001924e:	9a05      	ldr	r2, [sp, #20]
10019250:	425b      	negs	r3, r3
10019252:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
10019256:	3201      	adds	r2, #1
10019258:	d003      	beq.n	10019262 <_vfiprintf_r+0x76a>
1001925a:	9a02      	ldr	r2, [sp, #8]
1001925c:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
10019260:	9202      	str	r2, [sp, #8]
10019262:	2b0a      	cmp	r3, #10
10019264:	f171 0200 	sbcs.w	r2, r1, #0
10019268:	f080 82bd 	bcs.w	100197e6 <_vfiprintf_r+0xcee>
1001926c:	3330      	adds	r3, #48	@ 0x30
1001926e:	b2db      	uxtb	r3, r3
10019270:	f88d 3117 	strb.w	r3, [sp, #279]	@ 0x117
10019274:	9b05      	ldr	r3, [sp, #20]
10019276:	2b01      	cmp	r3, #1
10019278:	bfb8      	it	lt
1001927a:	2301      	movlt	r3, #1
1001927c:	9304      	str	r3, [sp, #16]
1001927e:	2301      	movs	r3, #1
10019280:	9309      	str	r3, [sp, #36]	@ 0x24
10019282:	f20d 1417 	addw	r4, sp, #279	@ 0x117
10019286:	2300      	movs	r3, #0
10019288:	930b      	str	r3, [sp, #44]	@ 0x2c
1001928a:	f89d 304b 	ldrb.w	r3, [sp, #75]	@ 0x4b
1001928e:	2b00      	cmp	r3, #0
10019290:	f43f adae 	beq.w	10018df0 <_vfiprintf_r+0x2f8>
10019294:	9b04      	ldr	r3, [sp, #16]
10019296:	3301      	adds	r3, #1
10019298:	9304      	str	r3, [sp, #16]
1001929a:	e5a9      	b.n	10018df0 <_vfiprintf_r+0x2f8>
1001929c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1001929e:	941d      	str	r4, [sp, #116]	@ 0x74
100192a0:	2201      	movs	r2, #1
100192a2:	931e      	str	r3, [sp, #120]	@ 0x78
100192a4:	931c      	str	r3, [sp, #112]	@ 0x70
100192a6:	921b      	str	r2, [sp, #108]	@ 0x6c
100192a8:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
100192ac:	f109 0908 	add.w	r9, r9, #8
100192b0:	e60c      	b.n	10018ecc <_vfiprintf_r+0x3d4>
100192b2:	9b08      	ldr	r3, [sp, #32]
100192b4:	9804      	ldr	r0, [sp, #16]
100192b6:	1a1d      	subs	r5, r3, r0
100192b8:	2d00      	cmp	r5, #0
100192ba:	f77f ade7 	ble.w	10018e8c <_vfiprintf_r+0x394>
100192be:	2d10      	cmp	r5, #16
100192c0:	f340 83cb 	ble.w	10019a5a <_vfiprintf_r+0xf62>
100192c4:	f8df 81b4 	ldr.w	r8, [pc, #436]	@ 1001947c <_vfiprintf_r+0x984>
100192c8:	4643      	mov	r3, r8
100192ca:	2610      	movs	r6, #16
100192cc:	46a0      	mov	r8, r4
100192ce:	4661      	mov	r1, ip
100192d0:	461c      	mov	r4, r3
100192d2:	e007      	b.n	100192e4 <_vfiprintf_r+0x7ec>
100192d4:	f102 0c02 	add.w	ip, r2, #2
100192d8:	f109 0908 	add.w	r9, r9, #8
100192dc:	4602      	mov	r2, r0
100192de:	3d10      	subs	r5, #16
100192e0:	2d10      	cmp	r5, #16
100192e2:	dd1a      	ble.n	1001931a <_vfiprintf_r+0x822>
100192e4:	1c50      	adds	r0, r2, #1
100192e6:	3110      	adds	r1, #16
100192e8:	2807      	cmp	r0, #7
100192ea:	e9c9 4600 	strd	r4, r6, [r9]
100192ee:	e9cd 011b 	strd	r0, r1, [sp, #108]	@ 0x6c
100192f2:	ddef      	ble.n	100192d4 <_vfiprintf_r+0x7dc>
100192f4:	aa1a      	add	r2, sp, #104	@ 0x68
100192f6:	2900      	cmp	r1, #0
100192f8:	d07c      	beq.n	100193f4 <_vfiprintf_r+0x8fc>
100192fa:	9903      	ldr	r1, [sp, #12]
100192fc:	4658      	mov	r0, fp
100192fe:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10019302:	f7ff fbb1 	bl	10018a68 <__sprint_r.part.0>
10019306:	2800      	cmp	r0, #0
10019308:	f47f ad4e 	bne.w	10018da8 <_vfiprintf_r+0x2b0>
1001930c:	e9dd 211b 	ldrd	r2, r1, [sp, #108]	@ 0x6c
10019310:	3d10      	subs	r5, #16
10019312:	2d10      	cmp	r5, #16
10019314:	f102 0c01 	add.w	ip, r2, #1
10019318:	dce4      	bgt.n	100192e4 <_vfiprintf_r+0x7ec>
1001931a:	4623      	mov	r3, r4
1001931c:	4660      	mov	r0, ip
1001931e:	4644      	mov	r4, r8
10019320:	468c      	mov	ip, r1
10019322:	4698      	mov	r8, r3
10019324:	44ac      	add	ip, r5
10019326:	2807      	cmp	r0, #7
10019328:	e9cd 0c1b 	strd	r0, ip, [sp, #108]	@ 0x6c
1001932c:	f8c9 8000 	str.w	r8, [r9]
10019330:	f8c9 5004 	str.w	r5, [r9, #4]
10019334:	f340 81a4 	ble.w	10019680 <_vfiprintf_r+0xb88>
10019338:	f1bc 0f00 	cmp.w	ip, #0
1001933c:	f000 8327 	beq.w	1001998e <_vfiprintf_r+0xe96>
10019340:	9903      	ldr	r1, [sp, #12]
10019342:	aa1a      	add	r2, sp, #104	@ 0x68
10019344:	4658      	mov	r0, fp
10019346:	f7ff fb8f 	bl	10018a68 <__sprint_r.part.0>
1001934a:	2800      	cmp	r0, #0
1001934c:	f47f ad2c 	bne.w	10018da8 <_vfiprintf_r+0x2b0>
10019350:	9b05      	ldr	r3, [sp, #20]
10019352:	9809      	ldr	r0, [sp, #36]	@ 0x24
10019354:	e9dd 2c1b 	ldrd	r2, ip, [sp, #108]	@ 0x6c
10019358:	1a1d      	subs	r5, r3, r0
1001935a:	2d00      	cmp	r5, #0
1001935c:	f102 0101 	add.w	r1, r2, #1
10019360:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10019364:	f77f ad98 	ble.w	10018e98 <_vfiprintf_r+0x3a0>
10019368:	2d10      	cmp	r5, #16
1001936a:	f8df 8110 	ldr.w	r8, [pc, #272]	@ 1001947c <_vfiprintf_r+0x984>
1001936e:	dd2d      	ble.n	100193cc <_vfiprintf_r+0x8d4>
10019370:	462b      	mov	r3, r5
10019372:	2610      	movs	r6, #16
10019374:	4625      	mov	r5, r4
10019376:	4660      	mov	r0, ip
10019378:	461c      	mov	r4, r3
1001937a:	e007      	b.n	1001938c <_vfiprintf_r+0x894>
1001937c:	f102 0c02 	add.w	ip, r2, #2
10019380:	f109 0908 	add.w	r9, r9, #8
10019384:	460a      	mov	r2, r1
10019386:	3c10      	subs	r4, #16
10019388:	2c10      	cmp	r4, #16
1001938a:	dd1a      	ble.n	100193c2 <_vfiprintf_r+0x8ca>
1001938c:	1c51      	adds	r1, r2, #1
1001938e:	4b3b      	ldr	r3, [pc, #236]	@ (1001947c <_vfiprintf_r+0x984>)
10019390:	3010      	adds	r0, #16
10019392:	2907      	cmp	r1, #7
10019394:	e9c9 3600 	strd	r3, r6, [r9]
10019398:	e9cd 101b 	strd	r1, r0, [sp, #108]	@ 0x6c
1001939c:	ddee      	ble.n	1001937c <_vfiprintf_r+0x884>
1001939e:	aa1a      	add	r2, sp, #104	@ 0x68
100193a0:	b310      	cbz	r0, 100193e8 <_vfiprintf_r+0x8f0>
100193a2:	9903      	ldr	r1, [sp, #12]
100193a4:	4658      	mov	r0, fp
100193a6:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
100193aa:	f7ff fb5d 	bl	10018a68 <__sprint_r.part.0>
100193ae:	2800      	cmp	r0, #0
100193b0:	f47f acfa 	bne.w	10018da8 <_vfiprintf_r+0x2b0>
100193b4:	e9dd 201b 	ldrd	r2, r0, [sp, #108]	@ 0x6c
100193b8:	3c10      	subs	r4, #16
100193ba:	2c10      	cmp	r4, #16
100193bc:	f102 0c01 	add.w	ip, r2, #1
100193c0:	dce4      	bgt.n	1001938c <_vfiprintf_r+0x894>
100193c2:	4623      	mov	r3, r4
100193c4:	4661      	mov	r1, ip
100193c6:	462c      	mov	r4, r5
100193c8:	4684      	mov	ip, r0
100193ca:	461d      	mov	r5, r3
100193cc:	44ac      	add	ip, r5
100193ce:	2907      	cmp	r1, #7
100193d0:	e9cd 1c1b 	strd	r1, ip, [sp, #108]	@ 0x6c
100193d4:	f8c9 8000 	str.w	r8, [r9]
100193d8:	f8c9 5004 	str.w	r5, [r9, #4]
100193dc:	f300 80ed 	bgt.w	100195ba <_vfiprintf_r+0xac2>
100193e0:	f109 0908 	add.w	r9, r9, #8
100193e4:	3101      	adds	r1, #1
100193e6:	e557      	b.n	10018e98 <_vfiprintf_r+0x3a0>
100193e8:	f04f 0c01 	mov.w	ip, #1
100193ec:	4602      	mov	r2, r0
100193ee:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
100193f2:	e7c8      	b.n	10019386 <_vfiprintf_r+0x88e>
100193f4:	f04f 0c01 	mov.w	ip, #1
100193f8:	460a      	mov	r2, r1
100193fa:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
100193fe:	e76e      	b.n	100192de <_vfiprintf_r+0x7e6>
10019400:	f1bc 0f00 	cmp.w	ip, #0
10019404:	d00f      	beq.n	10019426 <_vfiprintf_r+0x92e>
10019406:	9903      	ldr	r1, [sp, #12]
10019408:	9311      	str	r3, [sp, #68]	@ 0x44
1001940a:	aa1a      	add	r2, sp, #104	@ 0x68
1001940c:	4658      	mov	r0, fp
1001940e:	f7ff fb2b 	bl	10018a68 <__sprint_r.part.0>
10019412:	2800      	cmp	r0, #0
10019414:	f47f acc8 	bne.w	10018da8 <_vfiprintf_r+0x2b0>
10019418:	e9dd 2c1b 	ldrd	r2, ip, [sp, #108]	@ 0x6c
1001941c:	9b11      	ldr	r3, [sp, #68]	@ 0x44
1001941e:	1c51      	adds	r1, r2, #1
10019420:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10019424:	e50f      	b.n	10018e46 <_vfiprintf_r+0x34e>
10019426:	2b00      	cmp	r3, #0
10019428:	f000 8156 	beq.w	100196d8 <_vfiprintf_r+0xbe0>
1001942c:	2302      	movs	r3, #2
1001942e:	931e      	str	r3, [sp, #120]	@ 0x78
10019430:	469c      	mov	ip, r3
10019432:	ab13      	add	r3, sp, #76	@ 0x4c
10019434:	931d      	str	r3, [sp, #116]	@ 0x74
10019436:	2101      	movs	r1, #1
10019438:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
1001943c:	460a      	mov	r2, r1
1001943e:	f109 0908 	add.w	r9, r9, #8
10019442:	3101      	adds	r1, #1
10019444:	e51e      	b.n	10018e84 <_vfiprintf_r+0x38c>
10019446:	980d      	ldr	r0, [sp, #52]	@ 0x34
10019448:	ac46      	add	r4, sp, #280	@ 0x118
1001944a:	f003 020f 	and.w	r2, r3, #15
1001944e:	091b      	lsrs	r3, r3, #4
10019450:	5c82      	ldrb	r2, [r0, r2]
10019452:	f804 2d01 	strb.w	r2, [r4, #-1]!
10019456:	ea43 7301 	orr.w	r3, r3, r1, lsl #28
1001945a:	0909      	lsrs	r1, r1, #4
1001945c:	ea53 0201 	orrs.w	r2, r3, r1
10019460:	d1f3      	bne.n	1001944a <_vfiprintf_r+0x952>
10019462:	9a05      	ldr	r2, [sp, #20]
10019464:	ab46      	add	r3, sp, #280	@ 0x118
10019466:	1b1b      	subs	r3, r3, r4
10019468:	429a      	cmp	r2, r3
1001946a:	bfb8      	it	lt
1001946c:	461a      	movlt	r2, r3
1001946e:	9309      	str	r3, [sp, #36]	@ 0x24
10019470:	9204      	str	r2, [sp, #16]
10019472:	e708      	b.n	10019286 <_vfiprintf_r+0x78e>
10019474:	1001d980 	.word	0x1001d980
10019478:	2000045c 	.word	0x2000045c
1001947c:	1001dbc0 	.word	0x1001dbc0
10019480:	2d10      	cmp	r5, #16
10019482:	f340 82bf 	ble.w	10019a04 <_vfiprintf_r+0xf0c>
10019486:	4eae      	ldr	r6, [pc, #696]	@ (10019740 <_vfiprintf_r+0xc48>)
10019488:	9311      	str	r3, [sp, #68]	@ 0x44
1001948a:	4649      	mov	r1, r9
1001948c:	f04f 0810 	mov.w	r8, #16
10019490:	46a1      	mov	r9, r4
10019492:	4634      	mov	r4, r6
10019494:	4666      	mov	r6, ip
10019496:	e007      	b.n	100194a8 <_vfiprintf_r+0x9b0>
10019498:	f102 0e02 	add.w	lr, r2, #2
1001949c:	3108      	adds	r1, #8
1001949e:	4602      	mov	r2, r0
100194a0:	3d10      	subs	r5, #16
100194a2:	2d10      	cmp	r5, #16
100194a4:	dd18      	ble.n	100194d8 <_vfiprintf_r+0x9e0>
100194a6:	1c50      	adds	r0, r2, #1
100194a8:	3610      	adds	r6, #16
100194aa:	2807      	cmp	r0, #7
100194ac:	e9c1 4800 	strd	r4, r8, [r1]
100194b0:	e9cd 061b 	strd	r0, r6, [sp, #108]	@ 0x6c
100194b4:	ddf0      	ble.n	10019498 <_vfiprintf_r+0x9a0>
100194b6:	9903      	ldr	r1, [sp, #12]
100194b8:	aa1a      	add	r2, sp, #104	@ 0x68
100194ba:	4658      	mov	r0, fp
100194bc:	b316      	cbz	r6, 10019504 <_vfiprintf_r+0xa0c>
100194be:	f7ff fad3 	bl	10018a68 <__sprint_r.part.0>
100194c2:	2800      	cmp	r0, #0
100194c4:	f47f ac70 	bne.w	10018da8 <_vfiprintf_r+0x2b0>
100194c8:	e9dd 261b 	ldrd	r2, r6, [sp, #108]	@ 0x6c
100194cc:	3d10      	subs	r5, #16
100194ce:	2d10      	cmp	r5, #16
100194d0:	f102 0e01 	add.w	lr, r2, #1
100194d4:	a91d      	add	r1, sp, #116	@ 0x74
100194d6:	dce6      	bgt.n	100194a6 <_vfiprintf_r+0x9ae>
100194d8:	9b11      	ldr	r3, [sp, #68]	@ 0x44
100194da:	46b4      	mov	ip, r6
100194dc:	4626      	mov	r6, r4
100194de:	464c      	mov	r4, r9
100194e0:	4689      	mov	r9, r1
100194e2:	44ac      	add	ip, r5
100194e4:	f1be 0f07 	cmp.w	lr, #7
100194e8:	e9cd ec1b 	strd	lr, ip, [sp, #108]	@ 0x6c
100194ec:	f8c9 6000 	str.w	r6, [r9]
100194f0:	f8c9 5004 	str.w	r5, [r9, #4]
100194f4:	f300 809a 	bgt.w	1001962c <_vfiprintf_r+0xb34>
100194f8:	f109 0908 	add.w	r9, r9, #8
100194fc:	f10e 0101 	add.w	r1, lr, #1
10019500:	4672      	mov	r2, lr
10019502:	e48b      	b.n	10018e1c <_vfiprintf_r+0x324>
10019504:	4632      	mov	r2, r6
10019506:	f04f 0e01 	mov.w	lr, #1
1001950a:	a91d      	add	r1, sp, #116	@ 0x74
1001950c:	e7c8      	b.n	100194a0 <_vfiprintf_r+0x9a8>
1001950e:	9a02      	ldr	r2, [sp, #8]
10019510:	931b      	str	r3, [sp, #108]	@ 0x6c
10019512:	0754      	lsls	r4, r2, #29
10019514:	d548      	bpl.n	100195a8 <_vfiprintf_r+0xab0>
10019516:	9a08      	ldr	r2, [sp, #32]
10019518:	9904      	ldr	r1, [sp, #16]
1001951a:	1a54      	subs	r4, r2, r1
1001951c:	2c00      	cmp	r4, #0
1001951e:	dd43      	ble.n	100195a8 <_vfiprintf_r+0xab0>
10019520:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10019524:	2c10      	cmp	r4, #16
10019526:	991b      	ldr	r1, [sp, #108]	@ 0x6c
10019528:	f340 827b 	ble.w	10019a22 <_vfiprintf_r+0xf2a>
1001952c:	4e84      	ldr	r6, [pc, #528]	@ (10019740 <_vfiprintf_r+0xc48>)
1001952e:	f8dd 800c 	ldr.w	r8, [sp, #12]
10019532:	2510      	movs	r5, #16
10019534:	e006      	b.n	10019544 <_vfiprintf_r+0xa4c>
10019536:	1c88      	adds	r0, r1, #2
10019538:	f109 0908 	add.w	r9, r9, #8
1001953c:	4611      	mov	r1, r2
1001953e:	3c10      	subs	r4, #16
10019540:	2c10      	cmp	r4, #16
10019542:	dd19      	ble.n	10019578 <_vfiprintf_r+0xa80>
10019544:	1c4a      	adds	r2, r1, #1
10019546:	3310      	adds	r3, #16
10019548:	2a07      	cmp	r2, #7
1001954a:	e9c9 6500 	strd	r6, r5, [r9]
1001954e:	e9cd 231b 	strd	r2, r3, [sp, #108]	@ 0x6c
10019552:	ddf0      	ble.n	10019536 <_vfiprintf_r+0xa3e>
10019554:	aa1a      	add	r2, sp, #104	@ 0x68
10019556:	b313      	cbz	r3, 1001959e <_vfiprintf_r+0xaa6>
10019558:	4641      	mov	r1, r8
1001955a:	4658      	mov	r0, fp
1001955c:	f7ff fa84 	bl	10018a68 <__sprint_r.part.0>
10019560:	2800      	cmp	r0, #0
10019562:	f47f ac21 	bne.w	10018da8 <_vfiprintf_r+0x2b0>
10019566:	e9dd 131b 	ldrd	r1, r3, [sp, #108]	@ 0x6c
1001956a:	3c10      	subs	r4, #16
1001956c:	2c10      	cmp	r4, #16
1001956e:	f101 0001 	add.w	r0, r1, #1
10019572:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10019576:	dce5      	bgt.n	10019544 <_vfiprintf_r+0xa4c>
10019578:	4423      	add	r3, r4
1001957a:	2807      	cmp	r0, #7
1001957c:	e9c9 6400 	strd	r6, r4, [r9]
10019580:	e9cd 031b 	strd	r0, r3, [sp, #108]	@ 0x6c
10019584:	f77f acab 	ble.w	10018ede <_vfiprintf_r+0x3e6>
10019588:	b173      	cbz	r3, 100195a8 <_vfiprintf_r+0xab0>
1001958a:	9903      	ldr	r1, [sp, #12]
1001958c:	aa1a      	add	r2, sp, #104	@ 0x68
1001958e:	4658      	mov	r0, fp
10019590:	f7ff fa6a 	bl	10018a68 <__sprint_r.part.0>
10019594:	2800      	cmp	r0, #0
10019596:	f47f ac07 	bne.w	10018da8 <_vfiprintf_r+0x2b0>
1001959a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
1001959c:	e49f      	b.n	10018ede <_vfiprintf_r+0x3e6>
1001959e:	2001      	movs	r0, #1
100195a0:	4619      	mov	r1, r3
100195a2:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
100195a6:	e7ca      	b.n	1001953e <_vfiprintf_r+0xa46>
100195a8:	e9dd 3207 	ldrd	r3, r2, [sp, #28]
100195ac:	9904      	ldr	r1, [sp, #16]
100195ae:	428a      	cmp	r2, r1
100195b0:	bfac      	ite	ge
100195b2:	189b      	addge	r3, r3, r2
100195b4:	185b      	addlt	r3, r3, r1
100195b6:	9307      	str	r3, [sp, #28]
100195b8:	e49c      	b.n	10018ef4 <_vfiprintf_r+0x3fc>
100195ba:	f1bc 0f00 	cmp.w	ip, #0
100195be:	f43f ae6d 	beq.w	1001929c <_vfiprintf_r+0x7a4>
100195c2:	9903      	ldr	r1, [sp, #12]
100195c4:	aa1a      	add	r2, sp, #104	@ 0x68
100195c6:	4658      	mov	r0, fp
100195c8:	f7ff fa4e 	bl	10018a68 <__sprint_r.part.0>
100195cc:	2800      	cmp	r0, #0
100195ce:	f47f abeb 	bne.w	10018da8 <_vfiprintf_r+0x2b0>
100195d2:	991b      	ldr	r1, [sp, #108]	@ 0x6c
100195d4:	f8dd c070 	ldr.w	ip, [sp, #112]	@ 0x70
100195d8:	3101      	adds	r1, #1
100195da:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
100195de:	e45b      	b.n	10018e98 <_vfiprintf_r+0x3a0>
100195e0:	921b      	str	r2, [sp, #108]	@ 0x6c
100195e2:	f7ff bbd6 	b.w	10018d92 <_vfiprintf_r+0x29a>
100195e6:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
100195e8:	f852 3b04 	ldr.w	r3, [r2], #4
100195ec:	920a      	str	r2, [sp, #40]	@ 0x28
100195ee:	f014 0210 	ands.w	r2, r4, #16
100195f2:	f47f ad75 	bne.w	100190e0 <_vfiprintf_r+0x5e8>
100195f6:	f014 0040 	ands.w	r0, r4, #64	@ 0x40
100195fa:	f000 816d 	beq.w	100198d8 <_vfiprintf_r+0xde0>
100195fe:	b29b      	uxth	r3, r3
10019600:	4611      	mov	r1, r2
10019602:	e56d      	b.n	100190e0 <_vfiprintf_r+0x5e8>
10019604:	980a      	ldr	r0, [sp, #40]	@ 0x28
10019606:	f850 3b04 	ldr.w	r3, [r0], #4
1001960a:	900a      	str	r0, [sp, #40]	@ 0x28
1001960c:	f012 0010 	ands.w	r0, r2, #16
10019610:	f47f ad19 	bne.w	10019046 <_vfiprintf_r+0x54e>
10019614:	f012 0440 	ands.w	r4, r2, #64	@ 0x40
10019618:	f000 8166 	beq.w	100198e8 <_vfiprintf_r+0xdf0>
1001961c:	b29b      	uxth	r3, r3
1001961e:	4601      	mov	r1, r0
10019620:	e511      	b.n	10019046 <_vfiprintf_r+0x54e>
10019622:	2101      	movs	r1, #1
10019624:	4662      	mov	r2, ip
10019626:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
1001962a:	e42b      	b.n	10018e84 <_vfiprintf_r+0x38c>
1001962c:	f1bc 0f00 	cmp.w	ip, #0
10019630:	f000 8095 	beq.w	1001975e <_vfiprintf_r+0xc66>
10019634:	9903      	ldr	r1, [sp, #12]
10019636:	9311      	str	r3, [sp, #68]	@ 0x44
10019638:	aa1a      	add	r2, sp, #104	@ 0x68
1001963a:	4658      	mov	r0, fp
1001963c:	f7ff fa14 	bl	10018a68 <__sprint_r.part.0>
10019640:	2800      	cmp	r0, #0
10019642:	f47f abb1 	bne.w	10018da8 <_vfiprintf_r+0x2b0>
10019646:	e9dd 2c1b 	ldrd	r2, ip, [sp, #108]	@ 0x6c
1001964a:	9b11      	ldr	r3, [sp, #68]	@ 0x44
1001964c:	1c51      	adds	r1, r2, #1
1001964e:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10019652:	f7ff bbe3 	b.w	10018e1c <_vfiprintf_r+0x324>
10019656:	9b05      	ldr	r3, [sp, #20]
10019658:	9304      	str	r3, [sp, #16]
1001965a:	9309      	str	r3, [sp, #36]	@ 0x24
1001965c:	ac46      	add	r4, sp, #280	@ 0x118
1001965e:	e612      	b.n	10019286 <_vfiprintf_r+0x78e>
10019660:	7822      	ldrb	r2, [r4, #0]
10019662:	930a      	str	r3, [sp, #40]	@ 0x28
10019664:	f7ff bab0 	b.w	10018bc8 <_vfiprintf_r+0xd0>
10019668:	9b05      	ldr	r3, [sp, #20]
1001966a:	9304      	str	r3, [sp, #16]
1001966c:	ac46      	add	r4, sp, #280	@ 0x118
1001966e:	e60a      	b.n	10019286 <_vfiprintf_r+0x78e>
10019670:	9d03      	ldr	r5, [sp, #12]
10019672:	6da8      	ldr	r0, [r5, #88]	@ 0x58
10019674:	f7fb fa00 	bl	10014a78 <__retarget_lock_acquire_recursive>
10019678:	f9b5 200c 	ldrsh.w	r2, [r5, #12]
1001967c:	f7ff ba5b 	b.w	10018b36 <_vfiprintf_r+0x3e>
10019680:	f109 0908 	add.w	r9, r9, #8
10019684:	1c41      	adds	r1, r0, #1
10019686:	4602      	mov	r2, r0
10019688:	e400      	b.n	10018e8c <_vfiprintf_r+0x394>
1001968a:	9a02      	ldr	r2, [sp, #8]
1001968c:	0592      	lsls	r2, r2, #22
1001968e:	f100 8184 	bmi.w	1001999a <_vfiprintf_r+0xea2>
10019692:	17d9      	asrs	r1, r3, #31
10019694:	460a      	mov	r2, r1
10019696:	e49d      	b.n	10018fd4 <_vfiprintf_r+0x4dc>
10019698:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001969a:	7822      	ldrb	r2, [r4, #0]
1001969c:	2b00      	cmp	r3, #0
1001969e:	f43f aa93 	beq.w	10018bc8 <_vfiprintf_r+0xd0>
100196a2:	781b      	ldrb	r3, [r3, #0]
100196a4:	2b00      	cmp	r3, #0
100196a6:	f43f aa8f 	beq.w	10018bc8 <_vfiprintf_r+0xd0>
100196aa:	9b02      	ldr	r3, [sp, #8]
100196ac:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
100196b0:	9302      	str	r3, [sp, #8]
100196b2:	f7ff ba89 	b.w	10018bc8 <_vfiprintf_r+0xd0>
100196b6:	9b02      	ldr	r3, [sp, #8]
100196b8:	06de      	lsls	r6, r3, #27
100196ba:	f100 80fe 	bmi.w	100198ba <_vfiprintf_r+0xdc2>
100196be:	9b02      	ldr	r3, [sp, #8]
100196c0:	065d      	lsls	r5, r3, #25
100196c2:	f100 8176 	bmi.w	100199b2 <_vfiprintf_r+0xeba>
100196c6:	9b02      	ldr	r3, [sp, #8]
100196c8:	059c      	lsls	r4, r3, #22
100196ca:	f140 80f6 	bpl.w	100198ba <_vfiprintf_r+0xdc2>
100196ce:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
100196d0:	9a07      	ldr	r2, [sp, #28]
100196d2:	681b      	ldr	r3, [r3, #0]
100196d4:	701a      	strb	r2, [r3, #0]
100196d6:	e575      	b.n	100191c4 <_vfiprintf_r+0x6cc>
100196d8:	4662      	mov	r2, ip
100196da:	2101      	movs	r1, #1
100196dc:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
100196e0:	f7ff bbd0 	b.w	10018e84 <_vfiprintf_r+0x38c>
100196e4:	9406      	str	r4, [sp, #24]
100196e6:	9c02      	ldr	r4, [sp, #8]
100196e8:	e4ed      	b.n	100190c6 <_vfiprintf_r+0x5ce>
100196ea:	9a02      	ldr	r2, [sp, #8]
100196ec:	9406      	str	r4, [sp, #24]
100196ee:	e49d      	b.n	1001902c <_vfiprintf_r+0x534>
100196f0:	4b14      	ldr	r3, [pc, #80]	@ (10019744 <_vfiprintf_r+0xc4c>)
100196f2:	9406      	str	r4, [sp, #24]
100196f4:	930d      	str	r3, [sp, #52]	@ 0x34
100196f6:	9b02      	ldr	r3, [sp, #8]
100196f8:	f013 0120 	ands.w	r1, r3, #32
100196fc:	d063      	beq.n	100197c6 <_vfiprintf_r+0xcce>
100196fe:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10019700:	3307      	adds	r3, #7
10019702:	f023 0307 	bic.w	r3, r3, #7
10019706:	4618      	mov	r0, r3
10019708:	6859      	ldr	r1, [r3, #4]
1001970a:	f850 3b08 	ldr.w	r3, [r0], #8
1001970e:	900a      	str	r0, [sp, #40]	@ 0x28
10019710:	9c02      	ldr	r4, [sp, #8]
10019712:	07e6      	lsls	r6, r4, #31
10019714:	d50a      	bpl.n	1001972c <_vfiprintf_r+0xc34>
10019716:	ea53 0001 	orrs.w	r0, r3, r1
1001971a:	d007      	beq.n	1001972c <_vfiprintf_r+0xc34>
1001971c:	f88d 204d 	strb.w	r2, [sp, #77]	@ 0x4d
10019720:	f044 0202 	orr.w	r2, r4, #2
10019724:	9202      	str	r2, [sp, #8]
10019726:	2230      	movs	r2, #48	@ 0x30
10019728:	f88d 204c 	strb.w	r2, [sp, #76]	@ 0x4c
1001972c:	9a02      	ldr	r2, [sp, #8]
1001972e:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
10019732:	9202      	str	r2, [sp, #8]
10019734:	e52a      	b.n	1001918c <_vfiprintf_r+0x694>
10019736:	4b04      	ldr	r3, [pc, #16]	@ (10019748 <_vfiprintf_r+0xc50>)
10019738:	9406      	str	r4, [sp, #24]
1001973a:	930d      	str	r3, [sp, #52]	@ 0x34
1001973c:	e7db      	b.n	100196f6 <_vfiprintf_r+0xbfe>
1001973e:	bf00      	nop
10019740:	1001dbd0 	.word	0x1001dbd0
10019744:	1001d994 	.word	0x1001d994
10019748:	1001d980 	.word	0x1001d980
1001974c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1001974e:	681b      	ldr	r3, [r3, #0]
10019750:	f88d 30b4 	strb.w	r3, [sp, #180]	@ 0xb4
10019754:	2301      	movs	r3, #1
10019756:	9304      	str	r3, [sp, #16]
10019758:	9309      	str	r3, [sp, #36]	@ 0x24
1001975a:	ac2d      	add	r4, sp, #180	@ 0xb4
1001975c:	e427      	b.n	10018fae <_vfiprintf_r+0x4b6>
1001975e:	f89d 204b 	ldrb.w	r2, [sp, #75]	@ 0x4b
10019762:	2a00      	cmp	r2, #0
10019764:	f000 811f 	beq.w	100199a6 <_vfiprintf_r+0xeae>
10019768:	2101      	movs	r1, #1
1001976a:	f10d 024b 	add.w	r2, sp, #75	@ 0x4b
1001976e:	911e      	str	r1, [sp, #120]	@ 0x78
10019770:	921d      	str	r2, [sp, #116]	@ 0x74
10019772:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10019776:	468c      	mov	ip, r1
10019778:	f7ff bb61 	b.w	10018e3e <_vfiprintf_r+0x346>
1001977c:	2208      	movs	r2, #8
1001977e:	2100      	movs	r1, #0
10019780:	a818      	add	r0, sp, #96	@ 0x60
10019782:	9415      	str	r4, [sp, #84]	@ 0x54
10019784:	f7fb f8c0 	bl	10014908 <memset>
10019788:	9b05      	ldr	r3, [sp, #20]
1001978a:	1c58      	adds	r0, r3, #1
1001978c:	f000 80ba 	beq.w	10019904 <_vfiprintf_r+0xe0c>
10019790:	2500      	movs	r5, #0
10019792:	9404      	str	r4, [sp, #16]
10019794:	4698      	mov	r8, r3
10019796:	462c      	mov	r4, r5
10019798:	e00c      	b.n	100197b4 <_vfiprintf_r+0xcbc>
1001979a:	a92d      	add	r1, sp, #180	@ 0xb4
1001979c:	4658      	mov	r0, fp
1001979e:	f7fb f905 	bl	100149ac <_wcrtomb_r>
100197a2:	1c41      	adds	r1, r0, #1
100197a4:	4420      	add	r0, r4
100197a6:	f000 813f 	beq.w	10019a28 <_vfiprintf_r+0xf30>
100197aa:	4540      	cmp	r0, r8
100197ac:	dc08      	bgt.n	100197c0 <_vfiprintf_r+0xcc8>
100197ae:	f000 8158 	beq.w	10019a62 <_vfiprintf_r+0xf6a>
100197b2:	4604      	mov	r4, r0
100197b4:	9a15      	ldr	r2, [sp, #84]	@ 0x54
100197b6:	5952      	ldr	r2, [r2, r5]
100197b8:	ab18      	add	r3, sp, #96	@ 0x60
100197ba:	3504      	adds	r5, #4
100197bc:	2a00      	cmp	r2, #0
100197be:	d1ec      	bne.n	1001979a <_vfiprintf_r+0xca2>
100197c0:	9409      	str	r4, [sp, #36]	@ 0x24
100197c2:	9c04      	ldr	r4, [sp, #16]
100197c4:	e0ac      	b.n	10019920 <_vfiprintf_r+0xe28>
100197c6:	980a      	ldr	r0, [sp, #40]	@ 0x28
100197c8:	f850 3b04 	ldr.w	r3, [r0], #4
100197cc:	900a      	str	r0, [sp, #40]	@ 0x28
100197ce:	9802      	ldr	r0, [sp, #8]
100197d0:	f010 0010 	ands.w	r0, r0, #16
100197d4:	d19c      	bne.n	10019710 <_vfiprintf_r+0xc18>
100197d6:	9902      	ldr	r1, [sp, #8]
100197d8:	f011 0440 	ands.w	r4, r1, #64	@ 0x40
100197dc:	f000 808b 	beq.w	100198f6 <_vfiprintf_r+0xdfe>
100197e0:	b29b      	uxth	r3, r3
100197e2:	4601      	mov	r1, r0
100197e4:	e794      	b.n	10019710 <_vfiprintf_r+0xc18>
100197e6:	9a02      	ldr	r2, [sp, #8]
100197e8:	f8cd 9010 	str.w	r9, [sp, #16]
100197ec:	ac46      	add	r4, sp, #280	@ 0x118
100197ee:	f402 6280 	and.w	r2, r2, #1024	@ 0x400
100197f2:	46a1      	mov	r9, r4
100197f4:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
100197f8:	4ea5      	ldr	r6, [pc, #660]	@ (10019a90 <_vfiprintf_r+0xf98>)
100197fa:	f8dd b038 	ldr.w	fp, [sp, #56]	@ 0x38
100197fe:	f04f 0c00 	mov.w	ip, #0
10019802:	4614      	mov	r4, r2
10019804:	e005      	b.n	10019812 <_vfiprintf_r+0xd1a>
10019806:	2b0a      	cmp	r3, #10
10019808:	f171 0100 	sbcs.w	r1, r1, #0
1001980c:	d336      	bcc.n	1001987c <_vfiprintf_r+0xd84>
1001980e:	4643      	mov	r3, r8
10019810:	4629      	mov	r1, r5
10019812:	185a      	adds	r2, r3, r1
10019814:	f142 0200 	adc.w	r2, r2, #0
10019818:	fba6 0502 	umull	r0, r5, r6, r2
1001981c:	f025 0003 	bic.w	r0, r5, #3
10019820:	eb00 0095 	add.w	r0, r0, r5, lsr #2
10019824:	1a12      	subs	r2, r2, r0
10019826:	1a98      	subs	r0, r3, r2
10019828:	f04f 35cc 	mov.w	r5, #3435973836	@ 0xcccccccc
1001982c:	f161 0e00 	sbc.w	lr, r1, #0
10019830:	fb05 f500 	mul.w	r5, r5, r0
10019834:	fb06 550e 	mla	r5, r6, lr, r5
10019838:	fba0 8006 	umull	r8, r0, r0, r6
1001983c:	4405      	add	r5, r0
1001983e:	f008 0e01 	and.w	lr, r8, #1
10019842:	2005      	movs	r0, #5
10019844:	fbae 0e00 	umull	r0, lr, lr, r0
10019848:	1880      	adds	r0, r0, r2
1001984a:	ea4f 0858 	mov.w	r8, r8, lsr #1
1001984e:	3030      	adds	r0, #48	@ 0x30
10019850:	f809 0c01 	strb.w	r0, [r9, #-1]
10019854:	ea48 78c5 	orr.w	r8, r8, r5, lsl #31
10019858:	f10c 0c01 	add.w	ip, ip, #1
1001985c:	f109 39ff 	add.w	r9, r9, #4294967295	@ 0xffffffff
10019860:	086d      	lsrs	r5, r5, #1
10019862:	2c00      	cmp	r4, #0
10019864:	d0cf      	beq.n	10019806 <_vfiprintf_r+0xd0e>
10019866:	f89b 2000 	ldrb.w	r2, [fp]
1001986a:	4562      	cmp	r2, ip
1001986c:	d1cb      	bne.n	10019806 <_vfiprintf_r+0xd0e>
1001986e:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
10019872:	d0c8      	beq.n	10019806 <_vfiprintf_r+0xd0e>
10019874:	2b0a      	cmp	r3, #10
10019876:	f171 0100 	sbcs.w	r1, r1, #0
1001987a:	d272      	bcs.n	10019962 <_vfiprintf_r+0xe6a>
1001987c:	f8cd b038 	str.w	fp, [sp, #56]	@ 0x38
10019880:	464c      	mov	r4, r9
10019882:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
10019886:	f8dd 9010 	ldr.w	r9, [sp, #16]
1001988a:	e5ea      	b.n	10019462 <_vfiprintf_r+0x96a>
1001988c:	9202      	str	r2, [sp, #8]
1001988e:	e441      	b.n	10019114 <_vfiprintf_r+0x61c>
10019890:	9402      	str	r4, [sp, #8]
10019892:	e4e6      	b.n	10019262 <_vfiprintf_r+0x76a>
10019894:	4658      	mov	r0, fp
10019896:	f7fc fb25 	bl	10015ee4 <__sinit>
1001989a:	f7ff b943 	b.w	10018b24 <_vfiprintf_r+0x2c>
1001989e:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
100198a2:	7862      	ldrb	r2, [r4, #1]
100198a4:	9302      	str	r3, [sp, #8]
100198a6:	3401      	adds	r4, #1
100198a8:	f7ff b98e 	b.w	10018bc8 <_vfiprintf_r+0xd0>
100198ac:	f043 0320 	orr.w	r3, r3, #32
100198b0:	7862      	ldrb	r2, [r4, #1]
100198b2:	9302      	str	r3, [sp, #8]
100198b4:	3401      	adds	r4, #1
100198b6:	f7ff b987 	b.w	10018bc8 <_vfiprintf_r+0xd0>
100198ba:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
100198bc:	9a07      	ldr	r2, [sp, #28]
100198be:	681b      	ldr	r3, [r3, #0]
100198c0:	601a      	str	r2, [r3, #0]
100198c2:	e47f      	b.n	100191c4 <_vfiprintf_r+0x6cc>
100198c4:	9b05      	ldr	r3, [sp, #20]
100198c6:	4c73      	ldr	r4, [pc, #460]	@ (10019a94 <_vfiprintf_r+0xf9c>)
100198c8:	2b06      	cmp	r3, #6
100198ca:	bf28      	it	cs
100198cc:	2306      	movcs	r3, #6
100198ce:	e9cd 3609 	strd	r3, r6, [sp, #36]	@ 0x24
100198d2:	9304      	str	r3, [sp, #16]
100198d4:	f7ff ba89 	b.w	10018dea <_vfiprintf_r+0x2f2>
100198d8:	f414 7100 	ands.w	r1, r4, #512	@ 0x200
100198dc:	f43f ac00 	beq.w	100190e0 <_vfiprintf_r+0x5e8>
100198e0:	b2db      	uxtb	r3, r3
100198e2:	4601      	mov	r1, r0
100198e4:	f7ff bbfc 	b.w	100190e0 <_vfiprintf_r+0x5e8>
100198e8:	f412 7100 	ands.w	r1, r2, #512	@ 0x200
100198ec:	bf1c      	itt	ne
100198ee:	b2db      	uxtbne	r3, r3
100198f0:	4621      	movne	r1, r4
100198f2:	f7ff bba8 	b.w	10019046 <_vfiprintf_r+0x54e>
100198f6:	9902      	ldr	r1, [sp, #8]
100198f8:	f411 7100 	ands.w	r1, r1, #512	@ 0x200
100198fc:	bf1c      	itt	ne
100198fe:	b2db      	uxtbne	r3, r3
10019900:	4621      	movne	r1, r4
10019902:	e705      	b.n	10019710 <_vfiprintf_r+0xc18>
10019904:	ab18      	add	r3, sp, #96	@ 0x60
10019906:	9300      	str	r3, [sp, #0]
10019908:	2300      	movs	r3, #0
1001990a:	4619      	mov	r1, r3
1001990c:	aa15      	add	r2, sp, #84	@ 0x54
1001990e:	4658      	mov	r0, fp
10019910:	f7fb f9a8 	bl	10014c64 <_wcsrtombs_r>
10019914:	4603      	mov	r3, r0
10019916:	3301      	adds	r3, #1
10019918:	9009      	str	r0, [sp, #36]	@ 0x24
1001991a:	f000 8085 	beq.w	10019a28 <_vfiprintf_r+0xf30>
1001991e:	9415      	str	r4, [sp, #84]	@ 0x54
10019920:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10019922:	b373      	cbz	r3, 10019982 <_vfiprintf_r+0xe8a>
10019924:	2b63      	cmp	r3, #99	@ 0x63
10019926:	dc49      	bgt.n	100199bc <_vfiprintf_r+0xec4>
10019928:	2300      	movs	r3, #0
1001992a:	930b      	str	r3, [sp, #44]	@ 0x2c
1001992c:	ac2d      	add	r4, sp, #180	@ 0xb4
1001992e:	2208      	movs	r2, #8
10019930:	2100      	movs	r1, #0
10019932:	a818      	add	r0, sp, #96	@ 0x60
10019934:	f7fa ffe8 	bl	10014908 <memset>
10019938:	9d09      	ldr	r5, [sp, #36]	@ 0x24
1001993a:	ab18      	add	r3, sp, #96	@ 0x60
1001993c:	9300      	str	r3, [sp, #0]
1001993e:	aa15      	add	r2, sp, #84	@ 0x54
10019940:	462b      	mov	r3, r5
10019942:	4621      	mov	r1, r4
10019944:	4658      	mov	r0, fp
10019946:	f7fb f98d 	bl	10014c64 <_wcsrtombs_r>
1001994a:	4285      	cmp	r5, r0
1001994c:	f040 8098 	bne.w	10019a80 <_vfiprintf_r+0xf88>
10019950:	9a09      	ldr	r2, [sp, #36]	@ 0x24
10019952:	960a      	str	r6, [sp, #40]	@ 0x28
10019954:	2300      	movs	r3, #0
10019956:	54a3      	strb	r3, [r4, r2]
10019958:	9305      	str	r3, [sp, #20]
1001995a:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
1001995e:	9304      	str	r3, [sp, #16]
10019960:	e493      	b.n	1001928a <_vfiprintf_r+0x792>
10019962:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
10019964:	9910      	ldr	r1, [sp, #64]	@ 0x40
10019966:	eba9 0903 	sub.w	r9, r9, r3
1001996a:	461a      	mov	r2, r3
1001996c:	4648      	mov	r0, r9
1001996e:	f7f8 fdfd 	bl	1001256c <strncpy>
10019972:	f89b 3001 	ldrb.w	r3, [fp, #1]
10019976:	b10b      	cbz	r3, 1001997c <_vfiprintf_r+0xe84>
10019978:	f10b 0b01 	add.w	fp, fp, #1
1001997c:	f04f 0c00 	mov.w	ip, #0
10019980:	e745      	b.n	1001980e <_vfiprintf_r+0xd16>
10019982:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10019984:	960a      	str	r6, [sp, #40]	@ 0x28
10019986:	e9cd 3304 	strd	r3, r3, [sp, #16]
1001998a:	930b      	str	r3, [sp, #44]	@ 0x2c
1001998c:	e47d      	b.n	1001928a <_vfiprintf_r+0x792>
1001998e:	2101      	movs	r1, #1
10019990:	4662      	mov	r2, ip
10019992:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10019996:	f7ff ba79 	b.w	10018e8c <_vfiprintf_r+0x394>
1001999a:	f343 11c0 	sbfx	r1, r3, #7, #1
1001999e:	460a      	mov	r2, r1
100199a0:	b25b      	sxtb	r3, r3
100199a2:	f7ff bb17 	b.w	10018fd4 <_vfiprintf_r+0x4dc>
100199a6:	4662      	mov	r2, ip
100199a8:	2101      	movs	r1, #1
100199aa:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
100199ae:	f7ff ba4a 	b.w	10018e46 <_vfiprintf_r+0x34e>
100199b2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
100199b4:	9a07      	ldr	r2, [sp, #28]
100199b6:	681b      	ldr	r3, [r3, #0]
100199b8:	801a      	strh	r2, [r3, #0]
100199ba:	e403      	b.n	100191c4 <_vfiprintf_r+0x6cc>
100199bc:	1c59      	adds	r1, r3, #1
100199be:	4658      	mov	r0, fp
100199c0:	f7fa fc5e 	bl	10014280 <_malloc_r>
100199c4:	4604      	mov	r4, r0
100199c6:	2800      	cmp	r0, #0
100199c8:	d02e      	beq.n	10019a28 <_vfiprintf_r+0xf30>
100199ca:	900b      	str	r0, [sp, #44]	@ 0x2c
100199cc:	e7af      	b.n	1001992e <_vfiprintf_r+0xe36>
100199ce:	6d88      	ldr	r0, [r1, #88]	@ 0x58
100199d0:	f7fb f854 	bl	10014a7c <__retarget_lock_release_recursive>
100199d4:	f7ff b9a0 	b.w	10018d18 <_vfiprintf_r+0x220>
100199d8:	9b05      	ldr	r3, [sp, #20]
100199da:	9304      	str	r3, [sp, #16]
100199dc:	9309      	str	r3, [sp, #36]	@ 0x24
100199de:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
100199e0:	960a      	str	r6, [sp, #40]	@ 0x28
100199e2:	9305      	str	r3, [sp, #20]
100199e4:	e451      	b.n	1001928a <_vfiprintf_r+0x792>
100199e6:	4620      	mov	r0, r4
100199e8:	9505      	str	r5, [sp, #20]
100199ea:	960a      	str	r6, [sp, #40]	@ 0x28
100199ec:	f7fc fba8 	bl	10016140 <strlen>
100199f0:	ea20 73e0 	bic.w	r3, r0, r0, asr #31
100199f4:	9009      	str	r0, [sp, #36]	@ 0x24
100199f6:	9304      	str	r3, [sp, #16]
100199f8:	950b      	str	r5, [sp, #44]	@ 0x2c
100199fa:	e446      	b.n	1001928a <_vfiprintf_r+0x792>
100199fc:	2300      	movs	r3, #0
100199fe:	9305      	str	r3, [sp, #20]
10019a00:	f7ff b8e3 	b.w	10018bca <_vfiprintf_r+0xd2>
10019a04:	4e24      	ldr	r6, [pc, #144]	@ (10019a98 <_vfiprintf_r+0xfa0>)
10019a06:	4686      	mov	lr, r0
10019a08:	e56b      	b.n	100194e2 <_vfiprintf_r+0x9ea>
10019a0a:	2330      	movs	r3, #48	@ 0x30
10019a0c:	e430      	b.n	10019270 <_vfiprintf_r+0x778>
10019a0e:	9903      	ldr	r1, [sp, #12]
10019a10:	aa1a      	add	r2, sp, #104	@ 0x68
10019a12:	4658      	mov	r0, fp
10019a14:	f7ff f828 	bl	10018a68 <__sprint_r.part.0>
10019a18:	2800      	cmp	r0, #0
10019a1a:	f43f a9ab 	beq.w	10018d74 <_vfiprintf_r+0x27c>
10019a1e:	f7ff b9c9 	b.w	10018db4 <_vfiprintf_r+0x2bc>
10019a22:	4e1d      	ldr	r6, [pc, #116]	@ (10019a98 <_vfiprintf_r+0xfa0>)
10019a24:	1c48      	adds	r0, r1, #1
10019a26:	e5a7      	b.n	10019578 <_vfiprintf_r+0xa80>
10019a28:	9a03      	ldr	r2, [sp, #12]
10019a2a:	f9b2 300c 	ldrsh.w	r3, [r2, #12]
10019a2e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10019a32:	8193      	strh	r3, [r2, #12]
10019a34:	f7ff b9c1 	b.w	10018dba <_vfiprintf_r+0x2c2>
10019a38:	9b03      	ldr	r3, [sp, #12]
10019a3a:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
10019a3c:	07d9      	lsls	r1, r3, #31
10019a3e:	d407      	bmi.n	10019a50 <_vfiprintf_r+0xf58>
10019a40:	9b03      	ldr	r3, [sp, #12]
10019a42:	899b      	ldrh	r3, [r3, #12]
10019a44:	059a      	lsls	r2, r3, #22
10019a46:	d403      	bmi.n	10019a50 <_vfiprintf_r+0xf58>
10019a48:	9b03      	ldr	r3, [sp, #12]
10019a4a:	6d98      	ldr	r0, [r3, #88]	@ 0x58
10019a4c:	f7fb f816 	bl	10014a7c <__retarget_lock_release_recursive>
10019a50:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
10019a54:	9307      	str	r3, [sp, #28]
10019a56:	f7ff b9b8 	b.w	10018dca <_vfiprintf_r+0x2d2>
10019a5a:	f8df 8040 	ldr.w	r8, [pc, #64]	@ 10019a9c <_vfiprintf_r+0xfa4>
10019a5e:	4608      	mov	r0, r1
10019a60:	e460      	b.n	10019324 <_vfiprintf_r+0x82c>
10019a62:	e9dd 4304 	ldrd	r4, r3, [sp, #16]
10019a66:	9309      	str	r3, [sp, #36]	@ 0x24
10019a68:	e75a      	b.n	10019920 <_vfiprintf_r+0xe28>
10019a6a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10019a6c:	7862      	ldrb	r2, [r4, #1]
10019a6e:	460c      	mov	r4, r1
10019a70:	f853 1b04 	ldr.w	r1, [r3], #4
10019a74:	930a      	str	r3, [sp, #40]	@ 0x28
10019a76:	ea41 71e1 	orr.w	r1, r1, r1, asr #31
10019a7a:	9105      	str	r1, [sp, #20]
10019a7c:	f7ff b8a4 	b.w	10018bc8 <_vfiprintf_r+0xd0>
10019a80:	9a03      	ldr	r2, [sp, #12]
10019a82:	8993      	ldrh	r3, [r2, #12]
10019a84:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10019a88:	8193      	strh	r3, [r2, #12]
10019a8a:	f7ff b98d 	b.w	10018da8 <_vfiprintf_r+0x2b0>
10019a8e:	bf00      	nop
10019a90:	cccccccd 	.word	0xcccccccd
10019a94:	1001d9a8 	.word	0x1001d9a8
10019a98:	1001dbd0 	.word	0x1001dbd0
10019a9c:	1001dbc0 	.word	0x1001dbc0

10019aa0 <__sbprintf>:
10019aa0:	b5f0      	push	{r4, r5, r6, r7, lr}
10019aa2:	461f      	mov	r7, r3
10019aa4:	898b      	ldrh	r3, [r1, #12]
10019aa6:	f2ad 4d6c 	subw	sp, sp, #1132	@ 0x46c
10019aaa:	f023 0302 	bic.w	r3, r3, #2
10019aae:	f8ad 300c 	strh.w	r3, [sp, #12]
10019ab2:	6e4b      	ldr	r3, [r1, #100]	@ 0x64
10019ab4:	9319      	str	r3, [sp, #100]	@ 0x64
10019ab6:	89cb      	ldrh	r3, [r1, #14]
10019ab8:	f8ad 300e 	strh.w	r3, [sp, #14]
10019abc:	69cb      	ldr	r3, [r1, #28]
10019abe:	9307      	str	r3, [sp, #28]
10019ac0:	6a4b      	ldr	r3, [r1, #36]	@ 0x24
10019ac2:	9309      	str	r3, [sp, #36]	@ 0x24
10019ac4:	ab1a      	add	r3, sp, #104	@ 0x68
10019ac6:	9300      	str	r3, [sp, #0]
10019ac8:	9304      	str	r3, [sp, #16]
10019aca:	f44f 6380 	mov.w	r3, #1024	@ 0x400
10019ace:	4615      	mov	r5, r2
10019ad0:	4606      	mov	r6, r0
10019ad2:	9302      	str	r3, [sp, #8]
10019ad4:	9305      	str	r3, [sp, #20]
10019ad6:	a816      	add	r0, sp, #88	@ 0x58
10019ad8:	2300      	movs	r3, #0
10019ada:	460c      	mov	r4, r1
10019adc:	9306      	str	r3, [sp, #24]
10019ade:	f7fa ffc7 	bl	10014a70 <__retarget_lock_init_recursive>
10019ae2:	462a      	mov	r2, r5
10019ae4:	463b      	mov	r3, r7
10019ae6:	4669      	mov	r1, sp
10019ae8:	4630      	mov	r0, r6
10019aea:	f7ff f805 	bl	10018af8 <_vfiprintf_r>
10019aee:	1e05      	subs	r5, r0, #0
10019af0:	db07      	blt.n	10019b02 <__sbprintf+0x62>
10019af2:	4669      	mov	r1, sp
10019af4:	4630      	mov	r0, r6
10019af6:	f7fc f927 	bl	10015d48 <_fflush_r>
10019afa:	2800      	cmp	r0, #0
10019afc:	bf18      	it	ne
10019afe:	f04f 35ff 	movne.w	r5, #4294967295	@ 0xffffffff
10019b02:	f8bd 300c 	ldrh.w	r3, [sp, #12]
10019b06:	065b      	lsls	r3, r3, #25
10019b08:	d503      	bpl.n	10019b12 <__sbprintf+0x72>
10019b0a:	89a3      	ldrh	r3, [r4, #12]
10019b0c:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10019b10:	81a3      	strh	r3, [r4, #12]
10019b12:	9816      	ldr	r0, [sp, #88]	@ 0x58
10019b14:	f7fa ffae 	bl	10014a74 <__retarget_lock_close_recursive>
10019b18:	4628      	mov	r0, r5
10019b1a:	f20d 4d6c 	addw	sp, sp, #1132	@ 0x46c
10019b1e:	bdf0      	pop	{r4, r5, r6, r7, pc}

10019b20 <__register_exitproc>:
10019b20:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
10019b24:	4d1b      	ldr	r5, [pc, #108]	@ (10019b94 <__register_exitproc+0x74>)
10019b26:	4606      	mov	r6, r0
10019b28:	6828      	ldr	r0, [r5, #0]
10019b2a:	4698      	mov	r8, r3
10019b2c:	460f      	mov	r7, r1
10019b2e:	4691      	mov	r9, r2
10019b30:	f7fa ffa2 	bl	10014a78 <__retarget_lock_acquire_recursive>
10019b34:	4b18      	ldr	r3, [pc, #96]	@ (10019b98 <__register_exitproc+0x78>)
10019b36:	681c      	ldr	r4, [r3, #0]
10019b38:	b31c      	cbz	r4, 10019b82 <__register_exitproc+0x62>
10019b3a:	6828      	ldr	r0, [r5, #0]
10019b3c:	6865      	ldr	r5, [r4, #4]
10019b3e:	2d1f      	cmp	r5, #31
10019b40:	dc22      	bgt.n	10019b88 <__register_exitproc+0x68>
10019b42:	b94e      	cbnz	r6, 10019b58 <__register_exitproc+0x38>
10019b44:	1c6b      	adds	r3, r5, #1
10019b46:	3502      	adds	r5, #2
10019b48:	6063      	str	r3, [r4, #4]
10019b4a:	f844 7025 	str.w	r7, [r4, r5, lsl #2]
10019b4e:	f7fa ff95 	bl	10014a7c <__retarget_lock_release_recursive>
10019b52:	2000      	movs	r0, #0
10019b54:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
10019b58:	eb04 0185 	add.w	r1, r4, r5, lsl #2
10019b5c:	2301      	movs	r3, #1
10019b5e:	f8c1 9088 	str.w	r9, [r1, #136]	@ 0x88
10019b62:	f8d4 2188 	ldr.w	r2, [r4, #392]	@ 0x188
10019b66:	40ab      	lsls	r3, r5
10019b68:	431a      	orrs	r2, r3
10019b6a:	2e02      	cmp	r6, #2
10019b6c:	f8c4 2188 	str.w	r2, [r4, #392]	@ 0x188
10019b70:	f8c1 8108 	str.w	r8, [r1, #264]	@ 0x108
10019b74:	d1e6      	bne.n	10019b44 <__register_exitproc+0x24>
10019b76:	f8d4 218c 	ldr.w	r2, [r4, #396]	@ 0x18c
10019b7a:	431a      	orrs	r2, r3
10019b7c:	f8c4 218c 	str.w	r2, [r4, #396]	@ 0x18c
10019b80:	e7e0      	b.n	10019b44 <__register_exitproc+0x24>
10019b82:	4c06      	ldr	r4, [pc, #24]	@ (10019b9c <__register_exitproc+0x7c>)
10019b84:	601c      	str	r4, [r3, #0]
10019b86:	e7d8      	b.n	10019b3a <__register_exitproc+0x1a>
10019b88:	f7fa ff78 	bl	10014a7c <__retarget_lock_release_recursive>
10019b8c:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10019b90:	e7e0      	b.n	10019b54 <__register_exitproc+0x34>
10019b92:	bf00      	nop
10019b94:	20000458 	.word	0x20000458
10019b98:	20001670 	.word	0x20001670
10019b9c:	200017c0 	.word	0x200017c0

10019ba0 <__ascii_mbtowc>:
10019ba0:	b082      	sub	sp, #8
10019ba2:	b149      	cbz	r1, 10019bb8 <__ascii_mbtowc+0x18>
10019ba4:	b15a      	cbz	r2, 10019bbe <__ascii_mbtowc+0x1e>
10019ba6:	b16b      	cbz	r3, 10019bc4 <__ascii_mbtowc+0x24>
10019ba8:	7813      	ldrb	r3, [r2, #0]
10019baa:	600b      	str	r3, [r1, #0]
10019bac:	7812      	ldrb	r2, [r2, #0]
10019bae:	1e10      	subs	r0, r2, #0
10019bb0:	bf18      	it	ne
10019bb2:	2001      	movne	r0, #1
10019bb4:	b002      	add	sp, #8
10019bb6:	4770      	bx	lr
10019bb8:	a901      	add	r1, sp, #4
10019bba:	2a00      	cmp	r2, #0
10019bbc:	d1f3      	bne.n	10019ba6 <__ascii_mbtowc+0x6>
10019bbe:	4610      	mov	r0, r2
10019bc0:	b002      	add	sp, #8
10019bc2:	4770      	bx	lr
10019bc4:	f06f 0001 	mvn.w	r0, #1
10019bc8:	e7f4      	b.n	10019bb4 <__ascii_mbtowc+0x14>
10019bca:	bf00      	nop

10019bcc <__assert_func>:
10019bcc:	b500      	push	{lr}
10019bce:	4c0b      	ldr	r4, [pc, #44]	@ (10019bfc <__assert_func+0x30>)
10019bd0:	6825      	ldr	r5, [r4, #0]
10019bd2:	4614      	mov	r4, r2
10019bd4:	68ee      	ldr	r6, [r5, #12]
10019bd6:	461a      	mov	r2, r3
10019bd8:	b085      	sub	sp, #20
10019bda:	4603      	mov	r3, r0
10019bdc:	460d      	mov	r5, r1
10019bde:	b14c      	cbz	r4, 10019bf4 <__assert_func+0x28>
10019be0:	4907      	ldr	r1, [pc, #28]	@ (10019c00 <__assert_func+0x34>)
10019be2:	9500      	str	r5, [sp, #0]
10019be4:	e9cd 1401 	strd	r1, r4, [sp, #4]
10019be8:	4630      	mov	r0, r6
10019bea:	4906      	ldr	r1, [pc, #24]	@ (10019c04 <__assert_func+0x38>)
10019bec:	f000 fd6e 	bl	1001a6cc <fiprintf>
10019bf0:	f000 fe44 	bl	1001a87c <abort>
10019bf4:	4904      	ldr	r1, [pc, #16]	@ (10019c08 <__assert_func+0x3c>)
10019bf6:	460c      	mov	r4, r1
10019bf8:	e7f3      	b.n	10019be2 <__assert_func+0x16>
10019bfa:	bf00      	nop
10019bfc:	200005c8 	.word	0x200005c8
10019c00:	1001dbe0 	.word	0x1001dbe0
10019c04:	1001dbf0 	.word	0x1001dbf0
10019c08:	1001d7b4 	.word	0x1001d7b4

10019c0c <__swsetup_r>:
10019c0c:	b538      	push	{r3, r4, r5, lr}
10019c0e:	4b2e      	ldr	r3, [pc, #184]	@ (10019cc8 <__swsetup_r+0xbc>)
10019c10:	681b      	ldr	r3, [r3, #0]
10019c12:	4605      	mov	r5, r0
10019c14:	460c      	mov	r4, r1
10019c16:	b113      	cbz	r3, 10019c1e <__swsetup_r+0x12>
10019c18:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
10019c1a:	2a00      	cmp	r2, #0
10019c1c:	d04b      	beq.n	10019cb6 <__swsetup_r+0xaa>
10019c1e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10019c22:	0718      	lsls	r0, r3, #28
10019c24:	d51c      	bpl.n	10019c60 <__swsetup_r+0x54>
10019c26:	6922      	ldr	r2, [r4, #16]
10019c28:	b322      	cbz	r2, 10019c74 <__swsetup_r+0x68>
10019c2a:	f013 0101 	ands.w	r1, r3, #1
10019c2e:	d007      	beq.n	10019c40 <__swsetup_r+0x34>
10019c30:	6961      	ldr	r1, [r4, #20]
10019c32:	2000      	movs	r0, #0
10019c34:	4249      	negs	r1, r1
10019c36:	60a0      	str	r0, [r4, #8]
10019c38:	61a1      	str	r1, [r4, #24]
10019c3a:	b13a      	cbz	r2, 10019c4c <__swsetup_r+0x40>
10019c3c:	2000      	movs	r0, #0
10019c3e:	bd38      	pop	{r3, r4, r5, pc}
10019c40:	0798      	lsls	r0, r3, #30
10019c42:	bf58      	it	pl
10019c44:	6961      	ldrpl	r1, [r4, #20]
10019c46:	60a1      	str	r1, [r4, #8]
10019c48:	2a00      	cmp	r2, #0
10019c4a:	d1f7      	bne.n	10019c3c <__swsetup_r+0x30>
10019c4c:	0619      	lsls	r1, r3, #24
10019c4e:	bf58      	it	pl
10019c50:	4610      	movpl	r0, r2
10019c52:	d5f4      	bpl.n	10019c3e <__swsetup_r+0x32>
10019c54:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10019c58:	81a3      	strh	r3, [r4, #12]
10019c5a:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10019c5e:	bd38      	pop	{r3, r4, r5, pc}
10019c60:	06d9      	lsls	r1, r3, #27
10019c62:	d52c      	bpl.n	10019cbe <__swsetup_r+0xb2>
10019c64:	075a      	lsls	r2, r3, #29
10019c66:	d412      	bmi.n	10019c8e <__swsetup_r+0x82>
10019c68:	6922      	ldr	r2, [r4, #16]
10019c6a:	f043 0308 	orr.w	r3, r3, #8
10019c6e:	81a3      	strh	r3, [r4, #12]
10019c70:	2a00      	cmp	r2, #0
10019c72:	d1da      	bne.n	10019c2a <__swsetup_r+0x1e>
10019c74:	f403 7120 	and.w	r1, r3, #640	@ 0x280
10019c78:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
10019c7c:	d0d5      	beq.n	10019c2a <__swsetup_r+0x1e>
10019c7e:	4621      	mov	r1, r4
10019c80:	4628      	mov	r0, r5
10019c82:	f000 f823 	bl	10019ccc <__smakebuf_r>
10019c86:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10019c8a:	6922      	ldr	r2, [r4, #16]
10019c8c:	e7cd      	b.n	10019c2a <__swsetup_r+0x1e>
10019c8e:	6b21      	ldr	r1, [r4, #48]	@ 0x30
10019c90:	b151      	cbz	r1, 10019ca8 <__swsetup_r+0x9c>
10019c92:	f104 0240 	add.w	r2, r4, #64	@ 0x40
10019c96:	4291      	cmp	r1, r2
10019c98:	d004      	beq.n	10019ca4 <__swsetup_r+0x98>
10019c9a:	4628      	mov	r0, r5
10019c9c:	f7fc fcf2 	bl	10016684 <_free_r>
10019ca0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10019ca4:	2200      	movs	r2, #0
10019ca6:	6322      	str	r2, [r4, #48]	@ 0x30
10019ca8:	6922      	ldr	r2, [r4, #16]
10019caa:	2100      	movs	r1, #0
10019cac:	e9c4 2100 	strd	r2, r1, [r4]
10019cb0:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
10019cb4:	e7d9      	b.n	10019c6a <__swsetup_r+0x5e>
10019cb6:	4618      	mov	r0, r3
10019cb8:	f7fc f914 	bl	10015ee4 <__sinit>
10019cbc:	e7af      	b.n	10019c1e <__swsetup_r+0x12>
10019cbe:	2209      	movs	r2, #9
10019cc0:	602a      	str	r2, [r5, #0]
10019cc2:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10019cc6:	e7c7      	b.n	10019c58 <__swsetup_r+0x4c>
10019cc8:	200005c8 	.word	0x200005c8

10019ccc <__smakebuf_r>:
10019ccc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
10019cd0:	f9b1 300c 	ldrsh.w	r3, [r1, #12]
10019cd4:	460c      	mov	r4, r1
10019cd6:	0799      	lsls	r1, r3, #30
10019cd8:	b096      	sub	sp, #88	@ 0x58
10019cda:	d508      	bpl.n	10019cee <__smakebuf_r+0x22>
10019cdc:	f104 0343 	add.w	r3, r4, #67	@ 0x43
10019ce0:	2201      	movs	r2, #1
10019ce2:	e9c4 3204 	strd	r3, r2, [r4, #16]
10019ce6:	6023      	str	r3, [r4, #0]
10019ce8:	b016      	add	sp, #88	@ 0x58
10019cea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
10019cee:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
10019cf2:	2900      	cmp	r1, #0
10019cf4:	4606      	mov	r6, r0
10019cf6:	db26      	blt.n	10019d46 <__smakebuf_r+0x7a>
10019cf8:	466a      	mov	r2, sp
10019cfa:	f7fc fdc1 	bl	10016880 <_fstat_r>
10019cfe:	2800      	cmp	r0, #0
10019d00:	db1f      	blt.n	10019d42 <__smakebuf_r+0x76>
10019d02:	9d01      	ldr	r5, [sp, #4]
10019d04:	f405 4570 	and.w	r5, r5, #61440	@ 0xf000
10019d08:	f5a5 5500 	sub.w	r5, r5, #8192	@ 0x2000
10019d0c:	fab5 f585 	clz	r5, r5
10019d10:	f44f 6880 	mov.w	r8, #1024	@ 0x400
10019d14:	096d      	lsrs	r5, r5, #5
10019d16:	f44f 6700 	mov.w	r7, #2048	@ 0x800
10019d1a:	4641      	mov	r1, r8
10019d1c:	4630      	mov	r0, r6
10019d1e:	f7fa faaf 	bl	10014280 <_malloc_r>
10019d22:	b1e8      	cbz	r0, 10019d60 <__smakebuf_r+0x94>
10019d24:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10019d28:	f8c4 8014 	str.w	r8, [r4, #20]
10019d2c:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
10019d30:	6020      	str	r0, [r4, #0]
10019d32:	6120      	str	r0, [r4, #16]
10019d34:	81a3      	strh	r3, [r4, #12]
10019d36:	bb3d      	cbnz	r5, 10019d88 <__smakebuf_r+0xbc>
10019d38:	433b      	orrs	r3, r7
10019d3a:	81a3      	strh	r3, [r4, #12]
10019d3c:	b016      	add	sp, #88	@ 0x58
10019d3e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
10019d42:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10019d46:	f013 0580 	ands.w	r5, r3, #128	@ 0x80
10019d4a:	d019      	beq.n	10019d80 <__smakebuf_r+0xb4>
10019d4c:	f04f 0840 	mov.w	r8, #64	@ 0x40
10019d50:	2500      	movs	r5, #0
10019d52:	4641      	mov	r1, r8
10019d54:	4630      	mov	r0, r6
10019d56:	462f      	mov	r7, r5
10019d58:	f7fa fa92 	bl	10014280 <_malloc_r>
10019d5c:	2800      	cmp	r0, #0
10019d5e:	d1e1      	bne.n	10019d24 <__smakebuf_r+0x58>
10019d60:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10019d64:	059a      	lsls	r2, r3, #22
10019d66:	d4bf      	bmi.n	10019ce8 <__smakebuf_r+0x1c>
10019d68:	f023 0303 	bic.w	r3, r3, #3
10019d6c:	f104 0243 	add.w	r2, r4, #67	@ 0x43
10019d70:	f043 0302 	orr.w	r3, r3, #2
10019d74:	2101      	movs	r1, #1
10019d76:	e9c4 2104 	strd	r2, r1, [r4, #16]
10019d7a:	81a3      	strh	r3, [r4, #12]
10019d7c:	6022      	str	r2, [r4, #0]
10019d7e:	e7b3      	b.n	10019ce8 <__smakebuf_r+0x1c>
10019d80:	f44f 6880 	mov.w	r8, #1024	@ 0x400
10019d84:	462f      	mov	r7, r5
10019d86:	e7c8      	b.n	10019d1a <__smakebuf_r+0x4e>
10019d88:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
10019d8c:	4630      	mov	r0, r6
10019d8e:	f000 fc8b 	bl	1001a6a8 <_isatty_r>
10019d92:	b910      	cbnz	r0, 10019d9a <__smakebuf_r+0xce>
10019d94:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10019d98:	e7ce      	b.n	10019d38 <__smakebuf_r+0x6c>
10019d9a:	89a3      	ldrh	r3, [r4, #12]
10019d9c:	f023 0303 	bic.w	r3, r3, #3
10019da0:	f043 0301 	orr.w	r3, r3, #1
10019da4:	b21b      	sxth	r3, r3
10019da6:	e7c7      	b.n	10019d38 <__smakebuf_r+0x6c>

10019da8 <_Balloc>:
10019da8:	6c43      	ldr	r3, [r0, #68]	@ 0x44
10019daa:	b570      	push	{r4, r5, r6, lr}
10019dac:	4605      	mov	r5, r0
10019dae:	460c      	mov	r4, r1
10019db0:	b14b      	cbz	r3, 10019dc6 <_Balloc+0x1e>
10019db2:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
10019db6:	b180      	cbz	r0, 10019dda <_Balloc+0x32>
10019db8:	6802      	ldr	r2, [r0, #0]
10019dba:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
10019dbe:	2300      	movs	r3, #0
10019dc0:	60c3      	str	r3, [r0, #12]
10019dc2:	6103      	str	r3, [r0, #16]
10019dc4:	bd70      	pop	{r4, r5, r6, pc}
10019dc6:	2221      	movs	r2, #33	@ 0x21
10019dc8:	2104      	movs	r1, #4
10019dca:	f000 fba7 	bl	1001a51c <_calloc_r>
10019dce:	4603      	mov	r3, r0
10019dd0:	6468      	str	r0, [r5, #68]	@ 0x44
10019dd2:	2800      	cmp	r0, #0
10019dd4:	d1ed      	bne.n	10019db2 <_Balloc+0xa>
10019dd6:	2000      	movs	r0, #0
10019dd8:	bd70      	pop	{r4, r5, r6, pc}
10019dda:	2101      	movs	r1, #1
10019ddc:	fa01 f604 	lsl.w	r6, r1, r4
10019de0:	1d72      	adds	r2, r6, #5
10019de2:	0092      	lsls	r2, r2, #2
10019de4:	4628      	mov	r0, r5
10019de6:	f000 fb99 	bl	1001a51c <_calloc_r>
10019dea:	2800      	cmp	r0, #0
10019dec:	d0f3      	beq.n	10019dd6 <_Balloc+0x2e>
10019dee:	e9c0 4601 	strd	r4, r6, [r0, #4]
10019df2:	e7e4      	b.n	10019dbe <_Balloc+0x16>

10019df4 <_Bfree>:
10019df4:	b131      	cbz	r1, 10019e04 <_Bfree+0x10>
10019df6:	6c43      	ldr	r3, [r0, #68]	@ 0x44
10019df8:	684a      	ldr	r2, [r1, #4]
10019dfa:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
10019dfe:	6008      	str	r0, [r1, #0]
10019e00:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
10019e04:	4770      	bx	lr
10019e06:	bf00      	nop

10019e08 <__multadd>:
10019e08:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
10019e0c:	690d      	ldr	r5, [r1, #16]
10019e0e:	4607      	mov	r7, r0
10019e10:	460e      	mov	r6, r1
10019e12:	461c      	mov	r4, r3
10019e14:	f101 0e14 	add.w	lr, r1, #20
10019e18:	2000      	movs	r0, #0
10019e1a:	f8de 1000 	ldr.w	r1, [lr]
10019e1e:	b28b      	uxth	r3, r1
10019e20:	fb02 4303 	mla	r3, r2, r3, r4
10019e24:	ea4f 4c13 	mov.w	ip, r3, lsr #16
10019e28:	0c09      	lsrs	r1, r1, #16
10019e2a:	fb02 cc01 	mla	ip, r2, r1, ip
10019e2e:	3001      	adds	r0, #1
10019e30:	b29b      	uxth	r3, r3
10019e32:	eb03 430c 	add.w	r3, r3, ip, lsl #16
10019e36:	4285      	cmp	r5, r0
10019e38:	f84e 3b04 	str.w	r3, [lr], #4
10019e3c:	ea4f 441c 	mov.w	r4, ip, lsr #16
10019e40:	dceb      	bgt.n	10019e1a <__multadd+0x12>
10019e42:	b13c      	cbz	r4, 10019e54 <__multadd+0x4c>
10019e44:	68b3      	ldr	r3, [r6, #8]
10019e46:	42ab      	cmp	r3, r5
10019e48:	dd07      	ble.n	10019e5a <__multadd+0x52>
10019e4a:	eb06 0385 	add.w	r3, r6, r5, lsl #2
10019e4e:	3501      	adds	r5, #1
10019e50:	615c      	str	r4, [r3, #20]
10019e52:	6135      	str	r5, [r6, #16]
10019e54:	4630      	mov	r0, r6
10019e56:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
10019e5a:	6871      	ldr	r1, [r6, #4]
10019e5c:	4638      	mov	r0, r7
10019e5e:	3101      	adds	r1, #1
10019e60:	f7ff ffa2 	bl	10019da8 <_Balloc>
10019e64:	4680      	mov	r8, r0
10019e66:	b1a8      	cbz	r0, 10019e94 <__multadd+0x8c>
10019e68:	6932      	ldr	r2, [r6, #16]
10019e6a:	3202      	adds	r2, #2
10019e6c:	f106 010c 	add.w	r1, r6, #12
10019e70:	0092      	lsls	r2, r2, #2
10019e72:	300c      	adds	r0, #12
10019e74:	f7fc f8b4 	bl	10015fe0 <memcpy>
10019e78:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
10019e7a:	6872      	ldr	r2, [r6, #4]
10019e7c:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
10019e80:	6031      	str	r1, [r6, #0]
10019e82:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
10019e86:	4646      	mov	r6, r8
10019e88:	eb06 0385 	add.w	r3, r6, r5, lsl #2
10019e8c:	3501      	adds	r5, #1
10019e8e:	615c      	str	r4, [r3, #20]
10019e90:	6135      	str	r5, [r6, #16]
10019e92:	e7df      	b.n	10019e54 <__multadd+0x4c>
10019e94:	4b02      	ldr	r3, [pc, #8]	@ (10019ea0 <__multadd+0x98>)
10019e96:	4803      	ldr	r0, [pc, #12]	@ (10019ea4 <__multadd+0x9c>)
10019e98:	4642      	mov	r2, r8
10019e9a:	21ba      	movs	r1, #186	@ 0xba
10019e9c:	f7ff fe96 	bl	10019bcc <__assert_func>
10019ea0:	1001da2c 	.word	0x1001da2c
10019ea4:	1001dc20 	.word	0x1001dc20

10019ea8 <__hi0bits>:
10019ea8:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
10019eac:	4603      	mov	r3, r0
10019eae:	bf36      	itet	cc
10019eb0:	0403      	lslcc	r3, r0, #16
10019eb2:	2000      	movcs	r0, #0
10019eb4:	2010      	movcc	r0, #16
10019eb6:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
10019eba:	bf3c      	itt	cc
10019ebc:	021b      	lslcc	r3, r3, #8
10019ebe:	3008      	addcc	r0, #8
10019ec0:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
10019ec4:	bf3c      	itt	cc
10019ec6:	011b      	lslcc	r3, r3, #4
10019ec8:	3004      	addcc	r0, #4
10019eca:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
10019ece:	d303      	bcc.n	10019ed8 <__hi0bits+0x30>
10019ed0:	2b00      	cmp	r3, #0
10019ed2:	db06      	blt.n	10019ee2 <__hi0bits+0x3a>
10019ed4:	3001      	adds	r0, #1
10019ed6:	4770      	bx	lr
10019ed8:	009b      	lsls	r3, r3, #2
10019eda:	d403      	bmi.n	10019ee4 <__hi0bits+0x3c>
10019edc:	005b      	lsls	r3, r3, #1
10019ede:	d403      	bmi.n	10019ee8 <__hi0bits+0x40>
10019ee0:	2020      	movs	r0, #32
10019ee2:	4770      	bx	lr
10019ee4:	3002      	adds	r0, #2
10019ee6:	4770      	bx	lr
10019ee8:	3003      	adds	r0, #3
10019eea:	4770      	bx	lr

10019eec <__lo0bits>:
10019eec:	6803      	ldr	r3, [r0, #0]
10019eee:	f013 0207 	ands.w	r2, r3, #7
10019ef2:	4601      	mov	r1, r0
10019ef4:	d007      	beq.n	10019f06 <__lo0bits+0x1a>
10019ef6:	07da      	lsls	r2, r3, #31
10019ef8:	d41f      	bmi.n	10019f3a <__lo0bits+0x4e>
10019efa:	0798      	lsls	r0, r3, #30
10019efc:	d521      	bpl.n	10019f42 <__lo0bits+0x56>
10019efe:	085b      	lsrs	r3, r3, #1
10019f00:	600b      	str	r3, [r1, #0]
10019f02:	2001      	movs	r0, #1
10019f04:	4770      	bx	lr
10019f06:	b298      	uxth	r0, r3
10019f08:	b1a0      	cbz	r0, 10019f34 <__lo0bits+0x48>
10019f0a:	4610      	mov	r0, r2
10019f0c:	b2da      	uxtb	r2, r3
10019f0e:	b90a      	cbnz	r2, 10019f14 <__lo0bits+0x28>
10019f10:	3008      	adds	r0, #8
10019f12:	0a1b      	lsrs	r3, r3, #8
10019f14:	071a      	lsls	r2, r3, #28
10019f16:	bf04      	itt	eq
10019f18:	091b      	lsreq	r3, r3, #4
10019f1a:	3004      	addeq	r0, #4
10019f1c:	079a      	lsls	r2, r3, #30
10019f1e:	bf04      	itt	eq
10019f20:	089b      	lsreq	r3, r3, #2
10019f22:	3002      	addeq	r0, #2
10019f24:	07da      	lsls	r2, r3, #31
10019f26:	d403      	bmi.n	10019f30 <__lo0bits+0x44>
10019f28:	085b      	lsrs	r3, r3, #1
10019f2a:	f100 0001 	add.w	r0, r0, #1
10019f2e:	d006      	beq.n	10019f3e <__lo0bits+0x52>
10019f30:	600b      	str	r3, [r1, #0]
10019f32:	4770      	bx	lr
10019f34:	0c1b      	lsrs	r3, r3, #16
10019f36:	2010      	movs	r0, #16
10019f38:	e7e8      	b.n	10019f0c <__lo0bits+0x20>
10019f3a:	2000      	movs	r0, #0
10019f3c:	4770      	bx	lr
10019f3e:	2020      	movs	r0, #32
10019f40:	4770      	bx	lr
10019f42:	089b      	lsrs	r3, r3, #2
10019f44:	600b      	str	r3, [r1, #0]
10019f46:	2002      	movs	r0, #2
10019f48:	4770      	bx	lr
10019f4a:	bf00      	nop

10019f4c <__i2b>:
10019f4c:	b538      	push	{r3, r4, r5, lr}
10019f4e:	6c43      	ldr	r3, [r0, #68]	@ 0x44
10019f50:	4604      	mov	r4, r0
10019f52:	460d      	mov	r5, r1
10019f54:	b14b      	cbz	r3, 10019f6a <__i2b+0x1e>
10019f56:	6858      	ldr	r0, [r3, #4]
10019f58:	b1b0      	cbz	r0, 10019f88 <__i2b+0x3c>
10019f5a:	6802      	ldr	r2, [r0, #0]
10019f5c:	605a      	str	r2, [r3, #4]
10019f5e:	2200      	movs	r2, #0
10019f60:	2301      	movs	r3, #1
10019f62:	6145      	str	r5, [r0, #20]
10019f64:	60c2      	str	r2, [r0, #12]
10019f66:	6103      	str	r3, [r0, #16]
10019f68:	bd38      	pop	{r3, r4, r5, pc}
10019f6a:	2221      	movs	r2, #33	@ 0x21
10019f6c:	2104      	movs	r1, #4
10019f6e:	f000 fad5 	bl	1001a51c <_calloc_r>
10019f72:	4603      	mov	r3, r0
10019f74:	6460      	str	r0, [r4, #68]	@ 0x44
10019f76:	2800      	cmp	r0, #0
10019f78:	d1ed      	bne.n	10019f56 <__i2b+0xa>
10019f7a:	4b09      	ldr	r3, [pc, #36]	@ (10019fa0 <__i2b+0x54>)
10019f7c:	4809      	ldr	r0, [pc, #36]	@ (10019fa4 <__i2b+0x58>)
10019f7e:	2200      	movs	r2, #0
10019f80:	f240 1145 	movw	r1, #325	@ 0x145
10019f84:	f7ff fe22 	bl	10019bcc <__assert_func>
10019f88:	221c      	movs	r2, #28
10019f8a:	2101      	movs	r1, #1
10019f8c:	4620      	mov	r0, r4
10019f8e:	f000 fac5 	bl	1001a51c <_calloc_r>
10019f92:	2800      	cmp	r0, #0
10019f94:	d0f1      	beq.n	10019f7a <__i2b+0x2e>
10019f96:	2201      	movs	r2, #1
10019f98:	2302      	movs	r3, #2
10019f9a:	6042      	str	r2, [r0, #4]
10019f9c:	6083      	str	r3, [r0, #8]
10019f9e:	e7de      	b.n	10019f5e <__i2b+0x12>
10019fa0:	1001da2c 	.word	0x1001da2c
10019fa4:	1001dc20 	.word	0x1001dc20

10019fa8 <__multiply>:
10019fa8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10019fac:	f8d1 8010 	ldr.w	r8, [r1, #16]
10019fb0:	6915      	ldr	r5, [r2, #16]
10019fb2:	45a8      	cmp	r8, r5
10019fb4:	b085      	sub	sp, #20
10019fb6:	460e      	mov	r6, r1
10019fb8:	4692      	mov	sl, r2
10019fba:	db05      	blt.n	10019fc8 <__multiply+0x20>
10019fbc:	462a      	mov	r2, r5
10019fbe:	4653      	mov	r3, sl
10019fc0:	4645      	mov	r5, r8
10019fc2:	468a      	mov	sl, r1
10019fc4:	4690      	mov	r8, r2
10019fc6:	461e      	mov	r6, r3
10019fc8:	f8da 3008 	ldr.w	r3, [sl, #8]
10019fcc:	f8da 1004 	ldr.w	r1, [sl, #4]
10019fd0:	eb05 0408 	add.w	r4, r5, r8
10019fd4:	42a3      	cmp	r3, r4
10019fd6:	bfb8      	it	lt
10019fd8:	3101      	addlt	r1, #1
10019fda:	f7ff fee5 	bl	10019da8 <_Balloc>
10019fde:	4684      	mov	ip, r0
10019fe0:	2800      	cmp	r0, #0
10019fe2:	f000 808b 	beq.w	1001a0fc <__multiply+0x154>
10019fe6:	f100 0714 	add.w	r7, r0, #20
10019fea:	eb07 0e84 	add.w	lr, r7, r4, lsl #2
10019fee:	4577      	cmp	r7, lr
10019ff0:	d205      	bcs.n	10019ffe <__multiply+0x56>
10019ff2:	463b      	mov	r3, r7
10019ff4:	2200      	movs	r2, #0
10019ff6:	f843 2b04 	str.w	r2, [r3], #4
10019ffa:	459e      	cmp	lr, r3
10019ffc:	d8fb      	bhi.n	10019ff6 <__multiply+0x4e>
10019ffe:	3614      	adds	r6, #20
1001a000:	eb06 0888 	add.w	r8, r6, r8, lsl #2
1001a004:	f10a 0914 	add.w	r9, sl, #20
1001a008:	4546      	cmp	r6, r8
1001a00a:	eb09 0585 	add.w	r5, r9, r5, lsl #2
1001a00e:	d266      	bcs.n	1001a0de <__multiply+0x136>
1001a010:	eba5 030a 	sub.w	r3, r5, sl
1001a014:	3b15      	subs	r3, #21
1001a016:	f023 0303 	bic.w	r3, r3, #3
1001a01a:	f10a 0a15 	add.w	sl, sl, #21
1001a01e:	3304      	adds	r3, #4
1001a020:	4555      	cmp	r5, sl
1001a022:	bf2c      	ite	cs
1001a024:	469b      	movcs	fp, r3
1001a026:	f04f 0b04 	movcc.w	fp, #4
1001a02a:	f8cd e008 	str.w	lr, [sp, #8]
1001a02e:	9403      	str	r4, [sp, #12]
1001a030:	46ae      	mov	lr, r5
1001a032:	46e2      	mov	sl, ip
1001a034:	e005      	b.n	1001a042 <__multiply+0x9a>
1001a036:	0c09      	lsrs	r1, r1, #16
1001a038:	d12a      	bne.n	1001a090 <__multiply+0xe8>
1001a03a:	45b0      	cmp	r8, r6
1001a03c:	f107 0704 	add.w	r7, r7, #4
1001a040:	d94a      	bls.n	1001a0d8 <__multiply+0x130>
1001a042:	f856 1b04 	ldr.w	r1, [r6], #4
1001a046:	b28d      	uxth	r5, r1
1001a048:	2d00      	cmp	r5, #0
1001a04a:	d0f4      	beq.n	1001a036 <__multiply+0x8e>
1001a04c:	46cc      	mov	ip, r9
1001a04e:	463c      	mov	r4, r7
1001a050:	2300      	movs	r3, #0
1001a052:	9601      	str	r6, [sp, #4]
1001a054:	f85c 0b04 	ldr.w	r0, [ip], #4
1001a058:	6821      	ldr	r1, [r4, #0]
1001a05a:	b286      	uxth	r6, r0
1001a05c:	b28a      	uxth	r2, r1
1001a05e:	0c00      	lsrs	r0, r0, #16
1001a060:	fb05 2206 	mla	r2, r5, r6, r2
1001a064:	0c09      	lsrs	r1, r1, #16
1001a066:	441a      	add	r2, r3
1001a068:	fb05 1100 	mla	r1, r5, r0, r1
1001a06c:	eb01 4112 	add.w	r1, r1, r2, lsr #16
1001a070:	b292      	uxth	r2, r2
1001a072:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
1001a076:	45e6      	cmp	lr, ip
1001a078:	f844 2b04 	str.w	r2, [r4], #4
1001a07c:	ea4f 4311 	mov.w	r3, r1, lsr #16
1001a080:	d8e8      	bhi.n	1001a054 <__multiply+0xac>
1001a082:	9e01      	ldr	r6, [sp, #4]
1001a084:	f847 300b 	str.w	r3, [r7, fp]
1001a088:	f856 1c04 	ldr.w	r1, [r6, #-4]
1001a08c:	0c09      	lsrs	r1, r1, #16
1001a08e:	d0d4      	beq.n	1001a03a <__multiply+0x92>
1001a090:	683b      	ldr	r3, [r7, #0]
1001a092:	2200      	movs	r2, #0
1001a094:	4648      	mov	r0, r9
1001a096:	461d      	mov	r5, r3
1001a098:	463c      	mov	r4, r7
1001a09a:	4694      	mov	ip, r2
1001a09c:	8802      	ldrh	r2, [r0, #0]
1001a09e:	fb01 c202 	mla	r2, r1, r2, ip
1001a0a2:	eb02 4215 	add.w	r2, r2, r5, lsr #16
1001a0a6:	b29b      	uxth	r3, r3
1001a0a8:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
1001a0ac:	f844 3b04 	str.w	r3, [r4], #4
1001a0b0:	f850 3b04 	ldr.w	r3, [r0], #4
1001a0b4:	6825      	ldr	r5, [r4, #0]
1001a0b6:	ea4f 4c13 	mov.w	ip, r3, lsr #16
1001a0ba:	b2ab      	uxth	r3, r5
1001a0bc:	fb01 330c 	mla	r3, r1, ip, r3
1001a0c0:	eb03 4312 	add.w	r3, r3, r2, lsr #16
1001a0c4:	4586      	cmp	lr, r0
1001a0c6:	ea4f 4c13 	mov.w	ip, r3, lsr #16
1001a0ca:	d8e7      	bhi.n	1001a09c <__multiply+0xf4>
1001a0cc:	45b0      	cmp	r8, r6
1001a0ce:	f847 300b 	str.w	r3, [r7, fp]
1001a0d2:	f107 0704 	add.w	r7, r7, #4
1001a0d6:	d8b4      	bhi.n	1001a042 <__multiply+0x9a>
1001a0d8:	e9dd e402 	ldrd	lr, r4, [sp, #8]
1001a0dc:	46d4      	mov	ip, sl
1001a0de:	2c00      	cmp	r4, #0
1001a0e0:	dc02      	bgt.n	1001a0e8 <__multiply+0x140>
1001a0e2:	e005      	b.n	1001a0f0 <__multiply+0x148>
1001a0e4:	3c01      	subs	r4, #1
1001a0e6:	d003      	beq.n	1001a0f0 <__multiply+0x148>
1001a0e8:	f85e 3d04 	ldr.w	r3, [lr, #-4]!
1001a0ec:	2b00      	cmp	r3, #0
1001a0ee:	d0f9      	beq.n	1001a0e4 <__multiply+0x13c>
1001a0f0:	4660      	mov	r0, ip
1001a0f2:	f8cc 4010 	str.w	r4, [ip, #16]
1001a0f6:	b005      	add	sp, #20
1001a0f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001a0fc:	4b03      	ldr	r3, [pc, #12]	@ (1001a10c <__multiply+0x164>)
1001a0fe:	4804      	ldr	r0, [pc, #16]	@ (1001a110 <__multiply+0x168>)
1001a100:	4662      	mov	r2, ip
1001a102:	f44f 71b1 	mov.w	r1, #354	@ 0x162
1001a106:	f7ff fd61 	bl	10019bcc <__assert_func>
1001a10a:	bf00      	nop
1001a10c:	1001da2c 	.word	0x1001da2c
1001a110:	1001dc20 	.word	0x1001dc20

1001a114 <__pow5mult>:
1001a114:	f012 0303 	ands.w	r3, r2, #3
1001a118:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
1001a11c:	4614      	mov	r4, r2
1001a11e:	4607      	mov	r7, r0
1001a120:	d12c      	bne.n	1001a17c <__pow5mult+0x68>
1001a122:	460d      	mov	r5, r1
1001a124:	10a4      	asrs	r4, r4, #2
1001a126:	d01c      	beq.n	1001a162 <__pow5mult+0x4e>
1001a128:	6c3e      	ldr	r6, [r7, #64]	@ 0x40
1001a12a:	b386      	cbz	r6, 1001a18e <__pow5mult+0x7a>
1001a12c:	07e3      	lsls	r3, r4, #31
1001a12e:	f04f 0800 	mov.w	r8, #0
1001a132:	d406      	bmi.n	1001a142 <__pow5mult+0x2e>
1001a134:	1064      	asrs	r4, r4, #1
1001a136:	d014      	beq.n	1001a162 <__pow5mult+0x4e>
1001a138:	6830      	ldr	r0, [r6, #0]
1001a13a:	b1a8      	cbz	r0, 1001a168 <__pow5mult+0x54>
1001a13c:	4606      	mov	r6, r0
1001a13e:	07e3      	lsls	r3, r4, #31
1001a140:	d5f8      	bpl.n	1001a134 <__pow5mult+0x20>
1001a142:	4632      	mov	r2, r6
1001a144:	4629      	mov	r1, r5
1001a146:	4638      	mov	r0, r7
1001a148:	f7ff ff2e 	bl	10019fa8 <__multiply>
1001a14c:	b135      	cbz	r5, 1001a15c <__pow5mult+0x48>
1001a14e:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
1001a150:	6869      	ldr	r1, [r5, #4]
1001a152:	f853 2021 	ldr.w	r2, [r3, r1, lsl #2]
1001a156:	602a      	str	r2, [r5, #0]
1001a158:	f843 5021 	str.w	r5, [r3, r1, lsl #2]
1001a15c:	1064      	asrs	r4, r4, #1
1001a15e:	4605      	mov	r5, r0
1001a160:	d1ea      	bne.n	1001a138 <__pow5mult+0x24>
1001a162:	4628      	mov	r0, r5
1001a164:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1001a168:	4632      	mov	r2, r6
1001a16a:	4631      	mov	r1, r6
1001a16c:	4638      	mov	r0, r7
1001a16e:	f7ff ff1b 	bl	10019fa8 <__multiply>
1001a172:	6030      	str	r0, [r6, #0]
1001a174:	f8c0 8000 	str.w	r8, [r0]
1001a178:	4606      	mov	r6, r0
1001a17a:	e7e0      	b.n	1001a13e <__pow5mult+0x2a>
1001a17c:	3b01      	subs	r3, #1
1001a17e:	4a0f      	ldr	r2, [pc, #60]	@ (1001a1bc <__pow5mult+0xa8>)
1001a180:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
1001a184:	2300      	movs	r3, #0
1001a186:	f7ff fe3f 	bl	10019e08 <__multadd>
1001a18a:	4605      	mov	r5, r0
1001a18c:	e7ca      	b.n	1001a124 <__pow5mult+0x10>
1001a18e:	2101      	movs	r1, #1
1001a190:	4638      	mov	r0, r7
1001a192:	f7ff fe09 	bl	10019da8 <_Balloc>
1001a196:	4606      	mov	r6, r0
1001a198:	b140      	cbz	r0, 1001a1ac <__pow5mult+0x98>
1001a19a:	2301      	movs	r3, #1
1001a19c:	f240 2271 	movw	r2, #625	@ 0x271
1001a1a0:	e9c0 3204 	strd	r3, r2, [r0, #16]
1001a1a4:	2300      	movs	r3, #0
1001a1a6:	6438      	str	r0, [r7, #64]	@ 0x40
1001a1a8:	6003      	str	r3, [r0, #0]
1001a1aa:	e7bf      	b.n	1001a12c <__pow5mult+0x18>
1001a1ac:	4b04      	ldr	r3, [pc, #16]	@ (1001a1c0 <__pow5mult+0xac>)
1001a1ae:	4805      	ldr	r0, [pc, #20]	@ (1001a1c4 <__pow5mult+0xb0>)
1001a1b0:	4632      	mov	r2, r6
1001a1b2:	f240 1145 	movw	r1, #325	@ 0x145
1001a1b6:	f7ff fd09 	bl	10019bcc <__assert_func>
1001a1ba:	bf00      	nop
1001a1bc:	1001dc7c 	.word	0x1001dc7c
1001a1c0:	1001da2c 	.word	0x1001da2c
1001a1c4:	1001dc20 	.word	0x1001dc20

1001a1c8 <__lshift>:
1001a1c8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
1001a1cc:	460c      	mov	r4, r1
1001a1ce:	4690      	mov	r8, r2
1001a1d0:	6927      	ldr	r7, [r4, #16]
1001a1d2:	68a3      	ldr	r3, [r4, #8]
1001a1d4:	6849      	ldr	r1, [r1, #4]
1001a1d6:	eb07 1762 	add.w	r7, r7, r2, asr #5
1001a1da:	1c7d      	adds	r5, r7, #1
1001a1dc:	429d      	cmp	r5, r3
1001a1de:	4606      	mov	r6, r0
1001a1e0:	ea4f 1962 	mov.w	r9, r2, asr #5
1001a1e4:	dd04      	ble.n	1001a1f0 <__lshift+0x28>
1001a1e6:	005b      	lsls	r3, r3, #1
1001a1e8:	429d      	cmp	r5, r3
1001a1ea:	f101 0101 	add.w	r1, r1, #1
1001a1ee:	dcfa      	bgt.n	1001a1e6 <__lshift+0x1e>
1001a1f0:	4630      	mov	r0, r6
1001a1f2:	f7ff fdd9 	bl	10019da8 <_Balloc>
1001a1f6:	4684      	mov	ip, r0
1001a1f8:	2800      	cmp	r0, #0
1001a1fa:	d051      	beq.n	1001a2a0 <__lshift+0xd8>
1001a1fc:	f1b9 0f00 	cmp.w	r9, #0
1001a200:	f100 0014 	add.w	r0, r0, #20
1001a204:	dd0e      	ble.n	1001a224 <__lshift+0x5c>
1001a206:	f109 0205 	add.w	r2, r9, #5
1001a20a:	ea4f 0e82 	mov.w	lr, r2, lsl #2
1001a20e:	4603      	mov	r3, r0
1001a210:	eb0c 0282 	add.w	r2, ip, r2, lsl #2
1001a214:	2100      	movs	r1, #0
1001a216:	f843 1b04 	str.w	r1, [r3], #4
1001a21a:	4293      	cmp	r3, r2
1001a21c:	d1fb      	bne.n	1001a216 <__lshift+0x4e>
1001a21e:	f1ae 0314 	sub.w	r3, lr, #20
1001a222:	4418      	add	r0, r3
1001a224:	6921      	ldr	r1, [r4, #16]
1001a226:	f104 0314 	add.w	r3, r4, #20
1001a22a:	f018 081f 	ands.w	r8, r8, #31
1001a22e:	eb03 0181 	add.w	r1, r3, r1, lsl #2
1001a232:	d02d      	beq.n	1001a290 <__lshift+0xc8>
1001a234:	f1c8 0920 	rsb	r9, r8, #32
1001a238:	4686      	mov	lr, r0
1001a23a:	f04f 0a00 	mov.w	sl, #0
1001a23e:	681a      	ldr	r2, [r3, #0]
1001a240:	fa02 f208 	lsl.w	r2, r2, r8
1001a244:	ea42 020a 	orr.w	r2, r2, sl
1001a248:	f84e 2b04 	str.w	r2, [lr], #4
1001a24c:	f853 2b04 	ldr.w	r2, [r3], #4
1001a250:	4299      	cmp	r1, r3
1001a252:	fa22 fa09 	lsr.w	sl, r2, r9
1001a256:	d8f2      	bhi.n	1001a23e <__lshift+0x76>
1001a258:	1b0b      	subs	r3, r1, r4
1001a25a:	3b15      	subs	r3, #21
1001a25c:	f023 0303 	bic.w	r3, r3, #3
1001a260:	3304      	adds	r3, #4
1001a262:	f104 0215 	add.w	r2, r4, #21
1001a266:	4291      	cmp	r1, r2
1001a268:	bf38      	it	cc
1001a26a:	2304      	movcc	r3, #4
1001a26c:	f840 a003 	str.w	sl, [r0, r3]
1001a270:	f1ba 0f00 	cmp.w	sl, #0
1001a274:	d100      	bne.n	1001a278 <__lshift+0xb0>
1001a276:	463d      	mov	r5, r7
1001a278:	6c73      	ldr	r3, [r6, #68]	@ 0x44
1001a27a:	6862      	ldr	r2, [r4, #4]
1001a27c:	f8cc 5010 	str.w	r5, [ip, #16]
1001a280:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
1001a284:	6021      	str	r1, [r4, #0]
1001a286:	4660      	mov	r0, ip
1001a288:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
1001a28c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
1001a290:	3804      	subs	r0, #4
1001a292:	f853 2b04 	ldr.w	r2, [r3], #4
1001a296:	f840 2f04 	str.w	r2, [r0, #4]!
1001a29a:	4299      	cmp	r1, r3
1001a29c:	d8f9      	bhi.n	1001a292 <__lshift+0xca>
1001a29e:	e7ea      	b.n	1001a276 <__lshift+0xae>
1001a2a0:	4b03      	ldr	r3, [pc, #12]	@ (1001a2b0 <__lshift+0xe8>)
1001a2a2:	4804      	ldr	r0, [pc, #16]	@ (1001a2b4 <__lshift+0xec>)
1001a2a4:	4662      	mov	r2, ip
1001a2a6:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
1001a2aa:	f7ff fc8f 	bl	10019bcc <__assert_func>
1001a2ae:	bf00      	nop
1001a2b0:	1001da2c 	.word	0x1001da2c
1001a2b4:	1001dc20 	.word	0x1001dc20

1001a2b8 <__mcmp>:
1001a2b8:	690b      	ldr	r3, [r1, #16]
1001a2ba:	4684      	mov	ip, r0
1001a2bc:	6900      	ldr	r0, [r0, #16]
1001a2be:	1ac0      	subs	r0, r0, r3
1001a2c0:	d116      	bne.n	1001a2f0 <__mcmp+0x38>
1001a2c2:	f10c 0c14 	add.w	ip, ip, #20
1001a2c6:	3114      	adds	r1, #20
1001a2c8:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
1001a2cc:	b410      	push	{r4}
1001a2ce:	eb01 0383 	add.w	r3, r1, r3, lsl #2
1001a2d2:	e001      	b.n	1001a2d8 <__mcmp+0x20>
1001a2d4:	4594      	cmp	ip, r2
1001a2d6:	d208      	bcs.n	1001a2ea <__mcmp+0x32>
1001a2d8:	f852 4d04 	ldr.w	r4, [r2, #-4]!
1001a2dc:	f853 1d04 	ldr.w	r1, [r3, #-4]!
1001a2e0:	428c      	cmp	r4, r1
1001a2e2:	d0f7      	beq.n	1001a2d4 <__mcmp+0x1c>
1001a2e4:	d205      	bcs.n	1001a2f2 <__mcmp+0x3a>
1001a2e6:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1001a2ea:	f85d 4b04 	ldr.w	r4, [sp], #4
1001a2ee:	4770      	bx	lr
1001a2f0:	4770      	bx	lr
1001a2f2:	2001      	movs	r0, #1
1001a2f4:	f85d 4b04 	ldr.w	r4, [sp], #4
1001a2f8:	4770      	bx	lr
1001a2fa:	bf00      	nop

1001a2fc <__mdiff>:
1001a2fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1001a300:	6913      	ldr	r3, [r2, #16]
1001a302:	690f      	ldr	r7, [r1, #16]
1001a304:	1aff      	subs	r7, r7, r3
1001a306:	2f00      	cmp	r7, #0
1001a308:	b083      	sub	sp, #12
1001a30a:	460d      	mov	r5, r1
1001a30c:	4690      	mov	r8, r2
1001a30e:	d115      	bne.n	1001a33c <__mdiff+0x40>
1001a310:	f101 0614 	add.w	r6, r1, #20
1001a314:	3214      	adds	r2, #20
1001a316:	eb02 0283 	add.w	r2, r2, r3, lsl #2
1001a31a:	eb06 0383 	add.w	r3, r6, r3, lsl #2
1001a31e:	e001      	b.n	1001a324 <__mdiff+0x28>
1001a320:	429e      	cmp	r6, r3
1001a322:	d276      	bcs.n	1001a412 <__mdiff+0x116>
1001a324:	f853 4d04 	ldr.w	r4, [r3, #-4]!
1001a328:	f852 1d04 	ldr.w	r1, [r2, #-4]!
1001a32c:	428c      	cmp	r4, r1
1001a32e:	d0f7      	beq.n	1001a320 <__mdiff+0x24>
1001a330:	d206      	bcs.n	1001a340 <__mdiff+0x44>
1001a332:	462b      	mov	r3, r5
1001a334:	2701      	movs	r7, #1
1001a336:	4645      	mov	r5, r8
1001a338:	4698      	mov	r8, r3
1001a33a:	e001      	b.n	1001a340 <__mdiff+0x44>
1001a33c:	dbf9      	blt.n	1001a332 <__mdiff+0x36>
1001a33e:	2700      	movs	r7, #0
1001a340:	6869      	ldr	r1, [r5, #4]
1001a342:	f7ff fd31 	bl	10019da8 <_Balloc>
1001a346:	4681      	mov	r9, r0
1001a348:	2800      	cmp	r0, #0
1001a34a:	d076      	beq.n	1001a43a <__mdiff+0x13e>
1001a34c:	692e      	ldr	r6, [r5, #16]
1001a34e:	60c7      	str	r7, [r0, #12]
1001a350:	f8d8 0010 	ldr.w	r0, [r8, #16]
1001a354:	f105 0b14 	add.w	fp, r5, #20
1001a358:	f108 0e14 	add.w	lr, r8, #20
1001a35c:	f109 0a14 	add.w	sl, r9, #20
1001a360:	f105 0110 	add.w	r1, r5, #16
1001a364:	eb0e 0080 	add.w	r0, lr, r0, lsl #2
1001a368:	eb0b 0286 	add.w	r2, fp, r6, lsl #2
1001a36c:	4657      	mov	r7, sl
1001a36e:	f04f 0c00 	mov.w	ip, #0
1001a372:	f8cd b004 	str.w	fp, [sp, #4]
1001a376:	f85e 4b04 	ldr.w	r4, [lr], #4
1001a37a:	f851 5f04 	ldr.w	r5, [r1, #4]!
1001a37e:	fa1f fb84 	uxth.w	fp, r4
1001a382:	b2ab      	uxth	r3, r5
1001a384:	eba3 030b 	sub.w	r3, r3, fp
1001a388:	0c24      	lsrs	r4, r4, #16
1001a38a:	4463      	add	r3, ip
1001a38c:	ebc4 4415 	rsb	r4, r4, r5, lsr #16
1001a390:	eb04 4423 	add.w	r4, r4, r3, asr #16
1001a394:	b29b      	uxth	r3, r3
1001a396:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
1001a39a:	4570      	cmp	r0, lr
1001a39c:	f847 3b04 	str.w	r3, [r7], #4
1001a3a0:	ea4f 4c24 	mov.w	ip, r4, asr #16
1001a3a4:	d8e7      	bhi.n	1001a376 <__mdiff+0x7a>
1001a3a6:	eba0 0108 	sub.w	r1, r0, r8
1001a3aa:	3915      	subs	r1, #21
1001a3ac:	0889      	lsrs	r1, r1, #2
1001a3ae:	1c4c      	adds	r4, r1, #1
1001a3b0:	f8dd b004 	ldr.w	fp, [sp, #4]
1001a3b4:	f108 0815 	add.w	r8, r8, #21
1001a3b8:	00a4      	lsls	r4, r4, #2
1001a3ba:	4540      	cmp	r0, r8
1001a3bc:	bf38      	it	cc
1001a3be:	2404      	movcc	r4, #4
1001a3c0:	eb0b 0504 	add.w	r5, fp, r4
1001a3c4:	42aa      	cmp	r2, r5
1001a3c6:	4454      	add	r4, sl
1001a3c8:	d930      	bls.n	1001a42c <__mdiff+0x130>
1001a3ca:	4627      	mov	r7, r4
1001a3cc:	4628      	mov	r0, r5
1001a3ce:	f850 3b04 	ldr.w	r3, [r0], #4
1001a3d2:	fa1c fe83 	uxtah	lr, ip, r3
1001a3d6:	0c19      	lsrs	r1, r3, #16
1001a3d8:	4463      	add	r3, ip
1001a3da:	eb01 412e 	add.w	r1, r1, lr, asr #16
1001a3de:	b29b      	uxth	r3, r3
1001a3e0:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
1001a3e4:	4282      	cmp	r2, r0
1001a3e6:	f847 3b04 	str.w	r3, [r7], #4
1001a3ea:	ea4f 4c21 	mov.w	ip, r1, asr #16
1001a3ee:	d8ee      	bhi.n	1001a3ce <__mdiff+0xd2>
1001a3f0:	3a01      	subs	r2, #1
1001a3f2:	1b52      	subs	r2, r2, r5
1001a3f4:	f022 0203 	bic.w	r2, r2, #3
1001a3f8:	4414      	add	r4, r2
1001a3fa:	b923      	cbnz	r3, 1001a406 <__mdiff+0x10a>
1001a3fc:	f854 3d04 	ldr.w	r3, [r4, #-4]!
1001a400:	3e01      	subs	r6, #1
1001a402:	2b00      	cmp	r3, #0
1001a404:	d0fa      	beq.n	1001a3fc <__mdiff+0x100>
1001a406:	4648      	mov	r0, r9
1001a408:	f8c9 6010 	str.w	r6, [r9, #16]
1001a40c:	b003      	add	sp, #12
1001a40e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001a412:	2100      	movs	r1, #0
1001a414:	f7ff fcc8 	bl	10019da8 <_Balloc>
1001a418:	4681      	mov	r9, r0
1001a41a:	b1a8      	cbz	r0, 1001a448 <__mdiff+0x14c>
1001a41c:	2201      	movs	r2, #1
1001a41e:	2300      	movs	r3, #0
1001a420:	e9c0 2304 	strd	r2, r3, [r0, #16]
1001a424:	4648      	mov	r0, r9
1001a426:	b003      	add	sp, #12
1001a428:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001a42c:	0089      	lsls	r1, r1, #2
1001a42e:	4540      	cmp	r0, r8
1001a430:	bf38      	it	cc
1001a432:	2100      	movcc	r1, #0
1001a434:	eb0a 0401 	add.w	r4, sl, r1
1001a438:	e7df      	b.n	1001a3fa <__mdiff+0xfe>
1001a43a:	4b07      	ldr	r3, [pc, #28]	@ (1001a458 <__mdiff+0x15c>)
1001a43c:	4807      	ldr	r0, [pc, #28]	@ (1001a45c <__mdiff+0x160>)
1001a43e:	464a      	mov	r2, r9
1001a440:	f240 2145 	movw	r1, #581	@ 0x245
1001a444:	f7ff fbc2 	bl	10019bcc <__assert_func>
1001a448:	4b03      	ldr	r3, [pc, #12]	@ (1001a458 <__mdiff+0x15c>)
1001a44a:	4804      	ldr	r0, [pc, #16]	@ (1001a45c <__mdiff+0x160>)
1001a44c:	464a      	mov	r2, r9
1001a44e:	f240 2137 	movw	r1, #567	@ 0x237
1001a452:	f7ff fbbb 	bl	10019bcc <__assert_func>
1001a456:	bf00      	nop
1001a458:	1001da2c 	.word	0x1001da2c
1001a45c:	1001dc20 	.word	0x1001dc20

1001a460 <__d2b>:
1001a460:	b5f0      	push	{r4, r5, r6, r7, lr}
1001a462:	2101      	movs	r1, #1
1001a464:	b083      	sub	sp, #12
1001a466:	4616      	mov	r6, r2
1001a468:	461f      	mov	r7, r3
1001a46a:	f7ff fc9d 	bl	10019da8 <_Balloc>
1001a46e:	4605      	mov	r5, r0
1001a470:	2800      	cmp	r0, #0
1001a472:	d047      	beq.n	1001a504 <__d2b+0xa4>
1001a474:	f3c7 540a 	ubfx	r4, r7, #20, #11
1001a478:	f3c7 0313 	ubfx	r3, r7, #0, #20
1001a47c:	b10c      	cbz	r4, 1001a482 <__d2b+0x22>
1001a47e:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
1001a482:	2e00      	cmp	r6, #0
1001a484:	9301      	str	r3, [sp, #4]
1001a486:	d114      	bne.n	1001a4b2 <__d2b+0x52>
1001a488:	a801      	add	r0, sp, #4
1001a48a:	f7ff fd2f 	bl	10019eec <__lo0bits>
1001a48e:	9b01      	ldr	r3, [sp, #4]
1001a490:	616b      	str	r3, [r5, #20]
1001a492:	2201      	movs	r2, #1
1001a494:	3020      	adds	r0, #32
1001a496:	612a      	str	r2, [r5, #16]
1001a498:	b314      	cbz	r4, 1001a4e0 <__d2b+0x80>
1001a49a:	9b08      	ldr	r3, [sp, #32]
1001a49c:	f2a4 4433 	subw	r4, r4, #1075	@ 0x433
1001a4a0:	4404      	add	r4, r0
1001a4a2:	601c      	str	r4, [r3, #0]
1001a4a4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1001a4a6:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
1001a4aa:	6018      	str	r0, [r3, #0]
1001a4ac:	4628      	mov	r0, r5
1001a4ae:	b003      	add	sp, #12
1001a4b0:	bdf0      	pop	{r4, r5, r6, r7, pc}
1001a4b2:	4668      	mov	r0, sp
1001a4b4:	9600      	str	r6, [sp, #0]
1001a4b6:	f7ff fd19 	bl	10019eec <__lo0bits>
1001a4ba:	9b01      	ldr	r3, [sp, #4]
1001a4bc:	b300      	cbz	r0, 1001a500 <__d2b+0xa0>
1001a4be:	9900      	ldr	r1, [sp, #0]
1001a4c0:	f1c0 0220 	rsb	r2, r0, #32
1001a4c4:	fa03 f202 	lsl.w	r2, r3, r2
1001a4c8:	40c3      	lsrs	r3, r0
1001a4ca:	9301      	str	r3, [sp, #4]
1001a4cc:	430a      	orrs	r2, r1
1001a4ce:	2b00      	cmp	r3, #0
1001a4d0:	e9c5 2305 	strd	r2, r3, [r5, #20]
1001a4d4:	bf0c      	ite	eq
1001a4d6:	2201      	moveq	r2, #1
1001a4d8:	2202      	movne	r2, #2
1001a4da:	612a      	str	r2, [r5, #16]
1001a4dc:	2c00      	cmp	r4, #0
1001a4de:	d1dc      	bne.n	1001a49a <__d2b+0x3a>
1001a4e0:	eb05 0182 	add.w	r1, r5, r2, lsl #2
1001a4e4:	f2a0 4332 	subw	r3, r0, #1074	@ 0x432
1001a4e8:	6908      	ldr	r0, [r1, #16]
1001a4ea:	9908      	ldr	r1, [sp, #32]
1001a4ec:	600b      	str	r3, [r1, #0]
1001a4ee:	f7ff fcdb 	bl	10019ea8 <__hi0bits>
1001a4f2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1001a4f4:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
1001a4f8:	6018      	str	r0, [r3, #0]
1001a4fa:	4628      	mov	r0, r5
1001a4fc:	b003      	add	sp, #12
1001a4fe:	bdf0      	pop	{r4, r5, r6, r7, pc}
1001a500:	9a00      	ldr	r2, [sp, #0]
1001a502:	e7e4      	b.n	1001a4ce <__d2b+0x6e>
1001a504:	4b03      	ldr	r3, [pc, #12]	@ (1001a514 <__d2b+0xb4>)
1001a506:	4804      	ldr	r0, [pc, #16]	@ (1001a518 <__d2b+0xb8>)
1001a508:	462a      	mov	r2, r5
1001a50a:	f240 310f 	movw	r1, #783	@ 0x30f
1001a50e:	f7ff fb5d 	bl	10019bcc <__assert_func>
1001a512:	bf00      	nop
1001a514:	1001da2c 	.word	0x1001da2c
1001a518:	1001dc20 	.word	0x1001dc20

1001a51c <_calloc_r>:
1001a51c:	b538      	push	{r3, r4, r5, lr}
1001a51e:	fba1 1402 	umull	r1, r4, r1, r2
1001a522:	bb54      	cbnz	r4, 1001a57a <_calloc_r+0x5e>
1001a524:	f7f9 feac 	bl	10014280 <_malloc_r>
1001a528:	4605      	mov	r5, r0
1001a52a:	b350      	cbz	r0, 1001a582 <_calloc_r+0x66>
1001a52c:	f850 2c04 	ldr.w	r2, [r0, #-4]
1001a530:	f022 0203 	bic.w	r2, r2, #3
1001a534:	3a04      	subs	r2, #4
1001a536:	2a24      	cmp	r2, #36	@ 0x24
1001a538:	d810      	bhi.n	1001a55c <_calloc_r+0x40>
1001a53a:	2a13      	cmp	r2, #19
1001a53c:	d913      	bls.n	1001a566 <_calloc_r+0x4a>
1001a53e:	2a1b      	cmp	r2, #27
1001a540:	6004      	str	r4, [r0, #0]
1001a542:	6044      	str	r4, [r0, #4]
1001a544:	d916      	bls.n	1001a574 <_calloc_r+0x58>
1001a546:	2a24      	cmp	r2, #36	@ 0x24
1001a548:	6084      	str	r4, [r0, #8]
1001a54a:	60c4      	str	r4, [r0, #12]
1001a54c:	bf11      	iteee	ne
1001a54e:	f100 0210 	addne.w	r2, r0, #16
1001a552:	f100 0218 	addeq.w	r2, r0, #24
1001a556:	6104      	streq	r4, [r0, #16]
1001a558:	6144      	streq	r4, [r0, #20]
1001a55a:	e005      	b.n	1001a568 <_calloc_r+0x4c>
1001a55c:	4621      	mov	r1, r4
1001a55e:	f7fa f9d3 	bl	10014908 <memset>
1001a562:	4628      	mov	r0, r5
1001a564:	bd38      	pop	{r3, r4, r5, pc}
1001a566:	4602      	mov	r2, r0
1001a568:	2300      	movs	r3, #0
1001a56a:	6013      	str	r3, [r2, #0]
1001a56c:	6053      	str	r3, [r2, #4]
1001a56e:	6093      	str	r3, [r2, #8]
1001a570:	4628      	mov	r0, r5
1001a572:	bd38      	pop	{r3, r4, r5, pc}
1001a574:	f100 0208 	add.w	r2, r0, #8
1001a578:	e7f6      	b.n	1001a568 <_calloc_r+0x4c>
1001a57a:	f7f8 f8a9 	bl	100126d0 <__errno>
1001a57e:	230c      	movs	r3, #12
1001a580:	6003      	str	r3, [r0, #0]
1001a582:	2500      	movs	r5, #0
1001a584:	4628      	mov	r0, r5
1001a586:	bd38      	pop	{r3, r4, r5, pc}

1001a588 <_wcsnrtombs_l>:
1001a588:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1001a58c:	b08b      	sub	sp, #44	@ 0x2c
1001a58e:	e9dd 7a15 	ldrd	r7, sl, [sp, #84]	@ 0x54
1001a592:	4686      	mov	lr, r0
1001a594:	461e      	mov	r6, r3
1001a596:	2f00      	cmp	r7, #0
1001a598:	d05a      	beq.n	1001a650 <_wcsnrtombs_l+0xc8>
1001a59a:	6815      	ldr	r5, [r2, #0]
1001a59c:	2900      	cmp	r1, #0
1001a59e:	d05c      	beq.n	1001a65a <_wcsnrtombs_l+0xd2>
1001a5a0:	9b14      	ldr	r3, [sp, #80]	@ 0x50
1001a5a2:	2b00      	cmp	r3, #0
1001a5a4:	d069      	beq.n	1001a67a <_wcsnrtombs_l+0xf2>
1001a5a6:	1e74      	subs	r4, r6, #1
1001a5a8:	b34e      	cbz	r6, 1001a5fe <_wcsnrtombs_l+0x76>
1001a5aa:	3d04      	subs	r5, #4
1001a5ac:	e9cd 5e01 	strd	r5, lr, [sp, #4]
1001a5b0:	f8dd b050 	ldr.w	fp, [sp, #80]	@ 0x50
1001a5b4:	9104      	str	r1, [sp, #16]
1001a5b6:	2600      	movs	r6, #0
1001a5b8:	9103      	str	r1, [sp, #12]
1001a5ba:	9205      	str	r2, [sp, #20]
1001a5bc:	e00b      	b.n	1001a5d6 <_wcsnrtombs_l+0x4e>
1001a5be:	9b03      	ldr	r3, [sp, #12]
1001a5c0:	bb0b      	cbnz	r3, 1001a606 <_wcsnrtombs_l+0x7e>
1001a5c2:	9b01      	ldr	r3, [sp, #4]
1001a5c4:	6818      	ldr	r0, [r3, #0]
1001a5c6:	2800      	cmp	r0, #0
1001a5c8:	d036      	beq.n	1001a638 <_wcsnrtombs_l+0xb0>
1001a5ca:	45dc      	cmp	ip, fp
1001a5cc:	d257      	bcs.n	1001a67e <_wcsnrtombs_l+0xf6>
1001a5ce:	3c01      	subs	r4, #1
1001a5d0:	1c63      	adds	r3, r4, #1
1001a5d2:	4666      	mov	r6, ip
1001a5d4:	d013      	beq.n	1001a5fe <_wcsnrtombs_l+0x76>
1001a5d6:	9b01      	ldr	r3, [sp, #4]
1001a5d8:	9802      	ldr	r0, [sp, #8]
1001a5da:	f853 2f04 	ldr.w	r2, [r3, #4]!
1001a5de:	9301      	str	r3, [sp, #4]
1001a5e0:	f8da 50e0 	ldr.w	r5, [sl, #224]	@ 0xe0
1001a5e4:	463b      	mov	r3, r7
1001a5e6:	a907      	add	r1, sp, #28
1001a5e8:	e9d7 9800 	ldrd	r9, r8, [r7]
1001a5ec:	47a8      	blx	r5
1001a5ee:	1c42      	adds	r2, r0, #1
1001a5f0:	d037      	beq.n	1001a662 <_wcsnrtombs_l+0xda>
1001a5f2:	eb00 0c06 	add.w	ip, r0, r6
1001a5f6:	45dc      	cmp	ip, fp
1001a5f8:	d9e1      	bls.n	1001a5be <_wcsnrtombs_l+0x36>
1001a5fa:	e9c7 9800 	strd	r9, r8, [r7]
1001a5fe:	4630      	mov	r0, r6
1001a600:	b00b      	add	sp, #44	@ 0x2c
1001a602:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001a606:	2800      	cmp	r0, #0
1001a608:	dd0e      	ble.n	1001a628 <_wcsnrtombs_l+0xa0>
1001a60a:	9b04      	ldr	r3, [sp, #16]
1001a60c:	9d01      	ldr	r5, [sp, #4]
1001a60e:	4418      	add	r0, r3
1001a610:	1e5a      	subs	r2, r3, #1
1001a612:	a907      	add	r1, sp, #28
1001a614:	f100 3eff 	add.w	lr, r0, #4294967295	@ 0xffffffff
1001a618:	f811 3b01 	ldrb.w	r3, [r1], #1
1001a61c:	f802 3f01 	strb.w	r3, [r2, #1]!
1001a620:	4596      	cmp	lr, r2
1001a622:	d1f9      	bne.n	1001a618 <_wcsnrtombs_l+0x90>
1001a624:	9501      	str	r5, [sp, #4]
1001a626:	9004      	str	r0, [sp, #16]
1001a628:	9b05      	ldr	r3, [sp, #20]
1001a62a:	681a      	ldr	r2, [r3, #0]
1001a62c:	3204      	adds	r2, #4
1001a62e:	601a      	str	r2, [r3, #0]
1001a630:	9b01      	ldr	r3, [sp, #4]
1001a632:	6818      	ldr	r0, [r3, #0]
1001a634:	2800      	cmp	r0, #0
1001a636:	d1c8      	bne.n	1001a5ca <_wcsnrtombs_l+0x42>
1001a638:	9903      	ldr	r1, [sp, #12]
1001a63a:	9a05      	ldr	r2, [sp, #20]
1001a63c:	b101      	cbz	r1, 1001a640 <_wcsnrtombs_l+0xb8>
1001a63e:	6010      	str	r0, [r2, #0]
1001a640:	f10c 36ff 	add.w	r6, ip, #4294967295	@ 0xffffffff
1001a644:	2200      	movs	r2, #0
1001a646:	4630      	mov	r0, r6
1001a648:	603a      	str	r2, [r7, #0]
1001a64a:	b00b      	add	sp, #44	@ 0x2c
1001a64c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001a650:	6815      	ldr	r5, [r2, #0]
1001a652:	f500 7786 	add.w	r7, r0, #268	@ 0x10c
1001a656:	2900      	cmp	r1, #0
1001a658:	d1a2      	bne.n	1001a5a0 <_wcsnrtombs_l+0x18>
1001a65a:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
1001a65e:	9314      	str	r3, [sp, #80]	@ 0x50
1001a660:	e7a1      	b.n	1001a5a6 <_wcsnrtombs_l+0x1e>
1001a662:	f8dd e008 	ldr.w	lr, [sp, #8]
1001a666:	4606      	mov	r6, r0
1001a668:	218a      	movs	r1, #138	@ 0x8a
1001a66a:	2200      	movs	r2, #0
1001a66c:	4630      	mov	r0, r6
1001a66e:	f8ce 1000 	str.w	r1, [lr]
1001a672:	603a      	str	r2, [r7, #0]
1001a674:	b00b      	add	sp, #44	@ 0x2c
1001a676:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001a67a:	9e14      	ldr	r6, [sp, #80]	@ 0x50
1001a67c:	e7bf      	b.n	1001a5fe <_wcsnrtombs_l+0x76>
1001a67e:	4666      	mov	r6, ip
1001a680:	e7bd      	b.n	1001a5fe <_wcsnrtombs_l+0x76>
1001a682:	bf00      	nop

1001a684 <_wcsnrtombs_r>:
1001a684:	b510      	push	{r4, lr}
1001a686:	b084      	sub	sp, #16
1001a688:	4c05      	ldr	r4, [pc, #20]	@ (1001a6a0 <_wcsnrtombs_r+0x1c>)
1001a68a:	9806      	ldr	r0, [sp, #24]
1001a68c:	9000      	str	r0, [sp, #0]
1001a68e:	9807      	ldr	r0, [sp, #28]
1001a690:	9001      	str	r0, [sp, #4]
1001a692:	4804      	ldr	r0, [pc, #16]	@ (1001a6a4 <_wcsnrtombs_r+0x20>)
1001a694:	6800      	ldr	r0, [r0, #0]
1001a696:	9402      	str	r4, [sp, #8]
1001a698:	f7ff ff76 	bl	1001a588 <_wcsnrtombs_l>
1001a69c:	b004      	add	sp, #16
1001a69e:	bd10      	pop	{r4, pc}
1001a6a0:	2000045c 	.word	0x2000045c
1001a6a4:	200005c8 	.word	0x200005c8

1001a6a8 <_isatty_r>:
1001a6a8:	b538      	push	{r3, r4, r5, lr}
1001a6aa:	4d07      	ldr	r5, [pc, #28]	@ (1001a6c8 <_isatty_r+0x20>)
1001a6ac:	2200      	movs	r2, #0
1001a6ae:	4604      	mov	r4, r0
1001a6b0:	4608      	mov	r0, r1
1001a6b2:	602a      	str	r2, [r5, #0]
1001a6b4:	f7f6 fb2c 	bl	10010d10 <_isatty>
1001a6b8:	1c43      	adds	r3, r0, #1
1001a6ba:	d000      	beq.n	1001a6be <_isatty_r+0x16>
1001a6bc:	bd38      	pop	{r3, r4, r5, pc}
1001a6be:	682b      	ldr	r3, [r5, #0]
1001a6c0:	2b00      	cmp	r3, #0
1001a6c2:	d0fb      	beq.n	1001a6bc <_isatty_r+0x14>
1001a6c4:	6023      	str	r3, [r4, #0]
1001a6c6:	bd38      	pop	{r3, r4, r5, pc}
1001a6c8:	20001680 	.word	0x20001680

1001a6cc <fiprintf>:
1001a6cc:	b40e      	push	{r1, r2, r3}
1001a6ce:	b510      	push	{r4, lr}
1001a6d0:	b083      	sub	sp, #12
1001a6d2:	ab05      	add	r3, sp, #20
1001a6d4:	4c06      	ldr	r4, [pc, #24]	@ (1001a6f0 <fiprintf+0x24>)
1001a6d6:	f853 2b04 	ldr.w	r2, [r3], #4
1001a6da:	9301      	str	r3, [sp, #4]
1001a6dc:	4601      	mov	r1, r0
1001a6de:	6820      	ldr	r0, [r4, #0]
1001a6e0:	f7fe fa0a 	bl	10018af8 <_vfiprintf_r>
1001a6e4:	b003      	add	sp, #12
1001a6e6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
1001a6ea:	b003      	add	sp, #12
1001a6ec:	4770      	bx	lr
1001a6ee:	bf00      	nop
1001a6f0:	200005c8 	.word	0x200005c8

1001a6f4 <__fputwc>:
1001a6f4:	b570      	push	{r4, r5, r6, lr}
1001a6f6:	b082      	sub	sp, #8
1001a6f8:	4606      	mov	r6, r0
1001a6fa:	460d      	mov	r5, r1
1001a6fc:	4614      	mov	r4, r2
1001a6fe:	f7fa f9bf 	bl	10014a80 <__locale_mb_cur_max>
1001a702:	2801      	cmp	r0, #1
1001a704:	d102      	bne.n	1001a70c <__fputwc+0x18>
1001a706:	1e6b      	subs	r3, r5, #1
1001a708:	2bfe      	cmp	r3, #254	@ 0xfe
1001a70a:	d926      	bls.n	1001a75a <__fputwc+0x66>
1001a70c:	f104 035c 	add.w	r3, r4, #92	@ 0x5c
1001a710:	462a      	mov	r2, r5
1001a712:	a901      	add	r1, sp, #4
1001a714:	4630      	mov	r0, r6
1001a716:	f7fa f949 	bl	100149ac <_wcrtomb_r>
1001a71a:	1c43      	adds	r3, r0, #1
1001a71c:	d020      	beq.n	1001a760 <__fputwc+0x6c>
1001a71e:	b178      	cbz	r0, 1001a740 <__fputwc+0x4c>
1001a720:	68a3      	ldr	r3, [r4, #8]
1001a722:	f89d 1004 	ldrb.w	r1, [sp, #4]
1001a726:	3b01      	subs	r3, #1
1001a728:	2b00      	cmp	r3, #0
1001a72a:	60a3      	str	r3, [r4, #8]
1001a72c:	da04      	bge.n	1001a738 <__fputwc+0x44>
1001a72e:	69a2      	ldr	r2, [r4, #24]
1001a730:	4293      	cmp	r3, r2
1001a732:	db08      	blt.n	1001a746 <__fputwc+0x52>
1001a734:	290a      	cmp	r1, #10
1001a736:	d006      	beq.n	1001a746 <__fputwc+0x52>
1001a738:	6823      	ldr	r3, [r4, #0]
1001a73a:	1c5a      	adds	r2, r3, #1
1001a73c:	6022      	str	r2, [r4, #0]
1001a73e:	7019      	strb	r1, [r3, #0]
1001a740:	4628      	mov	r0, r5
1001a742:	b002      	add	sp, #8
1001a744:	bd70      	pop	{r4, r5, r6, pc}
1001a746:	4622      	mov	r2, r4
1001a748:	4630      	mov	r0, r6
1001a74a:	f000 f841 	bl	1001a7d0 <__swbuf_r>
1001a74e:	3001      	adds	r0, #1
1001a750:	d1f6      	bne.n	1001a740 <__fputwc+0x4c>
1001a752:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1001a756:	b002      	add	sp, #8
1001a758:	bd70      	pop	{r4, r5, r6, pc}
1001a75a:	f88d 5004 	strb.w	r5, [sp, #4]
1001a75e:	e7df      	b.n	1001a720 <__fputwc+0x2c>
1001a760:	89a3      	ldrh	r3, [r4, #12]
1001a762:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
1001a766:	81a3      	strh	r3, [r4, #12]
1001a768:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1001a76c:	e7f3      	b.n	1001a756 <__fputwc+0x62>
1001a76e:	bf00      	nop

1001a770 <_fputwc_r>:
1001a770:	b530      	push	{r4, r5, lr}
1001a772:	4614      	mov	r4, r2
1001a774:	6e52      	ldr	r2, [r2, #100]	@ 0x64
1001a776:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1001a77a:	4605      	mov	r5, r0
1001a77c:	07d0      	lsls	r0, r2, #31
1001a77e:	b083      	sub	sp, #12
1001a780:	d401      	bmi.n	1001a786 <_fputwc_r+0x16>
1001a782:	059a      	lsls	r2, r3, #22
1001a784:	d51c      	bpl.n	1001a7c0 <_fputwc_r+0x50>
1001a786:	0498      	lsls	r0, r3, #18
1001a788:	d406      	bmi.n	1001a798 <_fputwc_r+0x28>
1001a78a:	6e62      	ldr	r2, [r4, #100]	@ 0x64
1001a78c:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
1001a790:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
1001a794:	81a3      	strh	r3, [r4, #12]
1001a796:	6662      	str	r2, [r4, #100]	@ 0x64
1001a798:	4622      	mov	r2, r4
1001a79a:	4628      	mov	r0, r5
1001a79c:	f7ff ffaa 	bl	1001a6f4 <__fputwc>
1001a7a0:	6e63      	ldr	r3, [r4, #100]	@ 0x64
1001a7a2:	07da      	lsls	r2, r3, #31
1001a7a4:	4605      	mov	r5, r0
1001a7a6:	d402      	bmi.n	1001a7ae <_fputwc_r+0x3e>
1001a7a8:	89a3      	ldrh	r3, [r4, #12]
1001a7aa:	059b      	lsls	r3, r3, #22
1001a7ac:	d502      	bpl.n	1001a7b4 <_fputwc_r+0x44>
1001a7ae:	4628      	mov	r0, r5
1001a7b0:	b003      	add	sp, #12
1001a7b2:	bd30      	pop	{r4, r5, pc}
1001a7b4:	6da0      	ldr	r0, [r4, #88]	@ 0x58
1001a7b6:	f7fa f961 	bl	10014a7c <__retarget_lock_release_recursive>
1001a7ba:	4628      	mov	r0, r5
1001a7bc:	b003      	add	sp, #12
1001a7be:	bd30      	pop	{r4, r5, pc}
1001a7c0:	6da0      	ldr	r0, [r4, #88]	@ 0x58
1001a7c2:	9101      	str	r1, [sp, #4]
1001a7c4:	f7fa f958 	bl	10014a78 <__retarget_lock_acquire_recursive>
1001a7c8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1001a7cc:	9901      	ldr	r1, [sp, #4]
1001a7ce:	e7da      	b.n	1001a786 <_fputwc_r+0x16>

1001a7d0 <__swbuf_r>:
1001a7d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1001a7d2:	460d      	mov	r5, r1
1001a7d4:	4614      	mov	r4, r2
1001a7d6:	4606      	mov	r6, r0
1001a7d8:	b110      	cbz	r0, 1001a7e0 <__swbuf_r+0x10>
1001a7da:	6b43      	ldr	r3, [r0, #52]	@ 0x34
1001a7dc:	2b00      	cmp	r3, #0
1001a7de:	d04a      	beq.n	1001a876 <__swbuf_r+0xa6>
1001a7e0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
1001a7e4:	69a3      	ldr	r3, [r4, #24]
1001a7e6:	60a3      	str	r3, [r4, #8]
1001a7e8:	0710      	lsls	r0, r2, #28
1001a7ea:	d51b      	bpl.n	1001a824 <__swbuf_r+0x54>
1001a7ec:	6923      	ldr	r3, [r4, #16]
1001a7ee:	b1cb      	cbz	r3, 1001a824 <__swbuf_r+0x54>
1001a7f0:	b2ed      	uxtb	r5, r5
1001a7f2:	0491      	lsls	r1, r2, #18
1001a7f4:	462f      	mov	r7, r5
1001a7f6:	d521      	bpl.n	1001a83c <__swbuf_r+0x6c>
1001a7f8:	6822      	ldr	r2, [r4, #0]
1001a7fa:	6961      	ldr	r1, [r4, #20]
1001a7fc:	1ad3      	subs	r3, r2, r3
1001a7fe:	4299      	cmp	r1, r3
1001a800:	dd28      	ble.n	1001a854 <__swbuf_r+0x84>
1001a802:	3301      	adds	r3, #1
1001a804:	68a1      	ldr	r1, [r4, #8]
1001a806:	3901      	subs	r1, #1
1001a808:	60a1      	str	r1, [r4, #8]
1001a80a:	1c51      	adds	r1, r2, #1
1001a80c:	6021      	str	r1, [r4, #0]
1001a80e:	7015      	strb	r5, [r2, #0]
1001a810:	6962      	ldr	r2, [r4, #20]
1001a812:	429a      	cmp	r2, r3
1001a814:	d026      	beq.n	1001a864 <__swbuf_r+0x94>
1001a816:	89a3      	ldrh	r3, [r4, #12]
1001a818:	07db      	lsls	r3, r3, #31
1001a81a:	d501      	bpl.n	1001a820 <__swbuf_r+0x50>
1001a81c:	2d0a      	cmp	r5, #10
1001a81e:	d021      	beq.n	1001a864 <__swbuf_r+0x94>
1001a820:	4638      	mov	r0, r7
1001a822:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1001a824:	4621      	mov	r1, r4
1001a826:	4630      	mov	r0, r6
1001a828:	f7ff f9f0 	bl	10019c0c <__swsetup_r>
1001a82c:	bb00      	cbnz	r0, 1001a870 <__swbuf_r+0xa0>
1001a82e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
1001a832:	6923      	ldr	r3, [r4, #16]
1001a834:	b2ed      	uxtb	r5, r5
1001a836:	0491      	lsls	r1, r2, #18
1001a838:	462f      	mov	r7, r5
1001a83a:	d4dd      	bmi.n	1001a7f8 <__swbuf_r+0x28>
1001a83c:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
1001a840:	81a2      	strh	r2, [r4, #12]
1001a842:	6e62      	ldr	r2, [r4, #100]	@ 0x64
1001a844:	6961      	ldr	r1, [r4, #20]
1001a846:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
1001a84a:	6662      	str	r2, [r4, #100]	@ 0x64
1001a84c:	6822      	ldr	r2, [r4, #0]
1001a84e:	1ad3      	subs	r3, r2, r3
1001a850:	4299      	cmp	r1, r3
1001a852:	dcd6      	bgt.n	1001a802 <__swbuf_r+0x32>
1001a854:	4621      	mov	r1, r4
1001a856:	4630      	mov	r0, r6
1001a858:	f7fb fa76 	bl	10015d48 <_fflush_r>
1001a85c:	b940      	cbnz	r0, 1001a870 <__swbuf_r+0xa0>
1001a85e:	6822      	ldr	r2, [r4, #0]
1001a860:	2301      	movs	r3, #1
1001a862:	e7cf      	b.n	1001a804 <__swbuf_r+0x34>
1001a864:	4621      	mov	r1, r4
1001a866:	4630      	mov	r0, r6
1001a868:	f7fb fa6e 	bl	10015d48 <_fflush_r>
1001a86c:	2800      	cmp	r0, #0
1001a86e:	d0d7      	beq.n	1001a820 <__swbuf_r+0x50>
1001a870:	f04f 37ff 	mov.w	r7, #4294967295	@ 0xffffffff
1001a874:	e7d4      	b.n	1001a820 <__swbuf_r+0x50>
1001a876:	f7fb fb35 	bl	10015ee4 <__sinit>
1001a87a:	e7b1      	b.n	1001a7e0 <__swbuf_r+0x10>

1001a87c <abort>:
1001a87c:	b508      	push	{r3, lr}
1001a87e:	2006      	movs	r0, #6
1001a880:	f000 f804 	bl	1001a88c <raise>
1001a884:	2001      	movs	r0, #1
1001a886:	f000 f855 	bl	1001a934 <_exit>
1001a88a:	bf00      	nop

1001a88c <raise>:
1001a88c:	b538      	push	{r3, r4, r5, lr}
1001a88e:	4b14      	ldr	r3, [pc, #80]	@ (1001a8e0 <raise+0x54>)
1001a890:	281f      	cmp	r0, #31
1001a892:	681d      	ldr	r5, [r3, #0]
1001a894:	d81e      	bhi.n	1001a8d4 <raise+0x48>
1001a896:	f8d5 2118 	ldr.w	r2, [r5, #280]	@ 0x118
1001a89a:	4604      	mov	r4, r0
1001a89c:	b162      	cbz	r2, 1001a8b8 <raise+0x2c>
1001a89e:	f852 3020 	ldr.w	r3, [r2, r0, lsl #2]
1001a8a2:	b14b      	cbz	r3, 1001a8b8 <raise+0x2c>
1001a8a4:	2b01      	cmp	r3, #1
1001a8a6:	d005      	beq.n	1001a8b4 <raise+0x28>
1001a8a8:	1c59      	adds	r1, r3, #1
1001a8aa:	d00f      	beq.n	1001a8cc <raise+0x40>
1001a8ac:	2100      	movs	r1, #0
1001a8ae:	f842 1020 	str.w	r1, [r2, r0, lsl #2]
1001a8b2:	4798      	blx	r3
1001a8b4:	2000      	movs	r0, #0
1001a8b6:	bd38      	pop	{r3, r4, r5, pc}
1001a8b8:	4628      	mov	r0, r5
1001a8ba:	f000 f829 	bl	1001a910 <_getpid_r>
1001a8be:	4622      	mov	r2, r4
1001a8c0:	4601      	mov	r1, r0
1001a8c2:	4628      	mov	r0, r5
1001a8c4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
1001a8c8:	f000 b80c 	b.w	1001a8e4 <_kill_r>
1001a8cc:	2316      	movs	r3, #22
1001a8ce:	602b      	str	r3, [r5, #0]
1001a8d0:	2001      	movs	r0, #1
1001a8d2:	bd38      	pop	{r3, r4, r5, pc}
1001a8d4:	2316      	movs	r3, #22
1001a8d6:	602b      	str	r3, [r5, #0]
1001a8d8:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1001a8dc:	bd38      	pop	{r3, r4, r5, pc}
1001a8de:	bf00      	nop
1001a8e0:	200005c8 	.word	0x200005c8

1001a8e4 <_kill_r>:
1001a8e4:	b570      	push	{r4, r5, r6, lr}
1001a8e6:	460c      	mov	r4, r1
1001a8e8:	4d08      	ldr	r5, [pc, #32]	@ (1001a90c <_kill_r+0x28>)
1001a8ea:	4603      	mov	r3, r0
1001a8ec:	2600      	movs	r6, #0
1001a8ee:	4620      	mov	r0, r4
1001a8f0:	4611      	mov	r1, r2
1001a8f2:	461c      	mov	r4, r3
1001a8f4:	602e      	str	r6, [r5, #0]
1001a8f6:	f000 f815 	bl	1001a924 <_kill>
1001a8fa:	1c43      	adds	r3, r0, #1
1001a8fc:	d000      	beq.n	1001a900 <_kill_r+0x1c>
1001a8fe:	bd70      	pop	{r4, r5, r6, pc}
1001a900:	682b      	ldr	r3, [r5, #0]
1001a902:	2b00      	cmp	r3, #0
1001a904:	d0fb      	beq.n	1001a8fe <_kill_r+0x1a>
1001a906:	6023      	str	r3, [r4, #0]
1001a908:	bd70      	pop	{r4, r5, r6, pc}
1001a90a:	bf00      	nop
1001a90c:	20001680 	.word	0x20001680

1001a910 <_getpid_r>:
1001a910:	f000 b800 	b.w	1001a914 <_getpid>

1001a914 <_getpid>:
1001a914:	4b02      	ldr	r3, [pc, #8]	@ (1001a920 <_getpid+0xc>)
1001a916:	2258      	movs	r2, #88	@ 0x58
1001a918:	601a      	str	r2, [r3, #0]
1001a91a:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1001a91e:	4770      	bx	lr
1001a920:	20001680 	.word	0x20001680

1001a924 <_kill>:
1001a924:	4b02      	ldr	r3, [pc, #8]	@ (1001a930 <_kill+0xc>)
1001a926:	2258      	movs	r2, #88	@ 0x58
1001a928:	601a      	str	r2, [r3, #0]
1001a92a:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1001a92e:	4770      	bx	lr
1001a930:	20001680 	.word	0x20001680

1001a934 <_exit>:
1001a934:	e7fe      	b.n	1001a934 <_exit>
1001a936:	bf00      	nop

1001a938 <__aeabi_drsub>:
1001a938:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
1001a93c:	e002      	b.n	1001a944 <__adddf3>
1001a93e:	bf00      	nop

1001a940 <__aeabi_dsub>:
1001a940:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

1001a944 <__adddf3>:
1001a944:	b530      	push	{r4, r5, lr}
1001a946:	ea4f 0441 	mov.w	r4, r1, lsl #1
1001a94a:	ea4f 0543 	mov.w	r5, r3, lsl #1
1001a94e:	ea94 0f05 	teq	r4, r5
1001a952:	bf08      	it	eq
1001a954:	ea90 0f02 	teqeq	r0, r2
1001a958:	bf1f      	itttt	ne
1001a95a:	ea54 0c00 	orrsne.w	ip, r4, r0
1001a95e:	ea55 0c02 	orrsne.w	ip, r5, r2
1001a962:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
1001a966:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
1001a96a:	f000 80e2 	beq.w	1001ab32 <__adddf3+0x1ee>
1001a96e:	ea4f 5454 	mov.w	r4, r4, lsr #21
1001a972:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
1001a976:	bfb8      	it	lt
1001a978:	426d      	neglt	r5, r5
1001a97a:	dd0c      	ble.n	1001a996 <__adddf3+0x52>
1001a97c:	442c      	add	r4, r5
1001a97e:	ea80 0202 	eor.w	r2, r0, r2
1001a982:	ea81 0303 	eor.w	r3, r1, r3
1001a986:	ea82 0000 	eor.w	r0, r2, r0
1001a98a:	ea83 0101 	eor.w	r1, r3, r1
1001a98e:	ea80 0202 	eor.w	r2, r0, r2
1001a992:	ea81 0303 	eor.w	r3, r1, r3
1001a996:	2d36      	cmp	r5, #54	@ 0x36
1001a998:	bf88      	it	hi
1001a99a:	bd30      	pophi	{r4, r5, pc}
1001a99c:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
1001a9a0:	ea4f 3101 	mov.w	r1, r1, lsl #12
1001a9a4:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
1001a9a8:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
1001a9ac:	d002      	beq.n	1001a9b4 <__adddf3+0x70>
1001a9ae:	4240      	negs	r0, r0
1001a9b0:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
1001a9b4:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
1001a9b8:	ea4f 3303 	mov.w	r3, r3, lsl #12
1001a9bc:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
1001a9c0:	d002      	beq.n	1001a9c8 <__adddf3+0x84>
1001a9c2:	4252      	negs	r2, r2
1001a9c4:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
1001a9c8:	ea94 0f05 	teq	r4, r5
1001a9cc:	f000 80a7 	beq.w	1001ab1e <__adddf3+0x1da>
1001a9d0:	f1a4 0401 	sub.w	r4, r4, #1
1001a9d4:	f1d5 0e20 	rsbs	lr, r5, #32
1001a9d8:	db0d      	blt.n	1001a9f6 <__adddf3+0xb2>
1001a9da:	fa02 fc0e 	lsl.w	ip, r2, lr
1001a9de:	fa22 f205 	lsr.w	r2, r2, r5
1001a9e2:	1880      	adds	r0, r0, r2
1001a9e4:	f141 0100 	adc.w	r1, r1, #0
1001a9e8:	fa03 f20e 	lsl.w	r2, r3, lr
1001a9ec:	1880      	adds	r0, r0, r2
1001a9ee:	fa43 f305 	asr.w	r3, r3, r5
1001a9f2:	4159      	adcs	r1, r3
1001a9f4:	e00e      	b.n	1001aa14 <__adddf3+0xd0>
1001a9f6:	f1a5 0520 	sub.w	r5, r5, #32
1001a9fa:	f10e 0e20 	add.w	lr, lr, #32
1001a9fe:	2a01      	cmp	r2, #1
1001aa00:	fa03 fc0e 	lsl.w	ip, r3, lr
1001aa04:	bf28      	it	cs
1001aa06:	f04c 0c02 	orrcs.w	ip, ip, #2
1001aa0a:	fa43 f305 	asr.w	r3, r3, r5
1001aa0e:	18c0      	adds	r0, r0, r3
1001aa10:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
1001aa14:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
1001aa18:	d507      	bpl.n	1001aa2a <__adddf3+0xe6>
1001aa1a:	f04f 0e00 	mov.w	lr, #0
1001aa1e:	f1dc 0c00 	rsbs	ip, ip, #0
1001aa22:	eb7e 0000 	sbcs.w	r0, lr, r0
1001aa26:	eb6e 0101 	sbc.w	r1, lr, r1
1001aa2a:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
1001aa2e:	d31b      	bcc.n	1001aa68 <__adddf3+0x124>
1001aa30:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
1001aa34:	d30c      	bcc.n	1001aa50 <__adddf3+0x10c>
1001aa36:	0849      	lsrs	r1, r1, #1
1001aa38:	ea5f 0030 	movs.w	r0, r0, rrx
1001aa3c:	ea4f 0c3c 	mov.w	ip, ip, rrx
1001aa40:	f104 0401 	add.w	r4, r4, #1
1001aa44:	ea4f 5244 	mov.w	r2, r4, lsl #21
1001aa48:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
1001aa4c:	f080 809a 	bcs.w	1001ab84 <__adddf3+0x240>
1001aa50:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
1001aa54:	bf08      	it	eq
1001aa56:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
1001aa5a:	f150 0000 	adcs.w	r0, r0, #0
1001aa5e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
1001aa62:	ea41 0105 	orr.w	r1, r1, r5
1001aa66:	bd30      	pop	{r4, r5, pc}
1001aa68:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
1001aa6c:	4140      	adcs	r0, r0
1001aa6e:	eb41 0101 	adc.w	r1, r1, r1
1001aa72:	3c01      	subs	r4, #1
1001aa74:	bf28      	it	cs
1001aa76:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
1001aa7a:	d2e9      	bcs.n	1001aa50 <__adddf3+0x10c>
1001aa7c:	f091 0f00 	teq	r1, #0
1001aa80:	bf04      	itt	eq
1001aa82:	4601      	moveq	r1, r0
1001aa84:	2000      	moveq	r0, #0
1001aa86:	fab1 f381 	clz	r3, r1
1001aa8a:	bf08      	it	eq
1001aa8c:	3320      	addeq	r3, #32
1001aa8e:	f1a3 030b 	sub.w	r3, r3, #11
1001aa92:	f1b3 0220 	subs.w	r2, r3, #32
1001aa96:	da0c      	bge.n	1001aab2 <__adddf3+0x16e>
1001aa98:	320c      	adds	r2, #12
1001aa9a:	dd08      	ble.n	1001aaae <__adddf3+0x16a>
1001aa9c:	f102 0c14 	add.w	ip, r2, #20
1001aaa0:	f1c2 020c 	rsb	r2, r2, #12
1001aaa4:	fa01 f00c 	lsl.w	r0, r1, ip
1001aaa8:	fa21 f102 	lsr.w	r1, r1, r2
1001aaac:	e00c      	b.n	1001aac8 <__adddf3+0x184>
1001aaae:	f102 0214 	add.w	r2, r2, #20
1001aab2:	bfd8      	it	le
1001aab4:	f1c2 0c20 	rsble	ip, r2, #32
1001aab8:	fa01 f102 	lsl.w	r1, r1, r2
1001aabc:	fa20 fc0c 	lsr.w	ip, r0, ip
1001aac0:	bfdc      	itt	le
1001aac2:	ea41 010c 	orrle.w	r1, r1, ip
1001aac6:	4090      	lslle	r0, r2
1001aac8:	1ae4      	subs	r4, r4, r3
1001aaca:	bfa2      	ittt	ge
1001aacc:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
1001aad0:	4329      	orrge	r1, r5
1001aad2:	bd30      	popge	{r4, r5, pc}
1001aad4:	ea6f 0404 	mvn.w	r4, r4
1001aad8:	3c1f      	subs	r4, #31
1001aada:	da1c      	bge.n	1001ab16 <__adddf3+0x1d2>
1001aadc:	340c      	adds	r4, #12
1001aade:	dc0e      	bgt.n	1001aafe <__adddf3+0x1ba>
1001aae0:	f104 0414 	add.w	r4, r4, #20
1001aae4:	f1c4 0220 	rsb	r2, r4, #32
1001aae8:	fa20 f004 	lsr.w	r0, r0, r4
1001aaec:	fa01 f302 	lsl.w	r3, r1, r2
1001aaf0:	ea40 0003 	orr.w	r0, r0, r3
1001aaf4:	fa21 f304 	lsr.w	r3, r1, r4
1001aaf8:	ea45 0103 	orr.w	r1, r5, r3
1001aafc:	bd30      	pop	{r4, r5, pc}
1001aafe:	f1c4 040c 	rsb	r4, r4, #12
1001ab02:	f1c4 0220 	rsb	r2, r4, #32
1001ab06:	fa20 f002 	lsr.w	r0, r0, r2
1001ab0a:	fa01 f304 	lsl.w	r3, r1, r4
1001ab0e:	ea40 0003 	orr.w	r0, r0, r3
1001ab12:	4629      	mov	r1, r5
1001ab14:	bd30      	pop	{r4, r5, pc}
1001ab16:	fa21 f004 	lsr.w	r0, r1, r4
1001ab1a:	4629      	mov	r1, r5
1001ab1c:	bd30      	pop	{r4, r5, pc}
1001ab1e:	f094 0f00 	teq	r4, #0
1001ab22:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
1001ab26:	bf06      	itte	eq
1001ab28:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
1001ab2c:	3401      	addeq	r4, #1
1001ab2e:	3d01      	subne	r5, #1
1001ab30:	e74e      	b.n	1001a9d0 <__adddf3+0x8c>
1001ab32:	ea7f 5c64 	mvns.w	ip, r4, asr #21
1001ab36:	bf18      	it	ne
1001ab38:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
1001ab3c:	d029      	beq.n	1001ab92 <__adddf3+0x24e>
1001ab3e:	ea94 0f05 	teq	r4, r5
1001ab42:	bf08      	it	eq
1001ab44:	ea90 0f02 	teqeq	r0, r2
1001ab48:	d005      	beq.n	1001ab56 <__adddf3+0x212>
1001ab4a:	ea54 0c00 	orrs.w	ip, r4, r0
1001ab4e:	bf04      	itt	eq
1001ab50:	4619      	moveq	r1, r3
1001ab52:	4610      	moveq	r0, r2
1001ab54:	bd30      	pop	{r4, r5, pc}
1001ab56:	ea91 0f03 	teq	r1, r3
1001ab5a:	bf1e      	ittt	ne
1001ab5c:	2100      	movne	r1, #0
1001ab5e:	2000      	movne	r0, #0
1001ab60:	bd30      	popne	{r4, r5, pc}
1001ab62:	ea5f 5c54 	movs.w	ip, r4, lsr #21
1001ab66:	d105      	bne.n	1001ab74 <__adddf3+0x230>
1001ab68:	0040      	lsls	r0, r0, #1
1001ab6a:	4149      	adcs	r1, r1
1001ab6c:	bf28      	it	cs
1001ab6e:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
1001ab72:	bd30      	pop	{r4, r5, pc}
1001ab74:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
1001ab78:	bf3c      	itt	cc
1001ab7a:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
1001ab7e:	bd30      	popcc	{r4, r5, pc}
1001ab80:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
1001ab84:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
1001ab88:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
1001ab8c:	f04f 0000 	mov.w	r0, #0
1001ab90:	bd30      	pop	{r4, r5, pc}
1001ab92:	ea7f 5c64 	mvns.w	ip, r4, asr #21
1001ab96:	bf1a      	itte	ne
1001ab98:	4619      	movne	r1, r3
1001ab9a:	4610      	movne	r0, r2
1001ab9c:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
1001aba0:	bf1c      	itt	ne
1001aba2:	460b      	movne	r3, r1
1001aba4:	4602      	movne	r2, r0
1001aba6:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
1001abaa:	bf06      	itte	eq
1001abac:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
1001abb0:	ea91 0f03 	teqeq	r1, r3
1001abb4:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
1001abb8:	bd30      	pop	{r4, r5, pc}
1001abba:	bf00      	nop

1001abbc <__aeabi_ui2d>:
1001abbc:	f090 0f00 	teq	r0, #0
1001abc0:	bf04      	itt	eq
1001abc2:	2100      	moveq	r1, #0
1001abc4:	4770      	bxeq	lr
1001abc6:	b530      	push	{r4, r5, lr}
1001abc8:	f44f 6480 	mov.w	r4, #1024	@ 0x400
1001abcc:	f104 0432 	add.w	r4, r4, #50	@ 0x32
1001abd0:	f04f 0500 	mov.w	r5, #0
1001abd4:	f04f 0100 	mov.w	r1, #0
1001abd8:	e750      	b.n	1001aa7c <__adddf3+0x138>
1001abda:	bf00      	nop

1001abdc <__aeabi_i2d>:
1001abdc:	f090 0f00 	teq	r0, #0
1001abe0:	bf04      	itt	eq
1001abe2:	2100      	moveq	r1, #0
1001abe4:	4770      	bxeq	lr
1001abe6:	b530      	push	{r4, r5, lr}
1001abe8:	f44f 6480 	mov.w	r4, #1024	@ 0x400
1001abec:	f104 0432 	add.w	r4, r4, #50	@ 0x32
1001abf0:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
1001abf4:	bf48      	it	mi
1001abf6:	4240      	negmi	r0, r0
1001abf8:	f04f 0100 	mov.w	r1, #0
1001abfc:	e73e      	b.n	1001aa7c <__adddf3+0x138>
1001abfe:	bf00      	nop

1001ac00 <__aeabi_f2d>:
1001ac00:	0042      	lsls	r2, r0, #1
1001ac02:	ea4f 01e2 	mov.w	r1, r2, asr #3
1001ac06:	ea4f 0131 	mov.w	r1, r1, rrx
1001ac0a:	ea4f 7002 	mov.w	r0, r2, lsl #28
1001ac0e:	bf1f      	itttt	ne
1001ac10:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
1001ac14:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
1001ac18:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
1001ac1c:	4770      	bxne	lr
1001ac1e:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
1001ac22:	bf08      	it	eq
1001ac24:	4770      	bxeq	lr
1001ac26:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
1001ac2a:	bf04      	itt	eq
1001ac2c:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
1001ac30:	4770      	bxeq	lr
1001ac32:	b530      	push	{r4, r5, lr}
1001ac34:	f44f 7460 	mov.w	r4, #896	@ 0x380
1001ac38:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
1001ac3c:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
1001ac40:	e71c      	b.n	1001aa7c <__adddf3+0x138>
1001ac42:	bf00      	nop

1001ac44 <__aeabi_ul2d>:
1001ac44:	ea50 0201 	orrs.w	r2, r0, r1
1001ac48:	bf08      	it	eq
1001ac4a:	4770      	bxeq	lr
1001ac4c:	b530      	push	{r4, r5, lr}
1001ac4e:	f04f 0500 	mov.w	r5, #0
1001ac52:	e00a      	b.n	1001ac6a <__aeabi_l2d+0x16>

1001ac54 <__aeabi_l2d>:
1001ac54:	ea50 0201 	orrs.w	r2, r0, r1
1001ac58:	bf08      	it	eq
1001ac5a:	4770      	bxeq	lr
1001ac5c:	b530      	push	{r4, r5, lr}
1001ac5e:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
1001ac62:	d502      	bpl.n	1001ac6a <__aeabi_l2d+0x16>
1001ac64:	4240      	negs	r0, r0
1001ac66:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
1001ac6a:	f44f 6480 	mov.w	r4, #1024	@ 0x400
1001ac6e:	f104 0432 	add.w	r4, r4, #50	@ 0x32
1001ac72:	ea5f 5c91 	movs.w	ip, r1, lsr #22
1001ac76:	f43f aed8 	beq.w	1001aa2a <__adddf3+0xe6>
1001ac7a:	f04f 0203 	mov.w	r2, #3
1001ac7e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
1001ac82:	bf18      	it	ne
1001ac84:	3203      	addne	r2, #3
1001ac86:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
1001ac8a:	bf18      	it	ne
1001ac8c:	3203      	addne	r2, #3
1001ac8e:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
1001ac92:	f1c2 0320 	rsb	r3, r2, #32
1001ac96:	fa00 fc03 	lsl.w	ip, r0, r3
1001ac9a:	fa20 f002 	lsr.w	r0, r0, r2
1001ac9e:	fa01 fe03 	lsl.w	lr, r1, r3
1001aca2:	ea40 000e 	orr.w	r0, r0, lr
1001aca6:	fa21 f102 	lsr.w	r1, r1, r2
1001acaa:	4414      	add	r4, r2
1001acac:	e6bd      	b.n	1001aa2a <__adddf3+0xe6>
1001acae:	bf00      	nop

1001acb0 <__aeabi_dmul>:
1001acb0:	b570      	push	{r4, r5, r6, lr}
1001acb2:	f04f 0cff 	mov.w	ip, #255	@ 0xff
1001acb6:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
1001acba:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
1001acbe:	bf1d      	ittte	ne
1001acc0:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
1001acc4:	ea94 0f0c 	teqne	r4, ip
1001acc8:	ea95 0f0c 	teqne	r5, ip
1001accc:	f000 f8de 	bleq	1001ae8c <__aeabi_dmul+0x1dc>
1001acd0:	442c      	add	r4, r5
1001acd2:	ea81 0603 	eor.w	r6, r1, r3
1001acd6:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
1001acda:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
1001acde:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
1001ace2:	bf18      	it	ne
1001ace4:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
1001ace8:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
1001acec:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
1001acf0:	d038      	beq.n	1001ad64 <__aeabi_dmul+0xb4>
1001acf2:	fba0 ce02 	umull	ip, lr, r0, r2
1001acf6:	f04f 0500 	mov.w	r5, #0
1001acfa:	fbe1 e502 	umlal	lr, r5, r1, r2
1001acfe:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
1001ad02:	fbe0 e503 	umlal	lr, r5, r0, r3
1001ad06:	f04f 0600 	mov.w	r6, #0
1001ad0a:	fbe1 5603 	umlal	r5, r6, r1, r3
1001ad0e:	f09c 0f00 	teq	ip, #0
1001ad12:	bf18      	it	ne
1001ad14:	f04e 0e01 	orrne.w	lr, lr, #1
1001ad18:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
1001ad1c:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
1001ad20:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
1001ad24:	d204      	bcs.n	1001ad30 <__aeabi_dmul+0x80>
1001ad26:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
1001ad2a:	416d      	adcs	r5, r5
1001ad2c:	eb46 0606 	adc.w	r6, r6, r6
1001ad30:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
1001ad34:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
1001ad38:	ea4f 20c5 	mov.w	r0, r5, lsl #11
1001ad3c:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
1001ad40:	ea4f 2ece 	mov.w	lr, lr, lsl #11
1001ad44:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
1001ad48:	bf88      	it	hi
1001ad4a:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
1001ad4e:	d81e      	bhi.n	1001ad8e <__aeabi_dmul+0xde>
1001ad50:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
1001ad54:	bf08      	it	eq
1001ad56:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
1001ad5a:	f150 0000 	adcs.w	r0, r0, #0
1001ad5e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
1001ad62:	bd70      	pop	{r4, r5, r6, pc}
1001ad64:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
1001ad68:	ea46 0101 	orr.w	r1, r6, r1
1001ad6c:	ea40 0002 	orr.w	r0, r0, r2
1001ad70:	ea81 0103 	eor.w	r1, r1, r3
1001ad74:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
1001ad78:	bfc2      	ittt	gt
1001ad7a:	ebd4 050c 	rsbsgt	r5, r4, ip
1001ad7e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
1001ad82:	bd70      	popgt	{r4, r5, r6, pc}
1001ad84:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
1001ad88:	f04f 0e00 	mov.w	lr, #0
1001ad8c:	3c01      	subs	r4, #1
1001ad8e:	f300 80ab 	bgt.w	1001aee8 <__aeabi_dmul+0x238>
1001ad92:	f114 0f36 	cmn.w	r4, #54	@ 0x36
1001ad96:	bfde      	ittt	le
1001ad98:	2000      	movle	r0, #0
1001ad9a:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
1001ad9e:	bd70      	pople	{r4, r5, r6, pc}
1001ada0:	f1c4 0400 	rsb	r4, r4, #0
1001ada4:	3c20      	subs	r4, #32
1001ada6:	da35      	bge.n	1001ae14 <__aeabi_dmul+0x164>
1001ada8:	340c      	adds	r4, #12
1001adaa:	dc1b      	bgt.n	1001ade4 <__aeabi_dmul+0x134>
1001adac:	f104 0414 	add.w	r4, r4, #20
1001adb0:	f1c4 0520 	rsb	r5, r4, #32
1001adb4:	fa00 f305 	lsl.w	r3, r0, r5
1001adb8:	fa20 f004 	lsr.w	r0, r0, r4
1001adbc:	fa01 f205 	lsl.w	r2, r1, r5
1001adc0:	ea40 0002 	orr.w	r0, r0, r2
1001adc4:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
1001adc8:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
1001adcc:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
1001add0:	fa21 f604 	lsr.w	r6, r1, r4
1001add4:	eb42 0106 	adc.w	r1, r2, r6
1001add8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
1001addc:	bf08      	it	eq
1001adde:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
1001ade2:	bd70      	pop	{r4, r5, r6, pc}
1001ade4:	f1c4 040c 	rsb	r4, r4, #12
1001ade8:	f1c4 0520 	rsb	r5, r4, #32
1001adec:	fa00 f304 	lsl.w	r3, r0, r4
1001adf0:	fa20 f005 	lsr.w	r0, r0, r5
1001adf4:	fa01 f204 	lsl.w	r2, r1, r4
1001adf8:	ea40 0002 	orr.w	r0, r0, r2
1001adfc:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
1001ae00:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
1001ae04:	f141 0100 	adc.w	r1, r1, #0
1001ae08:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
1001ae0c:	bf08      	it	eq
1001ae0e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
1001ae12:	bd70      	pop	{r4, r5, r6, pc}
1001ae14:	f1c4 0520 	rsb	r5, r4, #32
1001ae18:	fa00 f205 	lsl.w	r2, r0, r5
1001ae1c:	ea4e 0e02 	orr.w	lr, lr, r2
1001ae20:	fa20 f304 	lsr.w	r3, r0, r4
1001ae24:	fa01 f205 	lsl.w	r2, r1, r5
1001ae28:	ea43 0302 	orr.w	r3, r3, r2
1001ae2c:	fa21 f004 	lsr.w	r0, r1, r4
1001ae30:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
1001ae34:	fa21 f204 	lsr.w	r2, r1, r4
1001ae38:	ea20 0002 	bic.w	r0, r0, r2
1001ae3c:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
1001ae40:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
1001ae44:	bf08      	it	eq
1001ae46:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
1001ae4a:	bd70      	pop	{r4, r5, r6, pc}
1001ae4c:	f094 0f00 	teq	r4, #0
1001ae50:	d10f      	bne.n	1001ae72 <__aeabi_dmul+0x1c2>
1001ae52:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
1001ae56:	0040      	lsls	r0, r0, #1
1001ae58:	eb41 0101 	adc.w	r1, r1, r1
1001ae5c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
1001ae60:	bf08      	it	eq
1001ae62:	3c01      	subeq	r4, #1
1001ae64:	d0f7      	beq.n	1001ae56 <__aeabi_dmul+0x1a6>
1001ae66:	ea41 0106 	orr.w	r1, r1, r6
1001ae6a:	f095 0f00 	teq	r5, #0
1001ae6e:	bf18      	it	ne
1001ae70:	4770      	bxne	lr
1001ae72:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
1001ae76:	0052      	lsls	r2, r2, #1
1001ae78:	eb43 0303 	adc.w	r3, r3, r3
1001ae7c:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
1001ae80:	bf08      	it	eq
1001ae82:	3d01      	subeq	r5, #1
1001ae84:	d0f7      	beq.n	1001ae76 <__aeabi_dmul+0x1c6>
1001ae86:	ea43 0306 	orr.w	r3, r3, r6
1001ae8a:	4770      	bx	lr
1001ae8c:	ea94 0f0c 	teq	r4, ip
1001ae90:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
1001ae94:	bf18      	it	ne
1001ae96:	ea95 0f0c 	teqne	r5, ip
1001ae9a:	d00c      	beq.n	1001aeb6 <__aeabi_dmul+0x206>
1001ae9c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
1001aea0:	bf18      	it	ne
1001aea2:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
1001aea6:	d1d1      	bne.n	1001ae4c <__aeabi_dmul+0x19c>
1001aea8:	ea81 0103 	eor.w	r1, r1, r3
1001aeac:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
1001aeb0:	f04f 0000 	mov.w	r0, #0
1001aeb4:	bd70      	pop	{r4, r5, r6, pc}
1001aeb6:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
1001aeba:	bf06      	itte	eq
1001aebc:	4610      	moveq	r0, r2
1001aebe:	4619      	moveq	r1, r3
1001aec0:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
1001aec4:	d019      	beq.n	1001aefa <__aeabi_dmul+0x24a>
1001aec6:	ea94 0f0c 	teq	r4, ip
1001aeca:	d102      	bne.n	1001aed2 <__aeabi_dmul+0x222>
1001aecc:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
1001aed0:	d113      	bne.n	1001aefa <__aeabi_dmul+0x24a>
1001aed2:	ea95 0f0c 	teq	r5, ip
1001aed6:	d105      	bne.n	1001aee4 <__aeabi_dmul+0x234>
1001aed8:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
1001aedc:	bf1c      	itt	ne
1001aede:	4610      	movne	r0, r2
1001aee0:	4619      	movne	r1, r3
1001aee2:	d10a      	bne.n	1001aefa <__aeabi_dmul+0x24a>
1001aee4:	ea81 0103 	eor.w	r1, r1, r3
1001aee8:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
1001aeec:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
1001aef0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
1001aef4:	f04f 0000 	mov.w	r0, #0
1001aef8:	bd70      	pop	{r4, r5, r6, pc}
1001aefa:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
1001aefe:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
1001af02:	bd70      	pop	{r4, r5, r6, pc}

1001af04 <__aeabi_ddiv>:
1001af04:	b570      	push	{r4, r5, r6, lr}
1001af06:	f04f 0cff 	mov.w	ip, #255	@ 0xff
1001af0a:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
1001af0e:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
1001af12:	bf1d      	ittte	ne
1001af14:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
1001af18:	ea94 0f0c 	teqne	r4, ip
1001af1c:	ea95 0f0c 	teqne	r5, ip
1001af20:	f000 f8a7 	bleq	1001b072 <__aeabi_ddiv+0x16e>
1001af24:	eba4 0405 	sub.w	r4, r4, r5
1001af28:	ea81 0e03 	eor.w	lr, r1, r3
1001af2c:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
1001af30:	ea4f 3101 	mov.w	r1, r1, lsl #12
1001af34:	f000 8088 	beq.w	1001b048 <__aeabi_ddiv+0x144>
1001af38:	ea4f 3303 	mov.w	r3, r3, lsl #12
1001af3c:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
1001af40:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
1001af44:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
1001af48:	ea4f 2202 	mov.w	r2, r2, lsl #8
1001af4c:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
1001af50:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
1001af54:	ea4f 2600 	mov.w	r6, r0, lsl #8
1001af58:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
1001af5c:	429d      	cmp	r5, r3
1001af5e:	bf08      	it	eq
1001af60:	4296      	cmpeq	r6, r2
1001af62:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
1001af66:	f504 7440 	add.w	r4, r4, #768	@ 0x300
1001af6a:	d202      	bcs.n	1001af72 <__aeabi_ddiv+0x6e>
1001af6c:	085b      	lsrs	r3, r3, #1
1001af6e:	ea4f 0232 	mov.w	r2, r2, rrx
1001af72:	1ab6      	subs	r6, r6, r2
1001af74:	eb65 0503 	sbc.w	r5, r5, r3
1001af78:	085b      	lsrs	r3, r3, #1
1001af7a:	ea4f 0232 	mov.w	r2, r2, rrx
1001af7e:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
1001af82:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
1001af86:	ebb6 0e02 	subs.w	lr, r6, r2
1001af8a:	eb75 0e03 	sbcs.w	lr, r5, r3
1001af8e:	bf22      	ittt	cs
1001af90:	1ab6      	subcs	r6, r6, r2
1001af92:	4675      	movcs	r5, lr
1001af94:	ea40 000c 	orrcs.w	r0, r0, ip
1001af98:	085b      	lsrs	r3, r3, #1
1001af9a:	ea4f 0232 	mov.w	r2, r2, rrx
1001af9e:	ebb6 0e02 	subs.w	lr, r6, r2
1001afa2:	eb75 0e03 	sbcs.w	lr, r5, r3
1001afa6:	bf22      	ittt	cs
1001afa8:	1ab6      	subcs	r6, r6, r2
1001afaa:	4675      	movcs	r5, lr
1001afac:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
1001afb0:	085b      	lsrs	r3, r3, #1
1001afb2:	ea4f 0232 	mov.w	r2, r2, rrx
1001afb6:	ebb6 0e02 	subs.w	lr, r6, r2
1001afba:	eb75 0e03 	sbcs.w	lr, r5, r3
1001afbe:	bf22      	ittt	cs
1001afc0:	1ab6      	subcs	r6, r6, r2
1001afc2:	4675      	movcs	r5, lr
1001afc4:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
1001afc8:	085b      	lsrs	r3, r3, #1
1001afca:	ea4f 0232 	mov.w	r2, r2, rrx
1001afce:	ebb6 0e02 	subs.w	lr, r6, r2
1001afd2:	eb75 0e03 	sbcs.w	lr, r5, r3
1001afd6:	bf22      	ittt	cs
1001afd8:	1ab6      	subcs	r6, r6, r2
1001afda:	4675      	movcs	r5, lr
1001afdc:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
1001afe0:	ea55 0e06 	orrs.w	lr, r5, r6
1001afe4:	d018      	beq.n	1001b018 <__aeabi_ddiv+0x114>
1001afe6:	ea4f 1505 	mov.w	r5, r5, lsl #4
1001afea:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
1001afee:	ea4f 1606 	mov.w	r6, r6, lsl #4
1001aff2:	ea4f 03c3 	mov.w	r3, r3, lsl #3
1001aff6:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
1001affa:	ea4f 02c2 	mov.w	r2, r2, lsl #3
1001affe:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
1001b002:	d1c0      	bne.n	1001af86 <__aeabi_ddiv+0x82>
1001b004:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
1001b008:	d10b      	bne.n	1001b022 <__aeabi_ddiv+0x11e>
1001b00a:	ea41 0100 	orr.w	r1, r1, r0
1001b00e:	f04f 0000 	mov.w	r0, #0
1001b012:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
1001b016:	e7b6      	b.n	1001af86 <__aeabi_ddiv+0x82>
1001b018:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
1001b01c:	bf04      	itt	eq
1001b01e:	4301      	orreq	r1, r0
1001b020:	2000      	moveq	r0, #0
1001b022:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
1001b026:	bf88      	it	hi
1001b028:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
1001b02c:	f63f aeaf 	bhi.w	1001ad8e <__aeabi_dmul+0xde>
1001b030:	ebb5 0c03 	subs.w	ip, r5, r3
1001b034:	bf04      	itt	eq
1001b036:	ebb6 0c02 	subseq.w	ip, r6, r2
1001b03a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
1001b03e:	f150 0000 	adcs.w	r0, r0, #0
1001b042:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
1001b046:	bd70      	pop	{r4, r5, r6, pc}
1001b048:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
1001b04c:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
1001b050:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
1001b054:	bfc2      	ittt	gt
1001b056:	ebd4 050c 	rsbsgt	r5, r4, ip
1001b05a:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
1001b05e:	bd70      	popgt	{r4, r5, r6, pc}
1001b060:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
1001b064:	f04f 0e00 	mov.w	lr, #0
1001b068:	3c01      	subs	r4, #1
1001b06a:	e690      	b.n	1001ad8e <__aeabi_dmul+0xde>
1001b06c:	ea45 0e06 	orr.w	lr, r5, r6
1001b070:	e68d      	b.n	1001ad8e <__aeabi_dmul+0xde>
1001b072:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
1001b076:	ea94 0f0c 	teq	r4, ip
1001b07a:	bf08      	it	eq
1001b07c:	ea95 0f0c 	teqeq	r5, ip
1001b080:	f43f af3b 	beq.w	1001aefa <__aeabi_dmul+0x24a>
1001b084:	ea94 0f0c 	teq	r4, ip
1001b088:	d10a      	bne.n	1001b0a0 <__aeabi_ddiv+0x19c>
1001b08a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
1001b08e:	f47f af34 	bne.w	1001aefa <__aeabi_dmul+0x24a>
1001b092:	ea95 0f0c 	teq	r5, ip
1001b096:	f47f af25 	bne.w	1001aee4 <__aeabi_dmul+0x234>
1001b09a:	4610      	mov	r0, r2
1001b09c:	4619      	mov	r1, r3
1001b09e:	e72c      	b.n	1001aefa <__aeabi_dmul+0x24a>
1001b0a0:	ea95 0f0c 	teq	r5, ip
1001b0a4:	d106      	bne.n	1001b0b4 <__aeabi_ddiv+0x1b0>
1001b0a6:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
1001b0aa:	f43f aefd 	beq.w	1001aea8 <__aeabi_dmul+0x1f8>
1001b0ae:	4610      	mov	r0, r2
1001b0b0:	4619      	mov	r1, r3
1001b0b2:	e722      	b.n	1001aefa <__aeabi_dmul+0x24a>
1001b0b4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
1001b0b8:	bf18      	it	ne
1001b0ba:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
1001b0be:	f47f aec5 	bne.w	1001ae4c <__aeabi_dmul+0x19c>
1001b0c2:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
1001b0c6:	f47f af0d 	bne.w	1001aee4 <__aeabi_dmul+0x234>
1001b0ca:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
1001b0ce:	f47f aeeb 	bne.w	1001aea8 <__aeabi_dmul+0x1f8>
1001b0d2:	e712      	b.n	1001aefa <__aeabi_dmul+0x24a>

1001b0d4 <__gedf2>:
1001b0d4:	f04f 3cff 	mov.w	ip, #4294967295	@ 0xffffffff
1001b0d8:	e006      	b.n	1001b0e8 <__cmpdf2+0x4>
1001b0da:	bf00      	nop

1001b0dc <__ledf2>:
1001b0dc:	f04f 0c01 	mov.w	ip, #1
1001b0e0:	e002      	b.n	1001b0e8 <__cmpdf2+0x4>
1001b0e2:	bf00      	nop

1001b0e4 <__cmpdf2>:
1001b0e4:	f04f 0c01 	mov.w	ip, #1
1001b0e8:	f84d cd04 	str.w	ip, [sp, #-4]!
1001b0ec:	ea4f 0c41 	mov.w	ip, r1, lsl #1
1001b0f0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
1001b0f4:	ea4f 0c43 	mov.w	ip, r3, lsl #1
1001b0f8:	bf18      	it	ne
1001b0fa:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
1001b0fe:	d01b      	beq.n	1001b138 <__cmpdf2+0x54>
1001b100:	b001      	add	sp, #4
1001b102:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
1001b106:	bf0c      	ite	eq
1001b108:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
1001b10c:	ea91 0f03 	teqne	r1, r3
1001b110:	bf02      	ittt	eq
1001b112:	ea90 0f02 	teqeq	r0, r2
1001b116:	2000      	moveq	r0, #0
1001b118:	4770      	bxeq	lr
1001b11a:	f110 0f00 	cmn.w	r0, #0
1001b11e:	ea91 0f03 	teq	r1, r3
1001b122:	bf58      	it	pl
1001b124:	4299      	cmppl	r1, r3
1001b126:	bf08      	it	eq
1001b128:	4290      	cmpeq	r0, r2
1001b12a:	bf2c      	ite	cs
1001b12c:	17d8      	asrcs	r0, r3, #31
1001b12e:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
1001b132:	f040 0001 	orr.w	r0, r0, #1
1001b136:	4770      	bx	lr
1001b138:	ea4f 0c41 	mov.w	ip, r1, lsl #1
1001b13c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
1001b140:	d102      	bne.n	1001b148 <__cmpdf2+0x64>
1001b142:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
1001b146:	d107      	bne.n	1001b158 <__cmpdf2+0x74>
1001b148:	ea4f 0c43 	mov.w	ip, r3, lsl #1
1001b14c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
1001b150:	d1d6      	bne.n	1001b100 <__cmpdf2+0x1c>
1001b152:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
1001b156:	d0d3      	beq.n	1001b100 <__cmpdf2+0x1c>
1001b158:	f85d 0b04 	ldr.w	r0, [sp], #4
1001b15c:	4770      	bx	lr
1001b15e:	bf00      	nop

1001b160 <__aeabi_cdrcmple>:
1001b160:	4684      	mov	ip, r0
1001b162:	4610      	mov	r0, r2
1001b164:	4662      	mov	r2, ip
1001b166:	468c      	mov	ip, r1
1001b168:	4619      	mov	r1, r3
1001b16a:	4663      	mov	r3, ip
1001b16c:	e000      	b.n	1001b170 <__aeabi_cdcmpeq>
1001b16e:	bf00      	nop

1001b170 <__aeabi_cdcmpeq>:
1001b170:	b501      	push	{r0, lr}
1001b172:	f7ff ffb7 	bl	1001b0e4 <__cmpdf2>
1001b176:	2800      	cmp	r0, #0
1001b178:	bf48      	it	mi
1001b17a:	f110 0f00 	cmnmi.w	r0, #0
1001b17e:	bd01      	pop	{r0, pc}

1001b180 <__aeabi_dcmpeq>:
1001b180:	f84d ed08 	str.w	lr, [sp, #-8]!
1001b184:	f7ff fff4 	bl	1001b170 <__aeabi_cdcmpeq>
1001b188:	bf0c      	ite	eq
1001b18a:	2001      	moveq	r0, #1
1001b18c:	2000      	movne	r0, #0
1001b18e:	f85d fb08 	ldr.w	pc, [sp], #8
1001b192:	bf00      	nop

1001b194 <__aeabi_dcmplt>:
1001b194:	f84d ed08 	str.w	lr, [sp, #-8]!
1001b198:	f7ff ffea 	bl	1001b170 <__aeabi_cdcmpeq>
1001b19c:	bf34      	ite	cc
1001b19e:	2001      	movcc	r0, #1
1001b1a0:	2000      	movcs	r0, #0
1001b1a2:	f85d fb08 	ldr.w	pc, [sp], #8
1001b1a6:	bf00      	nop

1001b1a8 <__aeabi_dcmple>:
1001b1a8:	f84d ed08 	str.w	lr, [sp, #-8]!
1001b1ac:	f7ff ffe0 	bl	1001b170 <__aeabi_cdcmpeq>
1001b1b0:	bf94      	ite	ls
1001b1b2:	2001      	movls	r0, #1
1001b1b4:	2000      	movhi	r0, #0
1001b1b6:	f85d fb08 	ldr.w	pc, [sp], #8
1001b1ba:	bf00      	nop

1001b1bc <__aeabi_dcmpge>:
1001b1bc:	f84d ed08 	str.w	lr, [sp, #-8]!
1001b1c0:	f7ff ffce 	bl	1001b160 <__aeabi_cdrcmple>
1001b1c4:	bf94      	ite	ls
1001b1c6:	2001      	movls	r0, #1
1001b1c8:	2000      	movhi	r0, #0
1001b1ca:	f85d fb08 	ldr.w	pc, [sp], #8
1001b1ce:	bf00      	nop

1001b1d0 <__aeabi_dcmpgt>:
1001b1d0:	f84d ed08 	str.w	lr, [sp, #-8]!
1001b1d4:	f7ff ffc4 	bl	1001b160 <__aeabi_cdrcmple>
1001b1d8:	bf34      	ite	cc
1001b1da:	2001      	movcc	r0, #1
1001b1dc:	2000      	movcs	r0, #0
1001b1de:	f85d fb08 	ldr.w	pc, [sp], #8
1001b1e2:	bf00      	nop

1001b1e4 <__aeabi_dcmpun>:
1001b1e4:	ea4f 0c41 	mov.w	ip, r1, lsl #1
1001b1e8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
1001b1ec:	d102      	bne.n	1001b1f4 <__aeabi_dcmpun+0x10>
1001b1ee:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
1001b1f2:	d10a      	bne.n	1001b20a <__aeabi_dcmpun+0x26>
1001b1f4:	ea4f 0c43 	mov.w	ip, r3, lsl #1
1001b1f8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
1001b1fc:	d102      	bne.n	1001b204 <__aeabi_dcmpun+0x20>
1001b1fe:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
1001b202:	d102      	bne.n	1001b20a <__aeabi_dcmpun+0x26>
1001b204:	f04f 0000 	mov.w	r0, #0
1001b208:	4770      	bx	lr
1001b20a:	f04f 0001 	mov.w	r0, #1
1001b20e:	4770      	bx	lr

1001b210 <__aeabi_d2iz>:
1001b210:	ea4f 0241 	mov.w	r2, r1, lsl #1
1001b214:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
1001b218:	d215      	bcs.n	1001b246 <__aeabi_d2iz+0x36>
1001b21a:	d511      	bpl.n	1001b240 <__aeabi_d2iz+0x30>
1001b21c:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
1001b220:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
1001b224:	d912      	bls.n	1001b24c <__aeabi_d2iz+0x3c>
1001b226:	ea4f 23c1 	mov.w	r3, r1, lsl #11
1001b22a:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
1001b22e:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
1001b232:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
1001b236:	fa23 f002 	lsr.w	r0, r3, r2
1001b23a:	bf18      	it	ne
1001b23c:	4240      	negne	r0, r0
1001b23e:	4770      	bx	lr
1001b240:	f04f 0000 	mov.w	r0, #0
1001b244:	4770      	bx	lr
1001b246:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
1001b24a:	d105      	bne.n	1001b258 <__aeabi_d2iz+0x48>
1001b24c:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
1001b250:	bf08      	it	eq
1001b252:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
1001b256:	4770      	bx	lr
1001b258:	f04f 0000 	mov.w	r0, #0
1001b25c:	4770      	bx	lr
1001b25e:	bf00      	nop

1001b260 <__aeabi_uldivmod>:
1001b260:	b953      	cbnz	r3, 1001b278 <__aeabi_uldivmod+0x18>
1001b262:	b94a      	cbnz	r2, 1001b278 <__aeabi_uldivmod+0x18>
1001b264:	2900      	cmp	r1, #0
1001b266:	bf08      	it	eq
1001b268:	2800      	cmpeq	r0, #0
1001b26a:	bf1c      	itt	ne
1001b26c:	f04f 31ff 	movne.w	r1, #4294967295	@ 0xffffffff
1001b270:	f04f 30ff 	movne.w	r0, #4294967295	@ 0xffffffff
1001b274:	f000 b96a 	b.w	1001b54c <__aeabi_idiv0>
1001b278:	f1ad 0c08 	sub.w	ip, sp, #8
1001b27c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
1001b280:	f000 f806 	bl	1001b290 <__udivmoddi4>
1001b284:	f8dd e004 	ldr.w	lr, [sp, #4]
1001b288:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
1001b28c:	b004      	add	sp, #16
1001b28e:	4770      	bx	lr

1001b290 <__udivmoddi4>:
1001b290:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
1001b294:	9d08      	ldr	r5, [sp, #32]
1001b296:	460c      	mov	r4, r1
1001b298:	2b00      	cmp	r3, #0
1001b29a:	d14e      	bne.n	1001b33a <__udivmoddi4+0xaa>
1001b29c:	4694      	mov	ip, r2
1001b29e:	458c      	cmp	ip, r1
1001b2a0:	4686      	mov	lr, r0
1001b2a2:	fab2 f282 	clz	r2, r2
1001b2a6:	d962      	bls.n	1001b36e <__udivmoddi4+0xde>
1001b2a8:	b14a      	cbz	r2, 1001b2be <__udivmoddi4+0x2e>
1001b2aa:	f1c2 0320 	rsb	r3, r2, #32
1001b2ae:	4091      	lsls	r1, r2
1001b2b0:	fa20 f303 	lsr.w	r3, r0, r3
1001b2b4:	fa0c fc02 	lsl.w	ip, ip, r2
1001b2b8:	4319      	orrs	r1, r3
1001b2ba:	fa00 fe02 	lsl.w	lr, r0, r2
1001b2be:	ea4f 471c 	mov.w	r7, ip, lsr #16
1001b2c2:	fa1f f68c 	uxth.w	r6, ip
1001b2c6:	fbb1 f4f7 	udiv	r4, r1, r7
1001b2ca:	ea4f 431e 	mov.w	r3, lr, lsr #16
1001b2ce:	fb07 1114 	mls	r1, r7, r4, r1
1001b2d2:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
1001b2d6:	fb04 f106 	mul.w	r1, r4, r6
1001b2da:	4299      	cmp	r1, r3
1001b2dc:	d90a      	bls.n	1001b2f4 <__udivmoddi4+0x64>
1001b2de:	eb1c 0303 	adds.w	r3, ip, r3
1001b2e2:	f104 30ff 	add.w	r0, r4, #4294967295	@ 0xffffffff
1001b2e6:	f080 8112 	bcs.w	1001b50e <__udivmoddi4+0x27e>
1001b2ea:	4299      	cmp	r1, r3
1001b2ec:	f240 810f 	bls.w	1001b50e <__udivmoddi4+0x27e>
1001b2f0:	3c02      	subs	r4, #2
1001b2f2:	4463      	add	r3, ip
1001b2f4:	1a59      	subs	r1, r3, r1
1001b2f6:	fa1f f38e 	uxth.w	r3, lr
1001b2fa:	fbb1 f0f7 	udiv	r0, r1, r7
1001b2fe:	fb07 1110 	mls	r1, r7, r0, r1
1001b302:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
1001b306:	fb00 f606 	mul.w	r6, r0, r6
1001b30a:	429e      	cmp	r6, r3
1001b30c:	d90a      	bls.n	1001b324 <__udivmoddi4+0x94>
1001b30e:	eb1c 0303 	adds.w	r3, ip, r3
1001b312:	f100 31ff 	add.w	r1, r0, #4294967295	@ 0xffffffff
1001b316:	f080 80fc 	bcs.w	1001b512 <__udivmoddi4+0x282>
1001b31a:	429e      	cmp	r6, r3
1001b31c:	f240 80f9 	bls.w	1001b512 <__udivmoddi4+0x282>
1001b320:	4463      	add	r3, ip
1001b322:	3802      	subs	r0, #2
1001b324:	1b9b      	subs	r3, r3, r6
1001b326:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
1001b32a:	2100      	movs	r1, #0
1001b32c:	b11d      	cbz	r5, 1001b336 <__udivmoddi4+0xa6>
1001b32e:	40d3      	lsrs	r3, r2
1001b330:	2200      	movs	r2, #0
1001b332:	e9c5 3200 	strd	r3, r2, [r5]
1001b336:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
1001b33a:	428b      	cmp	r3, r1
1001b33c:	d905      	bls.n	1001b34a <__udivmoddi4+0xba>
1001b33e:	b10d      	cbz	r5, 1001b344 <__udivmoddi4+0xb4>
1001b340:	e9c5 0100 	strd	r0, r1, [r5]
1001b344:	2100      	movs	r1, #0
1001b346:	4608      	mov	r0, r1
1001b348:	e7f5      	b.n	1001b336 <__udivmoddi4+0xa6>
1001b34a:	fab3 f183 	clz	r1, r3
1001b34e:	2900      	cmp	r1, #0
1001b350:	d146      	bne.n	1001b3e0 <__udivmoddi4+0x150>
1001b352:	42a3      	cmp	r3, r4
1001b354:	d302      	bcc.n	1001b35c <__udivmoddi4+0xcc>
1001b356:	4290      	cmp	r0, r2
1001b358:	f0c0 80f0 	bcc.w	1001b53c <__udivmoddi4+0x2ac>
1001b35c:	1a86      	subs	r6, r0, r2
1001b35e:	eb64 0303 	sbc.w	r3, r4, r3
1001b362:	2001      	movs	r0, #1
1001b364:	2d00      	cmp	r5, #0
1001b366:	d0e6      	beq.n	1001b336 <__udivmoddi4+0xa6>
1001b368:	e9c5 6300 	strd	r6, r3, [r5]
1001b36c:	e7e3      	b.n	1001b336 <__udivmoddi4+0xa6>
1001b36e:	2a00      	cmp	r2, #0
1001b370:	f040 8090 	bne.w	1001b494 <__udivmoddi4+0x204>
1001b374:	eba1 040c 	sub.w	r4, r1, ip
1001b378:	ea4f 481c 	mov.w	r8, ip, lsr #16
1001b37c:	fa1f f78c 	uxth.w	r7, ip
1001b380:	2101      	movs	r1, #1
1001b382:	fbb4 f6f8 	udiv	r6, r4, r8
1001b386:	ea4f 431e 	mov.w	r3, lr, lsr #16
1001b38a:	fb08 4416 	mls	r4, r8, r6, r4
1001b38e:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
1001b392:	fb07 f006 	mul.w	r0, r7, r6
1001b396:	4298      	cmp	r0, r3
1001b398:	d908      	bls.n	1001b3ac <__udivmoddi4+0x11c>
1001b39a:	eb1c 0303 	adds.w	r3, ip, r3
1001b39e:	f106 34ff 	add.w	r4, r6, #4294967295	@ 0xffffffff
1001b3a2:	d202      	bcs.n	1001b3aa <__udivmoddi4+0x11a>
1001b3a4:	4298      	cmp	r0, r3
1001b3a6:	f200 80cd 	bhi.w	1001b544 <__udivmoddi4+0x2b4>
1001b3aa:	4626      	mov	r6, r4
1001b3ac:	1a1c      	subs	r4, r3, r0
1001b3ae:	fa1f f38e 	uxth.w	r3, lr
1001b3b2:	fbb4 f0f8 	udiv	r0, r4, r8
1001b3b6:	fb08 4410 	mls	r4, r8, r0, r4
1001b3ba:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
1001b3be:	fb00 f707 	mul.w	r7, r0, r7
1001b3c2:	429f      	cmp	r7, r3
1001b3c4:	d908      	bls.n	1001b3d8 <__udivmoddi4+0x148>
1001b3c6:	eb1c 0303 	adds.w	r3, ip, r3
1001b3ca:	f100 34ff 	add.w	r4, r0, #4294967295	@ 0xffffffff
1001b3ce:	d202      	bcs.n	1001b3d6 <__udivmoddi4+0x146>
1001b3d0:	429f      	cmp	r7, r3
1001b3d2:	f200 80b0 	bhi.w	1001b536 <__udivmoddi4+0x2a6>
1001b3d6:	4620      	mov	r0, r4
1001b3d8:	1bdb      	subs	r3, r3, r7
1001b3da:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
1001b3de:	e7a5      	b.n	1001b32c <__udivmoddi4+0x9c>
1001b3e0:	f1c1 0620 	rsb	r6, r1, #32
1001b3e4:	408b      	lsls	r3, r1
1001b3e6:	fa22 f706 	lsr.w	r7, r2, r6
1001b3ea:	431f      	orrs	r7, r3
1001b3ec:	fa20 fc06 	lsr.w	ip, r0, r6
1001b3f0:	fa04 f301 	lsl.w	r3, r4, r1
1001b3f4:	ea43 030c 	orr.w	r3, r3, ip
1001b3f8:	40f4      	lsrs	r4, r6
1001b3fa:	fa00 f801 	lsl.w	r8, r0, r1
1001b3fe:	0c38      	lsrs	r0, r7, #16
1001b400:	ea4f 4913 	mov.w	r9, r3, lsr #16
1001b404:	fbb4 fef0 	udiv	lr, r4, r0
1001b408:	fa1f fc87 	uxth.w	ip, r7
1001b40c:	fb00 441e 	mls	r4, r0, lr, r4
1001b410:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
1001b414:	fb0e f90c 	mul.w	r9, lr, ip
1001b418:	45a1      	cmp	r9, r4
1001b41a:	fa02 f201 	lsl.w	r2, r2, r1
1001b41e:	d90a      	bls.n	1001b436 <__udivmoddi4+0x1a6>
1001b420:	193c      	adds	r4, r7, r4
1001b422:	f10e 3aff 	add.w	sl, lr, #4294967295	@ 0xffffffff
1001b426:	f080 8084 	bcs.w	1001b532 <__udivmoddi4+0x2a2>
1001b42a:	45a1      	cmp	r9, r4
1001b42c:	f240 8081 	bls.w	1001b532 <__udivmoddi4+0x2a2>
1001b430:	f1ae 0e02 	sub.w	lr, lr, #2
1001b434:	443c      	add	r4, r7
1001b436:	eba4 0409 	sub.w	r4, r4, r9
1001b43a:	fa1f f983 	uxth.w	r9, r3
1001b43e:	fbb4 f3f0 	udiv	r3, r4, r0
1001b442:	fb00 4413 	mls	r4, r0, r3, r4
1001b446:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
1001b44a:	fb03 fc0c 	mul.w	ip, r3, ip
1001b44e:	45a4      	cmp	ip, r4
1001b450:	d907      	bls.n	1001b462 <__udivmoddi4+0x1d2>
1001b452:	193c      	adds	r4, r7, r4
1001b454:	f103 30ff 	add.w	r0, r3, #4294967295	@ 0xffffffff
1001b458:	d267      	bcs.n	1001b52a <__udivmoddi4+0x29a>
1001b45a:	45a4      	cmp	ip, r4
1001b45c:	d965      	bls.n	1001b52a <__udivmoddi4+0x29a>
1001b45e:	3b02      	subs	r3, #2
1001b460:	443c      	add	r4, r7
1001b462:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
1001b466:	fba0 9302 	umull	r9, r3, r0, r2
1001b46a:	eba4 040c 	sub.w	r4, r4, ip
1001b46e:	429c      	cmp	r4, r3
1001b470:	46ce      	mov	lr, r9
1001b472:	469c      	mov	ip, r3
1001b474:	d351      	bcc.n	1001b51a <__udivmoddi4+0x28a>
1001b476:	d04e      	beq.n	1001b516 <__udivmoddi4+0x286>
1001b478:	b155      	cbz	r5, 1001b490 <__udivmoddi4+0x200>
1001b47a:	ebb8 030e 	subs.w	r3, r8, lr
1001b47e:	eb64 040c 	sbc.w	r4, r4, ip
1001b482:	fa04 f606 	lsl.w	r6, r4, r6
1001b486:	40cb      	lsrs	r3, r1
1001b488:	431e      	orrs	r6, r3
1001b48a:	40cc      	lsrs	r4, r1
1001b48c:	e9c5 6400 	strd	r6, r4, [r5]
1001b490:	2100      	movs	r1, #0
1001b492:	e750      	b.n	1001b336 <__udivmoddi4+0xa6>
1001b494:	f1c2 0320 	rsb	r3, r2, #32
1001b498:	fa20 f103 	lsr.w	r1, r0, r3
1001b49c:	fa0c fc02 	lsl.w	ip, ip, r2
1001b4a0:	fa24 f303 	lsr.w	r3, r4, r3
1001b4a4:	4094      	lsls	r4, r2
1001b4a6:	430c      	orrs	r4, r1
1001b4a8:	ea4f 481c 	mov.w	r8, ip, lsr #16
1001b4ac:	fa00 fe02 	lsl.w	lr, r0, r2
1001b4b0:	fa1f f78c 	uxth.w	r7, ip
1001b4b4:	fbb3 f0f8 	udiv	r0, r3, r8
1001b4b8:	fb08 3110 	mls	r1, r8, r0, r3
1001b4bc:	0c23      	lsrs	r3, r4, #16
1001b4be:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
1001b4c2:	fb00 f107 	mul.w	r1, r0, r7
1001b4c6:	4299      	cmp	r1, r3
1001b4c8:	d908      	bls.n	1001b4dc <__udivmoddi4+0x24c>
1001b4ca:	eb1c 0303 	adds.w	r3, ip, r3
1001b4ce:	f100 36ff 	add.w	r6, r0, #4294967295	@ 0xffffffff
1001b4d2:	d22c      	bcs.n	1001b52e <__udivmoddi4+0x29e>
1001b4d4:	4299      	cmp	r1, r3
1001b4d6:	d92a      	bls.n	1001b52e <__udivmoddi4+0x29e>
1001b4d8:	3802      	subs	r0, #2
1001b4da:	4463      	add	r3, ip
1001b4dc:	1a5b      	subs	r3, r3, r1
1001b4de:	b2a4      	uxth	r4, r4
1001b4e0:	fbb3 f1f8 	udiv	r1, r3, r8
1001b4e4:	fb08 3311 	mls	r3, r8, r1, r3
1001b4e8:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
1001b4ec:	fb01 f307 	mul.w	r3, r1, r7
1001b4f0:	42a3      	cmp	r3, r4
1001b4f2:	d908      	bls.n	1001b506 <__udivmoddi4+0x276>
1001b4f4:	eb1c 0404 	adds.w	r4, ip, r4
1001b4f8:	f101 36ff 	add.w	r6, r1, #4294967295	@ 0xffffffff
1001b4fc:	d213      	bcs.n	1001b526 <__udivmoddi4+0x296>
1001b4fe:	42a3      	cmp	r3, r4
1001b500:	d911      	bls.n	1001b526 <__udivmoddi4+0x296>
1001b502:	3902      	subs	r1, #2
1001b504:	4464      	add	r4, ip
1001b506:	1ae4      	subs	r4, r4, r3
1001b508:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
1001b50c:	e739      	b.n	1001b382 <__udivmoddi4+0xf2>
1001b50e:	4604      	mov	r4, r0
1001b510:	e6f0      	b.n	1001b2f4 <__udivmoddi4+0x64>
1001b512:	4608      	mov	r0, r1
1001b514:	e706      	b.n	1001b324 <__udivmoddi4+0x94>
1001b516:	45c8      	cmp	r8, r9
1001b518:	d2ae      	bcs.n	1001b478 <__udivmoddi4+0x1e8>
1001b51a:	ebb9 0e02 	subs.w	lr, r9, r2
1001b51e:	eb63 0c07 	sbc.w	ip, r3, r7
1001b522:	3801      	subs	r0, #1
1001b524:	e7a8      	b.n	1001b478 <__udivmoddi4+0x1e8>
1001b526:	4631      	mov	r1, r6
1001b528:	e7ed      	b.n	1001b506 <__udivmoddi4+0x276>
1001b52a:	4603      	mov	r3, r0
1001b52c:	e799      	b.n	1001b462 <__udivmoddi4+0x1d2>
1001b52e:	4630      	mov	r0, r6
1001b530:	e7d4      	b.n	1001b4dc <__udivmoddi4+0x24c>
1001b532:	46d6      	mov	lr, sl
1001b534:	e77f      	b.n	1001b436 <__udivmoddi4+0x1a6>
1001b536:	4463      	add	r3, ip
1001b538:	3802      	subs	r0, #2
1001b53a:	e74d      	b.n	1001b3d8 <__udivmoddi4+0x148>
1001b53c:	4606      	mov	r6, r0
1001b53e:	4623      	mov	r3, r4
1001b540:	4608      	mov	r0, r1
1001b542:	e70f      	b.n	1001b364 <__udivmoddi4+0xd4>
1001b544:	3e02      	subs	r6, #2
1001b546:	4463      	add	r3, ip
1001b548:	e730      	b.n	1001b3ac <__udivmoddi4+0x11c>
1001b54a:	bf00      	nop

1001b54c <__aeabi_idiv0>:
1001b54c:	4770      	bx	lr
1001b54e:	bf00      	nop
1001b550:	20656854 	.word	0x20656854
1001b554:	706d6f43 	.word	0x706d6f43
1001b558:	6e656e6f 	.word	0x6e656e6f
1001b55c:	44492074 	.word	0x44492074
1001b560:	65686320 	.word	0x65686320
1001b564:	20736b63 	.word	0x20736b63
1001b568:	6c696166 	.word	0x6c696166
1001b56c:	61206465 	.word	0x61206465
1001b570:	68742074 	.word	0x68742074
1001b574:	6f632065 	.word	0x6f632065
1001b578:	6e6f706d 	.word	0x6e6f706d
1001b57c:	20746e65 	.word	0x20746e65
1001b580:	65646973 	.word	0x65646973
1001b584:	00000064 	.word	0x00000064
1001b588:	746f6f62 	.word	0x746f6f62
1001b58c:	73656d20 	.word	0x73656d20
1001b590:	65676173 	.word	0x65676173
1001b594:	726f6620 	.word	0x726f6620
1001b598:	6d6f4320 	.word	0x6d6f4320
1001b59c:	656e6f70 	.word	0x656e6f70
1001b5a0:	3120746e 	.word	0x3120746e
1001b5a4:	00000000 	.word	0x00000000
1001b5a8:	35322f31 	.word	0x35322f31
1001b5ac:	0034322f 	.word	0x0034322f
1001b5b0:	2077654e 	.word	0x2077654e
1001b5b4:	6b726f59 	.word	0x6b726f59
1001b5b8:	00000000 	.word	0x00000000
1001b5bc:	3e434f4c 	.word	0x3e434f4c
1001b5c0:	440a7325 	.word	0x440a7325
1001b5c4:	3e455441 	.word	0x3e455441
1001b5c8:	430a7325 	.word	0x430a7325
1001b5cc:	3e545355 	.word	0x3e545355
1001b5d0:	000a7325 	.word	0x000a7325
1001b5d4:	76696e55 	.word	0x76696e55
1001b5d8:	69737265 	.word	0x69737265
1001b5dc:	00007974 	.word	0x00007974
1001b5e0:	2079654b 	.word	0x2079654b
1001b5e4:	636e7973 	.word	0x636e7973
1001b5e8:	746f6e20 	.word	0x746f6e20
1001b5ec:	6d6f6320 	.word	0x6d6f6320
1001b5f0:	74656c70 	.word	0x74656c70
1001b5f4:	00006465 	.word	0x00006465
1001b5f8:	6f727245 	.word	0x6f727245
1001b5fc:	55203a72 	.word	0x55203a72
1001b600:	6365726e 	.word	0x6365726e
1001b604:	696e676f 	.word	0x696e676f
1001b608:	2064657a 	.word	0x2064657a
1001b60c:	6d6d6f63 	.word	0x6d6d6f63
1001b610:	20646e61 	.word	0x20646e61
1001b614:	65636572 	.word	0x65636572
1001b618:	64657669 	.word	0x64657669
1001b61c:	0a642520 	.word	0x0a642520
1001b620:	00000000 	.word	0x00000000
1001b624:	706d6f43 	.word	0x706d6f43
1001b628:	6e656e6f 	.word	0x6e656e6f
1001b62c:	74532074 	.word	0x74532074
1001b630:	65747261 	.word	0x65747261
1001b634:	00000064 	.word	0x00000064

1001b638 <FINAL_MASK>:
1001b638:	a4ac47e3 96cce9e6 cd871952 cef51b3c     .G......R...<...

1001b648 <MASK>:
1001b648:	84781656 1e2f005d 64b8a31a c5647bab     V.x.]./....d.{d.
1001b658:	6c696146 74206465 6e69206f 61697469     Failed to initia
1001b668:	657a696c 43324920 0000002e              lize I2C....

1001b674 <Td4>:
1001b674:	d56a0952 38a53630 9ea340bf fbd7f381     R.j.06.8.@......
1001b684:	8239e37c 87ff2f9b 44438e34 cbe9dec4     |.9../..4.CD....
1001b694:	32947b54 3d23c2a6 0b954cee 4ec3fa42     T{.2..#=.L..B..N
1001b6a4:	66a12e08 b224d928 49a25b76 25d18b6d     ...f(.$.v[.Im..%
1001b6b4:	64f6f872 16986886 cc5ca4d4 92b6655d     r..d.h....\.]e..
1001b6c4:	5048706c dab9edfd 5746155e 849d8da7     lpHP....^.FW....
1001b6d4:	00abd890 0ad3bc8c 0558e4f7 0645b3b8     ..........X...E.
1001b6e4:	8f1e2cd0 020f3fca 03bdafc1 6b8a1301     .,...?.........k
1001b6f4:	4111913a eadc674f cecff297 73e6b4f0     :..AOg.........s
1001b704:	2274ac96 8535ade7 e837f9e2 6edf751c     ..t"..5...7..u.n
1001b714:	711af147 89c5291d 0e62b76f 1bbe18aa     G..q.)..o.b.....
1001b724:	4b3e56fc 2079d2c6 fec0db9a f45acd78     .V>K..y ....x.Z.
1001b734:	33a8dd1f 31c70788 591012b1 5fec8027     ...3...1...Y'.._
1001b744:	a97f5160 0d4ab519 9f7ae52d ef9cc993     `Q....J.-.z.....
1001b754:	4d3be0a0 b0f52aae 3cbbebc8 61995383     ..;M.*.....<.S.a
1001b764:	7e042b17 26d677ba 631469e1 7d0c2155     .+.~.w.&.i.cU!.}

1001b774 <Td>:
1001b774:	51f4a750 7e416553 1a17a4c3 3a275e96     P..QSeA~.....^':
1001b784:	3bab6bcb 1f9d45f1 acfa58ab 4be30393     .k.;.E...X.....K
1001b794:	2030fa55 ad766df6 88cc7691 f5024c25     U.0 .mv..v..%L..
1001b7a4:	4fe5d7fc c52acbd7 26354480 b562a38f     ...O..*..D5&..b.
1001b7b4:	deb15a49 25ba1b67 45ea0e98 5dfec0e1     IZ..g..%...E...]
1001b7c4:	c32f7502 814cf012 8d4697a3 6bd3f9c6     .u/...L...F....k
1001b7d4:	038f5fe7 15929c95 bf6d7aeb 955259da     ._.......zm..YR.
1001b7e4:	d4be832d 587421d3 49e06929 8ec9c844     -....!tX)i.ID...
1001b7f4:	75c2896a f48e7978 99583e6b 27b971dd     j..uxy..k>X..q.'
1001b804:	bee14fb6 f088ad17 c920ac66 7dce3ab4     .O......f. ..:.}
1001b814:	63df4a18 e51a3182 97513360 62537f45     .J.c.1..`3Q.E.Sb
1001b824:	b16477e0 bb6bae84 fe81a01c f9082b94     .wd...k......+..
1001b834:	70486858 8f45fd19 94de6c87 527bf8b7     XhHp..E..l....{R
1001b844:	ab73d323 724b02e2 e31f8f57 6655ab2a     #.s...KrW...*.Uf
1001b854:	b2eb2807 2fb5c203 86c57b9a d33708a5     .(...../.{....7.
1001b864:	302887f2 23bfa5b2 02036aba ed16825c     ..(0...#.j..\...
1001b874:	8acf1c2b a779b492 f307f2f0 4e69e2a1     +.....y.......iN
1001b884:	65daf4cd 0605bed5 d134621f c4a6fe8a     ...e.....b4.....
1001b894:	342e539d a2f355a0 058ae132 a4f6eb75     .S.4.U..2...u...
1001b8a4:	0b83ec39 4060efaa 5e719f06 bd6e1051     9.....`@..q^Q.n.
1001b8b4:	3e218af9 96dd063d dd3e05ae 4de6bd46     ..!>=.....>.F..M
1001b8c4:	91548db5 71c45d05 0406d46f 605015ff     ..T..].qo.....P`
1001b8d4:	1998fb24 d6bde997 894043cc 67d99e77     $........C@.w..g
1001b8e4:	b0e842bd 07898b88 e7195b38 79c8eedb     .B......8[.....y
1001b8f4:	a17c0a47 7c420fe9 f8841ec9 00000000     G.|...B|........
1001b904:	09808683 322bed48 1e1170ac 6c5a724e     ....H.+2.p..NrZl
1001b914:	fd0efffb 0f853856 3daed51e 362d3927     ....V8.....='9-6
1001b924:	0a0fd964 685ca621 9b5b54d1 24362e3a     d...!.\h.T[.:.6$
1001b934:	0c0a67b1 9357e70f b4ee96d2 1b9b919e     .g....W.........
1001b944:	80c0c54f 61dc20a2 5a774b69 1c121a16     O.... .aiKwZ....
1001b954:	e293ba0a c0a02ae5 3c22e043 121b171d     .....*..C."<....
1001b964:	0e090d0b f28bc7ad 2db6a8b9 141ea9c8     ...........-....
1001b974:	57f11985 af75074c ee99ddbb a37f60fd     ...WL.u......`..
1001b984:	f701269f 5c72f5bc 44663bc5 5bfb7e34     .&....r\.;fD4~.[
1001b994:	8b432976 cb23c6dc b6edfc68 b8e4f163     v)C...#.h...c...
1001b9a4:	d731dcca 42638510 13972240 84c61120     ..1...cB@".. ...
1001b9b4:	854a247d d2bb3df8 aef93211 c729a16d     }$J..=...2..m.).
1001b9c4:	1d9e2f4b dcb230f3 0d8652ec 77c1e3d0     K/...0...R.....w
1001b9d4:	2bb3166c a970b999 119448fa 47e96422     l..+..p..H.."d.G
1001b9e4:	a8fc8cc4 a0f03f1a 567d2cd8 223390ef     .....?...,}V..3"
1001b9f4:	87494ec7 d938d1c1 8ccaa2fe 98d40b36     .NI...8.....6...
1001ba04:	a6f581cf a57ade28 dab78e26 3fadbfa4     ....(.z.&......?
1001ba14:	2c3a9de4 5078920d 6a5fcc9b 547e4662     ..:,..xP.._jbF~T
1001ba24:	f68d13c2 90d8b8e8 2e39f75e 82c3aff5     ........^.9.....
1001ba34:	9f5d80be 69d0937c 6fd52da9 cf2512b3     ..].|..i.-.o..%.
1001ba44:	c8ac993b 10187da7 e89c636e db3bbb7b     ;....}..nc..{.;.
1001ba54:	cd267809 6e5918f4 ec9ab701 834f9aa8     .x&...Yn......O.
1001ba64:	e6956e65 aaffe67e 21bccf08 ef15e8e6     en..~......!....
1001ba74:	bae79bd9 4a6f36ce ea9f09d4 29b07cd6     .....6oJ.....|.)
1001ba84:	31a4b2af 2a3f2331 c6a59430 35a266c0     ...11#?*0....f.5
1001ba94:	744ebc37 fc82caa6 e090d0b0 33a7d815     7.Nt...........3
1001baa4:	f104984a 41ecdaf7 7fcd500e 1791f62f     J......A.P../...
1001bab4:	764dd68d 43efb04d ccaa4d54 e49604df     ..MvM..CTM......
1001bac4:	9ed1b5e3 4c6a881b c12c1fb8 4665517f     ......jL..,..QeF
1001bad4:	9d5eea04 018c355d fa877473 fb0b412e     ..^.]5..st...A..
1001bae4:	b3671d5a 92dbd252 e9105633 6dd64713     Z.g.R...3V...G.m
1001baf4:	9ad7618c 37a10c7a 59f8148e eb133c89     .a..z..7...Y.<..
1001bb04:	cea927ee b761c935 e11ce5ed 7a47b13c     .'..5.a.....<.Gz
1001bb14:	9cd2df59 55f2733f 1814ce79 73c737bf     Y...?s.Uy....7.s
1001bb24:	53f7cdea 5ffdaa5b df3d6f14 7844db86     ...S[.._.o=...Dx
1001bb34:	caaff381 b968c43e 3824342c c2a3405f     ....>.h.,4$8_@..
1001bb44:	161dc372 bce2250c 283c498b ff0d9541     r....%...I<(A...
1001bb54:	39a80171 080cb3de d8b4e49c 6456c190     q..9..........Vd
1001bb64:	7bcb8461 d532b670 486c5c74 d0b85742     a..{p.2.t\lHBW..
1001bb74:	5051f4a7 537e4165 c31a17a4 963a275e     ..QPeA~S....^':.
1001bb84:	cb3bab6b f11f9d45 abacfa58 934be303     k.;.E...X.....K.
1001bb94:	552030fa f6ad766d 9188cc76 25f5024c     .0 Umv..v...L..%
1001bba4:	fc4fe5d7 d7c52acb 80263544 8fb562a3     ..O..*..D5&..b..
1001bbb4:	49deb15a 6725ba1b 9845ea0e e15dfec0     Z..I..%g..E...].
1001bbc4:	02c32f75 12814cf0 a38d4697 c66bd3f9     u/...L...F....k.
1001bbd4:	e7038f5f 9515929c ebbf6d7a da955259     _.......zm..YR..
1001bbe4:	2dd4be83 d3587421 2949e069 448ec9c8     ...-!tX.i.I)...D
1001bbf4:	6a75c289 78f48e79 6b99583e dd27b971     ..ujy..x>X.kq.'.
1001bc04:	b6bee14f 17f088ad 66c920ac b47dce3a     O........ .f:.}.
1001bc14:	1863df4a 82e51a31 60975133 4562537f     J.c.1...3Q.`.SbE
1001bc24:	e0b16477 84bb6bae 1cfe81a0 94f9082b     wd...k......+...
1001bc34:	58704868 198f45fd 8794de6c b7527bf8     hHpX.E..l....{R.
1001bc44:	23ab73d3 e2724b02 57e31f8f 2a6655ab     .s.#.Kr....W.Uf*
1001bc54:	07b2eb28 032fb5c2 9a86c57b a5d33708     (...../.{....7..
1001bc64:	f2302887 b223bfa5 ba02036a 5ced1682     .(0...#.j......\
1001bc74:	2b8acf1c 92a779b4 f0f307f2 a14e69e2     ...+.y.......iN.
1001bc84:	cd65daf4 d50605be 1fd13462 8ac4a6fe     ..e.....b4......
1001bc94:	9d342e53 a0a2f355 32058ae1 75a4f6eb     S.4.U......2...u
1001bca4:	390b83ec aa4060ef 065e719f 51bd6e10     ...9.`@..q^..n.Q
1001bcb4:	f93e218a 3d96dd06 aedd3e05 464de6bd     .!>....=.>....MF
1001bcc4:	b591548d 0571c45d 6f0406d4 ff605015     .T..].q....o.P`.
1001bcd4:	241998fb 97d6bde9 cc894043 7767d99e     ...$....C@....gw
1001bce4:	bdb0e842 8807898b 38e7195b db79c8ee     B.......[..8..y.
1001bcf4:	47a17c0a e97c420f c9f8841e 00000000     .|.G.B|.........
1001bd04:	83098086 48322bed ac1e1170 4e6c5a72     .....+2Hp...rZlN
1001bd14:	fbfd0eff 560f8538 1e3daed5 27362d39     ....8..V..=.9-6'
1001bd24:	640a0fd9 21685ca6 d19b5b54 3a24362e     ...d.\h!T[...6$:
1001bd34:	b10c0a67 0f9357e7 d2b4ee96 9e1b9b91     g....W..........
1001bd44:	4f80c0c5 a261dc20 695a774b 161c121a     ...O .a.KwZi....
1001bd54:	0ae293ba e5c0a02a 433c22e0 1d121b17     ....*...."<C....
1001bd64:	0b0e090d adf28bc7 b92db6a8 c8141ea9     ..........-.....
1001bd74:	8557f119 4caf7507 bbee99dd fda37f60     ..W..u.L....`...
1001bd84:	9ff70126 bc5c72f5 c544663b 345bfb7e     &....r\.;fD.~.[4
1001bd94:	768b4329 dccb23c6 68b6edfc 63b8e4f1     )C.v.#.....h...c
1001bda4:	cad731dc 10426385 40139722 2084c611     .1...cB."..@... 
1001bdb4:	7d854a24 f8d2bb3d 11aef932 6dc729a1     $J.}=...2....).m
1001bdc4:	4b1d9e2f f3dcb230 ec0d8652 d077c1e3     /..K0...R.....w.
1001bdd4:	6c2bb316 99a970b9 fa119448 2247e964     ..+l.p..H...d.G"
1001bde4:	c4a8fc8c 1aa0f03f d8567d2c ef223390     ....?...,}V..3".
1001bdf4:	c787494e c1d938d1 fe8ccaa2 3698d40b     NI...8.........6
1001be04:	cfa6f581 28a57ade 26dab78e a43fadbf     .....z.(...&..?.
1001be14:	e42c3a9d 0d507892 9b6a5fcc 62547e46     .:,..xP.._j.F~Tb
1001be24:	c2f68d13 e890d8b8 5e2e39f7 f582c3af     .........9.^....
1001be34:	be9f5d80 7c69d093 a96fd52d b3cf2512     .]....i|-.o..%..
1001be44:	3bc8ac99 a710187d 6ee89c63 7bdb3bbb     ...;}...c..n.;.{
1001be54:	09cd2678 f46e5918 01ec9ab7 a8834f9a     x&...Yn......O..
1001be64:	65e6956e 7eaaffe6 0821bccf e6ef15e8     n..e...~..!.....
1001be74:	d9bae79b ce4a6f36 d4ea9f09 d629b07c     ....6oJ.....|.).
1001be84:	af31a4b2 312a3f23 30c6a594 c035a266     ..1.#?*1...0f.5.
1001be94:	37744ebc a6fc82ca b0e090d0 1533a7d8     .Nt7..........3.
1001bea4:	4af10498 f741ecda 0e7fcd50 2f1791f6     ...J..A.P....../
1001beb4:	8d764dd6 4d43efb0 54ccaa4d dfe49604     .Mv...CMM..T....
1001bec4:	e39ed1b5 1b4c6a88 b8c12c1f 7f466551     .....jL..,..QeF.
1001bed4:	049d5eea 5d018c35 73fa8774 2efb0b41     .^..5..]t..sA...
1001bee4:	5ab3671d 5292dbd2 33e91056 136dd647     .g.Z...RV..3G.m.
1001bef4:	8c9ad761 7a37a10c 8e59f814 89eb133c     a.....7z..Y.<...
1001bf04:	eecea927 35b761c9 ede11ce5 3c7a47b1     '....a.5.....Gz<
1001bf14:	599cd2df 3f55f273 791814ce bf73c737     ...Ys.U?...y7.s.
1001bf24:	ea53f7cd 5b5ffdaa 14df3d6f 867844db     ..S..._[o=...Dx.
1001bf34:	81caaff3 3eb968c4 2c382434 5fc2a340     .....h.>4$8,@.._
1001bf44:	72161dc3 0cbce225 8b283c49 41ff0d95     ...r%...I<(....A
1001bf54:	7139a801 de080cb3 9cd8b4e4 906456c1     ..9q.........Vd.
1001bf64:	617bcb84 70d532b6 74486c5c 42d0b857     ..{a.2.p\lHtW..B
1001bf74:	a75051f4 65537e41 a4c31a17 5e963a27     .QP.A~Se....':.^
1001bf84:	6bcb3bab 45f11f9d 58abacfa 03934be3     .;.k...E...X.K..
1001bf94:	fa552030 6df6ad76 769188cc 4c25f502     0 U.v..m...v..%L
1001bfa4:	d7fc4fe5 cbd7c52a 44802635 a38fb562     .O..*...5&.Db...
1001bfb4:	5a49deb1 1b6725ba 0e9845ea c0e15dfe     ..IZ.%g..E...]..
1001bfc4:	7502c32f f012814c 97a38d46 f9c66bd3     /..uL...F....k..
1001bfd4:	5fe7038f 9c951592 7aebbf6d 59da9552     ..._....m..zR..Y
1001bfe4:	832dd4be 21d35874 692949e0 c8448ec9     ..-.tX.!.I)i..D.
1001bff4:	896a75c2 7978f48e 3e6b9958 71dd27b9     .uj...xyX.k>.'.q
1001c004:	4fb6bee1 ad17f088 ac66c920 3ab47dce     ...O.... .f..}.:
1001c014:	4a1863df 3182e51a 33609751 7f456253     .c.J...1Q.`3SbE.
1001c024:	77e0b164 ae84bb6b a01cfe81 2b94f908     d..wk..........+
1001c034:	68587048 fd198f45 6c8794de f8b7527b     HpXhE......l{R..
1001c044:	d323ab73 02e2724b 8f57e31f ab2a6655     s.#.Kr....W.Uf*.
1001c054:	2807b2eb c2032fb5 7b9a86c5 08a5d337     ...(./.....{7...
1001c064:	87f23028 a5b223bf 6aba0203 825ced16     (0...#.....j..\.
1001c074:	1c2b8acf b492a779 f2f0f307 e2a14e69     ..+.y.......iN..
1001c084:	f4cd65da bed50605 621fd134 fe8ac4a6     .e......4..b....
1001c094:	539d342e 55a0a2f3 e132058a eb75a4f6     .4.S...U..2...u.
1001c0a4:	ec390b83 efaa4060 9f065e71 1051bd6e     ..9.`@..q^..n.Q.
1001c0b4:	8af93e21 063d96dd 05aedd3e bd464de6     !>....=.>....MF.
1001c0c4:	8db59154 5d0571c4 d46f0406 15ff6050     T....q.]..o.P`..
1001c0d4:	fb241998 e997d6bd 43cc8940 9e7767d9     ..$.....@..C.gw.
1001c0e4:	42bdb0e8 8b880789 5b38e719 eedb79c8     ...B......8[.y..
1001c0f4:	0a47a17c 0fe97c42 1ec9f884 00000000     |.G.B|..........
1001c104:	86830980 ed48322b 70ac1e11 724e6c5a     ....+2H....pZlNr
1001c114:	fffbfd0e 38560f85 d51e3dae 3927362d     ......V8.=..-6'9
1001c124:	d9640a0f a621685c 54d19b5b 2e3a2436     ..d.\h!.[..T6$:.
1001c134:	67b10c0a e70f9357 96d2b4ee 919e1b9b     ...gW...........
1001c144:	c54f80c0 20a261dc 4b695a77 1a161c12     ..O..a. wZiK....
1001c154:	ba0ae293 2ae5c0a0 e0433c22 171d121b     .......*"<C.....
1001c164:	0d0b0e09 c7adf28b a8b92db6 a9c8141e     .........-......
1001c174:	198557f1 074caf75 ddbbee99 60fda37f     .W..u.L........`
1001c184:	269ff701 f5bc5c72 3bc54466 7e345bfb     ...&r\..fD.;.[4~
1001c194:	29768b43 c6dccb23 fc68b6ed f163b8e4     C.v)#.....h...c.
1001c1a4:	dccad731 85104263 22401397 112084c6     1...cB....@".. .
1001c1b4:	247d854a 3df8d2bb 3211aef9 a16dc729     J.}$...=...2).m.
1001c1c4:	2f4b1d9e 30f3dcb2 52ec0d86 e3d077c1     ..K/...0...R.w..
1001c1d4:	166c2bb3 b999a970 48fa1194 642247e9     .+l.p......H.G"d
1001c1e4:	8cc4a8fc 3f1aa0f0 2cd8567d 90ef2233     .......?}V.,3"..
1001c1f4:	4ec78749 d1c1d938 a2fe8cca 0b3698d4     I..N8.........6.
1001c204:	81cfa6f5 de28a57a 8e26dab7 bfa43fad     ....z.(...&..?..
1001c214:	9de42c3a 920d5078 cc9b6a5f 4662547e     :,..xP.._j..~TbF
1001c224:	13c2f68d b8e890d8 f75e2e39 aff582c3     ........9.^.....
1001c234:	80be9f5d 937c69d0 2da96fd5 12b3cf25     ]....i|..o.-%...
1001c244:	993bc8ac 7da71018 636ee89c bb7bdb3b     ..;....}..nc;.{.
1001c254:	7809cd26 18f46e59 b701ec9a 9aa8834f     &..xYn......O...
1001c264:	6e65e695 e67eaaff cf0821bc e8e6ef15     ..en..~..!......
1001c274:	9bd9bae7 36ce4a6f 09d4ea9f 7cd629b0     ....oJ.6.....).|
1001c284:	b2af31a4 23312a3f 9430c6a5 66c035a2     .1..?*1#..0..5.f
1001c294:	bc37744e caa6fc82 d0b0e090 d81533a7     Nt7..........3..
1001c2a4:	984af104 daf741ec 500e7fcd f62f1791     ..J..A.....P../.
1001c2b4:	d68d764d b04d43ef 4d54ccaa 04dfe496     Mv...CM...TM....
1001c2c4:	b5e39ed1 881b4c6a 1fb8c12c 517f4665     ....jL..,...eF.Q
1001c2d4:	ea049d5e 355d018c 7473fa87 412efb0b     ^.....]5..st...A
1001c2e4:	1d5ab367 d25292db 5633e910 47136dd6     g.Z...R...3V.m.G
1001c2f4:	618c9ad7 0c7a37a1 148e59f8 3c89eb13     ...a.7z..Y.....<
1001c304:	27eecea9 c935b761 e5ede11c b13c7a47     ...'a.5.....Gz<.
1001c314:	df599cd2 733f55f2 ce791814 37bf73c7     ..Y..U?s..y..s.7
1001c324:	cdea53f7 aa5b5ffd 6f14df3d db867844     .S..._[.=..oDx..
1001c334:	f381caaf c43eb968 342c3824 405fc2a3     ....h.>.$8,4.._@
1001c344:	c372161d 250cbce2 498b283c 9541ff0d     ..r....%<(.I..A.
1001c354:	017139a8 b3de080c e49cd8b4 c1906456     .9q.........Vd..
1001c364:	84617bcb b670d532 5c74486c 5742d0b8     .{a.2.p.lHt\..BW
1001c374:	f4a75051 4165537e 17a4c31a 275e963a     QP..~SeA....:.^'
1001c384:	ab6bcb3b 9d45f11f fa58abac e303934b     ;.k...E...X.K...
1001c394:	30fa5520 766df6ad cc769188 024c25f5      U.0..mv..v..%L.
1001c3a4:	e5d7fc4f 2acbd7c5 35448026 62a38fb5     O......*&.D5...b
1001c3b4:	b15a49de ba1b6725 ea0e9845 fec0e15d     .IZ.%g..E...]...
1001c3c4:	2f7502c3 4cf01281 4697a38d d3f9c66b     ..u/...L...Fk...
1001c3d4:	8f5fe703 929c9515 6d7aebbf 5259da95     .._.......zm..YR
1001c3e4:	be832dd4 7421d358 e0692949 c9c8448e     .-..X.!tI)i..D..
1001c3f4:	c2896a75 8e7978f4 583e6b99 b971dd27     uj...xy..k>X'.q.
1001c404:	e14fb6be 88ad17f0 20ac66c9 ce3ab47d     ..O......f. }.:.
1001c414:	df4a1863 1a3182e5 51336097 537f4562     c.J...1..`3QbE.S
1001c424:	6477e0b1 6bae84bb 81a01cfe 082b94f9     ..wd...k......+.
1001c434:	48685870 45fd198f de6c8794 7bf8b752     pXhH...E..l.R..{
1001c444:	73d323ab 4b02e272 1f8f57e3 55ab2a66     .#.sr..K.W..f*.U
1001c454:	eb2807b2 b5c2032f c57b9a86 3708a5d3     ..(./.....{....7
1001c464:	2887f230 bfa5b223 036aba02 16825ced     0..(#.....j..\..
1001c474:	cf1c2b8a 79b492a7 07f2f0f3 69e2a14e     .+.....y....N..i
1001c484:	daf4cd65 05bed506 34621fd1 a6fe8ac4     e.........b4....
1001c494:	2e539d34 f355a0a2 8ae13205 f6eb75a4     4.S...U..2...u..
1001c4a4:	83ec390b 60efaa40 719f065e 6e1051bd     .9..@..`^..q.Q.n
1001c4b4:	218af93e dd063d96 3e05aedd e6bd464d     >..!.=.....>MF..
1001c4c4:	548db591 c45d0571 06d46f04 5015ff60     ...Tq.]..o..`..P
1001c4d4:	98fb2419 bde997d6 4043cc89 d99e7767     .$........C@gw..
1001c4e4:	e842bdb0 898b8807 195b38e7 c8eedb79     ..B......8[.y...
1001c4f4:	7c0a47a1 420fe97c 841ec9f8 00000000     .G.||..B........
1001c504:	80868309 2bed4832 1170ac1e 5a724e6c     ....2H.+..p.lNrZ
1001c514:	0efffbfd 8538560f aed51e3d 2d392736     .....V8.=...6'9-
1001c524:	0fd9640a 5ca62168 5b54d19b 362e3a24     .d..h!.\..T[$:.6
1001c534:	0a67b10c 57e70f93 ee96d2b4 9b919e1b     ..g....W........
1001c544:	c0c54f80 dc20a261 774b695a 121a161c     .O..a. .ZiKw....
1001c554:	93ba0ae2 a02ae5c0 22e0433c 1b171d12     ......*.<C."....
1001c564:	090d0b0e 8bc7adf2 b6a8b92d 1ea9c814     ........-.......
1001c574:	f1198557 75074caf 99ddbbee 7f60fda3     W....L.u......`.
1001c584:	01269ff7 72f5bc5c 663bc544 fb7e345b     ..&.\..rD.;f[4~.
1001c594:	4329768b 23c6dccb edfc68b6 e4f163b8     .v)C...#.h...c..
1001c5a4:	31dccad7 63851042 97224013 c6112084     ...1B..c.@".. ..
1001c5b4:	4a247d85 bb3df8d2 f93211ae 29a16dc7     .}$J..=...2..m.)
1001c5c4:	9e2f4b1d b230f3dc 8652ec0d c1e3d077     .K/...0...R.w...
1001c5d4:	b3166c2b 70b999a9 9448fa11 e9642247     +l.....p..H.G"d.
1001c5e4:	fc8cc4a8 f03f1aa0 7d2cd856 3390ef22     ......?.V.,}"..3
1001c5f4:	494ec787 38d1c1d9 caa2fe8c d40b3698     ..NI...8.....6..
1001c604:	f581cfa6 7ade28a5 b78e26da adbfa43f     .....(.z.&..?...
1001c614:	3a9de42c 78920d50 5fcc9b6a 7e466254     ,..:P..xj.._TbF~
1001c624:	8d13c2f6 d8b8e890 39f75e2e c3aff582     .........^.9....
1001c634:	5d80be9f d0937c69 d52da96f 2512b3cf     ...]i|..o.-....%
1001c644:	ac993bc8 187da710 9c636ee8 3bbb7bdb     .;....}..nc..{.;
1001c654:	267809cd 5918f46e 9ab701ec 4f9aa883     ..x&n..Y.......O
1001c664:	956e65e6 ffe67eaa bccf0821 15e8e6ef     .en..~..!.......
1001c674:	e79bd9ba 6f36ce4a 9f09d4ea b07cd629     ....J.6o....).|.
1001c684:	a4b2af31 3f23312a a59430c6 a266c035     1...*1#?.0..5.f.
1001c694:	4ebc3774 82caa6fc 90d0b0e0 a7d81533     t7.N........3...
1001c6a4:	04984af1 ecdaf741 cd500e7f 91f62f17     .J..A.....P../..
1001c6b4:	4dd68d76 efb04d43 aa4d54cc 9604dfe4     v..MCM...TM.....
1001c6c4:	d1b5e39e 6a881b4c 2c1fb8c1 65517f46     ....L..j...,F.Qe
1001c6d4:	5eea049d 8c355d01 877473fa 0b412efb     ...^.]5..st...A.
1001c6e4:	671d5ab3 dbd25292 105633e9 d647136d     .Z.g.R...3V.m.G.
1001c6f4:	d7618c9a a10c7a37 f8148e59 133c89eb     ..a.7z..Y.....<.
1001c704:	a927eece 61c935b7 1ce5ede1 47b13c7a     ..'..5.a....z<.G
1001c714:	d2df599c f2733f55 14ce7918 c737bf73     .Y..U?s..y..s.7.
1001c724:	f7cdea53 fdaa5b5f 3d6f14df 44db8678     S..._[....o=x..D
1001c734:	aff381ca 68c43eb9 24342c38 a3405fc2     .....>.h8,4$._@.
1001c744:	1dc37216 e2250cbc 3c498b28 0d9541ff     .r....%.(.I<.A..
1001c754:	a8017139 0cb3de08 b4e49cd8 56c19064     9q..........d..V
1001c764:	cb84617b 32b670d5 6c5c7448 b85742d0     {a...p.2Ht\l.BW.

1001c774 <Te>:
1001c774:	c66363a5 f87c7c84 ee777799 f67b7b8d     .cc..||..ww..{{.
1001c784:	fff2f20d d66b6bbd de6f6fb1 91c5c554     .....kk..oo.T...
1001c794:	60303050 02010103 ce6767a9 562b2b7d     P00`.....gg.}++V
1001c7a4:	e7fefe19 b5d7d762 4dababe6 ec76769a     ....b......M.vv.
1001c7b4:	8fcaca45 1f82829d 89c9c940 fa7d7d87     E.......@....}}.
1001c7c4:	effafa15 b25959eb 8e4747c9 fbf0f00b     .....YY..GG.....
1001c7d4:	41adadec b3d4d467 5fa2a2fd 45afafea     ...Ag......_...E
1001c7e4:	239c9cbf 53a4a4f7 e4727296 9bc0c05b     ...#...S.rr.[...
1001c7f4:	75b7b7c2 e1fdfd1c 3d9393ae 4c26266a     ...u.......=j&&L
1001c804:	6c36365a 7e3f3f41 f5f7f702 83cccc4f     Z66lA??~....O...
1001c814:	6834345c 51a5a5f4 d1e5e534 f9f1f108     \44h...Q4.......
1001c824:	e2717193 abd8d873 62313153 2a15153f     .qq.s...S11b?..*
1001c834:	0804040c 95c7c752 46232365 9dc3c35e     ....R...e##F^...
1001c844:	30181828 379696a1 0a05050f 2f9a9ab5     (..0...7......./
1001c854:	0e070709 24121236 1b80809b dfe2e23d     ....6..$....=...
1001c864:	cdebeb26 4e272769 7fb2b2cd ea75759f     &...i''N.....uu.
1001c874:	1209091b 1d83839e 582c2c74 341a1a2e     ........t,,X...4
1001c884:	361b1b2d dc6e6eb2 b45a5aee 5ba0a0fb     -..6.nn..ZZ....[
1001c894:	a45252f6 763b3b4d b7d6d661 7db3b3ce     .RR.M;;va......}
1001c8a4:	5229297b dde3e33e 5e2f2f71 13848497     {))R>...q//^....
1001c8b4:	a65353f5 b9d1d168 00000000 c1eded2c     .SS.h.......,...
1001c8c4:	40202060 e3fcfc1f 79b1b1c8 b65b5bed     `  @.......y.[[.
1001c8d4:	d46a6abe 8dcbcb46 67bebed9 7239394b     .jj.F......gK99r
1001c8e4:	944a4ade 984c4cd4 b05858e8 85cfcf4a     .JJ..LL..XX.J...
1001c8f4:	bbd0d06b c5efef2a 4faaaae5 edfbfb16     k...*......O....
1001c904:	864343c5 9a4d4dd7 66333355 11858594     .CC..MM.U33f....
1001c914:	8a4545cf e9f9f910 04020206 fe7f7f81     .EE.............
1001c924:	a05050f0 783c3c44 259f9fba 4ba8a8e3     .PP.D<<x...%...K
1001c934:	a25151f3 5da3a3fe 804040c0 058f8f8a     .QQ....].@@.....
1001c944:	3f9292ad 219d9dbc 70383848 f1f5f504     ...?...!H88p....
1001c954:	63bcbcdf 77b6b6c1 afdada75 42212163     ...c...wu...c!!B
1001c964:	20101030 e5ffff1a fdf3f30e bfd2d26d     0.. ........m...
1001c974:	81cdcd4c 180c0c14 26131335 c3ecec2f     L.......5..&/...
1001c984:	be5f5fe1 359797a2 884444cc 2e171739     .__....5.DD.9...
1001c994:	93c4c457 55a7a7f2 fc7e7e82 7a3d3d47     W......U.~~.G==z
1001c9a4:	c86464ac ba5d5de7 3219192b e6737395     .dd..]].+..2.ss.
1001c9b4:	c06060a0 19818198 9e4f4fd1 a3dcdc7f     .``......OO.....
1001c9c4:	44222266 542a2a7e 3b9090ab 0b888883     f""D~**T...;....
1001c9d4:	8c4646ca c7eeee29 6bb8b8d3 2814143c     .FF.)......k<..(
1001c9e4:	a7dede79 bc5e5ee2 160b0b1d addbdb76     y....^^.....v...
1001c9f4:	dbe0e03b 64323256 743a3a4e 140a0a1e     ;...V22dN::t....
1001ca04:	924949db 0c06060a 4824246c b85c5ce4     .II.....l$$H.\\.
1001ca14:	9fc2c25d bdd3d36e 43acacef c46262a6     ]...n......C.bb.
1001ca24:	399191a8 319595a4 d3e4e437 f279798b     ...9...17....yy.
1001ca34:	d5e7e732 8bc8c843 6e373759 da6d6db7     2...C...Y77n.mm.
1001ca44:	018d8d8c b1d5d564 9c4e4ed2 49a9a9e0     ....d....NN....I
1001ca54:	d86c6cb4 ac5656fa f3f4f407 cfeaea25     .ll..VV.....%...
1001ca64:	ca6565af f47a7a8e 47aeaee9 10080818     .ee..zz....G....
1001ca74:	6fbabad5 f0787888 4a25256f 5c2e2e72     ...o.xx.o%%Jr..\
1001ca84:	381c1c24 57a6a6f1 73b4b4c7 97c6c651     $..8...W...sQ...
1001ca94:	cbe8e823 a1dddd7c e874749c 3e1f1f21     #...|....tt.!..>
1001caa4:	964b4bdd 61bdbddc 0d8b8b86 0f8a8a85     .KK....a........
1001cab4:	e0707090 7c3e3e42 71b5b5c4 cc6666aa     .pp.B>>|...q.ff.
1001cac4:	904848d8 06030305 f7f6f601 1c0e0e12     .HH.............
1001cad4:	c26161a3 6a35355f ae5757f9 69b9b9d0     .aa._55j.WW....i
1001cae4:	17868691 99c1c158 3a1d1d27 279e9eb9     ....X...'..:...'
1001caf4:	d9e1e138 ebf8f813 2b9898b3 22111133     8..........+3.."
1001cb04:	d26969bb a9d9d970 078e8e89 339494a7     .ii.p..........3
1001cb14:	2d9b9bb6 3c1e1e22 15878792 c9e9e920     ...-"..<.... ...
1001cb24:	87cece49 aa5555ff 50282878 a5dfdf7a     I....UU.x((Pz...
1001cb34:	038c8c8f 59a1a1f8 09898980 1a0d0d17     .......Y........
1001cb44:	65bfbfda d7e6e631 844242c6 d06868b8     ...e1....BB..hh.
1001cb54:	824141c3 299999b0 5a2d2d77 1e0f0f11     .AA....)w--Z....
1001cb64:	7bb0b0cb a85454fc 6dbbbbd6 2c16163a     ...{.TT....m:..,
1001cb74:	a5c66363 84f87c7c 99ee7777 8df67b7b     cc..||..ww..{{..
1001cb84:	0dfff2f2 bdd66b6b b1de6f6f 5491c5c5     ....kk..oo.....T
1001cb94:	50603030 03020101 a9ce6767 7d562b2b     00`P....gg..++V}
1001cba4:	19e7fefe 62b5d7d7 e64dabab 9aec7676     .......b..M.vv..
1001cbb4:	458fcaca 9d1f8282 4089c9c9 87fa7d7d     ...E.......@}}..
1001cbc4:	15effafa ebb25959 c98e4747 0bfbf0f0     ....YY..GG......
1001cbd4:	ec41adad 67b3d4d4 fd5fa2a2 ea45afaf     ..A....g.._...E.
1001cbe4:	bf239c9c f753a4a4 96e47272 5b9bc0c0     ..#...S.rr.....[
1001cbf4:	c275b7b7 1ce1fdfd ae3d9393 6a4c2626     ..u.......=.&&Lj
1001cc04:	5a6c3636 417e3f3f 02f5f7f7 4f83cccc     66lZ??~A.......O
1001cc14:	5c683434 f451a5a5 34d1e5e5 08f9f1f1     44h\..Q....4....
1001cc24:	93e27171 73abd8d8 53623131 3f2a1515     qq.....s11bS..*?
1001cc34:	0c080404 5295c7c7 65462323 5e9dc3c3     .......R##Fe...^
1001cc44:	28301818 a1379696 0f0a0505 b52f9a9a     ..0(..7......./.
1001cc54:	090e0707 36241212 9b1b8080 3ddfe2e2     ......$6.......=
1001cc64:	26cdebeb 694e2727 cd7fb2b2 9fea7575     ...&''Ni....uu..
1001cc74:	1b120909 9e1d8383 74582c2c 2e341a1a     ........,,Xt..4.
1001cc84:	2d361b1b b2dc6e6e eeb45a5a fb5ba0a0     ..6-nn..ZZ....[.
1001cc94:	f6a45252 4d763b3b 61b7d6d6 ce7db3b3     RR..;;vM...a..}.
1001cca4:	7b522929 3edde3e3 715e2f2f 97138484     ))R{...>//^q....
1001ccb4:	f5a65353 68b9d1d1 00000000 2cc1eded     SS.....h.......,
1001ccc4:	60402020 1fe3fcfc c879b1b1 edb65b5b       @`......y.[[..
1001ccd4:	bed46a6a 468dcbcb d967bebe 4b723939     jj.....F..g.99rK
1001cce4:	de944a4a d4984c4c e8b05858 4a85cfcf     JJ..LL..XX.....J
1001ccf4:	6bbbd0d0 2ac5efef e54faaaa 16edfbfb     ...k...*..O.....
1001cd04:	c5864343 d79a4d4d 55663333 94118585     CC..MM..33fU....
1001cd14:	cf8a4545 10e9f9f9 06040202 81fe7f7f     EE..............
1001cd24:	f0a05050 44783c3c ba259f9f e34ba8a8     PP..<<xD..%...K.
1001cd34:	f3a25151 fe5da3a3 c0804040 8a058f8f     QQ....].@@......
1001cd44:	ad3f9292 bc219d9d 48703838 04f1f5f5     ..?...!.88pH....
1001cd54:	df63bcbc c177b6b6 75afdada 63422121     ..c...w....u!!Bc
1001cd64:	30201010 1ae5ffff 0efdf3f3 6dbfd2d2     .. 0...........m
1001cd74:	4c81cdcd 14180c0c 35261313 2fc3ecec     ...L......&5.../
1001cd84:	e1be5f5f a2359797 cc884444 392e1717     __....5.DD.....9
1001cd94:	5793c4c4 f255a7a7 82fc7e7e 477a3d3d     ...W..U.~~..==zG
1001cda4:	acc86464 e7ba5d5d 2b321919 95e67373     dd..]]....2+ss..
1001cdb4:	a0c06060 98198181 d19e4f4f 7fa3dcdc     ``......OO......
1001cdc4:	66442222 7e542a2a ab3b9090 830b8888     ""Df**T~..;.....
1001cdd4:	ca8c4646 29c7eeee d36bb8b8 3c281414     FF.....)..k...(<
1001cde4:	79a7dede e2bc5e5e 1d160b0b 76addbdb     ...y^^.........v
1001cdf4:	3bdbe0e0 56643232 4e743a3a 1e140a0a     ...;22dV::tN....
1001ce04:	db924949 0a0c0606 6c482424 e4b85c5c     II......$$Hl\\..
1001ce14:	5d9fc2c2 6ebdd3d3 ef43acac a6c46262     ...]...n..C.bb..
1001ce24:	a8399191 a4319595 37d3e4e4 8bf27979     ..9...1....7yy..
1001ce34:	32d5e7e7 438bc8c8 596e3737 b7da6d6d     ...2...C77nYmm..
1001ce44:	8c018d8d 64b1d5d5 d29c4e4e e049a9a9     .......dNN....I.
1001ce54:	b4d86c6c faac5656 07f3f4f4 25cfeaea     ll..VV.........%
1001ce64:	afca6565 8ef47a7a e947aeae 18100808     ee..zz....G.....
1001ce74:	d56fbaba 88f07878 6f4a2525 725c2e2e     ..o.xx..%%Jo..\r
1001ce84:	24381c1c f157a6a6 c773b4b4 5197c6c6     ..8$..W...s....Q
1001ce94:	23cbe8e8 7ca1dddd 9ce87474 213e1f1f     ...#...|tt....>!
1001cea4:	dd964b4b dc61bdbd 860d8b8b 850f8a8a     KK....a.........
1001ceb4:	90e07070 427c3e3e c471b5b5 aacc6666     pp..>>|B..q.ff..
1001cec4:	d8904848 05060303 01f7f6f6 121c0e0e     HH..............
1001ced4:	a3c26161 5f6a3535 f9ae5757 d069b9b9     aa..55j_WW....i.
1001cee4:	91178686 5899c1c1 273a1d1d b9279e9e     .......X..:'..'.
1001cef4:	38d9e1e1 13ebf8f8 b32b9898 33221111     ...8......+..."3
1001cf04:	bbd26969 70a9d9d9 89078e8e a7339494     ii.....p......3.
1001cf14:	b62d9b9b 223c1e1e 92158787 20c9e9e9     ..-...<"....... 
1001cf24:	4987cece ffaa5555 78502828 7aa5dfdf     ...IUU..((Px...z
1001cf34:	8f038c8c f859a1a1 80098989 171a0d0d     ......Y.........
1001cf44:	da65bfbf 31d7e6e6 c6844242 b8d06868     ..e....1BB..hh..
1001cf54:	c3824141 b0299999 775a2d2d 111e0f0f     AA....).--Zw....
1001cf64:	cb7bb0b0 fca85454 d66dbbbb 3a2c1616     ..{.TT....m...,:
1001cf74:	63a5c663 7c84f87c 7799ee77 7b8df67b     c..c|..|w..w{..{
1001cf84:	f20dfff2 6bbdd66b 6fb1de6f c55491c5     ....k..ko..o..T.
1001cf94:	30506030 01030201 67a9ce67 2b7d562b     0`P0....g..g+V}+
1001cfa4:	fe19e7fe d762b5d7 abe64dab 769aec76     ......b..M..v..v
1001cfb4:	ca458fca 829d1f82 c94089c9 7d87fa7d     ..E.......@.}..}
1001cfc4:	fa15effa 59ebb259 47c98e47 f00bfbf0     ....Y..YG..G....
1001cfd4:	adec41ad d467b3d4 a2fd5fa2 afea45af     .A....g.._...E..
1001cfe4:	9cbf239c a4f753a4 7296e472 c05b9bc0     .#...S..r..r..[.
1001cff4:	b7c275b7 fd1ce1fd 93ae3d93 266a4c26     .u.......=..&Lj&
1001d004:	365a6c36 3f417e3f f702f5f7 cc4f83cc     6lZ6?~A?......O.
1001d014:	345c6834 a5f451a5 e534d1e5 f108f9f1     4h\4.Q....4.....
1001d024:	7193e271 d873abd8 31536231 153f2a15     q..q..s.1bS1.*?.
1001d034:	040c0804 c75295c7 23654623 c35e9dc3     ......R.#Fe#..^.
1001d044:	18283018 96a13796 050f0a05 9ab52f9a     .0(..7......./..
1001d054:	07090e07 12362412 809b1b80 e23ddfe2     .....$6.......=.
1001d064:	eb26cdeb 27694e27 b2cd7fb2 759fea75     ..&.'Ni'....u..u
1001d074:	091b1209 839e1d83 2c74582c 1a2e341a     ........,Xt,.4..
1001d084:	1b2d361b 6eb2dc6e 5aeeb45a a0fb5ba0     .6-.n..nZ..Z.[..
1001d094:	52f6a452 3b4d763b d661b7d6 b3ce7db3     R..R;vM;..a..}..
1001d0a4:	297b5229 e33edde3 2f715e2f 84971384     )R{)..>./^q/....
1001d0b4:	53f5a653 d168b9d1 00000000 ed2cc1ed     S..S..h.......,.
1001d0c4:	20604020 fc1fe3fc b1c879b1 5bedb65b      @` .....y..[..[
1001d0d4:	6abed46a cb468dcb bed967be 394b7239     j..j..F..g..9rK9
1001d0e4:	4ade944a 4cd4984c 58e8b058 cf4a85cf     J..JL..LX..X..J.
1001d0f4:	d06bbbd0 ef2ac5ef aae54faa fb16edfb     ..k...*..O......
1001d104:	43c58643 4dd79a4d 33556633 85941185     C..CM..M3fU3....
1001d114:	45cf8a45 f910e9f9 02060402 7f81fe7f     E..E............
1001d124:	50f0a050 3c44783c 9fba259f a8e34ba8     P..P<xD<.%...K..
1001d134:	51f3a251 a3fe5da3 40c08040 8f8a058f     Q..Q.]..@..@....
1001d144:	92ad3f92 9dbc219d 38487038 f504f1f5     .?...!..8pH8....
1001d154:	bcdf63bc b6c177b6 da75afda 21634221     .c...w....u.!Bc!
1001d164:	10302010 ff1ae5ff f30efdf3 d26dbfd2     . 0...........m.
1001d174:	cd4c81cd 0c14180c 13352613 ec2fc3ec     ..L......&5.../.
1001d184:	5fe1be5f 97a23597 44cc8844 17392e17     _.._.5..D..D..9.
1001d194:	c45793c4 a7f255a7 7e82fc7e 3d477a3d     ..W..U..~..~=zG=
1001d1a4:	64acc864 5de7ba5d 192b3219 7395e673     d..d]..].2+.s..s
1001d1b4:	60a0c060 81981981 4fd19e4f dc7fa3dc     `..`....O..O....
1001d1c4:	22664422 2a7e542a 90ab3b90 88830b88     "Df"*T~*.;......
1001d1d4:	46ca8c46 ee29c7ee b8d36bb8 143c2814     F..F..)..k...(<.
1001d1e4:	de79a7de 5ee2bc5e 0b1d160b db76addb     ..y.^..^......v.
1001d1f4:	e03bdbe0 32566432 3a4e743a 0a1e140a     ..;.2dV2:tN:....
1001d204:	49db9249 060a0c06 246c4824 5ce4b85c     I..I....$Hl$\..\
1001d214:	c25d9fc2 d36ebdd3 acef43ac 62a6c462     ..]...n..C..b..b
1001d224:	91a83991 95a43195 e437d3e4 798bf279     .9...1....7.y..y
1001d234:	e732d5e7 c8438bc8 37596e37 6db7da6d     ..2...C.7nY7m..m
1001d244:	8d8c018d d564b1d5 4ed29c4e a9e049a9     ......d.N..N.I..
1001d254:	6cb4d86c 56faac56 f407f3f4 ea25cfea     l..lV..V......%.
1001d264:	65afca65 7a8ef47a aee947ae 08181008     e..ez..z.G......
1001d274:	bad56fba 7888f078 256f4a25 2e725c2e     .o..x..x%Jo%.\r.
1001d284:	1c24381c a6f157a6 b4c773b4 c65197c6     .8$..W...s....Q.
1001d294:	e823cbe8 dd7ca1dd 749ce874 1f213e1f     ..#...|.t..t.>!.
1001d2a4:	4bdd964b bddc61bd 8b860d8b 8a850f8a     K..K.a..........
1001d2b4:	7090e070 3e427c3e b5c471b5 66aacc66     p..p>|B>.q..f..f
1001d2c4:	48d89048 03050603 f601f7f6 0e121c0e     H..H............
1001d2d4:	61a3c261 355f6a35 57f9ae57 b9d069b9     a..a5j_5W..W.i..
1001d2e4:	86911786 c15899c1 1d273a1d 9eb9279e     ......X..:'..'..
1001d2f4:	e138d9e1 f813ebf8 98b32b98 11332211     ..8......+..."3.
1001d304:	69bbd269 d970a9d9 8e89078e 94a73394     i..i..p......3..
1001d314:	9bb62d9b 1e223c1e 87921587 e920c9e9     .-...<"....... .
1001d324:	ce4987ce 55ffaa55 28785028 df7aa5df     ..I.U..U(Px(..z.
1001d334:	8c8f038c a1f859a1 89800989 0d171a0d     .....Y..........
1001d344:	bfda65bf e631d7e6 42c68442 68b8d068     .e....1.B..Bh..h
1001d354:	41c38241 99b02999 2d775a2d 0f111e0f     A..A.)..-Zw-....
1001d364:	b0cb7bb0 54fca854 bbd66dbb 163a2c16     .{..T..T.m...,:.
1001d374:	6363a5c6 7c7c84f8 777799ee 7b7b8df6     ..cc..||..ww..{{
1001d384:	f2f20dff 6b6bbdd6 6f6fb1de c5c55491     ......kk..oo.T..
1001d394:	30305060 01010302 6767a9ce 2b2b7d56     `P00......ggV}++
1001d3a4:	fefe19e7 d7d762b5 ababe64d 76769aec     .....b..M.....vv
1001d3b4:	caca458f 82829d1f c9c94089 7d7d87fa     .E.......@....}}
1001d3c4:	fafa15ef 5959ebb2 4747c98e f0f00bfb     ......YY..GG....
1001d3d4:	adadec41 d4d467b3 a2a2fd5f afafea45     A....g.._...E...
1001d3e4:	9c9cbf23 a4a4f753 727296e4 c0c05b9b     #...S.....rr.[..
1001d3f4:	b7b7c275 fdfd1ce1 9393ae3d 26266a4c     u.......=...Lj&&
1001d404:	36365a6c 3f3f417e f7f702f5 cccc4f83     lZ66~A??.....O..
1001d414:	34345c68 a5a5f451 e5e534d1 f1f108f9     h\44Q....4......
1001d424:	717193e2 d8d873ab 31315362 15153f2a     ..qq.s..bS11*?..
1001d434:	04040c08 c7c75295 23236546 c3c35e9d     .....R..Fe##.^..
1001d444:	18182830 9696a137 05050f0a 9a9ab52f     0(..7......./...
1001d454:	0707090e 12123624 80809b1b e2e23ddf     ....$6.......=..
1001d464:	ebeb26cd 2727694e b2b2cd7f 75759fea     .&..Ni''......uu
1001d474:	09091b12 83839e1d 2c2c7458 1a1a2e34     ........Xt,,4...
1001d484:	1b1b2d36 6e6eb2dc 5a5aeeb4 a0a0fb5b     6-....nn..ZZ[...
1001d494:	5252f6a4 3b3b4d76 d6d661b7 b3b3ce7d     ..RRvM;;.a..}...
1001d4a4:	29297b52 e3e33edd 2f2f715e 84849713     R{)).>..^q//....
1001d4b4:	5353f5a6 d1d168b9 00000000 eded2cc1     ..SS.h.......,..
1001d4c4:	20206040 fcfc1fe3 b1b1c879 5b5bedb6     @`  ....y.....[[
1001d4d4:	6a6abed4 cbcb468d bebed967 39394b72     ..jj.F..g...rK99
1001d4e4:	4a4ade94 4c4cd498 5858e8b0 cfcf4a85     ..JJ..LL..XX.J..
1001d4f4:	d0d06bbb efef2ac5 aaaae54f fbfb16ed     .k...*..O.......
1001d504:	4343c586 4d4dd79a 33335566 85859411     ..CC..MMfU33....
1001d514:	4545cf8a f9f910e9 02020604 7f7f81fe     ..EE............
1001d524:	5050f0a0 3c3c4478 9f9fba25 a8a8e34b     ..PPxD<<%...K...
1001d534:	5151f3a2 a3a3fe5d 4040c080 8f8f8a05     ..QQ].....@@....
1001d544:	9292ad3f 9d9dbc21 38384870 f5f504f1     ?...!...pH88....
1001d554:	bcbcdf63 b6b6c177 dada75af 21216342     c...w....u..Bc!!
1001d564:	10103020 ffff1ae5 f3f30efd d2d26dbf      0...........m..
1001d574:	cdcd4c81 0c0c1418 13133526 ecec2fc3     .L......&5.../..
1001d584:	5f5fe1be 9797a235 4444cc88 1717392e     ..__5.....DD.9..
1001d594:	c4c45793 a7a7f255 7e7e82fc 3d3d477a     .W..U.....~~zG==
1001d5a4:	6464acc8 5d5de7ba 19192b32 737395e6     ..dd..]]2+....ss
1001d5b4:	6060a0c0 81819819 4f4fd19e dcdc7fa3     ..``......OO....
1001d5c4:	22226644 2a2a7e54 9090ab3b 8888830b     Df""T~**;.......
1001d5d4:	4646ca8c eeee29c7 b8b8d36b 14143c28     ..FF.)..k...(<..
1001d5e4:	dede79a7 5e5ee2bc 0b0b1d16 dbdb76ad     .y....^^.....v..
1001d5f4:	e0e03bdb 32325664 3a3a4e74 0a0a1e14     .;..dV22tN::....
1001d604:	4949db92 06060a0c 24246c48 5c5ce4b8     ..II....Hl$$..\\
1001d614:	c2c25d9f d3d36ebd acacef43 6262a6c4     .]...n..C.....bb
1001d624:	9191a839 9595a431 e4e437d3 79798bf2     9...1....7....yy
1001d634:	e7e732d5 c8c8438b 3737596e 6d6db7da     .2...C..nY77..mm
1001d644:	8d8d8c01 d5d564b1 4e4ed29c a9a9e049     .....d....NNI...
1001d654:	6c6cb4d8 5656faac f4f407f3 eaea25cf     ..ll..VV.....%..
1001d664:	6565afca 7a7a8ef4 aeaee947 08081810     ..ee..zzG.......
1001d674:	babad56f 787888f0 25256f4a 2e2e725c     o.....xxJo%%\r..
1001d684:	1c1c2438 a6a6f157 b4b4c773 c6c65197     8$..W...s....Q..
1001d694:	e8e823cb dddd7ca1 74749ce8 1f1f213e     .#...|....tt>!..
1001d6a4:	4b4bdd96 bdbddc61 8b8b860d 8a8a850f     ..KKa...........
1001d6b4:	707090e0 3e3e427c b5b5c471 6666aacc     ..pp|B>>q.....ff
1001d6c4:	4848d890 03030506 f6f601f7 0e0e121c     ..HH............
1001d6d4:	6161a3c2 35355f6a 5757f9ae b9b9d069     ..aaj_55..WWi...
1001d6e4:	86869117 c1c15899 1d1d273a 9e9eb927     .....X..:'..'...
1001d6f4:	e1e138d9 f8f813eb 9898b32b 11113322     .8......+..."3..
1001d704:	6969bbd2 d9d970a9 8e8e8907 9494a733     ..ii.p......3...
1001d714:	9b9bb62d 1e1e223c 87879215 e9e920c9     -...<"....... ..
1001d724:	cece4987 5555ffaa 28287850 dfdf7aa5     .I....UUPx((.z..
1001d734:	8c8c8f03 a1a1f859 89898009 0d0d171a     ....Y...........
1001d744:	bfbfda65 e6e631d7 4242c684 6868b8d0     e....1....BB..hh
1001d754:	4141c382 9999b029 2d2d775a 0f0f111e     ..AA)...Zw--....
1001d764:	b0b0cb7b 5454fca8 bbbbd66d 16163a2c     {.....TTm...,:..

1001d774 <rcon>:
1001d774:	01000000 02000000 04000000 08000000     ................
1001d784:	10000000 20000000 40000000 80000000     ....... ...@....
1001d794:	1b000000 36000000 5f43584d 45535341     .......6MXC_ASSE
1001d7a4:	25205452 25232073 28203a64 0a297325     RT %s #%d: (%s).
1001d7b4:	00000000 6361502f 30322d65 652d3432     ..../Pace-2024-e
1001d7c4:	2f667463 6b64736d 62694c2f 69726172     ctf/msdk/Librari
1001d7d4:	422f7365 6472616f 414d2f73 30383758     es/Boards/MAX780
1001d7e4:	462f3030 5f524854 41766552 756f532f     00/FTHR_RevA/Sou
1001d7f4:	2f656372 72616f62 00632e64 4c494146     rce/board.c.FAIL
1001d804:	00000000                                ....

1001d808 <num_leds>:
1001d808:	00000003                                ....

1001d80c <led_pin>:
1001d80c:	40080400 00000001 00010001 40080400     ...@...........@
1001d81c:	00000002 00010001 40080400 00000004     ...........@....
1001d82c:	00010001                                ....

1001d830 <num_pbs>:
1001d830:	00000002                                ....

1001d834 <pb_pin>:
1001d834:	40008000 00000004 00010100 40009000     ...@...........@
1001d844:	00000080 00010100 6361502f 30322d65     ......../Pace-20
1001d854:	652d3432 2f667463 6b64736d 62694c2f     24-ectf/msdk/Lib
1001d864:	69726172 4d2f7365 44637369 65766972     raries/MiscDrive
1001d874:	4c2f7372 6c2f4445 632e6465 00000000     rs/LED/led.c....
1001d884:	20786469 756e203c 656c5f6d 00007364     idx < num_leds..

1001d894 <gpio_cfg_uart3>:
1001d894:	40080400 000000c0 00000003              ...@........

1001d8a0 <gpio_cfg_uart2>:
1001d8a0:	40009000 00000003 00000002              ...@........

1001d8ac <gpio_cfg_uart1>:
1001d8ac:	40008000 00003000 00000002              ...@.0......

1001d8b8 <gpio_cfg_uart0>:
1001d8b8:	40008000 00000003 00000002              ...@........

1001d8c4 <gpio_cfg_i2c2>:
1001d8c4:	40008000 c0000000 00000002              ...@........

1001d8d0 <gpio_cfg_i2c1>:
1001d8d0:	40008000 00030000 00000002              ...@........

1001d8dc <gpio_cfg_i2c0>:
1001d8dc:	40008000 00000c00 00000002              ...@........

1001d8e8 <gpio_cfg_extclk>:
1001d8e8:	40008000 00000008 00000002 6361502f     ...@......../Pac
1001d8f8:	30322d65 652d3432 2f667463 6b64736d     e-2024-ectf/msdk
1001d908:	62694c2f 69726172 432f7365 5349534d     /Libraries/CMSIS
1001d918:	2f2e2e2f 69726550 72446870 72657669     /../PeriphDriver
1001d928:	6f532f73 65637275 4950472f 70672f4f     s/Source/GPIO/gp
1001d938:	635f6f69 6f6d6d6f 00632e6e 74726f70     io_common.c.port
1001d948:	4d203c20 435f4358 475f4746 5f4f4950      < MXC_CFG_GPIO_
1001d958:	54534e49 45434e41 00000053              INSTANCES...

1001d964 <CSWTCH.16>:
1001d964:	40009000 40080400 40080600 00464e49     ...@...@...@INF.
1001d974:	00666e69 004e414e 006e616e 33323130     inf.NAN.nan.0123
1001d984:	37363534 62613938 66656463 00000000     456789abcdef....
1001d994:	33323130 37363534 42413938 46454443     0123456789ABCDEF
1001d9a4:	00000000 6c756e28 0000296c 00000030     ....(null)..0...

1001d9b4 <zeroes.0>:
1001d9b4:	30303030 30303030 30303030 30303030     0000000000000000

1001d9c4 <blanks.1>:
1001d9c4:	20202020 20202020 20202020 20202020                     
1001d9d4:	435f434c 414c4c4f 00004554 435f434c     LC_COLLATE..LC_C
1001d9e4:	45505954 00000000 4d5f434c 54454e4f     TYPE....LC_MONET
1001d9f4:	00595241 4e5f434c 52454d55 00004349     ARY.LC_NUMERIC..
1001da04:	545f434c 00454d49 4d5f434c 41535345     LC_TIME.LC_MESSA
1001da14:	00534547 0000000a 69666e49 7974696e     GES.....Infinity
1001da24:	00000000 004e614e 6c6c6142 7320636f     ....NaN.Balloc s
1001da34:	65636375 64656465 00000000 7461642f     ucceeded..../dat
1001da44:	656a2f61 6e696b6e 6f772f73 70736b72     a/jenkins/worksp
1001da54:	2f656361 2d554e47 6c6f6f74 69616863     ace/GNU-toolchai
1001da64:	72612f6e 32312d6d 6372732f 77656e2f     n/arm-12/src/new
1001da74:	2d62696c 77677963 6e2f6e69 696c7765     lib-cygwin/newli
1001da84:	696c2f62 732f6362 696c6474 74642f62     b/libc/stdlib/dt
1001da94:	632e616f 00000000                       oa.c....

1001da9c <_ctype_>:
1001da9c:	20202000 20202020 28282020 20282828     .         ((((( 
1001daac:	20202020 20202020 20202020 20202020                     
1001dabc:	10108820 10101010 10101010 10101010      ...............
1001dacc:	04040410 04040404 10040404 10101010     ................
1001dadc:	41411010 41414141 01010101 01010101     ..AAAAAA........
1001daec:	01010101 01010101 01010101 10101010     ................
1001dafc:	42421010 42424242 02020202 02020202     ..BBBBBB........
1001db0c:	02020202 02020202 02020202 10101010     ................
1001db1c:	00000020 00000000 00000000 00000000      ...............
	...

1001dba0 <zeroes.0>:
1001dba0:	30303030 30303030 30303030 30303030     0000000000000000

1001dbb0 <blanks.1>:
1001dbb0:	20202020 20202020 20202020 20202020                     

1001dbc0 <zeroes.0>:
1001dbc0:	30303030 30303030 30303030 30303030     0000000000000000

1001dbd0 <blanks.1>:
1001dbd0:	20202020 20202020 20202020 20202020                     
1001dbe0:	7566202c 6974636e 203a6e6f 00000000     , function: ....
1001dbf0:	65737361 6f697472 2522206e 66202273     assertion "%s" f
1001dc00:	656c6961 66203a64 20656c69 22732522     ailed: file "%s"
1001dc10:	696c202c 2520656e 25732564 00000a73     , line %d%s%s...
1001dc20:	7461642f 656a2f61 6e696b6e 6f772f73     /data/jenkins/wo
1001dc30:	70736b72 2f656361 2d554e47 6c6f6f74     rkspace/GNU-tool
1001dc40:	69616863 72612f6e 32312d6d 6372732f     chain/arm-12/src
1001dc50:	77656e2f 2d62696c 77677963 6e2f6e69     /newlib-cygwin/n
1001dc60:	696c7765 696c2f62 732f6362 696c6474     ewlib/libc/stdli
1001dc70:	706d2f62 2e636572 00000063              b/mprec.c...

1001dc7c <p05.0>:
1001dc7c:	00000005 00000019 0000007d              ........}...

1001dc88 <__mprec_bigtens>:
1001dc88:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
1001dc98:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
1001dca8:	7f73bf3c 75154fdd                       <.s..O.u

1001dcb0 <__mprec_tens>:
1001dcb0:	00000000 3ff00000 00000000 40240000     .......?......$@
1001dcc0:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
1001dcd0:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
1001dce0:	00000000 412e8480 00000000 416312d0     .......A......cA
1001dcf0:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
1001dd00:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
1001dd10:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
1001dd20:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
1001dd30:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
1001dd40:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
1001dd50:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
1001dd60:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
1001dd70:	79d99db4 44ea7843                       ...yCx.D

1001dd78 <_init>:
1001dd78:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1001dd7a:	bf00      	nop
1001dd7c:	bcf8      	pop	{r3, r4, r5, r6, r7}
1001dd7e:	bc08      	pop	{r3}
1001dd80:	469e      	mov	lr, r3
1001dd82:	4770      	bx	lr

1001dd84 <_fini>:
1001dd84:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1001dd86:	bf00      	nop
1001dd88:	bcf8      	pop	{r3, r4, r5, r6, r7}
1001dd8a:	bc08      	pop	{r3}
1001dd8c:	469e      	mov	lr, r3
1001dd8e:	4770      	bx	lr

1001dd90 <__EH_FRAME_BEGIN__>:
1001dd90:	0010 0000 0000 0000 7a01 0052 7c02 010e     .........zR..|..
1001dda0:	0c1b 000d 0038 0000 0018 0000 8194 ffff     ....8...........
1001ddb0:	009e 0000 5100 100e 0484 0385 0286 0187     .....Q..........
1001ddc0:	c75b c5c6 0ec4 4c00 420a 0a0b 0b42 100e     [......L.B..B...
1001ddd0:	0484 0385 0286 0187 c751 c5c6 0ec4 0000     ........Q.......
1001dde0:	0010 0000 0000 0000 7a01 0052 7c02 010e     .........zR..|..
1001ddf0:	0c1b 000d 0014 0000 0018 0000 81e4 ffff     ................
1001de00:	0134 0000 0200 0a71 0b43 0000 0010 0000     4.....q.C.......
1001de10:	0000 0000 7a01 0052 7c02 010e 0c1b 000d     .....zR..|......
1001de20:	001c 0000 0018 0000 8318 ffff 00d8 0000     ................
1001de30:	4100 080e 0185 0284 4902 4a0a c4c5 0b41     .A.......I.J..A.

1001de40 <__FRAME_END__>:
1001de40:	0000 0000                                   ....
